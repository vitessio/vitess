// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const JSON_EXTRACT_OP = 57544
const JSON_UNQUOTE_EXTRACT_OP = 57545
const CREATE = 57546
const ALTER = 57547
const DROP = 57548
const RENAME = 57549
const ANALYZE = 57550
const ADD = 57551
const FLUSH = 57552
const CHANGE = 57553
const MODIFY = 57554
const DEALLOCATE = 57555
const REVERT = 57556
const SCHEMA = 57557
const TABLE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const SPATIAL = 57566
const FULLTEXT = 57567
const KEY_BLOCK_SIZE = 57568
const CHECK = 57569
const INDEXES = 57570
const ACTION = 57571
const CASCADE = 57572
const CONSTRAINT = 57573
const FOREIGN = 57574
const NO = 57575
const REFERENCES = 57576
const RESTRICT = 57577
const SHOW = 57578
const DESCRIBE = 57579
const EXPLAIN = 57580
const DATE = 57581
const ESCAPE = 57582
const REPAIR = 57583
const OPTIMIZE = 57584
const TRUNCATE = 57585
const COALESCE = 57586
const EXCHANGE = 57587
const REBUILD = 57588
const PARTITIONING = 57589
const REMOVE = 57590
const PREPARE = 57591
const EXECUTE = 57592
const MAXVALUE = 57593
const PARTITION = 57594
const REORGANIZE = 57595
const LESS = 57596
const THAN = 57597
const PROCEDURE = 57598
const TRIGGER = 57599
const VINDEX = 57600
const VINDEXES = 57601
const DIRECTORY = 57602
const NAME = 57603
const UPGRADE = 57604
const STATUS = 57605
const VARIABLES = 57606
const WARNINGS = 57607
const CASCADED = 57608
const DEFINER = 57609
const OPTION = 57610
const SQL = 57611
const UNDEFINED = 57612
const SEQUENCE = 57613
const MERGE = 57614
const TEMPORARY = 57615
const TEMPTABLE = 57616
const INVOKER = 57617
const SECURITY = 57618
const FIRST = 57619
const AFTER = 57620
const LAST = 57621
const VITESS_MIGRATION = 57622
const CANCEL = 57623
const RETRY = 57624
const COMPLETE = 57625
const CLEANUP = 57626
const THROTTLE = 57627
const UNTHROTTLE = 57628
const EXPIRE = 57629
const RATIO = 57630
const BEGIN = 57631
const START = 57632
const TRANSACTION = 57633
const COMMIT = 57634
const ROLLBACK = 57635
const SAVEPOINT = 57636
const RELEASE = 57637
const WORK = 57638
const BIT = 57639
const TINYINT = 57640
const SMALLINT = 57641
const MEDIUMINT = 57642
const INT = 57643
const INTEGER = 57644
const BIGINT = 57645
const INTNUM = 57646
const REAL = 57647
const DOUBLE = 57648
const FLOAT_TYPE = 57649
const DECIMAL_TYPE = 57650
const NUMERIC = 57651
const TIME = 57652
const TIMESTAMP = 57653
const DATETIME = 57654
const YEAR = 57655
const CHAR = 57656
const VARCHAR = 57657
const BOOL = 57658
const CHARACTER = 57659
const VARBINARY = 57660
const NCHAR = 57661
const TEXT = 57662
const TINYTEXT = 57663
const MEDIUMTEXT = 57664
const LONGTEXT = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const JSON_SCHEMA_VALID = 57671
const JSON_SCHEMA_VALIDATION_REPORT = 57672
const ENUM = 57673
const GEOMETRY = 57674
const POINT = 57675
const LINESTRING = 57676
const POLYGON = 57677
const GEOMETRYCOLLECTION = 57678
const MULTIPOINT = 57679
const MULTILINESTRING = 57680
const MULTIPOLYGON = 57681
const ASCII = 57682
const UNICODE = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const CODE = 57690
const COLLATION = 57691
const COLUMNS = 57692
const DATABASES = 57693
const ENGINES = 57694
const EVENT = 57695
const EXTENDED = 57696
const FIELDS = 57697
const FULL = 57698
const FUNCTION = 57699
const GTID_EXECUTED = 57700
const KEYSPACES = 57701
const OPEN = 57702
const PLUGINS = 57703
const PRIVILEGES = 57704
const PROCESSLIST = 57705
const SCHEMAS = 57706
const TABLES = 57707
const TRIGGERS = 57708
const USER = 57709
const VGTID_EXECUTED = 57710
const VITESS_KEYSPACES = 57711
const VITESS_METADATA = 57712
const VITESS_MIGRATIONS = 57713
const VITESS_REPLICATION_STATUS = 57714
const VITESS_SHARDS = 57715
const VITESS_TABLETS = 57716
const VITESS_TARGET = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const REGEXP_INSTR = 57797
const REGEXP_LIKE = 57798
const REGEXP_REPLACE = 57799
const REGEXP_SUBSTR = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const WITHOUT = 57808
const VALIDATION = 57809
const UNUSED = 57810
const ARRAY = 57811
const BYTE = 57812
const CUME_DIST = 57813
const DESCRIPTION = 57814
const DENSE_RANK = 57815
const EMPTY = 57816
const EXCEPT = 57817
const FIRST_VALUE = 57818
const GROUPING = 57819
const GROUPS = 57820
const JSON_TABLE = 57821
const LAG = 57822
const LAST_VALUE = 57823
const LATERAL = 57824
const LEAD = 57825
const NTH_VALUE = 57826
const NTILE = 57827
const OF = 57828
const OVER = 57829
const PERCENT_RANK = 57830
const RANK = 57831
const RECURSIVE = 57832
const ROW_NUMBER = 57833
const SYSTEM = 57834
const WINDOW = 57835
const ACTIVE = 57836
const ADMIN = 57837
const AUTOEXTEND_SIZE = 57838
const BUCKETS = 57839
const CLONE = 57840
const COLUMN_FORMAT = 57841
const COMPONENT = 57842
const DEFINITION = 57843
const ENFORCED = 57844
const ENGINE_ATTRIBUTE = 57845
const EXCLUDE = 57846
const FOLLOWING = 57847
const GEOMCOLLECTION = 57848
const GET_MASTER_PUBLIC_KEY = 57849
const HISTOGRAM = 57850
const HISTORY = 57851
const INACTIVE = 57852
const INVISIBLE = 57853
const LOCKED = 57854
const MASTER_COMPRESSION_ALGORITHMS = 57855
const MASTER_PUBLIC_KEY_PATH = 57856
const MASTER_TLS_CIPHERSUITES = 57857
const MASTER_ZSTD_COMPRESSION_LEVEL = 57858
const NESTED = 57859
const NETWORK_NAMESPACE = 57860
const NOWAIT = 57861
const NULLS = 57862
const OJ = 57863
const OLD = 57864
const OPTIONAL = 57865
const ORDINALITY = 57866
const ORGANIZATION = 57867
const OTHERS = 57868
const PARTIAL = 57869
const PATH = 57870
const PERSIST = 57871
const PERSIST_ONLY = 57872
const PRECEDING = 57873
const PRIVILEGE_CHECKS_USER = 57874
const PROCESS = 57875
const RANDOM = 57876
const REFERENCE = 57877
const REQUIRE_ROW_FORMAT = 57878
const RESOURCE = 57879
const RESPECT = 57880
const RESTART = 57881
const RETAIN = 57882
const REUSE = 57883
const ROLE = 57884
const SECONDARY = 57885
const SECONDARY_ENGINE = 57886
const SECONDARY_ENGINE_ATTRIBUTE = 57887
const SECONDARY_LOAD = 57888
const SECONDARY_UNLOAD = 57889
const SIMPLE = 57890
const SKIP = 57891
const SRID = 57892
const THREAD_PRIORITY = 57893
const TIES = 57894
const UNBOUNDED = 57895
const VCPU = 57896
const VISIBLE = 57897
const RETURNING = 57898
const FORMAT = 57899
const TREE = 57900
const VITESS = 57901
const TRADITIONAL = 57902
const LOCAL = 57903
const LOW_PRIORITY = 57904
const NO_WRITE_TO_BINLOG = 57905
const LOGS = 57906
const ERROR = 57907
const GENERAL = 57908
const HOSTS = 57909
const OPTIMIZER_COSTS = 57910
const USER_RESOURCES = 57911
const SLOW = 57912
const CHANNEL = 57913
const RELAY = 57914
const EXPORT = 57915
const AVG_ROW_LENGTH = 57916
const CONNECTION = 57917
const CHECKSUM = 57918
const DELAY_KEY_WRITE = 57919
const ENCRYPTION = 57920
const ENGINE = 57921
const INSERT_METHOD = 57922
const MAX_ROWS = 57923
const MIN_ROWS = 57924
const PACK_KEYS = 57925
const PASSWORD = 57926
const FIXED = 57927
const DYNAMIC = 57928
const COMPRESSED = 57929
const REDUNDANT = 57930
const COMPACT = 57931
const ROW_FORMAT = 57932
const STATS_AUTO_RECALC = 57933
const STATS_PERSISTENT = 57934
const STATS_SAMPLE_PAGES = 57935
const STORAGE = 57936
const MEMORY = 57937
const DISK = 57938
const PARTITIONS = 57939
const LINEAR = 57940
const RANGE = 57941
const LIST = 57942
const SUBPARTITION = 57943
const SUBPARTITIONS = 57944
const HASH = 57945

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	621, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	334, 153,
	-2, 498,
	-1, 55,
	35, 739,
	234, 739,
	245, 739,
	280, 753,
	281, 753,
	-2, 741,
	-1, 60,
	236, 766,
	-2, 764,
	-1, 114,
	233, 1317,
	-2, 119,
	-1, 116,
	1, 146,
	621, 146,
	-2, 153,
	-1, 127,
	133, 384,
	239, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	334, 153,
	-2, 507,
	-1, 715,
	218, 1338,
	-2, 1334,
	-1, 716,
	218, 1339,
	-2, 1335,
	-1, 791,
	59, 834,
	-2, 849,
	-1, 828,
	148, 1755,
	-2, 112,
	-1, 829,
	148, 1590,
	-2, 113,
	-1, 835,
	148, 1676,
	-2, 1311,
	-1, 983,
	148, 1517,
	-2, 1308,
	-1, 1024,
	244, 41,
	249, 41,
	-2, 395,
	-1, 1108,
	1, 554,
	621, 554,
	-2, 153,
	-1, 1356,
	59, 835,
	-2, 854,
	-1, 1357,
	59, 836,
	-2, 855,
	-1, 1410,
	132, 153,
	173, 153,
	334, 153,
	-2, 434,
	-1, 1489,
	133, 384,
	239, 384,
	-2, 487,
	-1, 1498,
	244, 42,
	249, 42,
	-2, 396,
	-1, 1812,
	218, 1343,
	-2, 1337,
	-1, 1900,
	132, 153,
	173, 153,
	334, 153,
	-2, 435,
	-1, 1907,
	25, 174,
	-2, 176,
	-1, 2166,
	87, 39,
	-2, 891,
	-1, 2223,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2291,
	596, 666,
	-2, 640,
	-1, 2440,
	49, 1279,
	-2, 1273,
	-1, 2670,
	87, 39,
	-2, 892,
	-1, 2708,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3010,
	596, 666,
	-2, 654,
	-1, 3077,
	22, 1678,
	32, 1678,
	174, 1678,
	256, 1678,
	314, 1678,
	315, 1678,
	316, 1678,
	317, 1678,
	318, 1678,
	319, 1678,
	320, 1678,
	322, 1678,
	323, 1678,
	324, 1678,
	325, 1678,
	326, 1678,
	327, 1678,
	328, 1678,
	329, 1678,
	330, 1678,
	331, 1678,
	332, 1678,
	333, 1678,
	335, 1678,
	337, 1678,
	338, 1678,
	339, 1678,
	340, 1678,
	341, 1678,
	342, 1678,
	343, 1678,
	344, 1678,
	345, 1678,
	348, 1678,
	349, 1678,
	350, 1678,
	351, 1678,
	352, 1678,
	353, 1678,
	354, 1678,
	355, 1678,
	356, 1678,
	478, 1678,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45064

var yyAct = [...]int{
	715, 2813, 2814, 2395, 2812, 3110, 3139, 3149, 2991, 724,
	3111, 1897, 2785, 2589, 3075, 1413, 3053, 2937, 2495, 2502,
	1830, 1171, 2552, 2543, 2116, 2557, 2772, 1832, 2831, 2554,
	96, 2553, 2453, 2154, 627, 705, 2551, 2556, 717, 2555,
	1335, 2967, 784, 2572, 2510, 1967, 2456, 2571, 623, 2836,
	1371, 186, 2457, 2194, 186, 1850, 588, 186, 2673, 2454,
	2394, 2351, 603, 806, 186, 2679, 3, 718, 649, 2393,
	1854, 1870, 186, 702, 2574, 704, 37, 703, 2451, 2441,
	2181, 1930, 2610, 2665, 2256, 2699, 1467, 186, 2217, 619,
	2334, 2594, 1935, 1120, 2288, 1955, 2257, 621, 2258, 833,
	155, 1875, 1998, 1886, 2206, 2187, 2173, 786, 615, 603,
	986, 1874, 603, 186, 603, 36, 2156, 1782, 807, 38,
	1781, 1717, 1707, 2014, 1358, 141, 1806, 1937, 1976, 2250,
	830, 1954, 1665, 1514, 2326, 1496, 1014, 1149, 1019, 1402,
	2225, 1862, 1380, 1877, 632, 91, 1338, 1614, 1258, 1729,
	1192, 1610, 1684, 788, 993, 792, 95, 1025, 1503, 1594,
	1952, 1855, 994, 1022, 1401, 990, 1385, 1032, 1020, 1399,
	798, 1224, 1778, 809, 1725, 1021, 1169, 1163, 119, 1619,
	159, 117, 118, 98, 1926, 1462, 1488, 124, 125, 820,
	796, 1104, 97, 85, 610, 793, 3000, 76, 102, 794,
	1261, 620, 2281, 89, 3140, 1265, 1969, 1970, 1971, 1823,
	2562, 2773, 2540, 1969, 2310, 2309, 2012, 559, 188, 189,
	190, 2279, 2728, 2559, 814, 8, 819, 7, 120, 6,
	2562, 2765, 1579, 795, 77, 126, 800, 2342, 592, 104,
	105, 2343, 108, 3023, 2817, 114, 90, 1061, 183, 3024,
	987, 554, 87, 1193, 188, 189, 190, 2817, 1827, 1828,
	611, 592, 1672, 1671, 1670, 1669, 1668, 1667, 2560, 785,
	834, 780, 781, 782, 783, 787, 1650, 791, 827, 1012,
	3096, 2152, 1011, 1193, 613, 2437, 614, 2646, 2560, 2002,
	2566, 808, 1035, 2301, 2183, 1010, 1036, 120, 1009, 1008,
	3114, 801, 1659, 589, 998, 822, 823, 1003, 3160, 1809,
	2566, 1062, 1065, 1066, 1365, 3109, 3085, 3130, 2000, 2304,
	1677, 1077, 1071, 2611, 2933, 2932, 1060, 1059, 2778, 2816,
	3083, 2779, 3157, 2001, 3024, 3063, 3143, 3019, 78, 3089,
	3090, 78, 2816, 78, 1225, 3123, 80, 2512, 2513, 2786,
	575, 592, 3054, 2056, 3084, 78, 1995, 3062, 1946, 1203,
	2350, 3018, 573, 3080, 2628, 120, 2942, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1234, 1233, 1235, 1236, 1477, 2197,
	2492, 2493, 2153, 1940, 2318, 1892, 1893, 2849, 2317, 1203,
	2491, 2341, 2234, 1858, 1007, 2233, 1113, 1114, 2235, 1403,
	2563, 1404, 570, 2053, 2198, 1891, 1156, 1166, 1158, 1127,
	1107, 584, 1139, 778, 1128, 777, 87, 2992, 2054, 87,
	2563, 87, 1126, 2246, 1125, 1127, 580, 2282, 1116, 1002,
	1128, 592, 1004, 87, 1144, 1145, 592, 1829, 1910, 1909,
	593, 2383, 2591, 2619, 592, 2676, 1155, 1157, 2190, 2191,
	1140, 1133, 1005, 2511, 2617, 601, 1658, 605, 1199, 599,
	2352, 1191, 1600, 593, 2595, 2514, 1342, 2327, 2015, 2289,
	1977, 3115, 1078, 2026, 2023, 2025, 2024, 2027, 2028, 2584,
	2313, 2032, 3142, 2033, 1595, 2034, 1858, 2585, 1199, 2020,
	1160, 1103, 3116, 2593, 1109, 560, 1148, 562, 576, 2329,
	595, 2767, 594, 566, 1569, 564, 568, 577, 569, 2766,
	563, 2035, 574, 1165, 1084, 565, 578, 579, 582, 585,
	586, 587, 583, 581, 1939, 572, 596, 2592, 1007, 1146,
	999, 716, 1660, 1661, 1662, 1141, 1134, 1001, 1000, 1147,
	1142, 1143, 2354, 1153, 2021, 1083, 2017, 1154, 1570, 2917,
	1571, 87, 2019, 593, 186, 1045, 186, 1159, 1043, 186,
	1980, 1007, 1102, 1015, 2763, 1481, 1871, 1016, 1239, 1016,
	1006, 1054, 1053, 1345, 1052, 3097, 1856, 1857, 1051, 1050,
	1049, 1152, 187, 1048, 1047, 187, 1005, 1042, 187, 603,
	1173, 603, 603, 604, 2018, 187, 1055, 1239, 2384, 2514,
	991, 3161, 3121, 187, 991, 1028, 603, 603, 2364, 2363,
	2362, 2356, 991, 2360, 1064, 2355, 989, 2353, 187, 1027,
	1027, 1611, 2358, 1953, 1063, 821, 1106, 2054, 1502, 1137,
	1034, 2357, 2330, 593, 2006, 1073, 2157, 2159, 593, 1607,
	604, 1034, 1179, 604, 187, 604, 593, 1067, 2359, 2361,
	2533, 2312, 2346, 1475, 1123, 3153, 1129, 1130, 1131, 1132,
	1198, 1195, 1196, 1197, 1202, 1204, 1201, 1601, 1200, 1856,
	1857, 1602, 1603, 1474, 1185, 1194, 2762, 1473, 2299, 1167,
	1168, 2068, 2999, 37, 1608, 2333, 1471, 2943, 2280, 558,
	1198, 1195, 1196, 1197, 1202, 1204, 1201, 1999, 1200, 553,
	1046, 1013, 2988, 1044, 1006, 1194, 2248, 597, 2283, 2315,
	2325, 2715, 1997, 2324, 1898, 2695, 2230, 1161, 2193, 1056,
	1240, 1241, 1105, 2140, 1822, 590, 1242, 1243, 1244, 1245,
	1033, 2677, 1389, 3005, 1501, 1310, 1250, 1006, 1253, 1118,
	591, 1033, 3088, 2188, 1034, 1239, 1174, 1027, 1030, 1031,
	1236, 991, 116, 2490, 803, 1024, 1028, 1164, 2370, 1328,
	3013, 1943, 1057, 1122, 2564, 2565, 3017, 1175, 1176, 2758,
	111, 2272, 81, 1150, 1620, 2689, 1023, 2568, 186, 1246,
	2016, 1604, 603, 603, 2564, 2565, 3087, 2336, 1405, 1189,
	2303, 1730, 2335, 2726, 2727, 2815, 1208, 2568, 186, 2158,
	2845, 1944, 1333, 1581, 1580, 1582, 1583, 1584, 2815, 1942,
	86, 2055, 1994, 86, 1599, 86, 2733, 603, 786, 1351,
	1034, 186, 1730, 2732, 2082, 1984, 603, 86, 1136, 1511,
	1349, 1510, 603, 1188, 2302, 1186, 1500, 1187, 1992, 1138,
	112, 77, 1334, 1945, 1033, 2336, 1072, 830, 1346, 1263,
	2335, 1264, 1764, 1941, 1207, 1208, 1124, 3117, 1267, 1112,
	1034, 1348, 1115, 1058, 1209, 1352, 1045, 1034, 1043, 1989,
	3151, 788, 1989, 3152, 3032, 3150, 1074, 1075, 1076, 2716,
	1079, 1080, 1081, 1082, 3162, 2097, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1996, 1121, 1334, 1993, 1350, 1689, 1991,
	1390, 95, 1316, 1317, 1318, 1319, 1320, 3033, 1151, 1621,
	1033, 1339, 1690, 1237, 1238, 1688, 1027, 1030, 1031, 1400,
	991, 3155, 2925, 2981, 1024, 1028, 3118, 1108, 98, 2924,
	1756, 1745, 1746, 1747, 1748, 1758, 1749, 1750, 1751, 1763,
	1759, 1752, 1753, 1760, 1761, 1762, 1754, 1755, 1757, 1596,
	1033, 1597, 3008, 1589, 1598, 1037, 1027, 1033, 2915, 3163,
	1039, 1336, 1037, 1027, 1040, 1038, 2982, 1039, 2805, 1347,
	785, 1040, 1038, 2060, 2061, 2062, 186, 834, 1370, 1353,
	1463, 2804, 1209, 787, 2740, 1041, 1206, 1209, 1207, 1208,
	1472, 2739, 1587, 1367, 1229, 1230, 1231, 1232, 1234, 1233,
	1235, 1236, 1395, 1396, 1231, 1232, 1234, 1233, 1235, 1236,
	1863, 1864, 87, 603, 2792, 1498, 2793, 1588, 1365, 1209,
	729, 730, 731, 1507, 2729, 1734, 1687, 1509, 825, 1735,
	1512, 1513, 603, 603, 2541, 603, 2529, 603, 603, 2254,
	603, 603, 603, 603, 603, 603, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1211, 1544, 1545, 1586, 603, 2253, 1949,
	1508, 186, 1550, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1234, 1233, 1235, 1236, 1576, 187, 1590, 187, 186, 1209,
	187, 1574, 1573, 1572, 1679, 1681, 1682, 1543, 1209, 1562,
	1546, 603, 1556, 186, 1227, 1228, 1229, 1230, 1231, 1232,
	1234, 1233, 1235, 1236, 1609, 1564, 2625, 603, 1680, 186,
	604, 1553, 604, 604, 1206, 1209, 1207, 1208, 1552, 1206,
	1551, 1207, 1208, 1494, 1523, 186, 1209, 604, 604, 188,
	189, 190, 186, 2723, 1487, 188, 189, 190, 1575, 2237,
	1374, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	603, 1206, 3007, 1207, 1208, 1209, 2985, 2984, 1506, 1209,
	2372, 2983, 3127, 1365, 603, 603, 1516, 1547, 1517, 2078,
	1519, 1521, 1365, 2920, 1525, 1527, 1529, 1531, 1533, 1470,
	1505, 2905, 186, 188, 189, 190, 2904, 1965, 1504, 1504,
	1375, 2844, 1476, 2842, 1484, 1485, 1483, 2801, 3125, 1365,
	1497, 188, 189, 190, 1365, 1963, 2737, 2722, 1616, 3070,
	1365, 1206, 2596, 1207, 1208, 2950, 2532, 1624, 2531, 1548,
	1206, 2263, 1207, 1208, 1628, 2251, 1630, 1631, 1632, 1633,
	603, 1330, 2010, 1637, 1711, 1715, 1209, 2009, 3068, 1365,
	1714, 1714, 2077, 1720, 603, 1649, 1685, 1206, 2949, 1207,
	1208, 1853, 1835, 1622, 1623, 1651, 1617, 1612, 1206, 1585,
	1207, 1208, 1209, 1577, 603, 603, 1567, 1627, 1563, 1712,
	1712, 188, 189, 190, 1634, 1635, 1636, 1010, 1559, 120,
	1009, 1008, 188, 189, 190, 1731, 1961, 1206, 1558, 1207,
	1208, 1206, 1683, 1207, 1208, 1557, 1376, 1162, 2588, 187,
	1178, 2179, 3141, 604, 604, 1626, 1209, 3105, 1365, 2909,
	1364, 1693, 101, 2179, 3060, 1209, 1779, 2179, 3040, 187,
	1365, 2908, 1810, 100, 1209, 99, 1647, 2784, 1648, 2179,
	3036, 186, 3028, 1365, 94, 2290, 603, 2268, 604, 1906,
	1655, 1656, 187, 1209, 2688, 3066, 1365, 604, 1209, 2179,
	3001, 2776, 2998, 604, 94, 1686, 2642, 1365, 2928, 1365,
	186, 2179, 2916, 603, 2071, 2776, 1365, 2195, 1206, 2690,
	1207, 1208, 1779, 186, 2179, 2774, 1209, 603, 1989, 1365,
	2693, 1365, 186, 1691, 186, 1205, 186, 186, 603, 2966,
	1365, 603, 3093, 1365, 1206, 2452, 1207, 1208, 2964, 1365,
	1812, 1810, 603, 1840, 2195, 1841, 2688, 2961, 1365, 830,
	1205, 1365, 830, 1365, 1692, 1907, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1814,
	1815, 2953, 1365, 1736, 1737, 1738, 1739, 1740, 1206, 2203,
	1207, 1208, 95, 92, 2110, 1365, 3012, 1206, 1811, 1207,
	1208, 100, 1209, 2179, 93, 2203, 1206, 603, 1207, 1208,
	3119, 95, 2522, 2521, 1956, 1957, 1958, 2518, 2519, 1960,
	1962, 1964, 1209, 1846, 1873, 1206, 2688, 1207, 1208, 1812,
	1206, 2642, 1207, 1208, 603, 1916, 1917, 1918, 1919, 2520,
	603, 1507, 2518, 2517, 1507, 1911, 1507, 1912, 1913, 1914,
	1915, 1901, 1988, 800, 1834, 2203, 1365, 187, 1206, 1365,
	1207, 1208, 1902, 1922, 1923, 1924, 1925, 2069, 1365, 1884,
	2069, 101, 2054, 2311, 1466, 2293, 2425, 1868, 2485, 1978,
	1848, 1990, 100, 1932, 99, 2664, 1365, 603, 2054, 603,
	1905, 2286, 2287, 1866, 604, 603, 603, 1716, 1890, 834,
	2226, 1938, 834, 1889, 1722, 1723, 2996, 1888, 2179, 2178,
	1466, 1465, 2069, 604, 604, 1209, 604, 2110, 604, 604,
	1904, 604, 604, 604, 604, 604, 604, 1903, 2094, 2226,
	2093, 2175, 1989, 186, 1206, 1972, 1207, 1208, 604, 1989,
	186, 1861, 187, 1369, 1975, 1825, 94, 186, 186, 1948,
	1663, 186, 1365, 186, 1206, 92, 1207, 1208, 1606, 187,
	186, 1813, 94, 2227, 1816, 1817, 93, 186, 1933, 1947,
	1951, 1209, 604, 2229, 187, 1209, 1983, 1959, 1397, 1986,
	1018, 1987, 1017, 1928, 1929, 2105, 1411, 1410, 604, 790,
	187, 3043, 2227, 186, 1982, 1981, 1035, 2003, 603, 2913,
	1036, 1985, 2054, 1933, 2069, 1845, 187, 2202, 87, 1225,
	1504, 2005, 2939, 187, 1372, 3136, 2004, 2007, 2008, 2544,
	2906, 1365, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 604, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234,
	1233, 1235, 1236, 1209, 2073, 604, 604, 1206, 2856, 1207,
	1208, 2757, 2754, 2260, 2072, 1225, 2045, 2046, 1221, 1365,
	1222, 2048, 2203, 187, 1685, 2013, 1225, 87, 2345, 2735,
	2049, 1478, 1479, 1480, 1223, 1237, 1238, 1220, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1234, 1233, 1235, 1236, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1234, 1233, 1235, 1236,
	2038, 2634, 2633, 1206, 1468, 1207, 1208, 1206, 1209, 1207,
	1208, 604, 1931, 2586, 1209, 2546, 2741, 2088, 2089, 2090,
	2091, 2092, 2542, 2294, 1927, 604, 2661, 1365, 2065, 1921,
	1920, 1592, 1225, 1499, 2067, 1495, 1464, 1554, 1555, 1209,
	113, 2259, 1539, 1560, 1561, 604, 604, 1209, 1107, 2700,
	2701, 2590, 2940, 1946, 2052, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1234, 1233, 1235, 1236, 186, 2742, 2743, 2744,
	1209, 1838, 3134, 1686, 186, 1206, 1653, 1207, 1208, 603,
	2163, 2063, 3112, 1209, 2150, 603, 1714, 1378, 2745, 2260,
	3022, 2659, 1365, 1540, 1541, 1542, 603, 2623, 1365, 2958,
	2703, 2161, 2538, 2537, 2536, 1209, 2452, 2273, 1535, 2039,
	2706, 1209, 187, 2705, 2474, 1712, 1209, 604, 2081, 2475,
	186, 2472, 2125, 1365, 186, 2476, 2473, 2212, 2213, 2471,
	2117, 2064, 3099, 2066, 2167, 2746, 2747, 2748, 1654, 2236,
	1206, 187, 1207, 1208, 604, 3061, 1206, 2470, 1207, 1208,
	1209, 1852, 1373, 1377, 187, 1536, 1537, 1538, 604, 1844,
	2103, 2694, 1812, 187, 2180, 187, 2710, 187, 187, 604,
	2430, 1206, 604, 1207, 1208, 2442, 2444, 2199, 2826, 1206,
	2825, 1207, 1208, 604, 2445, 2835, 37, 603, 2429, 2759,
	1209, 2980, 2837, 186, 2662, 2219, 2684, 1605, 2681, 2644,
	186, 2439, 1206, 2189, 1207, 1208, 2680, 776, 1209, 1339,
	1811, 2176, 2151, 1209, 603, 1206, 2516, 1207, 1208, 804,
	2244, 603, 2264, 2247, 2249, 1507, 1507, 805, 2824, 1069,
	603, 2172, 1068, 2640, 2177, 2218, 2604, 1206, 604, 1207,
	1208, 2240, 1177, 1206, 2192, 1207, 1208, 2308, 1206, 1726,
	1207, 1208, 2259, 1209, 2339, 2300, 2224, 2307, 186, 186,
	186, 186, 186, 1727, 121, 604, 2228, 92, 2686, 2285,
	2231, 604, 1938, 2631, 94, 2079, 2238, 92, 93, 186,
	186, 2241, 1206, 94, 1207, 1208, 1863, 1864, 93, 101,
	3147, 2252, 2255, 2534, 2042, 186, 2630, 2997, 2935, 2515,
	100, 2216, 99, 1209, 2261, 1849, 2208, 2211, 2212, 2213,
	2209, 94, 2210, 2214, 603, 2270, 2700, 2701, 604, 2031,
	604, 2030, 1206, 2428, 1207, 1208, 604, 604, 2274, 2275,
	2276, 2427, 2269, 812, 813, 2029, 2149, 2666, 1487, 2306,
	1206, 2058, 1207, 1208, 99, 1206, 2972, 1207, 1208, 2971,
	786, 2843, 2841, 2840, 1366, 1368, 2833, 2137, 2138, 2755,
	2295, 2296, 2369, 2685, 187, 1714, 2683, 1714, 1209, 2547,
	1714, 187, 2305, 1973, 2365, 1714, 1209, 1482, 187, 187,
	811, 603, 187, 100, 187, 1206, 2148, 1207, 1208, 2674,
	2396, 187, 2396, 2832, 1712, 2396, 1712, 2347, 187, 1712,
	2396, 603, 2415, 2195, 1712, 2328, 2348, 101, 3138, 3137,
	1209, 2331, 2408, 2409, 2410, 2411, 186, 101, 100, 2175,
	603, 2401, 2337, 2385, 187, 2338, 2402, 2398, 100, 604,
	99, 2349, 2095, 1836, 603, 1206, 2366, 1207, 1208, 1391,
	1382, 603, 603, 3137, 186, 186, 186, 186, 186, 106,
	107, 2147, 3138, 2986, 2721, 2415, 186, 802, 103, 2146,
	88, 186, 1, 2725, 186, 3082, 186, 2432, 2389, 186,
	186, 186, 2455, 571, 2458, 2464, 1826, 2455, 1337, 1209,
	1363, 1359, 3113, 3078, 2484, 3079, 1209, 2403, 2404, 2405,
	2406, 2407, 1578, 2134, 1568, 1360, 1209, 2787, 2449, 1780,
	1206, 2936, 1207, 1208, 2433, 2530, 2414, 2550, 1206, 1979,
	1207, 1208, 2420, 2753, 186, 1936, 792, 1026, 1209, 2431,
	1842, 1843, 1362, 146, 1361, 1899, 1900, 603, 3056, 1209,
	2446, 2447, 110, 984, 2424, 603, 1352, 2219, 616, 109,
	186, 2434, 1206, 1029, 1207, 1208, 2466, 2467, 1135, 2469,
	1974, 2777, 2245, 186, 2486, 2465, 793, 2487, 2468, 2477,
	794, 1209, 2133, 1908, 2549, 2421, 2422, 2423, 1417, 2132,
	1616, 186, 1415, 2488, 186, 2463, 2481, 2482, 95, 2131,
	2494, 1416, 1209, 1414, 2605, 1419, 1418, 1209, 2096, 2645,
	2570, 1657, 600, 2215, 184, 2526, 2525, 187, 2524, 1406,
	1209, 2130, 1383, 1070, 561, 187, 2523, 1209, 2011, 567,
	604, 1206, 2129, 1207, 1208, 2578, 604, 1251, 1206, 2577,
	1207, 1208, 1652, 2426, 2232, 831, 2569, 604, 1206, 1938,
	1207, 1208, 1209, 824, 1837, 2165, 2460, 2548, 810, 2678,
	2581, 816, 2438, 816, 2128, 2440, 2182, 2443, 2436, 2979,
	1206, 187, 1207, 1208, 2834, 187, 2639, 2600, 3041, 2242,
	2597, 1206, 2599, 1207, 1208, 2127, 603, 186, 1209, 1379,
	2126, 2602, 2603, 2080, 1728, 2607, 1878, 1678, 2615, 2612,
	2613, 625, 2614, 2120, 2608, 2616, 624, 2618, 2621, 2620,
	2119, 622, 2168, 1206, 2196, 1207, 1208, 1212, 2208, 2211,
	2212, 2213, 2209, 1209, 2210, 2214, 719, 2155, 1392, 2207,
	2205, 2204, 1209, 2040, 1206, 2118, 1207, 1208, 604, 1206,
	1885, 1207, 1208, 1209, 187, 2672, 186, 2702, 2698, 3074,
	1880, 187, 1206, 1876, 1207, 1208, 1209, 2174, 694, 1206,
	633, 1207, 1208, 626, 2724, 604, 2667, 2668, 618, 2718,
	2576, 2115, 604, 2314, 2587, 186, 2316, 2675, 2697, 2243,
	2682, 604, 2583, 1190, 1206, 1355, 1207, 1208, 1209, 2707,
	612, 997, 2687, 2941, 186, 3003, 2057, 186, 186, 186,
	2713, 2714, 2627, 1354, 1743, 1744, 2114, 603, 603, 187,
	187, 187, 187, 187, 2704, 2113, 2711, 3010, 2558, 2771,
	1206, 2539, 1207, 1208, 2291, 1966, 2111, 2719, 63, 41,
	187, 187, 2578, 2720, 2712, 1771, 2577, 607, 3095, 2107,
	1181, 1363, 1359, 1732, 818, 32, 187, 1733, 2736, 31,
	2738, 603, 603, 603, 603, 1206, 1360, 1207, 1208, 30,
	29, 28, 2760, 2761, 1206, 604, 1207, 1208, 23, 22,
	21, 2106, 20, 19, 25, 1206, 18, 1207, 1208, 17,
	16, 1356, 1357, 1362, 2561, 1361, 3108, 3146, 1206, 115,
	1207, 1208, 50, 2783, 47, 45, 123, 122, 48, 44,
	1110, 42, 27, 26, 15, 14, 13, 2781, 2782, 12,
	1714, 11, 1714, 10, 9, 1366, 1824, 5, 4, 2262,
	1206, 35, 1207, 1208, 2265, 2266, 34, 33, 1184, 24,
	186, 2, 604, 2278, 1968, 2396, 0, 2396, 0, 1712,
	0, 1712, 0, 0, 2796, 0, 0, 0, 1847, 0,
	2829, 2800, 604, 0, 603, 0, 603, 0, 0, 0,
	0, 0, 0, 2809, 0, 0, 0, 187, 2818, 0,
	2808, 604, 0, 0, 2858, 0, 0, 0, 0, 0,
	1714, 0, 0, 2455, 0, 604, 2458, 2838, 786, 0,
	2458, 2830, 604, 604, 0, 187, 187, 187, 187, 187,
	2854, 2852, 0, 2848, 2839, 0, 0, 187, 2846, 1712,
	0, 182, 187, 0, 0, 187, 0, 187, 603, 2850,
	187, 187, 187, 0, 0, 2859, 2860, 0, 37, 0,
	2862, 186, 0, 0, 603, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 164, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 2926, 2918,
	2910, 2912, 2911, 0, 0, 187, 0, 0, 2938, 0,
	0, 2794, 0, 2914, 2955, 2956, 0, 0, 604, 2930,
	2931, 2959, 0, 0, 603, 0, 604, 1714, 603, 603,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 161, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 1712, 603, 0, 2976,
	0, 0, 187, 2975, 0, 187, 0, 0, 181, 2973,
	2974, 0, 0, 0, 2978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2458, 0, 0, 0, 2498,
	786, 0, 0, 0, 0, 0, 2987, 0, 0, 0,
	0, 0, 2993, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 2990, 0, 0, 0, 1210, 0, 2989, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2499, 0, 0, 0, 0, 0,
	603, 186, 0, 0, 1259, 0, 0, 0, 0, 3006,
	0, 0, 0, 3002, 0, 3009, 0, 604, 187, 0,
	2501, 0, 2995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2496, 0, 0, 0, 165, 2527,
	2528, 0, 0, 0, 0, 0, 0, 171, 0, 603,
	0, 2512, 2513, 0, 0, 3014, 0, 0, 2497, 0,
	0, 0, 3011, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 0, 603, 603, 0, 0, 187, 0, 3034,
	0, 2455, 0, 0, 3044, 0, 0, 0, 0, 603,
	3055, 2503, 0, 3047, 2938, 3057, 3052, 2070, 186, 603,
	3049, 2074, 3048, 2075, 2076, 3064, 187, 3046, 3051, 0,
	3050, 0, 2084, 0, 0, 2085, 2086, 3039, 3073, 3091,
	3081, 3086, 0, 0, 3042, 187, 0, 0, 187, 187,
	187, 0, 0, 37, 3098, 0, 0, 0, 604, 604,
	0, 0, 0, 0, 0, 0, 0, 2098, 2099, 2100,
	2101, 2102, 3107, 2104, 603, 0, 0, 2511, 0, 2108,
	0, 2109, 0, 0, 156, 2112, 603, 0, 0, 2514,
	1381, 3122, 3132, 2121, 2122, 2123, 2124, 3135, 1714, 3131,
	3129, 3133, 604, 604, 604, 604, 2135, 2136, 0, 0,
	0, 0, 0, 0, 2141, 2142, 2143, 2144, 2145, 0,
	0, 3148, 0, 0, 1847, 0, 3154, 1712, 3156, 3120,
	0, 0, 0, 0, 0, 2162, 0, 0, 0, 0,
	0, 0, 0, 0, 3164, 0, 3166, 3167, 2956, 3165,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	695, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2500, 0,
	0, 0, 0, 0, 0, 604, 0, 604, 2730, 2731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 602, 0, 169, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2764, 0, 0, 0, 2768, 2769, 2770, 0, 0, 604,
	121, 0, 0, 0, 0, 1469, 0, 0, 0, 0,
	0, 0, 187, 164, 0, 604, 177, 0, 0, 832,
	0, 0, 988, 0, 995, 0, 0, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 2239, 0, 0, 0,
	0, 176, 178, 179, 180, 604, 0, 0, 0, 604,
	604, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2504, 0, 0, 0, 2508, 0,
	0, 0, 0, 181, 0, 0, 2507, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2373, 2374,
	2375, 2376, 2377, 2378, 0, 0, 0, 2382, 0, 0,
	2509, 1618, 0, 0, 0, 2505, 0, 0, 0, 0,
	2506, 0, 0, 0, 0, 0, 0, 2397, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 2412, 2413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 604, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2921, 2922, 2923, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1673, 1674, 1675, 1676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 2461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2479, 2480,
	0, 0, 0, 0, 604, 604, 816, 1718, 1719, 0,
	0, 0, 0, 816, 816, 1724, 0, 0, 0, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	604, 0, 0, 0, 0, 1765, 1766, 1767, 1768, 1769,
	1770, 1772, 1776, 1777, 0, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 816, 0,
	816, 816, 816, 816, 816, 0, 0, 0, 0, 156,
	1818, 1819, 1820, 1821, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2622, 2624, 2626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2632, 0, 1896, 0, 0, 2636, 2637, 2638,
	0, 0, 0, 0, 2641, 0, 0, 0, 0, 0,
	2643, 0, 0, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 0, 0, 2657, 0, 2658, 2660, 0,
	2663, 0, 0, 0, 0, 2669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1434, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 169,
	2691, 2692, 0, 0, 2696, 0, 0, 0, 0, 832,
	0, 832, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2708, 2709, 0, 0, 1180, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2775, 0, 0, 0, 0, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 2795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2806, 0, 0, 0,
	2807, 0, 0, 0, 0, 0, 2811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1435,
	0, 0, 1343, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 0, 0,
	0, 0, 0, 0, 816, 0, 832, 0, 0, 2083,
	0, 0, 1407, 0, 0, 0, 0, 1448, 1451, 1452,
	1453, 1454, 1455, 1456, 0, 1457, 1458, 1459, 1460, 1461,
	1436, 1437, 1438, 1439, 1420, 1421, 1449, 0, 1423, 0,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 0,
	1259, 1433, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 2927, 0, 0, 0, 0, 0, 0, 0,
	0, 2934, 0, 0, 0, 0, 816, 816, 0, 0,
	0, 0, 0, 121, 0, 143, 0, 0, 0, 2944,
	2945, 2946, 0, 2947, 2948, 0, 164, 0, 0, 2951,
	0, 2952, 0, 2954, 2957, 726, 79, 0, 0, 0,
	2960, 2962, 2963, 2965, 2968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	1381, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2994, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1450, 130, 131, 152, 151, 181, 0, 0, 0,
	0, 0, 0, 789, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 1331, 0, 0, 0,
	0, 0, 1515, 1515, 0, 1515, 0, 1515, 1515, 996,
	1524, 1515, 1515, 1515, 1515, 1515, 0, 0, 0, 0,
	0, 0, 3016, 1331, 0, 0, 1331, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 3021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3029, 0,
	0, 0, 0, 0, 3030, 3031, 0, 0, 0, 0,
	0, 1591, 0, 0, 147, 128, 154, 135, 127, 0,
	148, 149, 3037, 0, 0, 0, 165, 1613, 0, 0,
	0, 0, 0, 0, 0, 171, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 137, 132, 133, 134, 138, 3065, 3067, 3069, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 2344, 0,
	832, 140, 0, 0, 0, 0, 3094, 0, 816, 0,
	0, 0, 0, 0, 832, 832, 2367, 2368, 0, 0,
	0, 2371, 0, 0, 0, 3100, 0, 0, 0, 0,
	0, 0, 2379, 2380, 2381, 3104, 0, 0, 0, 0,
	0, 0, 0, 0, 2386, 2387, 2388, 0, 0, 1783,
	2390, 0, 2391, 2392, 0, 0, 0, 2399, 2400, 0,
	0, 0, 3124, 3126, 3128, 1783, 1783, 1783, 1783, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	1708, 0, 156, 0, 0, 2416, 2417, 2418, 2419, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 3158, 3159, 0, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 182, 0,
	150, 2483, 0, 0, 0, 1340, 0, 0, 0, 2284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 556,
	0, 2545, 0, 0, 0, 0, 153, 1387, 0, 606,
	832, 0, 142, 0, 0, 157, 0, 779, 832, 0,
	0, 832, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 988, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1490, 1491, 152, 151, 181, 0, 0, 992, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 2629, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 2635, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 988, 0, 0, 0, 0, 0,
	995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1170, 0, 1170, 1170, 0, 0,
	0, 0, 0, 147, 1492, 154, 0, 1489, 0, 148,
	149, 0, 0, 79, 0, 165, 0, 988, 0, 1708,
	0, 0, 0, 0, 171, 1708, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 1247, 1248, 1249, 0, 1252, 0, 1254, 1255, 1256,
	1257, 0, 1260, 1262, 1262, 0, 1262, 1266, 1266, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	0, 1309, 0, 1311, 1312, 1313, 1314, 1315, 0, 0,
	0, 2756, 1266, 1266, 1266, 1266, 1266, 1321, 1322, 1323,
	1324, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 2780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 789, 2798, 0, 2799, 789, 0, 0, 0, 2802,
	2803, 789, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2810, 1486, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 121, 2819, 143,
	2820, 2821, 0, 2822, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2847, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 2855,
	0, 153, 2857, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 2861, 0, 0, 0,
	0, 0, 0, 832, 157, 0, 0, 0, 161, 0,
	162, 169, 0, 0, 2907, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 2169, 1490, 1491, 152, 151,
	181, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 1111,
	0, 1117, 0, 0, 1119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2267, 147, 1492,
	154, 0, 1489, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 2292, 0, 0, 0, 0, 0, 0, 0, 0,
	2297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2869, 2871, 2870, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 3020, 0, 0, 0, 0, 0, 0, 0,
	3025, 0, 0, 3026, 0, 3027, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 185, 0,
	0, 557, 0, 0, 598, 0, 0, 0, 0, 1170,
	1170, 557, 0, 0, 0, 0, 1331, 0, 1331, 557,
	0, 1331, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 799, 0, 0, 0, 0, 0,
	0, 832, 3092, 0, 0, 0, 1394, 0, 0, 0,
	817, 0, 817, 0, 0, 0, 0, 0, 0, 0,
	557, 1515, 0, 0, 150, 3101, 0, 3102, 0, 3103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 1331, 0,
	0, 2462, 1515, 1331, 0, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3144, 0, 3145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 2875, 2876, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 177, 0,
	1331, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 650, 710, 652, 707,
	708, 1412, 648, 651, 709, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 1879, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 658, 659, 2868, 2872, 2873, 2874, 2877, 2878, 2879,
	2887, 2889, 683, 2888, 2890, 2891, 2892, 2895, 2896, 2897,
	2898, 2893, 2894, 2899, 2863, 2867, 2864, 2865, 2866, 2900,
	2901, 2902, 2903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2435, 0, 1593, 0,
	0, 0, 0, 0, 0, 996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 0, 0, 0, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 43, 69, 70, 1666, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1851, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 2164, 0, 0, 727, 728, 0, 0, 87, 3106,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2788, 2789, 2790, 2791, 0, 0, 0, 0, 0,
	0, 557, 0, 557, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1331, 0, 0, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 0, 1331,
	0, 0, 0, 0, 2851, 0, 2853, 0, 0, 0,
	0, 0, 0, 46, 49, 52, 51, 54, 1865, 66,
	0, 0, 75, 72, 0, 0, 0, 1869, 0, 1872,
	0, 1422, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 0, 0, 0, 2139, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 2160, 0, 0,
	0, 0, 1332, 0, 2929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 0, 832, 57, 58,
	0, 59, 60, 61, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 0, 2200, 2201, 0, 0,
	0, 0, 0, 0, 0, 2220, 0, 2221, 2222, 0,
	0, 0, 0, 0, 2969, 557, 0, 0, 2969, 2969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 557, 1457,
	1458, 1459, 1460, 1461, 1436, 1437, 1438, 1439, 1420, 1421,
	1449, 0, 1423, 0, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 0, 0, 1433, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 81,
	0, 0, 0, 0, 0, 2022, 2298, 0, 0, 0,
	0, 0, 2036, 2037, 0, 0, 2041, 0, 0, 0,
	1851, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 727, 728,
	0, 0, 86, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 3035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1450, 0, 0, 0, 3071,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 3076,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3076, 0, 0, 0,
	1332, 1879, 0, 1332, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2459, 1565, 79, 0, 0, 1879,
	1879, 1879, 1879, 1879, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 2220, 789, 0, 0,
	0, 1879, 0, 0, 1879, 0, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 1639,
	557, 557, 557, 557, 557, 557, 557, 0, 0, 2223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 0,
	0, 0, 0, 0, 0, 0, 2609, 0, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 0, 817, 817, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2319, 2320, 2321, 2322, 2323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 817, 1615, 817,
	817, 817, 817, 817, 1666, 2332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2340, 0, 0, 87, 0, 0, 0, 0, 1565, 720,
	727, 728, 729, 730, 731, 721, 723, 0, 0, 0,
	722, 0, 0, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 732, 733, 0, 799, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 2717, 0, 0, 1615, 0, 557,
	0, 557, 0, 557, 1887, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2579, 2580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2535,
	0, 2823, 0, 2827, 2828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2573, 2459, 0, 79, 0,
	2459, 0, 0, 0, 0, 0, 0, 0, 2582, 0,
	557, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 557, 557, 2598, 0, 557, 2601,
	2043, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2919,
	557, 0, 0, 0, 706, 0, 0, 710, 0, 707,
	708, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	1269, 1270, 1271, 1272, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1321, 1322, 1323, 1324,
	2734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3004, 0, 817, 817, 0, 0, 2749,
	0, 0, 2750, 2751, 2752, 0, 0, 0, 0, 0,
	1615, 79, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 3038, 0,
	0, 557, 87, 79, 0, 0, 0, 0, 720, 727,
	728, 729, 730, 731, 721, 723, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 732, 733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 2277, 0, 2579,
	2580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 0, 0, 557, 557, 557, 557, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 1332, 0, 0, 1332, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	1332, 557, 557, 557, 557, 557, 0, 0, 0, 0,
	0, 0, 0, 2478, 0, 0, 3015, 0, 557, 0,
	0, 1565, 0, 557, 0, 0, 557, 2489, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 557, 557, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 966, 951, 473, 1565, 896, 969, 865, 884,
	979, 887, 890, 932, 844, 910, 385, 881, 837, 869,
	839, 876, 840, 867, 898, 254, 864, 953, 914, 968,
	338, 251, 846, 870, 399, 886, 197, 934, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 975, 342, 920, 0, 457, 370, 0, 0,
	0, 900, 957, 908, 946, 895, 933, 854, 919, 970,
	882, 929, 971, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 3058, 0,
	3059, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	878, 926, 965, 879, 928, 249, 297, 256, 248, 478,
	976, 956, 843, 907, 964, 0, 0, 217, 967, 902,
	0, 931, 0, 982, 838, 922, 0, 841, 845, 978,
	960, 873, 259, 0, 0, 0, 0, 0, 0, 0,
	899, 909, 943, 947, 893, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 918, 0, 0, 0, 850, 842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 897, 0, 0, 0, 853, 0, 872, 944,
	0, 836, 280, 847, 371, 241, 0, 949, 959, 894,
	514, 963, 892, 891, 938, 851, 955, 885, 337, 849,
	306, 192, 213, 0, 883, 381, 424, 434, 954, 868,
	877, 239, 875, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 917, 936, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 1172,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 863, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 950, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 941, 981, 394, 433, 228,
	499, 456, 858, 862, 856, 923, 857, 912, 913, 859,
	972, 973, 974, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 945, 852, 0, 860, 861, 0, 952, 961,
	962, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 916, 191, 209, 340, 977, 417, 272, 530, 508,
	504, 198, 211, 855, 246, 866, 874, 0, 880, 888,
	889, 901, 903, 904, 905, 906, 924, 925, 927, 935,
	937, 940, 942, 948, 958, 980, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 915, 921, 351, 265, 285, 296,
	930, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	911, 939, 347, 474, 475, 292, 366, 0, 0, 966,
	951, 473, 0, 896, 969, 865, 884, 979, 887, 890,
	932, 844, 910, 385, 881, 837, 869, 839, 876, 840,
	867, 898, 254, 864, 953, 914, 968, 338, 251, 846,
	870, 399, 886, 197, 934, 447, 238, 348, 345, 481,
	266, 257, 253, 237, 293, 355, 397, 467, 391, 975,
	342, 920, 0, 457, 370, 0, 0, 0, 900, 957,
	908, 946, 895, 933, 854, 919, 970, 882, 929, 971,
	299, 235, 301, 196, 382, 458, 270, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 878, 926, 965,
	879, 928, 249, 297, 256, 248, 478, 976, 956, 843,
	907, 964, 0, 0, 217, 967, 902, 0, 931, 0,
	982, 838, 922, 0, 841, 845, 978, 960, 873, 259,
	0, 0, 0, 0, 0, 0, 0, 899, 909, 943,
	947, 893, 0, 0, 0, 0, 0, 2490, 0, 871,
	0, 918, 0, 0, 0, 850, 842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 897,
	0, 0, 0, 853, 0, 872, 944, 0, 836, 280,
	847, 371, 241, 0, 949, 959, 894, 514, 963, 892,
	891, 938, 851, 955, 885, 337, 849, 306, 192, 213,
	0, 883, 381, 424, 434, 954, 868, 877, 239, 875,
	432, 395, 497, 221, 268, 421, 401, 430, 408, 271,
	917, 936, 431, 343, 483, 415, 494, 515, 516, 247,
	375, 505, 471, 511, 529, 214, 244, 389, 464, 500,
	454, 367, 479, 480, 305, 453, 278, 195, 341, 521,
	212, 440, 230, 219, 485, 503, 273, 419, 204, 466,
	492, 227, 444, 0, 0, 531, 206, 490, 463, 363,
	302, 303, 205, 0, 420, 252, 276, 242, 384, 487,
	488, 240, 532, 216, 510, 208, 1172, 509, 377, 482,
	491, 364, 353, 207, 489, 362, 352, 308, 327, 328,
	264, 287, 413, 346, 414, 288, 373, 372, 374, 199,
	501, 0, 200, 0, 459, 502, 533, 222, 223, 225,
	863, 263, 267, 275, 277, 283, 284, 291, 339, 388,
	412, 410, 416, 950, 477, 495, 506, 513, 519, 520,
	522, 523, 524, 525, 526, 528, 527, 376, 290, 455,
	307, 344, 941, 981, 394, 433, 228, 499, 456, 858,
	862, 856, 923, 857, 912, 913, 859, 972, 973, 974,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 945,
	852, 0, 860, 861, 0, 952, 961, 962, 552, 354,
	446, 496, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 236,
	202, 360, 368, 476, 425, 426, 427, 428, 916, 191,
	209, 340, 977, 417, 272, 530, 508, 504, 198, 211,
	855, 246, 866, 874, 0, 880, 888, 889, 901, 903,
	904, 905, 906, 924, 925, 927, 935, 937, 940, 942,
	948, 958, 980, 193, 194, 201, 210, 220, 224, 231,
	245, 260, 262, 269, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 378, 379, 380, 383,
	386, 387, 390, 392, 393, 396, 400, 404, 405, 406,
	407, 409, 411, 418, 423, 435, 436, 437, 438, 439,
	442, 443, 448, 449, 450, 451, 452, 460, 461, 465,
	484, 486, 498, 512, 517, 441, 282, 493, 518, 0,
	349, 915, 921, 351, 265, 285, 296, 930, 507, 462,
	215, 429, 274, 203, 234, 218, 243, 258, 261, 300,
	361, 369, 398, 403, 279, 255, 232, 422, 229, 445,
	468, 469, 470, 472, 365, 250, 402, 911, 939, 347,
	474, 475, 292, 366, 0, 0, 966, 951, 473, 0,
	896, 969, 865, 884, 979, 887, 890, 932, 844, 910,
	385, 881, 837, 869, 839, 876, 840, 867, 898, 254,
	864, 953, 914, 968, 338, 251, 846, 870, 399, 886,
	197, 934, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 975, 342, 920, 0,
	457, 370, 0, 0, 0, 900, 957, 908, 946, 895,
	933, 854, 919, 970, 882, 929, 971, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 878, 926, 965, 879, 928, 249,
	297, 256, 248, 478, 976, 956, 843, 907, 964, 0,
	0, 217, 967, 902, 0, 931, 0, 982, 838, 922,
	0, 841, 845, 978, 960, 873, 259, 0, 0, 0,
	0, 0, 0, 0, 899, 909, 943, 947, 893, 0,
	0, 0, 0, 0, 2448, 0, 871, 0, 918, 0,
	0, 0, 850, 842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 897, 0, 0, 0,
	853, 0, 872, 944, 0, 836, 280, 847, 371, 241,
	0, 949, 959, 894, 514, 963, 892, 891, 938, 851,
	955, 885, 337, 849, 306, 192, 213, 0, 883, 381,
	424, 434, 954, 868, 877, 239, 875, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 917, 936, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 1172, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 863, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	950, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 941,
	981, 394, 433, 228, 499, 456, 858, 862, 856, 923,
	857, 912, 913, 859, 972, 973, 974, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 945, 852, 0, 860,
	861, 0, 952, 961, 962, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 916, 191, 209, 340, 977,
	417, 272, 530, 508, 504, 198, 211, 855, 246, 866,
	874, 0, 880, 888, 889, 901, 903, 904, 905, 906,
	924, 925, 927, 935, 937, 940, 942, 948, 958, 980,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 915, 921,
	351, 265, 285, 296, 930, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 911, 939, 347, 474, 475, 292,
	366, 0, 0, 966, 951, 473, 0, 896, 969, 865,
	884, 979, 887, 890, 932, 844, 910, 385, 881, 837,
	869, 839, 876, 840, 867, 898, 254, 864, 953, 914,
	968, 338, 251, 846, 870, 399, 886, 197, 934, 447,
	238, 348, 345, 481, 266, 257, 253, 237, 293, 355,
	397, 467, 391, 975, 342, 920, 0, 457, 370, 0,
	0, 0, 900, 957, 908, 946, 895, 933, 854, 919,
	970, 882, 929, 971, 299, 235, 301, 196, 382, 458,
	270, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 878, 926, 965, 879, 928, 249, 297, 256, 248,
	478, 976, 956, 843, 907, 964, 0, 0, 217, 967,
	902, 0, 931, 0, 982, 838, 922, 0, 841, 845,
	978, 960, 873, 259, 0, 0, 0, 0, 0, 0,
	0, 899, 909, 943, 947, 893, 0, 0, 0, 0,
	0, 1867, 0, 871, 0, 918, 0, 0, 0, 850,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 897, 0, 0, 0, 853, 0, 872,
	944, 0, 836, 280, 847, 371, 241, 0, 949, 959,
	894, 514, 963, 892, 891, 938, 851, 955, 885, 337,
	849, 306, 192, 213, 0, 883, 381, 424, 434, 954,
	868, 877, 239, 875, 432, 395, 497, 221, 268, 421,
	401, 430, 408, 271, 917, 936, 431, 343, 483, 415,
	494, 515, 516, 247, 375, 505, 471, 511, 529, 214,
	244, 389, 464, 500, 454, 367, 479, 480, 305, 453,
	278, 195, 341, 521, 212, 440, 230, 219, 485, 503,
	273, 419, 204, 466, 492, 227, 444, 0, 0, 531,
	206, 490, 463, 363, 302, 303, 205, 0, 420, 252,
	276, 242, 384, 487, 488, 240, 532, 216, 510, 208,
	1172, 509, 377, 482, 491, 364, 353, 207, 489, 362,
	352, 308, 327, 328, 264, 287, 413, 346, 414, 288,
	373, 372, 374, 199, 501, 0, 200, 0, 459, 502,
	533, 222, 223, 225, 863, 263, 267, 275, 277, 283,
	284, 291, 339, 388, 412, 410, 416, 950, 477, 495,
	506, 513, 519, 520, 522, 523, 524, 525, 526, 528,
	527, 376, 290, 455, 307, 344, 941, 981, 394, 433,
	228, 499, 456, 858, 862, 856, 923, 857, 912, 913,
	859, 972, 973, 974, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 945, 852, 0, 860, 861, 0, 952,
	961, 962, 552, 354, 446, 496, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 236, 202, 360, 368, 476, 425, 426,
	427, 428, 916, 191, 209, 340, 977, 417, 272, 530,
	508, 504, 198, 211, 855, 246, 866, 874, 0, 880,
	888, 889, 901, 903, 904, 905, 906, 924, 925, 927,
	935, 937, 940, 942, 948, 958, 980, 193, 194, 201,
	210, 220, 224, 231, 245, 260, 262, 269, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	378, 379, 380, 383, 386, 387, 390, 392, 393, 396,
	400, 404, 405, 406, 407, 409, 411, 418, 423, 435,
	436, 437, 438, 439, 442, 443, 448, 449, 450, 451,
	452, 460, 461, 465, 484, 486, 498, 512, 517, 441,
	282, 493, 518, 0, 349, 915, 921, 351, 265, 285,
	296, 930, 507, 462, 215, 429, 274, 203, 234, 218,
	243, 258, 261, 300, 361, 369, 398, 403, 279, 255,
	232, 422, 229, 445, 468, 469, 470, 472, 365, 250,
	402, 911, 939, 347, 474, 475, 292, 366, 0, 0,
	966, 951, 473, 0, 896, 969, 865, 884, 979, 887,
	890, 932, 844, 910, 385, 881, 837, 869, 839, 876,
	840, 867, 898, 254, 864, 953, 914, 968, 338, 251,
	846, 870, 399, 886, 197, 934, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	975, 342, 920, 0, 457, 370, 0, 0, 0, 900,
	957, 908, 946, 895, 933, 854, 919, 970, 882, 929,
	971, 299, 235, 301, 196, 382, 458, 270, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 878, 926,
	965, 879, 928, 249, 297, 256, 248, 478, 976, 956,
	843, 907, 964, 0, 0, 217, 967, 902, 0, 931,
	0, 982, 838, 922, 0, 841, 845, 978, 960, 873,
	259, 0, 0, 0, 0, 0, 0, 0, 899, 909,
	943, 947, 893, 0, 0, 0, 0, 0, 0, 0,
	871, 0, 918, 0, 0, 0, 850, 842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	897, 0, 0, 0, 853, 0, 872, 944, 0, 836,
	280, 847, 371, 241, 0, 949, 959, 894, 514, 963,
	892, 891, 938, 851, 955, 885, 337, 849, 306, 192,
	213, 0, 883, 381, 424, 434, 954, 868, 877, 239,
	875, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 917, 936, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 1172, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 863, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 950, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 941, 981, 394, 433, 228, 499, 456,
	858, 862, 856, 923, 857, 912, 913, 859, 972, 973,
	974, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	945, 852, 0, 860, 861, 0, 952, 961, 962, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 916,
	191, 209, 340, 977, 417, 272, 530, 508, 504, 198,
	211, 855, 246, 866, 874, 0, 880, 888, 889, 901,
	903, 904, 905, 906, 924, 925, 927, 935, 937, 940,
	942, 948, 958, 980, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 915, 921, 351, 265, 285, 296, 930, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 911, 939,
	347, 474, 475, 292, 366, 0, 0, 966, 951, 473,
	0, 896, 969, 865, 884, 979, 887, 890, 932, 844,
	910, 385, 881, 837, 869, 839, 876, 840, 867, 898,
	254, 864, 953, 914, 968, 338, 251, 846, 870, 399,
	886, 197, 934, 447, 238, 348, 345, 481, 266, 257,
	253, 237, 293, 355, 397, 467, 391, 975, 342, 920,
	0, 457, 370, 0, 0, 0, 900, 957, 908, 946,
	895, 933, 854, 919, 970, 882, 929, 971, 299, 235,
	301, 196, 382, 458, 270, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 878, 926, 965, 879, 928,
	249, 297, 256, 248, 478, 976, 956, 843, 907, 964,
	0, 0, 217, 967, 902, 0, 931, 0, 982, 838,
	922, 0, 841, 845, 978, 960, 873, 259, 0, 0,
	0, 0, 0, 0, 0, 899, 909, 943, 947, 893,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 918,
	0, 0, 0, 850, 842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 897, 0, 0,
	0, 853, 0, 872, 944, 0, 836, 280, 847, 371,
	241, 0, 949, 959, 894, 514, 963, 892, 891, 938,
	851, 955, 885, 337, 849, 306, 192, 213, 0, 883,
	381, 424, 434, 954, 868, 877, 239, 875, 432, 395,
	497, 221, 268, 421, 401, 430, 408, 271, 917, 936,
	431, 343, 483, 415, 494, 515, 516, 247, 375, 505,
	471, 511, 529, 214, 244, 389, 464, 500, 454, 367,
	479, 480, 305, 453, 278, 195, 341, 521, 212, 440,
	230, 219, 485, 503, 273, 419, 204, 466, 492, 227,
	444, 0, 0, 531, 206, 490, 463, 363, 302, 303,
	205, 0, 420, 252, 276, 242, 384, 487, 488, 240,
	532, 216, 510, 208, 1172, 509, 377, 482, 491, 364,
	353, 207, 489, 362, 352, 308, 327, 328, 264, 287,
	413, 346, 414, 288, 373, 372, 374, 199, 501, 0,
	200, 0, 459, 502, 533, 222, 223, 225, 863, 263,
	267, 275, 277, 283, 284, 291, 339, 388, 412, 410,
	416, 950, 477, 495, 506, 513, 519, 520, 522, 523,
	524, 525, 526, 528, 527, 376, 290, 455, 307, 344,
	941, 981, 394, 433, 228, 499, 456, 858, 862, 856,
	923, 857, 912, 913, 859, 972, 973, 974, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 945, 852, 0,
	860, 861, 0, 952, 961, 962, 552, 354, 446, 496,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 236, 202, 360,
	368, 476, 425, 426, 427, 428, 916, 191, 209, 340,
	977, 417, 272, 530, 508, 504, 198, 211, 855, 246,
	866, 874, 0, 880, 888, 889, 901, 903, 904, 905,
	906, 924, 925, 927, 935, 937, 940, 942, 948, 958,
	980, 193, 194, 201, 210, 220, 224, 231, 245, 260,
	262, 269, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 378, 379, 380, 383, 386, 387,
	390, 392, 393, 396, 400, 404, 405, 406, 407, 409,
	411, 418, 423, 435, 436, 437, 438, 439, 442, 443,
	448, 449, 450, 451, 452, 460, 461, 465, 484, 486,
	498, 512, 517, 441, 282, 493, 518, 0, 349, 915,
	921, 351, 265, 285, 296, 930, 507, 462, 215, 429,
	274, 203, 234, 218, 243, 258, 261, 300, 361, 369,
	398, 403, 279, 255, 232, 422, 229, 445, 468, 469,
	470, 472, 365, 250, 402, 911, 939, 347, 474, 475,
	292, 366, 0, 0, 966, 951, 473, 0, 896, 969,
	865, 884, 979, 887, 890, 932, 844, 910, 385, 881,
	837, 869, 839, 876, 840, 867, 898, 254, 864, 953,
	914, 968, 338, 251, 846, 870, 399, 886, 197, 934,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 975, 342, 920, 0, 457, 370,
	0, 0, 0, 900, 957, 908, 946, 895, 933, 854,
	919, 970, 882, 929, 971, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 878, 926, 965, 879, 928, 249, 297, 256,
	248, 478, 976, 956, 843, 907, 964, 0, 0, 983,
	967, 902, 0, 931, 0, 982, 838, 922, 0, 841,
	845, 978, 960, 873, 259, 0, 0, 0, 0, 0,
	0, 0, 899, 909, 943, 947, 893, 0, 0, 0,
	0, 0, 0, 0, 871, 0, 918, 0, 0, 0,
	850, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 897, 0, 0, 0, 853, 0,
	872, 944, 0, 836, 280, 847, 371, 241, 0, 949,
	959, 894, 514, 963, 892, 891, 938, 851, 955, 885,
	337, 849, 306, 192, 213, 0, 883, 381, 424, 434,
	954, 868, 877, 239, 875, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 917, 936, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 848, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 863, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 950, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 835, 829, 828, 307, 344, 941, 981, 394,
	433, 228, 499, 456, 858, 862, 856, 923, 857, 912,
	913, 859, 972, 973, 974, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 945, 852, 0, 860, 861, 0,
	952, 961, 962, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 916, 191, 209, 340, 977, 417, 272,
	530, 508, 504, 198, 211, 855, 246, 866, 874, 0,
	880, 888, 889, 901, 903, 904, 905, 906, 924, 925,
	927, 935, 937, 940, 942, 948, 958, 980, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 915, 921, 351, 265,
	285, 296, 930, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 911, 939, 347, 474, 475, 292, 366, 0,
	0, 966, 951, 473, 0, 896, 969, 865, 884, 979,
	887, 890, 932, 844, 910, 385, 881, 837, 869, 839,
	876, 840, 867, 898, 254, 864, 953, 914, 968, 338,
	251, 846, 870, 399, 886, 197, 934, 447, 238, 348,
	345, 481, 266, 257, 253, 237, 293, 355, 397, 467,
	391, 975, 342, 920, 0, 457, 370, 0, 0, 0,
	900, 957, 908, 946, 895, 933, 854, 919, 970, 882,
	929, 971, 299, 235, 301, 196, 382, 458, 270, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 878,
	926, 965, 879, 928, 249, 297, 256, 248, 478, 976,
	956, 843, 907, 964, 0, 0, 983, 967, 902, 0,
	931, 0, 982, 838, 922, 0, 841, 845, 978, 960,
	873, 259, 0, 0, 0, 0, 0, 0, 0, 899,
	909, 943, 947, 893, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 918, 0, 0, 0, 850, 842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 897, 0, 0, 0, 853, 0, 872, 944, 0,
	836, 280, 847, 371, 241, 0, 949, 959, 894, 514,
	963, 892, 891, 938, 851, 955, 885, 337, 849, 306,
	192, 213, 0, 883, 381, 424, 434, 954, 868, 877,
	239, 875, 432, 395, 497, 221, 268, 421, 401, 430,
	408, 271, 917, 936, 431, 343, 483, 415, 494, 515,
	516, 247, 375, 505, 471, 511, 529, 214, 244, 389,
	464, 500, 454, 367, 479, 480, 305, 453, 278, 195,
	341, 521, 212, 440, 230, 219, 485, 503, 273, 419,
	204, 466, 1398, 227, 444, 0, 0, 531, 206, 490,
	463, 363, 302, 303, 205, 0, 420, 252, 276, 242,
	384, 487, 488, 240, 532, 216, 510, 208, 848, 509,
	377, 482, 491, 364, 353, 207, 489, 362, 352, 308,
	327, 328, 264, 287, 413, 346, 414, 288, 373, 372,
	374, 199, 501, 0, 200, 0, 459, 502, 533, 222,
	223, 225, 863, 263, 267, 275, 277, 283, 284, 291,
	339, 388, 412, 410, 416, 950, 477, 495, 506, 513,
	519, 520, 522, 523, 524, 525, 526, 528, 527, 835,
	829, 828, 307, 344, 941, 981, 394, 433, 228, 499,
	456, 858, 862, 856, 923, 857, 912, 913, 859, 972,
	973, 974, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 945, 852, 0, 860, 861, 0, 952, 961, 962,
	552, 354, 446, 496, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 236, 202, 360, 368, 476, 425, 426, 427, 428,
	916, 191, 209, 340, 977, 417, 272, 530, 508, 504,
	198, 211, 855, 246, 866, 874, 0, 880, 888, 889,
	901, 903, 904, 905, 906, 924, 925, 927, 935, 937,
	940, 942, 948, 958, 980, 193, 194, 201, 210, 220,
	224, 231, 245, 260, 262, 269, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 378, 379,
	380, 383, 386, 387, 390, 392, 393, 396, 400, 404,
	405, 406, 407, 409, 411, 418, 423, 435, 436, 437,
	438, 439, 442, 443, 448, 449, 450, 451, 452, 460,
	461, 465, 484, 486, 498, 512, 517, 441, 282, 493,
	518, 0, 349, 915, 921, 351, 265, 285, 296, 930,
	507, 462, 215, 429, 274, 203, 234, 218, 243, 258,
	261, 300, 361, 369, 398, 403, 279, 255, 232, 422,
	229, 445, 468, 469, 470, 472, 365, 250, 402, 911,
	939, 347, 474, 475, 292, 366, 0, 0, 966, 951,
	473, 0, 896, 969, 865, 884, 979, 887, 890, 932,
	844, 910, 385, 881, 837, 869, 839, 876, 840, 867,
	898, 254, 864, 953, 914, 968, 338, 251, 846, 870,
	399, 886, 197, 934, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 975, 342,
	920, 0, 457, 370, 0, 0, 0, 900, 957, 908,
	946, 895, 933, 854, 919, 970, 882, 929, 971, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 878, 926, 965, 879,
	928, 249, 297, 256, 248, 478, 976, 956, 843, 907,
	964, 0, 0, 983, 967, 902, 0, 931, 0, 982,
	838, 922, 0, 841, 845, 978, 960, 873, 259, 0,
	0, 0, 0, 0, 0, 0, 899, 909, 943, 947,
	893, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	918, 0, 0, 0, 850, 842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 897, 0,
	0, 0, 853, 0, 872, 944, 0, 836, 280, 847,
	371, 241, 0, 949, 959, 894, 514, 963, 892, 891,
	938, 851, 955, 885, 337, 849, 306, 192, 213, 0,
	883, 381, 424, 434, 954, 868, 877, 239, 875, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 917,
	936, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 826,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 848, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 863,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 950, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 835, 829, 828, 307,
	344, 941, 981, 394, 433, 228, 499, 456, 858, 862,
	856, 923, 857, 912, 913, 859, 972, 973, 974, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 945, 852,
	0, 860, 861, 0, 952, 961, 962, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 916, 191, 209,
	340, 977, 417, 272, 530, 508, 504, 198, 211, 855,
	246, 866, 874, 0, 880, 888, 889, 901, 903, 904,
	905, 906, 924, 925, 927, 935, 937, 940, 942, 948,
	958, 980, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	915, 921, 351, 265, 285, 296, 930, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 911, 939, 347, 474,
	475, 292, 366, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 1807, 0, 634, 0, 0, 0, 254, 639,
	0, 0, 0, 338, 251, 0, 1808, 399, 0, 197,
	0, 447, 238, 348, 345, 481, 266, 257, 253, 237,
	293, 355, 397, 467, 391, 646, 342, 0, 0, 457,
	370, 0, 0, 0, 0, 0, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 235, 301, 196,
	382, 458, 270, 0, 87, 0, 0, 188, 189, 190,
	720, 727, 728, 729, 730, 731, 721, 723, 0, 0,
	226, 722, 233, 662, 664, 663, 673, 674, 675, 676,
	677, 678, 679, 660, 725, 732, 733, 0, 249, 297,
	256, 248, 478, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 617, 631,
	0, 645, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 815, 0, 0, 0, 700, 0, 630,
	0, 0, 638, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 371, 241, 0,
	699, 0, 0, 514, 0, 0, 697, 0, 0, 0,
	0, 337, 0, 306, 192, 213, 0, 0, 381, 424,
	434, 0, 0, 0, 239, 0, 432, 395, 497, 221,
	268, 421, 401, 430, 408, 271, 0, 0, 431, 343,
	483, 415, 494, 515, 516, 247, 375, 505, 471, 511,
	529, 214, 244, 389, 464, 500, 454, 367, 479, 480,
	305, 453, 278, 195, 341, 521, 212, 440, 230, 219,
	485, 503, 273, 419, 204, 466, 492, 227, 444, 0,
	0, 531, 206, 490, 463, 363, 302, 303, 205, 0,
	420, 252, 276, 242, 384, 487, 488, 240, 532, 216,
	510, 208, 0, 509, 377, 482, 491, 364, 353, 207,
	489, 362, 352, 308, 668, 669, 264, 287, 413, 346,
	414, 288, 373, 372, 374, 199, 501, 0, 200, 0,
	459, 502, 533, 222, 223, 225, 0, 263, 267, 275,
	277, 283, 284, 291, 339, 388, 412, 410, 416, 0,
	477, 495, 506, 513, 519, 520, 522, 523, 524, 525,
	526, 528, 527, 376, 290, 455, 307, 344, 0, 0,
	394, 433, 228, 499, 456, 706, 698, 650, 710, 652,
	707, 708, 647, 648, 651, 709, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 701, 637, 636, 0, 643,
	644, 0, 658, 659, 661, 665, 666, 667, 670, 671,
	672, 680, 682, 683, 681, 684, 685, 686, 689, 690,
	691, 692, 687, 688, 693, 653, 657, 654, 655, 656,
	711, 712, 713, 714, 635, 191, 209, 340, 0, 417,
	272, 530, 508, 504, 198, 211, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 210, 220, 224, 231, 245, 260, 262, 269,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 378, 379, 380, 383, 386, 387, 390, 392,
	393, 396, 400, 404, 405, 406, 407, 409, 411, 418,
	423, 435, 436, 437, 438, 439, 442, 443, 448, 449,
	450, 451, 452, 460, 461, 465, 484, 486, 498, 512,
	517, 441, 282, 493, 518, 0, 349, 0, 0, 351,
	265, 285, 296, 0, 507, 462, 215, 429, 274, 203,
	234, 218, 243, 258, 261, 300, 361, 369, 398, 403,
	279, 255, 232, 422, 229, 445, 468, 469, 470, 472,
	365, 250, 402, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 0, 634, 0, 0, 0,
	254, 639, 0, 0, 0, 338, 251, 0, 0, 399,
	0, 197, 0, 447, 238, 348, 345, 481, 266, 257,
	253, 237, 293, 355, 397, 467, 391, 646, 342, 0,
	0, 457, 370, 0, 0, 0, 0, 0, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 235,
	301, 196, 382, 458, 270, 0, 87, 0, 0, 188,
	189, 190, 720, 727, 728, 729, 730, 731, 721, 723,
	0, 0, 226, 722, 233, 662, 664, 663, 673, 674,
	675, 676, 677, 678, 679, 660, 725, 732, 733, 0,
	249, 297, 256, 248, 478, 0, 0, 1773, 1774, 1775,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	617, 631, 0, 645, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 629, 0, 0, 0, 0, 700,
	0, 630, 0, 0, 638, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 371,
	241, 0, 699, 0, 0, 514, 0, 0, 697, 0,
	0, 0, 0, 337, 0, 306, 192, 213, 0, 0,
	381, 424, 434, 0, 0, 0, 239, 0, 432, 395,
	497, 221, 268, 421, 401, 430, 408, 271, 0, 0,
	431, 343, 483, 415, 494, 515, 516, 247, 375, 505,
	471, 511, 529, 214, 244, 389, 464, 500, 454, 367,
	479, 480, 305, 453, 278, 195, 341, 521, 212, 440,
	230, 219, 485, 503, 273, 419, 204, 466, 492, 227,
	444, 0, 0, 531, 206, 490, 463, 363, 302, 303,
	205, 0, 420, 252, 276, 242, 384, 487, 488, 240,
	532, 216, 510, 208, 0, 509, 377, 482, 491, 364,
	353, 207, 489, 362, 352, 308, 668, 669, 264, 287,
	413, 346, 414, 288, 373, 372, 374, 199, 501, 0,
	200, 0, 459, 502, 533, 222, 223, 225, 0, 263,
	267, 275, 277, 283, 284, 291, 339, 388, 412, 410,
	416, 0, 477, 495, 506, 513, 519, 520, 522, 523,
	524, 525, 526, 528, 527, 376, 290, 455, 307, 344,
	0, 0, 394, 433, 228, 499, 456, 706, 698, 650,
	710, 652, 707, 708, 647, 648, 651, 709, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 701, 637, 636,
	0, 643, 644, 0, 658, 659, 661, 665, 666, 667,
	670, 671, 672, 680, 682, 683, 681, 684, 685, 686,
	689, 690, 691, 692, 687, 688, 693, 653, 657, 654,
	655, 656, 711, 712, 713, 714, 635, 191, 209, 340,
	0, 417, 272, 530, 508, 504, 198, 211, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 210, 220, 224, 231, 245, 260,
	262, 269, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 378, 379, 380, 383, 386, 387,
	390, 392, 393, 396, 400, 404, 405, 406, 407, 409,
	411, 418, 423, 435, 436, 437, 438, 439, 442, 443,
	448, 449, 450, 451, 452, 460, 461, 465, 484, 486,
	498, 512, 517, 441, 282, 493, 518, 0, 349, 0,
	0, 351, 265, 285, 296, 0, 507, 462, 215, 429,
	274, 203, 234, 218, 243, 258, 261, 300, 361, 369,
	398, 403, 279, 255, 232, 422, 229, 445, 468, 469,
	470, 472, 365, 250, 402, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 634, 0,
	0, 0, 254, 639, 0, 0, 0, 338, 251, 0,
	0, 399, 0, 197, 0, 447, 238, 348, 345, 481,
	266, 257, 253, 237, 293, 355, 397, 467, 391, 646,
	342, 0, 0, 457, 370, 0, 0, 0, 0, 0,
	641, 642, 0, 0, 0, 0, 0, 0, 1894, 0,
	299, 235, 301, 196, 382, 458, 270, 0, 87, 0,
	0, 188, 189, 190, 720, 727, 728, 729, 730, 731,
	721, 723, 0, 0, 226, 722, 233, 662, 664, 663,
	673, 674, 675, 676, 677, 678, 679, 660, 725, 732,
	733, 1895, 249, 297, 256, 248, 478, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 617, 631, 0, 645, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 0, 0, 0,
	0, 700, 0, 630, 0, 0, 638, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 371, 241, 0, 699, 0, 0, 514, 0, 0,
	697, 0, 0, 0, 0, 337, 0, 306, 192, 213,
	0, 0, 381, 424, 434, 0, 0, 0, 239, 0,
	432, 395, 497, 221, 268, 421, 401, 430, 408, 271,
	0, 0, 431, 343, 483, 415, 494, 515, 516, 247,
	375, 505, 471, 511, 529, 214, 244, 389, 464, 500,
	454, 367, 479, 480, 305, 453, 278, 195, 341, 521,
	212, 440, 230, 219, 485, 503, 273, 419, 204, 466,
	492, 227, 444, 0, 0, 531, 206, 490, 463, 363,
	302, 303, 205, 0, 420, 252, 276, 242, 384, 487,
	488, 240, 532, 216, 510, 208, 0, 509, 377, 482,
	491, 364, 353, 207, 489, 362, 352, 308, 668, 669,
	264, 287, 413, 346, 414, 288, 373, 372, 374, 199,
	501, 0, 200, 0, 459, 502, 533, 222, 223, 225,
	0, 263, 267, 275, 277, 283, 284, 291, 339, 388,
	412, 410, 416, 0, 477, 495, 506, 513, 519, 520,
	522, 523, 524, 525, 526, 528, 527, 376, 290, 455,
	307, 344, 0, 0, 394, 433, 228, 499, 456, 706,
	698, 650, 710, 652, 707, 708, 647, 648, 651, 709,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 701,
	637, 636, 0, 643, 644, 0, 658, 659, 661, 665,
	666, 667, 670, 671, 672, 680, 682, 683, 681, 684,
	685, 686, 689, 690, 691, 692, 687, 688, 693, 653,
	657, 654, 655, 656, 711, 712, 713, 714, 635, 191,
	209, 340, 0, 417, 272, 530, 508, 504, 198, 211,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 210, 220, 224, 231,
	245, 260, 262, 269, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 378, 379, 380, 383,
	386, 387, 390, 392, 393, 396, 400, 404, 405, 406,
	407, 409, 411, 418, 423, 435, 436, 437, 438, 439,
	442, 443, 448, 449, 450, 451, 452, 460, 461, 465,
	484, 486, 498, 512, 517, 441, 282, 493, 518, 0,
	349, 0, 0, 351, 265, 285, 296, 0, 507, 462,
	215, 429, 274, 203, 234, 218, 243, 258, 261, 300,
	361, 369, 398, 403, 279, 255, 232, 422, 229, 445,
	468, 469, 470, 472, 365, 250, 402, 0, 0, 347,
	474, 475, 292, 366, 0, 0, 0, 78, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 634, 0, 0, 0, 254,
	639, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 646, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 87, 0, 0, 188, 189,
	190, 720, 727, 728, 729, 730, 731, 721, 723, 0,
	0, 226, 722, 233, 662, 664, 663, 673, 674, 675,
	676, 677, 678, 679, 660, 725, 732, 733, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 617,
	631, 0, 645, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 0, 0, 0, 0, 700, 0,
	630, 0, 0, 638, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 699, 0, 0, 514, 0, 0, 697, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 668, 669, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 706, 698, 650, 710,
	652, 707, 708, 647, 648, 651, 709, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 701, 637, 636, 0,
	643, 644, 0, 658, 659, 661, 665, 666, 667, 670,
	671, 672, 680, 682, 683, 681, 684, 685, 686, 689,
	690, 691, 692, 687, 688, 693, 653, 657, 654, 655,
	656, 711, 712, 713, 714, 635, 191, 209, 340, 86,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 634, 0, 0,
	0, 254, 639, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 646, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 87, 0, 0,
	188, 189, 190, 720, 727, 728, 729, 730, 731, 721,
	723, 0, 0, 226, 722, 233, 662, 664, 663, 673,
	674, 675, 676, 677, 678, 679, 660, 725, 732, 733,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 617, 631, 0, 645, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 0, 0, 0, 0,
	700, 0, 630, 0, 0, 638, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 699, 0, 0, 514, 0, 0, 697,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 3045,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 668, 669, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 706, 698,
	650, 710, 652, 707, 708, 647, 648, 651, 709, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 701, 637,
	636, 0, 643, 644, 0, 658, 659, 661, 665, 666,
	667, 670, 671, 672, 680, 682, 683, 681, 684, 685,
	686, 689, 690, 691, 692, 687, 688, 693, 653, 657,
	654, 655, 656, 711, 712, 713, 714, 635, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 634,
	0, 0, 0, 254, 639, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	646, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 87,
	0, 1365, 188, 189, 190, 720, 727, 728, 729, 730,
	731, 721, 723, 0, 0, 226, 722, 233, 662, 664,
	663, 673, 674, 675, 676, 677, 678, 679, 660, 725,
	732, 733, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 617, 631, 0, 645, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 629, 0, 0,
	0, 0, 700, 0, 630, 0, 0, 638, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 699, 0, 0, 514, 0,
	0, 697, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 668,
	669, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	706, 698, 650, 710, 652, 707, 708, 647, 648, 651,
	709, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	701, 637, 636, 0, 643, 644, 0, 658, 659, 661,
	665, 666, 667, 670, 671, 672, 680, 682, 683, 681,
	684, 685, 686, 689, 690, 691, 692, 687, 688, 693,
	653, 657, 654, 655, 656, 711, 712, 713, 714, 635,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 634, 0, 0, 0, 254, 639, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 646, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 87, 0, 0, 188, 189, 190, 720, 727, 728,
	729, 730, 731, 721, 723, 0, 0, 226, 722, 233,
	662, 664, 663, 673, 674, 675, 676, 677, 678, 679,
	660, 725, 732, 733, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 617, 631, 0, 645, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 629,
	815, 0, 0, 0, 700, 0, 630, 0, 0, 638,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 699, 0, 0,
	514, 0, 0, 697, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 668, 669, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 706, 698, 650, 710, 652, 707, 708, 647,
	648, 651, 709, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 701, 637, 636, 0, 643, 644, 0, 658,
	659, 661, 665, 666, 667, 670, 671, 672, 680, 682,
	683, 681, 684, 685, 686, 689, 690, 691, 692, 687,
	688, 693, 653, 657, 654, 655, 656, 711, 712, 713,
	714, 635, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 634, 0, 0, 0, 254, 639, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 646, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 87, 0, 0, 188, 189, 190, 720,
	727, 728, 729, 730, 731, 721, 723, 0, 0, 226,
	722, 233, 662, 664, 663, 673, 674, 675, 676, 677,
	678, 679, 660, 725, 732, 733, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 617, 631, 0,
	645, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 629, 2087, 0, 0, 0, 700, 0, 630, 0,
	0, 638, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 699,
	0, 0, 514, 0, 0, 697, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 668, 669, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 706, 698, 650, 710, 652, 707,
	708, 647, 648, 651, 709, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 701, 637, 636, 0, 643, 644,
	0, 658, 659, 661, 665, 666, 667, 670, 671, 672,
	680, 682, 683, 681, 684, 685, 686, 689, 690, 691,
	692, 687, 688, 693, 653, 657, 654, 655, 656, 711,
	712, 713, 714, 635, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 634, 0, 0, 0, 254,
	639, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 646, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 87, 0, 0, 188, 189,
	190, 720, 727, 728, 729, 730, 731, 721, 723, 0,
	0, 226, 722, 233, 662, 664, 663, 673, 674, 675,
	676, 677, 678, 679, 660, 725, 732, 733, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 617,
	631, 0, 645, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 0, 0, 0, 0, 700, 0,
	630, 0, 0, 638, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 699, 0, 0, 514, 0, 0, 697, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 668, 669, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 706, 698, 650, 710,
	652, 707, 708, 647, 648, 651, 709, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 701, 637, 636, 0,
	643, 644, 0, 658, 659, 661, 665, 666, 667, 670,
	671, 672, 680, 682, 683, 681, 684, 685, 686, 689,
	690, 691, 692, 687, 688, 693, 653, 657, 654, 655,
	656, 711, 712, 713, 714, 635, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 634, 0, 0,
	0, 254, 639, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 646, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 87, 0, 0,
	188, 189, 190, 720, 727, 728, 729, 730, 731, 721,
	723, 0, 0, 226, 722, 233, 662, 664, 663, 673,
	674, 675, 676, 677, 678, 679, 660, 725, 732, 733,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 0, 645, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 0, 0, 0, 0,
	700, 0, 630, 0, 0, 638, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 699, 0, 0, 514, 0, 0, 697,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 668, 669, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 706, 698,
	650, 710, 652, 707, 708, 647, 648, 651, 709, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 701, 637,
	636, 0, 643, 644, 0, 658, 659, 661, 665, 666,
	667, 670, 671, 672, 680, 682, 683, 681, 684, 685,
	686, 689, 690, 691, 692, 687, 688, 693, 653, 657,
	654, 655, 656, 711, 712, 713, 714, 635, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 727, 728, 0, 0,
	0, 0, 1713, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 1033,
	514, 0, 0, 0, 0, 0, 1030, 1031, 337, 991,
	306, 192, 213, 1024, 1028, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 0, 347, 474, 475, 292, 366, 0, 0, 0,
	78, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 338, 251, 0,
	0, 399, 0, 197, 0, 447, 238, 348, 345, 481,
	266, 257, 253, 237, 293, 355, 397, 467, 391, 0,
	342, 0, 0, 457, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 235, 301, 196, 382, 458, 270, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 249, 297, 256, 248, 478, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 371, 241, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 213,
	0, 0, 381, 424, 434, 0, 0, 0, 239, 0,
	432, 395, 497, 221, 268, 421, 401, 430, 408, 271,
	0, 0, 431, 343, 483, 415, 494, 515, 516, 247,
	375, 505, 471, 511, 529, 214, 244, 389, 464, 500,
	454, 367, 479, 480, 305, 453, 278, 195, 341, 521,
	212, 440, 230, 219, 485, 503, 273, 419, 204, 466,
	492, 227, 444, 0, 0, 531, 206, 490, 463, 363,
	302, 303, 205, 0, 420, 252, 276, 242, 384, 487,
	488, 240, 532, 216, 510, 208, 0, 509, 377, 482,
	491, 364, 353, 207, 489, 362, 352, 308, 327, 328,
	264, 287, 413, 346, 414, 288, 373, 372, 374, 199,
	501, 0, 200, 0, 459, 502, 533, 222, 223, 225,
	0, 263, 267, 275, 277, 283, 284, 291, 339, 388,
	412, 410, 416, 0, 477, 495, 506, 513, 519, 520,
	522, 523, 524, 525, 526, 528, 527, 376, 290, 455,
	307, 344, 0, 0, 394, 433, 228, 499, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 354,
	446, 496, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 236,
	202, 360, 368, 476, 425, 426, 427, 428, 0, 191,
	209, 340, 86, 417, 272, 530, 508, 504, 198, 211,
	0, 246, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 210, 220, 224, 231,
	245, 260, 262, 269, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 378, 379, 380, 383,
	386, 387, 390, 392, 393, 396, 400, 404, 405, 406,
	407, 409, 411, 418, 423, 435, 436, 437, 438, 439,
	442, 443, 448, 449, 450, 451, 452, 460, 461, 465,
	484, 486, 498, 512, 517, 441, 282, 493, 518, 0,
	349, 0, 0, 351, 265, 285, 296, 0, 507, 462,
	215, 429, 274, 203, 234, 218, 243, 258, 261, 300,
	361, 369, 398, 403, 279, 255, 232, 422, 229, 445,
	468, 469, 470, 472, 365, 250, 402, 0, 1384, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 1386,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 338,
	251, 0, 0, 399, 0, 197, 0, 447, 238, 348,
	345, 481, 266, 257, 253, 237, 293, 355, 397, 467,
	391, 0, 342, 0, 0, 457, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 235, 301, 196, 382, 458, 270, 0,
	0, 0, 0, 188, 189, 190, 0, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 249, 297, 256, 248, 478, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	1206, 0, 1207, 1208, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 371, 241, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 213, 0, 0, 381, 424, 434, 0, 0, 0,
	239, 0, 432, 395, 497, 221, 268, 421, 401, 430,
	408, 271, 0, 0, 431, 343, 483, 415, 494, 515,
	516, 247, 375, 505, 471, 511, 529, 214, 244, 389,
	464, 500, 454, 367, 479, 480, 305, 453, 278, 195,
	341, 521, 212, 440, 230, 219, 485, 503, 273, 419,
	204, 466, 492, 227, 444, 0, 0, 531, 206, 490,
	463, 363, 302, 303, 205, 0, 420, 252, 276, 242,
	384, 487, 488, 240, 532, 216, 510, 208, 0, 509,
	377, 482, 491, 364, 353, 207, 489, 362, 352, 308,
	327, 328, 264, 287, 413, 346, 414, 288, 373, 372,
	374, 199, 501, 0, 200, 0, 459, 502, 533, 222,
	223, 225, 0, 263, 267, 275, 277, 283, 284, 291,
	339, 388, 412, 410, 416, 0, 477, 495, 506, 513,
	519, 520, 522, 523, 524, 525, 526, 528, 527, 376,
	290, 455, 307, 344, 0, 0, 394, 433, 228, 499,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 354, 446, 496, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 236, 202, 360, 368, 476, 425, 426, 427, 428,
	0, 191, 209, 340, 0, 417, 272, 530, 508, 504,
	198, 211, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 210, 220,
	224, 231, 245, 260, 262, 269, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 378, 379,
	380, 383, 386, 387, 390, 392, 393, 396, 400, 404,
	405, 406, 407, 409, 411, 418, 423, 435, 436, 437,
	438, 439, 442, 443, 448, 449, 450, 451, 452, 460,
	461, 465, 484, 486, 498, 512, 517, 441, 282, 493,
	518, 0, 349, 0, 0, 351, 265, 285, 296, 0,
	507, 462, 215, 429, 274, 203, 234, 218, 243, 258,
	261, 300, 361, 369, 398, 403, 279, 255, 232, 422,
	229, 445, 468, 469, 470, 472, 365, 250, 402, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 338, 251, 0, 0, 399, 0, 197, 0, 447,
	238, 348, 345, 481, 266, 257, 253, 237, 293, 355,
	397, 467, 391, 0, 342, 0, 0, 457, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 235, 301, 196, 382, 458,
	270, 0, 0, 0, 0, 188, 189, 190, 1327, 1330,
	0, 0, 0, 0, 1326, 1329, 0, 0, 226, 1325,
	233, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 249, 297, 256, 248,
	478, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 371, 241, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 213, 0, 0, 381, 424, 434, 0,
	0, 0, 239, 0, 432, 395, 497, 221, 268, 421,
	401, 430, 408, 271, 0, 0, 431, 343, 483, 415,
	494, 515, 516, 247, 375, 505, 471, 511, 529, 214,
	244, 389, 464, 500, 454, 367, 479, 480, 305, 453,
	278, 195, 341, 521, 212, 440, 230, 219, 485, 503,
	273, 419, 204, 466, 492, 227, 444, 0, 0, 531,
	206, 490, 463, 363, 302, 303, 205, 0, 420, 252,
	276, 242, 384, 487, 488, 240, 532, 216, 510, 208,
	0, 509, 377, 482, 491, 364, 353, 207, 489, 362,
	352, 308, 327, 328, 264, 287, 413, 346, 414, 288,
	373, 372, 374, 199, 501, 0, 200, 0, 459, 502,
	533, 222, 223, 225, 0, 263, 267, 275, 277, 283,
	284, 291, 339, 388, 412, 410, 416, 0, 477, 495,
	506, 513, 519, 520, 522, 523, 524, 525, 526, 528,
	527, 376, 290, 455, 307, 344, 0, 0, 394, 433,
	228, 499, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 354, 446, 496, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 236, 202, 360, 368, 476, 425, 426,
	427, 428, 0, 191, 209, 340, 0, 417, 272, 530,
	508, 504, 198, 211, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	210, 220, 224, 231, 245, 260, 262, 269, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	378, 379, 380, 383, 386, 387, 390, 392, 393, 396,
	400, 404, 405, 406, 407, 409, 411, 418, 423, 435,
	436, 437, 438, 439, 442, 443, 448, 449, 450, 451,
	452, 460, 461, 465, 484, 486, 498, 512, 517, 441,
	282, 493, 518, 0, 349, 0, 0, 351, 265, 285,
	296, 0, 507, 462, 215, 429, 274, 203, 234, 218,
	243, 258, 261, 300, 361, 369, 398, 403, 279, 255,
	232, 422, 229, 445, 468, 469, 470, 472, 365, 250,
	402, 0, 0, 347, 474, 475, 292, 366, 0, 0,
	0, 78, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 87,
	0, 1365, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 86, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 1833, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	1566, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 1831, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 991, 306, 192, 213, 989, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 1833, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 1365, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 2970, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	2185, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2170, 0, 0, 0, 2171, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 1409, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 3072, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 2970, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 1664, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 1534, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 1532, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 1530, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 1528, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	1526, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 1522, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 1520, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 1518, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 1493, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 1393, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 378, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 608, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 366,
	347, 474, 475, 292, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	338, 251, 0, 0, 399, 0, 197, 0, 447, 238,
	348, 345, 481, 266, 257, 253, 237, 293, 355, 397,
	467, 391, 0, 342, 0, 0, 457, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 235, 301, 196, 382, 458, 270,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 249, 297, 256, 248, 478,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 371, 241, 0, 0, 555, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 213, 0, 0, 381, 424, 434, 0, 0,
	0, 239, 0, 432, 395, 497, 221, 268, 421, 401,
	430, 408, 271, 0, 0, 431, 343, 483, 415, 494,
	515, 516, 247, 375, 505, 471, 511, 529, 214, 244,
	389, 464, 500, 454, 367, 479, 480, 305, 453, 278,
	195, 341, 521, 212, 440, 230, 219, 485, 503, 273,
	419, 204, 466, 492, 227, 444, 0, 0, 531, 206,
	490, 463, 363, 302, 303, 205, 0, 420, 252, 276,
	242, 384, 487, 488, 240, 532, 216, 510, 208, 0,
	509, 377, 482, 491, 364, 353, 207, 489, 362, 352,
	308, 327, 328, 264, 287, 413, 346, 414, 288, 373,
	372, 374, 199, 501, 0, 200, 0, 459, 502, 533,
	222, 223, 225, 0, 263, 267, 275, 277, 283, 284,
	291, 339, 388, 412, 410, 416, 0, 477, 495, 506,
	513, 519, 520, 522, 523, 524, 525, 526, 528, 527,
	376, 290, 455, 307, 344, 0, 0, 394, 433, 228,
	499, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 354, 446, 496, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 236, 202, 360, 368, 476, 425, 426, 427,
	428, 0, 191, 209, 340, 0, 417, 272, 530, 508,
	504, 198, 211, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 210,
	220, 224, 231, 245, 260, 262, 269, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 378,
	379, 380, 383, 386, 387, 390, 392, 393, 396, 400,
	404, 405, 406, 407, 409, 411, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 484, 486, 498, 512, 517, 441, 282,
	493, 518, 0, 349, 0, 0, 351, 265, 285, 296,
	0, 507, 462, 215, 429, 274, 203, 234, 218, 243,
	258, 261, 300, 361, 369, 398, 403, 279, 255, 232,
	422, 229, 445, 468, 469, 470, 472, 365, 250, 402,
	0, 366, 347, 474, 475, 292, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 338, 251, 0, 0, 399, 0, 197, 0,
	447, 238, 348, 345, 481, 266, 257, 253, 237, 293,
	355, 397, 467, 391, 0, 342, 0, 0, 457, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 235, 301, 196, 382,
	458, 270, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 249, 297, 256,
	248, 478, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 371, 241, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 213, 0, 0, 381, 424, 434,
	0, 0, 0, 239, 0, 432, 395, 497, 221, 268,
	421, 401, 430, 408, 271, 0, 0, 431, 343, 483,
	415, 494, 515, 516, 247, 375, 505, 471, 511, 529,
	214, 244, 389, 464, 500, 454, 367, 479, 480, 305,
	453, 278, 195, 341, 521, 212, 440, 230, 219, 485,
	503, 273, 419, 204, 466, 492, 227, 444, 0, 0,
	531, 206, 490, 463, 363, 302, 303, 205, 0, 420,
	252, 276, 242, 384, 487, 488, 240, 532, 216, 510,
	208, 0, 509, 377, 482, 491, 364, 353, 207, 489,
	362, 352, 308, 327, 328, 264, 287, 413, 346, 414,
	288, 373, 372, 374, 199, 501, 0, 200, 0, 459,
	502, 533, 222, 223, 225, 0, 263, 267, 275, 277,
	283, 284, 291, 339, 388, 412, 410, 416, 0, 477,
	495, 506, 513, 519, 520, 522, 523, 524, 525, 526,
	528, 527, 376, 290, 455, 307, 344, 0, 0, 394,
	433, 228, 499, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 354, 446, 496, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 236, 202, 360, 368, 476, 425,
	426, 427, 428, 0, 191, 209, 340, 0, 417, 272,
	530, 508, 504, 198, 211, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 210, 220, 224, 231, 245, 260, 262, 269, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 3077, 379, 380, 383, 386, 387, 390, 392, 393,
	396, 400, 404, 405, 406, 407, 409, 411, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 484, 486, 498, 512, 517,
	441, 282, 493, 518, 0, 349, 0, 0, 351, 265,
	285, 296, 0, 507, 462, 215, 429, 274, 203, 234,
	218, 243, 258, 261, 300, 361, 369, 398, 403, 279,
	255, 232, 422, 229, 445, 468, 469, 470, 472, 365,
	250, 402, 0, 366, 347, 474, 475, 292, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 338, 251, 0, 0, 399, 0,
	197, 0, 447, 238, 348, 345, 481, 266, 257, 253,
	237, 293, 355, 397, 467, 391, 0, 342, 0, 0,
	457, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 235, 301,
	196, 382, 458, 270, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 249,
	297, 256, 248, 478, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 371, 241,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 213, 0, 0, 381,
	424, 434, 0, 0, 0, 239, 0, 432, 395, 497,
	221, 268, 421, 401, 430, 408, 271, 0, 0, 431,
	343, 483, 415, 494, 515, 516, 247, 375, 505, 471,
	511, 529, 214, 244, 389, 464, 500, 454, 367, 479,
	480, 305, 453, 278, 195, 341, 521, 212, 440, 230,
	219, 485, 503, 273, 419, 204, 466, 492, 227, 444,
	0, 0, 531, 206, 490, 463, 363, 302, 303, 205,
	0, 420, 252, 276, 242, 384, 487, 488, 240, 532,
	216, 510, 208, 0, 509, 377, 482, 491, 364, 353,
	207, 489, 362, 352, 308, 327, 328, 264, 287, 413,
	346, 414, 288, 373, 372, 374, 199, 501, 0, 200,
	0, 459, 502, 533, 222, 223, 225, 0, 263, 267,
	275, 277, 283, 284, 291, 339, 388, 412, 410, 416,
	0, 477, 495, 506, 513, 519, 520, 522, 523, 524,
	525, 526, 528, 527, 376, 290, 455, 307, 344, 0,
	0, 394, 433, 228, 499, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 354, 446, 496, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 236, 202, 360, 368,
	476, 425, 426, 427, 428, 0, 191, 209, 340, 0,
	417, 272, 530, 508, 504, 198, 211, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 210, 220, 224, 231, 245, 260, 262,
	269, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 378, 379, 380, 383, 386, 387, 390,
	392, 393, 396, 400, 404, 405, 406, 407, 409, 411,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 484, 486, 498,
	512, 517, 441, 282, 493, 518, 0, 349, 0, 0,
	351, 265, 285, 296, 0, 507, 462, 215, 429, 274,
	203, 234, 218, 243, 258, 261, 300, 361, 369, 398,
	403, 279, 255, 232, 422, 229, 445, 468, 469, 470,
	472, 365, 250, 402, 0, 366, 347, 474, 475, 292,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 338, 251, 0, 0,
	399, 0, 197, 0, 447, 238, 348, 345, 481, 266,
	257, 253, 237, 293, 355, 397, 467, 391, 0, 342,
	0, 0, 457, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	235, 301, 196, 382, 458, 270, 0, 0, 0, 0,
	188, 2670, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 249, 297, 256, 248, 478, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	371, 241, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 213, 0,
	0, 381, 424, 434, 0, 0, 0, 239, 0, 432,
	395, 497, 221, 268, 421, 401, 430, 408, 271, 0,
	0, 431, 343, 483, 415, 494, 515, 516, 247, 375,
	505, 471, 511, 529, 214, 244, 389, 464, 500, 454,
	367, 479, 480, 305, 453, 278, 195, 341, 521, 212,
	440, 230, 219, 485, 503, 273, 419, 204, 466, 492,
	227, 444, 0, 0, 531, 206, 490, 463, 363, 302,
	303, 205, 0, 420, 252, 276, 242, 384, 487, 488,
	240, 532, 216, 510, 208, 0, 509, 377, 482, 491,
	364, 353, 207, 489, 362, 352, 308, 327, 328, 264,
	287, 413, 346, 414, 288, 373, 372, 374, 199, 501,
	0, 200, 0, 459, 502, 533, 222, 223, 225, 0,
	263, 267, 275, 277, 283, 284, 291, 339, 388, 412,
	410, 416, 0, 477, 495, 506, 513, 519, 520, 522,
	523, 524, 525, 526, 528, 527, 376, 290, 455, 307,
	344, 0, 0, 394, 433, 228, 499, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 354, 446,
	496, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 236, 202,
	360, 368, 476, 425, 426, 427, 428, 0, 191, 209,
	340, 0, 417, 272, 530, 508, 504, 198, 211, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 210, 220, 224, 231, 245,
	260, 262, 269, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 378, 379, 380, 383, 386,
	387, 390, 392, 393, 396, 400, 404, 405, 406, 407,
	409, 411, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 484,
	486, 498, 512, 517, 441, 282, 493, 518, 0, 349,
	0, 0, 351, 265, 285, 296, 0, 507, 462, 215,
	429, 274, 203, 234, 218, 243, 258, 261, 300, 361,
	369, 398, 403, 279, 255, 232, 422, 229, 445, 468,
	469, 470, 472, 365, 250, 402, 0, 366, 347, 474,
	475, 292, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 338, 251,
	0, 0, 399, 0, 197, 0, 447, 238, 348, 345,
	481, 266, 257, 253, 237, 293, 355, 397, 467, 391,
	0, 342, 0, 0, 457, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 235, 301, 196, 382, 458, 270, 0, 0,
	0, 0, 188, 2166, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 249, 297, 256, 248, 478, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 371, 241, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	213, 0, 0, 381, 424, 434, 0, 0, 0, 239,
	0, 432, 395, 497, 221, 268, 421, 401, 430, 408,
	271, 0, 0, 431, 343, 483, 415, 494, 515, 516,
	247, 375, 505, 471, 511, 529, 214, 244, 389, 464,
	500, 454, 367, 479, 480, 305, 453, 278, 195, 341,
	521, 212, 440, 230, 219, 485, 503, 273, 419, 204,
	466, 492, 227, 444, 0, 0, 531, 206, 490, 463,
	363, 302, 303, 205, 0, 420, 252, 276, 242, 384,
	487, 488, 240, 532, 216, 510, 208, 0, 509, 377,
	482, 491, 364, 353, 207, 489, 362, 352, 308, 327,
	328, 264, 287, 413, 346, 414, 288, 373, 372, 374,
	199, 501, 0, 200, 0, 459, 502, 533, 222, 223,
	225, 0, 263, 267, 275, 277, 283, 284, 291, 339,
	388, 412, 410, 416, 0, 477, 495, 506, 513, 519,
	520, 522, 523, 524, 525, 526, 528, 527, 376, 290,
	455, 307, 344, 0, 0, 394, 433, 228, 499, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	354, 446, 496, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	236, 202, 360, 368, 476, 425, 426, 427, 428, 0,
	191, 209, 340, 0, 417, 272, 530, 508, 504, 198,
	211, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 210, 220, 224,
	231, 245, 260, 262, 269, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 378, 379, 380,
	383, 386, 387, 390, 392, 393, 396, 400, 404, 405,
	406, 407, 409, 411, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 484, 486, 498, 512, 517, 441, 282, 493, 518,
	0, 349, 0, 0, 351, 265, 285, 296, 0, 507,
	462, 215, 429, 274, 203, 234, 218, 243, 258, 261,
	300, 361, 369, 398, 403, 279, 255, 232, 422, 229,
	445, 468, 469, 470, 472, 365, 250, 402, 0, 0,
	347, 474, 475, 292,
}

var yyPact = [...]int{
	5682, -1000, -418, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2005, 2042, -1000, -1000,
	-1000, -1000, 2197, -1000, 684, 1714, -1000, 1993, 4082, -1000,
	43219, 466, -1000, 41995, 456, 129, 43219, -1000, 151, -1000,
	142, 43219, 146, 41383, -1000, -1000, -294, 18729, 1923, 33,
	31, 43219, -1000, -1000, -1000, -1000, 2160, 1641, -1000, 333,
	-1000, -1000, -1000, -1000, -1000, -1000, 40771, -1000, -1000, -1000,
	2014, 2015, 2205, 595, 1937, -1000, 2084, 1641, -1000, 18729,
	2121, 2070, 17505, -1000, 17505, 388, -1000, -1000, 13211, -1000,
	-1000, 24859, 43219, 30979, 296, -1000, 1993, -1000, -1000, -1000,
	106, -1000, 298, 1555, -1000, 1553, -1000, 507, 726, 318,
	434, 431, 315, 314, 311, 310, 309, 305, 303, 302,
	332, -1000, 614, 614, -157, -158, 2744, 380, 379, 379,
	411, 1957, 1954, -1000, 610, -1000, 614, 614, 614, 299,
	614, 614, 614, 614, 268, 237, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 329, 1993, 215, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 43219, 162, 43219, -1000, 521, 43219, 748,
	748, 42, 748, 748, 748, 748, 171, 594, 30, -1000,
	170, 260, 154, 216, 759, 173, -1000, -1000, 209, 759,
	1214, -1000, 601, 131, -1000, 748, 748, -1000, 10743, 165,
	10743, 10743, -1000, 1970, -1000, -1000, -1000, -1000, 1220, -1000,
	406, -1000, -1000, -1000, -1000, 43219, 40159, 335, 641, -1000,
	-1000, -1000, 79, -1000, -1000, 1308, 988, 18729, 908, -1000,
	1578, 572, -1000, -1000, -1000, -1000, -1000, 501, 19341, 19341,
	19341, 19341, -1000, -1000, 1582, 1582, 1582, 1582, 19341, 1582,
	19341, 1582, 1582, 1582, 1582, 18729, 1582, 1582, 1582, -1000,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, -1000, 1582, 517, 1582, 1582, 1582,
	1582, 1582, -1000, -1000, -1000, -1000, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22406, -1000, 15669, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 43219, -1000, 1582,
	169, 43219, 43219, 307, 2084, 1641, -1000, 2160, 2170, 333,
	-1000, 2558, 1315, 1593, 1126, 1641, 1516, 43219, -1000, 1588,
	-1000, -1000, -1000, 1851, 1107, 1213, -1000, -1000, -1000, -1000,
	1826, 18729, -1000, -1000, 2186, -1000, 21794, 514, 809, 2185,
	39547, -1000, 388, 388, 1551, 12594, 1, -1000, -1000, -1000,
	640, 28531, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1970, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1559, 43219, -1000, -1000, 3723, 1192,
	-1000, 1710, -1000, 1483, -1000, 1678, 18729, 1727, 453, 1192,
	443, 439, 419, -1000, -59, -1000, -1000, -1000, -1000, -1000,
	-1000, 614, 614, 614, -1000, 301, 2118, 4082, 4926, -1000,
	-1000, -1000, 38935, 1709, 1192, -1000, 1707, -1000, 702, 495,
	496, 496, 1192, -1000, -1000, 43219, 1192, 697, 695, 1192,
	1192, 43219, 43219, -1000, 38323, -1000, 37711, 37099, 1039, 43219,
	36487, 35875, 35263, 34651, 34039, -1000, 1837, -1000, 1771, -1000,
	-1000, -1000, 43219, 1192, 1192, 43219, 43219, 304, -1000, -1000,
	43219, 1192, -1000, -1000, 1035, 1033, 1026, 614, 614, 1007,
	1212, 1205, 1195, 614, 614, 1004, 1185, 29755, 1183, 254,
	998, 997, 996, 1053, 1180, 201, 1176, 971, 932, 991,
	43219, 1705, 43219, -1000, 200, 738, 369, 633, 1993, 1913,
	1531, 403, 451, 1192, 383, 383, 43219, -1000, 11360, -1000,
	-1000, 1173, 18729, -1000, 760, 759, 759, -1000, -1000, -1000,
	-1000, -1000, -1000, 748, 43219, 760, -1000, -1000, -1000, 759,
	748, 43219, 748, 748, 748, 748, 759, 759, 759, 748,
	43219, 43219, 43219, 43219, 43219, 43219, 43219, 43219, 43219, 10743,
	601, 748, -305, -1000, 1172, -1000, 1822, -1000, -1000, -1000,
	-1000, -1000, -1000, 10743, 10743, -1000, -1000, -1000, -1000, 145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -43,
	1523, 33427, -1000, -314, -315, -316, -317, -1000, -1000, -1000,
	-318, -319, -1000, -1000, -1000, 18729, 18729, 18729, 18729, -183,
	-1000, 978, 19341, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	936, 766, 19341, 19341, 19341, 19341, 19341, 19341, 19341, 19341,
	19341, 19341, 19341, 19341, 19341, 19341, 19341, -1000, -1000, 26695,
	6065, 6065, 572, 572, 572, 572, -1000, 17505, 18729, 18729,
	572, -1000, 1192, 32815, 17505, 17505, 18729, 1985, 647, 988,
	43219, -1000, 1126, -1000, -1000, -1000, 940, -1000, 1985, 1985,
	1985, 1985, 1985, 43219, 43219, 522, 18729, 18729, 18729, 18729,
	18729, 18729, 14440, 18729, 18729, 18729, 18729, 18729, 18729, 18729,
	18729, 18729, 18729, 18729, 18729, 18729, 18729, 18729, 18729, 18729,
	18729, 18729, 18729, 18729, 18729, 18729, 18729, 18729, 18729, 13828,
	11360, 17505, 17505, 17505, 17505, 17505, -1000, -1000, -1000, -1000,
	-1000, 18729, 18729, 18729, 18729, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 506, 1524, 1431, 1333, -1000, 1518, -1000, -142,
	24247, 18729, 1169, 2179, 1754, 43219, -1000, -1000, -1000, 2084,
	-1000, 2084, 1524, 2217, 1860, 17505, -1000, -1000, 2217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1335, -1000, 43219,
	1516, 2040, 43219, 1849, 1168, 312, -1000, 18729, 18729, 1514,
	-1000, 993, 43219, -1000, -183, -1000, 32203, -1000, -1000, 10126,
	-1000, 43219, 297, 43219, -1000, 23635, 31591, 11977, 1, -1000,
	11977, 1471, -1000, 6, -16, 15052, 541, -1000, -1000, -1000,
	2744, 20565, 1261, 541, 76, -1000, -1000, -1000, 1678, -1000,
	1678, 1678, 1678, 1678, 312, 312, 312, 312, -1000, -1000,
	-1000, -1000, -1000, 1704, 1703, -1000, 1678, 1678, 1678, 1678,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1698, 1698, 1698,
	1686, 1686, 360, -1000, 18729, 281, 30979, 2019, 974, 1242,
	200, 385, 1736, 1192, 1192, 1192, 385, -1000, 1203, 1122,
	1104, -1000, -409, 1508, -1000, -1000, 2114, -1000, -1000, 686,
	744, 742, 733, 43219, 176, 291, -1000, 356, -1000, 30979,
	1192, 691, 496, 1192, -1000, 1192, -1000, -1000, -1000, -1000,
	-1000, 1192, -1000, -1000, 1505, -1000, 1512, 785, 714, 782,
	688, 1505, -1000, -1000, -124, 1505, -1000, 1505, -1000, 1505,
	-1000, 1505, -1000, 1505, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 680, 178, -239, 43219, 176, 26695, -1000,
	398, -1000, -1000, -1000, 26695, 26695, -1000, -1000, -1000, -1000,
	1154, 1149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -395, 43219, -1000, 182, 632, 271, 319, 256, 43219,
	175, 2072, 2058, 2056, 194, 234, 43219, 43219, 383, 1793,
	43219, 2028, 43219, -1000, -1000, -1000, -1000, -1000, 988, 43219,
	-1000, -1000, 748, 748, -1000, -1000, 43219, 748, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 748, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 43219, -1000, -1000, -1000, -1000, 43219, -1000, -1000,
	-1000, -1000, -1000, 109, 3, 331, -1000, -1000, -1000, -1000,
	-1000, 2079, -1000, 988, 716, 657, -1000, 1582, -1000, -1000,
	867, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 936, 19341,
	19341, 19341, 1655, 424, 1532, 913, 943, 841, 841, 849,
	849, 580, 580, 580, 580, 580, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1148, -1000, 1440, -1000, 1349, 1627,
	1126, -1000, 1440, 1440, 1165, 17505, -1000, -1000, 678, -1000,
	18729, 1126, -1000, -1000, 1126, 1126, 18117, 18729, 18729, 18729,
	18729, 1503, 1501, 2178, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 860, 1242, 1242, 1242, 1242,
	1242, 18729, 1631, -1000, -1000, -1000, 2524, 2492, 1126, 1308,
	1126, 1490, -1000, 2479, 1242, 2468, 2459, 2424, 1803, 2388,
	2363, 2356, 1242, 1242, 1242, 1795, 2343, 2338, 2317, 2285,
	2274, 2252, 2242, 2235, 2166, 1242, 1126, 17505, 17505, 1485,
	1582, 505, -1000, 1440, 1126, 1126, 1440, 1440, 2132, 2124,
	2059, 2009, 11360, 1126, -1000, 43219, -1000, -297, -1000, -19,
	562, 1582, -1000, 29755, 1126, -1000, 5671, -1000, 44443, -1000,
	-1000, -1000, -1000, -1000, 27919, 1577, 2217, -1000, -1000, 1582,
	1481, -1000, -1000, 312, 58, 27307, 569, 569, 91, 988,
	988, 18729, -1000, -1000, -1000, -1000, -1000, -1000, 500, 2148,
	347, 1582, -1000, 1635, 2392, -1000, -1000, -1000, 2036, 21182,
	-1000, 1582, 1582, 43219, 1575, 1546, -1000, 498, -1000, 1471,
	1, -8, -1000, -1000, -1000, -1000, 988, -1000, 1056, 300,
	3259, -1000, 368, -1000, -1000, -1000, -1000, 1940, 59, -1000,
	-1000, -1000, 219, 312, -1000, -1000, -1000, -1000, -1000, -1000,
	1142, 1142, -1000, -1000, -1000, -1000, -1000, 973, -1000, -1000,
	-1000, 954, -1000, -1000, 1964, 1768, 281, -1000, -1000, 614,
	1138, -1000, -1000, 1943, 614, 614, 43219, -1000, -1000, 1259,
	2019, 182, 43219, 631, 1791, -1000, 1736, 1736, 1736, 43219,
	-1000, -1000, -1000, -1000, -1000, -1000, -393, 68, 341, -1000,
	-1000, -1000, 4511, 43219, 1464, -1000, 174, -1000, 1257, -1000,
	43219, -1000, 1447, 1697, 1192, 1192, -1000, -1000, -1000, 43219,
	1582, -1000, -1000, -1000, -1000, 445, 1984, 262, -1000, -1000,
	-200, -1000, -1000, 176, 174, 541, 1192, -1000, -1000, -1000,
	-1000, -1000, -398, 1445, 416, 187, 295, 43219, 43219, 43219,
	43219, 43219, 487, -1000, -1000, -1000, -1000, 163, -1000, -1000,
	163, -1000, -1000, -1000, -1000, 221, 396, -1000, 43219, 43219,
	598, -1000, -1000, -1000, 759, -1000, -1000, 759, -1000, -1000,
	-1000, -1000, -1000, 1981, 43219, -9, -353, -1000, -347, 18729,
	-1000, -1000, -1000, -1000, 1589, 395, 1532, 19341, 19341, 17505,
	-117, 286, 286, 26695, -1000, -1000, -1000, 18729, 18729, 1443,
	611, -1000, 18729, 1025, -1000, -1000, -1000, 1126, 1333, 1333,
	1333, 1333, 1333, 18729, 18729, 18729, 1126, 267, -1000, -1000,
	-1000, -1000, -1000, 2169, -1000, 18729, 18729, 18729, -1000, -1000,
	18729, 18729, -1000, 18729, 18729, 19953, 1126, 19953, 18729, 18729,
	19953, -1000, -1000, -1000, -1000, 19953, 18729, 18729, 18729, 18729,
	18729, 18729, 18729, 18729, 18729, -1000, -1000, 1440, 1440, 17505,
	11360, -1000, -1000, -1000, -1000, -1000, 18729, 18729, 18729, 18729,
	-1000, -1000, -1000, -1000, -1000, 562, -1000, 496, 496, 496,
	43219, -1000, -1000, -1000, -1000, -1000, -1000, 1449, 2069, -1000,
	1891, 1873, 2165, 2148, -1000, 23635, 2217, -1000, -1000, 43219,
	-289, -1000, 1915, 1888, 569, 569, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9509, 2084, 18729, 1790, 43219, 1582, -1000,
	23023, 43219, 43219, 23635, 23635, 23635, 23635, 23635, -1000, 1841,
	1823, -1000, 1815, 1808, 1819, 43219, -1000, 1428, 1126, 2170,
	21182, 333, 18729, 25471, 1461, 23635, -1000, -1000, 23635, 43219,
	8892, -1000, -1000, -10, -24, -1000, -1000, -1000, -1000, 2744,
	-1000, -1000, 2858, 2034, 1935, -1000, -1000, -1000, -1000, -1000,
	1415, -1000, 1390, 1412, 1385, 178, -1000, 1632, 1979, 614,
	614, -1000, 951, -1000, 1192, 1135, 1133, -1000, -1000, -1000,
	415, -1000, 2027, 43219, 1788, 1787, 1786, -1000, -406, 949,
	1696, 1598, 18729, 1689, 2110, 1376, 43219, -1000, -1000, 43219,
	-1000, 166, -1000, 281, 43219, -1000, -1000, -1000, 291, 43219,
	-1000, 7046, -1000, -1000, -1000, 174, -1000, -1000, -1000, -1000,
	-1000, -1000, 43219, 195, -1000, 1687, 1218, -1000, -1000, 1734,
	-1000, -1000, -1000, -1000, 167, 218, 159, 1129, 159, -1000,
	43219, 540, 1768, 43219, -1000, -1000, -1000, 748, 748, -1000,
	-1000, 1963, -1000, 1192, 1242, 19341, 19341, -1000, 572, -1000,
	1582, -163, 1678, 1678, -1000, 1678, 1686, -1000, 1678, 135,
	1678, 124, 1678, -1000, -1000, -163, 1126, 1770, 1094, -79,
	-1000, 988, 18729, -1000, -1000, -1000, -1000, -1000, -1000, 1969,
	1946, 1242, -1000, 1676, 1675, 18729, 1242, 1242, 1242, -1000,
	988, 1803, 1906, 1279, -1000, -1000, -1000, -1000, 1404, 1242,
	1872, -286, 1126, 1367, 1367, 1367, 1367, 1367, 1333, 1333,
	1333, 1333, -1000, -1000, 1126, -1000, 1764, 1699, 1867, 1458,
	-1000, 2075, 2075, 2075, 1301, 43831, 43219, -1000, -1000, -1000,
	-1000, 2148, 2133, 1378, -1000, -1000, 58, 394, -1000, 1911,
	1888, -1000, 2107, 1907, 2104, -1000, -1000, -1000, -1000, -1000,
	988, -1000, 1998, 1329, -1000, 627, 1292, -1000, -1000, 16893,
	1303, 1864, 497, 1301, 1399, 2392, 1733, 1784, 2000, -1000,
	-1000, -1000, -1000, 1807, -1000, 1804, -1000, -1000, 1588, -1000,
	-1000, 1431, 1126, 1839, 297, 23635, 1362, 1362, -1000, 493,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 763, 6497, 2202,
	-1000, 1124, -1000, 1050, 191, 939, -1000, -1000, 614, 614,
	-1000, 689, 682, -1000, 43219, 1643, -1000, 312, 1123, 312,
	906, -1000, 899, -1000, -1000, -1000, -1000, 1745, 1817, -1000,
	-1000, -1000, -1000, 43219, -1000, -1000, 43219, 43219, 43219, 1626,
	2100, -1000, 18729, 1625, 621, 1861, 43219, 43219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 405,
	614, -365, 232, 224, 614, 614, 614, -407, -1000, -1000,
	1297, 1288, -1000, -152, -1000, 18729, -1000, -1000, -1000, 935,
	935, -1000, 1588, -1000, -1000, -1000, 1249, -1000, -1000, -131,
	43219, 43219, 43219, 43219, -1000, 929, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 572, 19341,
	1126, -1000, -1000, 312, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1126, -1000, 18729, -1000, 18729, -1000, 2084, 1114, 988,
	18729, 18729, -1000, 896, 883, 1242, -1000, -1000, -1000, 1126,
	19953, -1000, 19953, -1000, 18729, 226, 286, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18729,
	-1000, 18729, 18729, -1000, 18729, 1582, 1922, 1582, 1582, 25471,
	-1000, -1000, 2133, 2136, 2097, 1892, 1900, 1900, 1911, -1000,
	2094, 2093, -1000, 1110, 2092, 1108, 666, -1000, 43219, 18729,
	1582, -1000, 330, 43219, 1582, 43219, -1000, 2125, -1000, -1000,
	18729, 1622, -1000, 18729, -1000, -1000, -1000, -1000, -1000, -1000,
	6065, 2148, 1362, -1000, -1000, 588, -1000, 18729, -1000, -1000,
	-1000, 5097, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1103, 1098, -1000, -1000, 1594, 18729, -1000, -1000, -1000, 1243,
	1231, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1588,
	-1000, -1000, -1000, -1000, 291, -402, 1571, 43219, 873, -1000,
	1284, 1376, 277, 1582, 1090, 614, 614, 614, 844, 837,
	29755, 1281, -1000, 43219, 348, -1000, 291, -1000, -159, -160,
	1242, -1000, -1000, 2033, -1000, -1000, 11360, -1000, -1000, 1586,
	1735, -1000, -1000, -1000, 207, -1000, -1000, -1000, 1242, 1242,
	1126, -1000, 1242, 1242, 1170, 1137, -1000, -1000, 1279, -1000,
	1354, -1000, 226, 1126, 1783, -1000, -1000, 6065, -1000, 1330,
	1242, 1321, 1312, 26083, -1000, 2090, 2087, 30367, 30367, 562,
	2136, -1000, 18729, 18729, 1897, 857, -1000, -1000, -1000, -1000,
	1078, 1074, -1000, 1073, -1000, 2201, -1000, 988, -1000, 1582,
	-1000, 484, 1292, -1000, 2084, 988, 43219, 988, 50, 2125,
	-1000, 1242, -1000, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, -1000, -1000, 43219, 1478, -1000, -1000,
	2032, 1274, 62, -1000, 1272, -1000, -1000, 465, -1000, 18729,
	-1000, 29755, 1069, 869, -1000, -1000, -1000, -1000, -407, -1000,
	-1000, -1000, -1000, -1000, -1000, 333, 1369, -1000, 612, 43219,
	43219, 1126, 288, -144, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18729, -1000, 1126, 1774, -1000, -248, -1000,
	-1000, 18729, -1000, -1000, 18729, -1000, 18729, 1255, -1000, -1000,
	-1000, -1000, -1000, 1255, 1255, -1000, -1000, 988, 1308, -1000,
	798, -1000, -1000, -1000, -1000, -1000, 43219, 1292, 43219, -1000,
	1252, 1126, 1582, 2084, -1000, 1240, -1000, 333, -1000, 1565,
	1598, -1000, -1000, -1000, 16281, -1000, -1000, -1000, -1000, -1000,
	186, -128, 11360, 8275, 1236, -1000, -1000, 1843, -122, -147,
	1803, -1000, -333, -1000, -1000, 1268, 1161, 1132, 29143, -1000,
	-1000, -1000, -1000, -1000, 1267, -1000, -1000, 25471, 42607, -1000,
	-113, 214, -128, 18729, 1316, 1126, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -3, -1000, -1000, -1000, -1000, -1000,
	1734, -1000, 1830, -1000, 1126, -1000, 18729, -1000, 18729, -1000,
	18729, -1000, -1000, -1000, 1230, -1000, 5747, -230, 1766, -1000,
	-73, -1000, -1000, -1000, 741, 843, -1000, -1000, -1000, -1000,
	-1000, -1000, 1382, 43219, -1000, 358, -1000, -1000, -131, -135,
	-1000, 1121, 1085, 1242, -1000, 42607, -224, 541, 6065, -1000,
	1756, 1599, 2156, -1000, -1000, -1000, -1000, -1000, -1000, -415,
	1224, 197, -1000, -145, -1000, 18729, -1000, 18729, -1000, -1000,
	-1000, 2024, 50, -1000, 2200, -1000, 2190, 623, 623, -1000,
	836, -415, -1000, -150, 1242, 1242, -237, -1000, -1000, -1000,
	-1000, -1000, 355, 853, -1000, -1000, -1000, -1000, -1000, -1000,
	6065, -1000, -1000, -1000, 213, 213, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2674, 2673, 23, 6, 39, 37, 2671, 75, 115,
	197, 66, 193, 119, 2669, 2668, 2667, 2666, 2661, 2658,
	2657, 229, 227, 225, 2654, 2653, 2651, 2649, 2646, 2645,
	2644, 2643, 2642, 2641, 233, 170, 190, 2640, 2639, 2638,
	125, 186, 96, 98, 188, 2637, 2636, 84, 2635, 2634,
	2632, 182, 181, 178, 752, 2629, 180, 128, 45, 2627,
	2626, 2624, 2620, 2619, 2616, 2614, 2613, 2612, 2610, 2609,
	2608, 2601, 2600, 2599, 2589, 2585, 198, 2584, 2580, 16,
	2578, 90, 2577, 2575, 2569, 2568, 136, 2565, 2564, 2561,
	26, 2559, 2558, 2557, 2545, 2544, 2543, 2542, 150, 2536,
	2535, 2533, 174, 192, 2531, 2530, 309, 126, 121, 2525,
	2523, 124, 191, 2522, 123, 2519, 2516, 2514, 159, 2513,
	2298, 2510, 74, 77, 2509, 201, 97, 73, 67, 38,
	3, 2508, 2503, 68, 89, 2500, 2498, 106, 88, 2497,
	111, 101, 2493, 2490, 14, 8, 2489, 1, 4, 2,
	85, 2488, 2487, 132, 2480, 2473, 2471, 104, 2470, 2469,
	4525, 2468, 103, 143, 116, 83, 2467, 33, 53, 2466,
	2457, 2454, 2452, 2451, 48, 2446, 2441, 2437, 152, 40,
	172, 46, 35, 52, 144, 2436, 34, 94, 2434, 149,
	148, 2433, 58, 28, 42, 2429, 30, 142, 141, 63,
	118, 145, 2419, 2418, 49, 80, 2414, 2409, 2408, 2407,
	171, 2406, 2405, 79, 2402, 65, 2399, 209, 2396, 55,
	2395, 50, 41, 2394, 71, 133, 78, 32, 2393, 161,
	2385, 59, 169, 139, 164, 2384, 2383, 2382, 2377, 189,
	294, 2369, 2368, 93, 177, 151, 160, 102, 2366, 304,
	2364, 2363, 99, 531, 3200, 21, 166, 2362, 2359, 5247,
	147, 27, 20, 2354, 137, 2353, 2352, 2351, 194, 176,
	122, 929, 61, 2349, 2348, 82, 15, 2346, 2345, 2343,
	2341, 2332, 2328, 86, 36, 31, 29, 205, 70, 11,
	105, 184, 81, 2323, 2312, 2311, 129, 110, 2310, 175,
	168, 138, 167, 2308, 179, 158, 135, 2303, 719, 25,
	2299, 2293, 2292, 2288, 100, 2286, 2285, 2283, 2277, 162,
	154, 127, 95, 2275, 92, 131, 157, 165, 47, 2273,
	43, 2269, 2267, 22, 187, 17, 2261, 12, 60, 69,
	24, 117, 120, 2259, 0, 2257, 13, 185, 307, 163,
	2254, 2252, 7, 5, 10, 2245, 2243, 2242, 2238, 146,
	2236, 2233, 2225, 2223, 19, 44, 18, 9, 134, 91,
	2222, 2220, 4135, 1320, 140, 2218, 200,
}

//line sql.y:7241
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 370, 371, 371, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 344, 344,
	344, 347, 347, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	374, 374, 155, 155, 153, 153, 154, 154, 224, 224,
	24, 25, 25, 234, 234, 233, 233, 233, 235, 235,
	235, 235, 271, 271, 26, 26, 26, 26, 26, 104,
	104, 346, 346, 345, 337, 337, 336, 336, 335, 343,
	343, 342, 342, 341, 38, 39, 48, 48, 48, 48,
	49, 50, 348, 348, 310, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 312, 312, 298, 298, 311, 311, 311, 311, 311,
	311, 311, 297, 297, 115, 115, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 363, 363, 363, 362, 362, 203, 203,
	203, 203, 203, 203, 203, 203, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 364, 364, 364, 364, 276, 276, 276,
	276, 279, 279, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 280, 280, 280,
	280, 280, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 282, 282,
	282, 282, 282, 282, 282, 282, 296, 296, 283, 283,
	291, 291, 292, 292, 292, 293, 293, 293, 294, 294,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 290,
	290, 289, 289, 289, 299, 324, 324, 323, 323, 321,
	321, 321, 321, 321, 321, 321, 321, 308, 308, 318,
	318, 318, 318, 318, 307, 307, 303, 303, 303, 304,
	304, 305, 305, 302, 302, 306, 306, 320, 320, 319,
	319, 300, 300, 301, 301, 326, 365, 365, 365, 365,
	365, 366, 366, 327, 355, 357, 357, 357, 356, 356,
	353, 354, 352, 352, 352, 352, 352, 81, 81, 81,
	247, 247, 248, 248, 316, 316, 315, 315, 315, 317,
	317, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 242, 242, 242, 351, 351, 351, 351, 351,
	351, 350, 350, 350, 313, 313, 313, 349, 349, 57,
	57, 187, 187, 368, 368, 369, 369, 369, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 329, 329, 58, 58, 3, 3, 143, 145,
	146, 146, 144, 144, 144, 144, 144, 144, 60, 60,
	59, 59, 148, 147, 149, 149, 149, 1, 1, 2,
	2, 4, 4, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 295, 295, 295, 328, 328,
	330, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 332, 332, 332, 61, 61, 333, 284,
	285, 286, 5, 6, 309, 331, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 241,
	241, 250, 250, 240, 240, 264, 264, 264, 243, 243,
	243, 244, 244, 361, 361, 361, 237, 237, 64, 64,
	64, 66, 66, 67, 68, 68, 266, 266, 267, 267,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 358, 358, 359, 360, 360, 360, 360,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 375, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 223, 223, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 106, 106, 108, 108, 108, 108, 257, 257, 257,
	256, 256, 137, 137, 139, 138, 138, 140, 140, 141,
	141, 141, 141, 185, 185, 163, 163, 221, 221, 219,
	219, 220, 220, 222, 222, 222, 222, 225, 225, 142,
	142, 142, 142, 150, 150, 151, 151, 152, 152, 265,
	265, 262, 262, 262, 261, 261, 156, 156, 156, 158,
	157, 157, 157, 157, 159, 159, 161, 161, 160, 160,
	162, 167, 167, 166, 166, 164, 164, 164, 164, 165,
	165, 165, 165, 168, 168, 120, 120, 120, 120, 120,
	120, 120, 131, 131, 131, 131, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 210, 210, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 83, 83, 83, 238, 238,
	169, 169, 177, 177, 177, 177, 170, 170, 170, 170,
	170, 170, 170, 178, 178, 178, 184, 179, 179, 175,
	175, 175, 175, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 273, 273, 340, 340, 339, 339, 338,
	338, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 376, 376, 287, 287, 287, 287, 176, 176,
	176, 176, 176, 101, 101, 101, 101, 101, 270, 270,
	270, 274, 274, 274, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 275,
	275, 190, 190, 97, 97, 188, 188, 189, 191, 191,
	186, 186, 186, 172, 172, 172, 192, 192, 193, 193,
	194, 194, 196, 195, 195, 197, 198, 198, 198, 199,
	199, 200, 200, 200, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 43, 112, 112, 112,
	112, 114, 114, 113, 113, 79, 79, 80, 80, 80,
	118, 118, 119, 119, 119, 116, 116, 117, 117, 217,
	217, 201, 201, 201, 208, 208, 208, 204, 204, 206,
	206, 206, 207, 207, 207, 205, 214, 214, 216, 216,
	215, 215, 211, 211, 212, 212, 213, 213, 213, 209,
	209, 171, 171, 171, 171, 171, 218, 218, 218, 218,
	226, 226, 181, 181, 183, 183, 182, 135, 227, 227,
	231, 228, 228, 232, 232, 232, 232, 232, 229, 229,
	230, 230, 258, 258, 258, 236, 236, 249, 249, 245,
	245, 246, 246, 239, 239, 251, 251, 251, 74, 180,
	180, 325, 325, 322, 254, 254, 255, 255, 259, 259,
	263, 263, 260, 260, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 372, 373, 268, 269, 269, 269,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 5, 5,
	5, 5, 5, 5, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 6, 6, 4, 4,
	4, 7, 8, 6, 5, 6, 8, 11, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 1, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -370, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 221, -49, -39, 222,
	-50, 224, 223, 260, 225, 253, 74, 306, 307, 309,
	310, 311, 312, -85, 258, 259, 227, 36, 45, 33,
	34, 37, 231, 266, 267, 230, -10, -34, 8, -372,
	11, 437, 255, 254, 28, -12, 480, 86, -371, 621,
	-217, -201, 22, 33, 29, -200, -196, -103, -201, 20,
	18, 7, -76, -375, -76, -76, 12, 13, -76, -310,
	-312, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -334, -44, -41, 226, 223, 270,
	120, 121, 260, 261, 262, 225, 244, 259, 263, 258,
	279, -40, 81, 33, 480, 483, -317, 222, 228, 229,
	438, 123, 122, 75, 224, -314, 360, 513, 591, -56,
	593, 102, 104, 592, 44, 234, 594, 595, 596, 520,
	597, 243, 598, 599, 600, 601, 607, 562, 608, 609,
	610, 124, 7, -76, -263, -259, -344, -253, 89, 90,
	91, 477, 246, 511, 512, 295, 81, 41, 486, 357,
	360, 513, 468, 591, 306, 320, 314, 341, 333, 478,
	514, 487, 298, 247, 283, 588, 331, 132, 593, 301,
	515, 261, 365, 366, 516, 367, 102, 309, 404, 606,
	300, 517, 604, 104, 592, 79, 467, 51, 44, 256,
	329, 230, 325, 594, 284, 518, 489, 277, 123, 120,
	613, 36, 323, 50, 30, 603, 122, 49, 595, 147,
	519, 596, 520, 369, 348, 582, 48, 370, 262, 521,
	84, 267, 482, 304, 590, 371, 324, 372, 294, 602,
	227, 522, 574, 373, 374, 583, 523, 349, 353, 524,
	396, 375, 620, 52, 525, 526, 584, 121, 527, 78,
	597, 80, 318, 319, 528, 292, 245, 398, 345, 450,
	457, 458, 108, 109, 453, 110, 459, 111, 460, 461,
	462, 451, 112, 105, 452, 463, 464, 346, 347, 113,
	465, 107, 106, 454, 456, 114, 466, 243, 35, 376,
	479, 296, 58, 271, 399, 46, 351, 617, 45, 578,
	529, 581, 344, 340, 447, 53, 530, 531, 532, 533,
	469, 598, 343, 317, 339, 612, 4, 289, 470, 599,
	62, 229, 355, 354, 356, 278, 395, 336, 534, 535,
	536, 250, 82, 537, 326, 21, 538, 539, 377, 285,
	540, 56, 541, 542, 402, 259, 543, 54, 600, 39,
	544, 264, 614, 601, 545, 546, 547, 548, 266, 549,
	379, 550, 378, 350, 352, 273, 380, 481, 551, 305,
	322, 263, 605, 552, 251, 472, 473, 474, 475, 589,
	265, 270, 258, 403, 252, 553, 554, 555, 556, 557,
	299, 573, 558, 559, 310, 607, 448, 43, 560, 561,
	562, 563, 564, 293, 288, 397, 406, 61, 83, 362,
	565, 566, 587, 316, 286, 567, 307, 55, 608, 609,
	610, 280, 611, 9, 618, 619, 471, 382, 124, 290,
	291, 47, 337, 272, 568, 302, 569, 327, 328, 342,
	315, 338, 308, 575, 274, 383, 449, 260, 570, 405,
	287, 358, 363, 303, 485, 279, 384, 586, 484, 335,
	332, 281, 571, 385, 235, 275, 276, 572, 576, 386,
	387, 297, 388, 389, 390, 391, 392, 394, 393, 282,
	483, 313, 330, 364, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 446, 233, -76, 233, -160, -259, 233, -229,
	366, -250, 368, 381, 376, 386, 374, -241, 377, 379,
	273, -361, 396, 233, 383, 221, 369, 378, 387, 388,
	297, 394, 389, 393, 282, 390, 391, 392, -344, 174,
	596, 611, 132, 334, 373, 371, 397, 578, -259, 308,
	-266, 313, -254, -344, -253, 311, -160, -82, 574, 225,
	-268, -268, -105, 578, 580, -179, -120, 140, -131, -134,
	-125, -126, -173, -174, -175, -176, -132, -186, 163, 164,
	171, 141, -184, -135, 26, 476, 439, 438, 174, 31,
	217, 68, 69, 441, 442, 143, 57, 414, 415, -133,
	409, 416, 411, 467, 469, 470, 471, 468, 444, 445,
	115, 446, 105, 107, 106, 447, 448, 449, 346, 347,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 455, 457, 458, 459, 464, 465, 460,
	461, 462, 463, 466, -136, -254, -259, 238, 408, 232,
	169, 437, -127, -123, -8, -182, 407, 412, 413, 417,
	410, 472, 473, 474, 475, -344, -253, -129, -128, -169,
	92, 98, 103, 99, -367, 116, -372, 93, 94, 95,
	96, 97, 117, 118, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 44, 382, 382, -160,
	-76, -76, -76, -76, -194, -103, -196, -10, -8, -372,
	8, -76, -8, -9, -13, -34, -36, 507, -35, -259,
	-201, -217, 12, 159, 42, 50, -199, -200, -12, -8,
	-120, 19, 23, 24, -108, 165, -120, -259, -77, -108,
	-239, 237, -76, -76, -228, -271, 308, -232, 397, 396,
	-255, -230, -254, -252, -229, 395, 226, 23, 139, 25,
	27, 142, 174, 127, 19, 143, 37, 228, 334, 244,
	173, 240, 438, 221, 72, 488, 409, 411, 407, 414,
	440, 441, 408, 368, 31, 13, 490, 28, 254, 24,
	38, 167, 223, 146, 491, 257, 26, 255, 115, 118,
	493, 22, 75, 249, 14, 242, 40, 16, 494, 495,
	17, 238, 237, 159, 234, 70, 11, 217, 29, 155,
	66, 496, 134, 497, 498, 499, 500, 128, 68, 156,
	20, 615, 412, 413, 33, 579, 476, 268, 169, 73,
	59, 580, 140, 410, 501, 502, 116, 503, 119, 76,
	585, 136, 18, 71, 42, 504, 269, 505, 239, 616,
	506, 400, 507, 157, 224, 437, 69, 158, 508, 232,
	381, 8, 443, 32, 253, 241, 126, 67, 509, 233,
	145, 444, 445, 236, 129, 117, 7, 133, 34, 12,
	74, 77, 415, 416, 417, 57, 125, 480, 144, 15,
	510, 401, 138, 132, -311, 156, -297, -301, -254, 248,
	-327, 244, -160, -320, -319, -254, -372, -104, -249, 234,
	242, 241, 133, -348, 136, 290, 408, 232, -51, -52,
	-53, -229, 173, 595, -86, 265, 269, 87, 87, -301,
	-300, -299, -349, 269, 248, -326, -318, 240, 249, -307,
	241, 242, -302, 234, 134, -349, -302, 239, 249, 244,
	248, 269, 269, 124, 269, 124, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 264, -308, 148, -308, 484,
	484, -314, -349, 244, 234, -349, -349, 236, 35, 35,
	-251, -302, 236, 25, -308, -308, -308, -229, 173, -308,
	-308, -308, -308, 277, 277, -308, -308, -308, -308, -308,
	-308, -308, -308, -308, -308, -308, -308, -308, -308, -308,
	-308, -308, 233, -348, -112, 393, 297, 81, -54, 279,
	-37, -160, -249, 234, 235, -348, 266, -160, 218, -160,
	-243, 156, 15, -243, -240, 382, 380, 367, 372, -243,
	-243, -243, -243, 280, 365, -303, 234, 35, 245, 382,
	280, 365, 280, 281, 280, 281, 375, 385, 280, -264,
	14, 159, 408, 370, 374, 273, 233, 274, 235, 384,
	281, -264, 93, -244, 156, 382, 276, -243, -243, -269,
	-372, -255, 334, -344, 581, -269, -269, 32, 90, 236,
	-254, -78, -254, 93, -15, -11, -22, -21, -23, 148,
	-110, 382, -98, 174, 596, 582, 583, 584, 581, 379,
	589, 587, 585, 280, 586, 87, 136, 138, 139, 4,
	-120, 155, -170, 148, 149, 150, 151, 152, 153, 154,
	159, 140, 142, 156, -210, 137, 160, 161, 162, 163,
	164, 165, 166, 168, 167, 169, 170, 157, 158, 173,
	219, 220, -126, -126, -126, -126, -184, -372, -372, -372,
	-126, -238, -372, -126, -372, -372, -372, -372, -190, -120,
	-372, -376, -372, -376, -376, -287, -372, -287, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	218, -372, -372, -372, -372, -372, -287, -287, -287, -287,
	-287, -372, -372, -372, -372, 103, 98, 92, -186, 99,
	93, -254, -259, -8, -9, -179, -268, -358, -359, -163,
	-160, -372, 297, -254, -254, 266, -199, -12, -8, -194,
	-200, -196, -8, -76, -96, -109, 63, 64, -111, 24,
	38, 67, 65, 23, -373, 88, -373, -217, -373, 87,
	-36, -221, 86, 61, 43, 93, 93, 87, 21, -195,
	-197, -120, 14, -257, 4, -256, 25, -254, 93, 218,
	101, 14, -161, 29, -160, -239, -239, 87, 308, -232,
	-271, -234, -233, 398, 400, 148, -258, -254, 93, 31,
	88, 87, -160, -276, -279, -281, -280, -282, -277, -278,
	331, 332, 174, 335, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 348, 32, 256, 327, 328, 329, 330,
	349, 350, 351, 352, 353, 354, 355, 356, 314, 333,
	478, 315, 316, 317, 318, 319, 320, 322, 323, 324,
	325, 326, -347, -344, 86, 88, 87, -283, 86, -120,
	-112, 233, -344, 234, 234, 234, -76, 437, -308, -308,
	-308, 264, 19, -44, -41, -334, 18, -40, -41, 226,
	120, 121, 223, 86, -297, 86, -306, -347, -344, 86,
	134, 239, 133, -305, -302, -305, -306, -344, -186, -344,
	134, 134, -344, -344, -225, -254, -225, -225, 23, -225,
	23, -225, 23, 95, -254, -225, 23, -225, 23, -225,
	23, -225, 23, -225, 23, 31, 78, 79, 80, 31,
	82, 83, 84, -186, -344, -344, -186, -297, -229, -160,
	-344, 95, 95, 95, -308, -308, 95, 93, 93, 93,
	-308, -308, 95, 93, -261, -259, 93, 93, -350, 250,
	294, 296, 95, 95, 95, 95, 31, 93, -351, 31,
	603, 602, 604, 605, 606, 93, 95, 31, 95, 31,
	95, -254, 86, -160, -118, 284, 221, 223, 226, 76,
	93, 298, 302, 303, 148, 44, 87, 236, 233, -344,
	-245, 238, -245, -254, -260, -259, -252, 93, -120, -304,
	14, 159, -264, -264, -243, -160, -304, -264, -243, -160,
	-243, -243, -243, -243, -264, -264, -264, -243, -259, -259,
	-160, -160, -160, -160, -160, -160, -160, -269, -244, -243,
	581, 93, -237, 14, 76, -269, -269, -267, 311, 345,
	575, 576, 577, 87, 480, -153, -160, 581, 581, 581,
	581, 581, 581, -120, -120, -120, -120, 503, -177, 116,
	140, 117, 118, -134, -178, -182, -184, 100, 159, 142,
	156, -210, -125, -126, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -270, -254, 93,
	174, -130, -129, 99, -367, -130, -106, -108, -120, -120,
	-344, -254, -106, -106, -120, -102, 24, 38, -188, -189,
	144, -186, -373, -373, 95, 99, -102, -102, -102, -102,
	-102, -254, -254, -95, -94, 419, 420, 421, 422, 424,
	425, 426, 429, 430, 434, 435, 418, 436, 423, 428,
	431, 432, 433, 427, 330, -120, -120, -120, -120, -120,
	-120, -83, -120, 127, 128, 129, -120, -120, -180, -179,
	-343, -342, -341, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -107, 24, 38, -106,
	-255, -260, -252, -106, -107, -107, -106, -106, -120, -120,
	-120, -120, 218, -217, -373, 87, -360, 400, 401, 579,
	-262, 269, -261, 25, -180, 93, 14, -223, 77, -254,
	-199, -199, 63, 64, 59, -106, -111, -373, -35, 25,
	-219, -254, 62, 93, -288, -229, 357, 358, 174, -120,
	-120, 87, -198, 27, 28, -160, -256, 165, -260, -160,
	-224, 269, -160, -138, -140, -141, -142, -163, -185, -372,
	-143, 499, 496, 14, -153, -154, -162, -259, -232, -234,
	87, 399, 401, 402, 76, 119, -120, -289, 173, -316,
	-315, -314, -297, -299, -300, -301, 88, -289, -293, 363,
	362, -283, -283, -283, -283, -283, -288, -288, -288, -288,
	86, 86, -283, -283, -283, -283, -291, 86, -291, -291,
	-292, 86, -292, -327, -120, -324, -323, -321, -322, 243,
	102, 572, 528, 480, 520, 562, 77, -319, -198, 95,
	-373, -118, -246, 238, -325, -322, -344, -344, -344, -246,
	-344, 93, -344, 93, -344, 93, -87, -58, -1, 615,
	616, 617, 87, 19, -298, -297, -57, 294, -330, -331,
	269, -326, -320, -306, 134, -305, -306, -306, -344, 87,
	29, 124, 124, 124, 124, 480, 223, 32, -247, 519,
	140, 572, 528, -297, -57, -270, 236, -270, -270, 93,
	93, -242, 611, -153, -114, 286, 148, 275, 275, 233,
	233, 288, -160, 299, 301, 300, 298, 302, 303, 23,
	23, 23, 287, 289, 291, 277, -160, -160, -245, 76,
	-155, -160, 26, -259, -160, -243, -243, -160, -243, -243,
	-160, -254, -98, 400, 87, 480, 22, -99, 22, -372,
	116, 117, 118, -178, -125, -126, -125, 139, 257, 87,
	-373, 25, 87, 77, -373, -373, -373, 87, 14, -106,
	-191, -189, 146, -120, -373, -373, -373, 165, -179, -179,
	-179, -179, -179, 87, 87, 14, -274, 25, -373, -373,
	-373, -373, -373, -190, -373, 14, 87, 87, -373, -373,
	87, 87, -373, 87, 87, 87, -340, 87, 87, 87,
	87, -373, -373, -373, -373, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, -373, -373, -106, -106, -372,
	218, -373, -373, -373, -373, -373, 87, 87, 87, 87,
	-255, -359, 578, 401, -167, -166, -164, 74, 237, 75,
	-372, -261, -373, -130, 90, -220, 90, -219, -172, -254,
	95, 99, -201, -137, -139, 14, -111, -184, 88, 87,
	-288, -205, -211, -240, -254, 93, 174, -290, 174, -290,
	357, 358, -197, 218, -168, 15, -171, 32, 57, -11,
	-372, -372, 32, 87, -156, -158, -157, -159, 66, 70,
	72, 67, 68, 69, 73, -265, 25, -138, -9, -8,
	-372, -372, -372, -160, -153, -374, 14, 77, -374, 87,
	218, -233, -235, 403, 400, 406, -344, 93, -86, 87,
	-314, -301, -202, -115, 40, -294, 364, -288, 487, -288,
	-296, 93, -296, 95, 95, 88, -47, -42, -43, 33,
	81, -321, -308, 93, 39, -308, -308, -254, 88, -198,
	-114, -160, 140, 76, -325, -325, -325, -259, -2, 614,
	620, 134, 86, 367, 18, -219, 87, 88, -187, 295,
	88, -88, -254, 88, 86, -306, -306, -254, -372, 233,
	31, 31, 572, 528, 519, -57, -187, -289, -344, 613,
	612, 88, 235, 293, -119, 414, -116, 93, 89, -160,
	-160, -160, -160, -160, 226, 223, -368, 304, -368, 278,
	236, -153, -160, 87, -81, 252, 247, -264, -264, 33,
	-160, 400, 590, 588, -120, 139, 257, -134, -126, -108,
	477, -272, 174, 331, 256, 329, 325, 345, 336, 362,
	327, 363, 324, 323, 322, -272, -270, -120, -120, -194,
	147, -120, 145, -373, -373, -373, -373, -373, -373, -120,
	-120, -120, -373, 174, 331, 14, -120, -120, -120, -341,
	-120, -120, -120, -339, -338, -130, -186, -373, -339, -120,
	-120, -338, -338, -342, -342, -342, -342, -342, -179, -179,
	-179, -179, -373, -373, -107, -255, -120, -120, -120, -120,
	-164, -302, -302, -302, -225, 87, -236, 22, 14, 57,
	57, -137, -168, -138, -111, -254, -208, 574, -214, 46,
	-212, -213, 47, -209, 48, 56, -290, -290, 165, -199,
	-120, -226, 76, -227, -231, -186, -181, -183, -182, -372,
	-218, -373, -254, -225, -227, -140, -141, -141, -140, -141,
	66, 66, 66, 71, 66, 71, 66, -157, -259, -373,
	-373, -9, -9, -120, -262, 77, -138, -138, -162, -259,
	165, 400, 404, 405, -314, -366, 116, 140, 31, 76,
	360, 102, -364, 173, 516, 567, 572, 528, 520, 562,
	-365, 239, 133, 134, 251, 25, 41, 88, 87, 88,
	87, 88, 87, -248, -247, -43, -42, -308, -308, 95,
	-344, 93, 93, 235, 26, -160, 76, 76, 76, -89,
	618, 95, 86, -3, 81, -120, 86, 19, -297, -186,
	-332, -284, -333, -285, -286, -5, -6, -309, -92, 57,
	102, -61, 44, 234, 598, 599, 124, -372, 611, -324,
	-219, -328, -330, -160, -122, -372, -121, -123, -127, 163,
	164, -187, -160, -113, 284, 292, 86, -117, 90, -346,
	77, 275, 360, 275, -369, 305, 93, -369, -160, -81,
	-47, -160, -243, -243, 33, -344, -373, -134, -126, -372,
	-275, 486, -283, -283, -283, -292, -283, 319, -283, 319,
	-283, -275, -373, 87, -373, 22, -373, -97, 443, -120,
	87, 87, -373, 86, 86, -120, -373, -373, -373, -340,
	87, -373, 87, -373, 87, -273, 573, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, 87,
	-373, 87, 87, -373, 87, -165, 22, -165, -165, -373,
	90, -160, -168, -192, 16, -205, 51, 337, -216, -215,
	55, 47, -213, 19, 49, 19, 30, -226, 87, 148,
	87, -373, -373, 87, 57, 218, -373, -168, -151, -150,
	76, 77, -152, 76, -150, 66, 66, -221, -373, -373,
	87, -224, -138, -168, -168, 218, 116, -372, -124, -133,
	-122, 12, 93, 93, -344, -363, 602, 603, 31, 95,
	-308, -308, 134, 134, -160, 86, -288, 93, -288, 95,
	95, 31, 82, 83, 84, 31, 78, 79, 80, -160,
	-160, -160, -160, -329, 86, 19, -120, 86, 148, 88,
	-219, -219, 271, 159, -308, 596, 277, 277, -308, -308,
	-308, -91, -90, 618, 88, -373, 87, -295, 480, 483,
	-120, -128, -128, -221, 88, -337, 480, -345, -254, -254,
	-254, -254, 95, 97, -125, -373, -288, -373, -120, -120,
	-199, 93, -120, -120, 95, 95, -373, -373, -339, -338,
	-120, -373, -148, -147, -149, 582, 116, 31, -272, -120,
	-120, -120, -120, -372, 66, 18, 16, -372, -372, -262,
	-192, -193, 17, 19, -206, 53, -204, 52, -204, -215,
	19, 19, 93, 19, 93, 134, -231, -120, -183, 57,
	-11, -254, -181, -254, -194, -120, 86, -120, -130, -168,
	-168, -120, -174, 467, 469, 470, 471, 468, 446, 105,
	107, 106, 447, 448, 449, 346, 347, 450, 451, 452,
	108, 109, 110, 111, 112, 113, 114, 453, 456, 454,
	457, 458, 459, 464, 465, 460, 461, 462, 463, 466,
	472, 473, 474, 475, 93, 93, 86, -120, 88, 88,
	-221, -328, -58, 88, -219, 95, 88, 272, -182, -372,
	93, -308, -308, -308, 95, 95, -261, -373, 87, -254,
	-365, -330, 484, 484, -373, 25, -336, -335, -255, 86,
	77, -101, 159, 480, -373, -373, -373, -373, -373, 88,
	88, -373, -373, 87, -373, -147, -149, -373, 76, -130,
	-373, 87, -373, -373, 87, -373, 87, -222, -373, -254,
	239, 19, 19, -222, -222, -167, -193, -120, -179, -207,
	54, 76, 119, 93, 93, 93, 12, -181, 218, -199,
	-219, -145, 367, -194, -373, -219, 88, 25, 88, 620,
	134, 88, -182, -100, -372, 268, -261, 93, 93, -90,
	-93, -11, 87, 148, -219, -160, -373, 478, 73, 481,
	-120, -373, 76, 491, 582, -120, -120, -120, 87, -373,
	-373, -373, 76, 119, -227, -254, 88, -373, -372, -199,
	88, -203, -11, 86, -3, 268, -284, -333, -285, -286,
	-5, -6, -309, -79, 480, -335, -313, -255, 93, 95,
	88, 62, 479, 482, -340, -373, 87, -373, 87, -373,
	87, -254, 239, -262, -146, -144, -254, 534, -356, -355,
	476, -366, -362, 116, 140, 102, -364, 572, 528, 125,
	126, -79, -120, 86, -373, -80, 283, 578, -346, 62,
	-373, -120, -120, -120, -373, 87, 22, -276, -60, 545,
	-353, -354, 76, -357, 373, 544, 565, 116, 93, 88,
	-219, 244, -337, 480, -373, 87, -373, 87, -373, -144,
	541, -289, -130, -354, 76, -353, 76, 13, 12, -4,
	619, 88, 285, 481, -120, -120, -59, 26, -145, -352,
	252, 247, 250, 32, -352, 95, -4, 482, -373, -373,
	545, 246, 31, 116, -130, -148, -147, -147,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1340, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1855, 1855, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1200, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1853, 1, 3,
	69, 73, 0, 0, 0, 56, 1209, 0, 76, 0,
	0, 831, 0, 829, 0, 1323, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1325, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1227, 153, 1341, 1338, 1339, 38, 39,
	40, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 0, 1317, 0, 686, 928, 0, 748,
	748, 0, 748, 748, 748, 748, 0, 0, 0, 698,
	0, 0, 0, 0, 745, 0, 714, 715, 0, 745,
	0, 721, 751, 0, 726, 748, 748, 729, 1856, 0,
	1856, 1856, 1308, 0, 742, 740, 754, 755, 758, 762,
	0, 767, 770, 1334, 1335, 0, 785, 47, 1582, 777,
	790, 791, 0, 823, 824, 43, 1027, 0, 950, 955,
	966, 981, 982, 983, 984, 985, 987, 988, 0, 0,
	0, 0, 993, 994, 0, 0, 0, 0, 0, 1008,
	0, 0, 0, 0, 0, 1181, 0, 1142, 1142, 1044,
	1142, 1144, 1144, 1536, 1660, 1668, 1776, 1502, 0, 0,
	0, 1852, 1623, 1631, 1632, 1654, 1746, 1796, 1627, 1628,
	1609, 1621, 1624, 1612, 1613, 1615, 1617, 1622, 1629, 1635,
	1614, 1634, 1633, 0, 1610, 1611, 1616, 1626, 1630, 1618,
	1619, 1620, 1625, 1636, 1097, 1190, 0, 0, 0, 0,
	0, 0, 273, 274, 1026, 1297, 1144, 1144, 1144, 1144,
	1144, 1725, 1726, 1727, 1728, -2, -2, 219, 220, 221,
	222, 223, 224, 225, 0, 215, 0, 278, 279, 275,
	276, 277, 1010, 1011, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 1855, 0, 800, 0,
	0, 0, 0, 0, 1209, 0, 1201, 1200, 61, 0,
	827, -2, 0, 0, 0, 0, 45, 0, 50, 887,
	75, 74, 1249, 0, 0, 0, 57, 1210, 65, 67,
	1211, 0, 832, 833, 0, 863, 867, 0, 828, 0,
	0, 1324, 1323, 1323, 100, 0, 1792, 1301, -2, -2,
	0, 0, 1336, 1337, 1310, -2, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1227, 0, 0,
	0, 0, 0, 827, 0, 1318, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1326, 1327, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1240, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1319, 1319, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1857, 1858, 1356, 1856, 1856, 734, 738, 1309, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	948, 0, 0, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 968, 0,
	0, 0, 989, 990, 991, 992, 995, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 837, 0, 1182,
	0, 1042, 0, 1043, 1045, 1046, 0, 1047, 837, 837,
	837, 837, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	0, 0, 847, 847, 0, 0, 208, 209, 210, 211,
	212, 0, 0, 0, 0, 226, 227, 228, 229, 230,
	280, 1190, 0, 1026, 0, 0, 44, 792, 793, 0,
	911, 1329, 0, 0, 843, 0, 55, 64, 66, 1209,
	59, 1209, 0, 849, 0, 0, -2, -2, 850, 856,
	857, 858, 859, 860, 52, 1854, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 350, 1252, 0, 0, 1202,
	1203, 1206, 0, 864, 1666, 868, 0, 870, 871, 0,
	830, 0, 98, 0, 927, 0, 0, 0, 1792, 1307,
	0, 102, 103, 0, 0, 0, 361, 1312, 1313, 1314,
	-2, 384, 0, 361, 345, 288, 289, 290, 338, 292,
	338, 338, 338, 338, 350, 350, 350, 350, 321, 322,
	323, 324, 325, 0, 0, 307, 338, 338, 338, 338,
	328, 329, 330, 331, 332, 333, 334, 335, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 340, 340, 340,
	342, 342, 0, 42, 0, 365, 0, 1206, 0, 0,
	1240, 1321, 1331, 0, 0, 0, 1321, 120, 0, 0,
	0, 550, 584, 502, 538, 551, 0, 505, 506, -2,
	0, 0, 487, 0, 489, 0, 385, 0, -2, 0,
	395, 0, 391, 395, 392, 395, 383, 396, 528, 529,
	530, 0, 532, 533, 614, 897, 0, 0, 0, 0,
	0, 620, 621, 622, 0, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 489, 0, 535,
	0, 441, 442, 443, 0, 0, 446, 447, 448, 449,
	0, 0, 452, 453, 454, 914, 915, 455, 456, 481,
	482, 483, 457, 458, 459, 460, 461, 462, 463, 475,
	476, 477, 478, 479, 480, 464, 465, 466, 467, 468,
	469, 472, 0, 135, 1231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1319, 0,
	0, 0, 0, 846, 929, 1342, 1343, 749, 750, 0,
	389, 390, 748, 748, 695, 735, 0, 748, 699, 736,
	700, 702, 701, 703, 716, 717, 748, 706, 746, 747,
	707, 708, 709, 710, 711, 712, 713, 731, 718, 719,
	720, 752, 0, 756, 757, 732, 733, 0, 769, 773,
	774, 775, 776, 0, 0, 805, 94, 810, 811, 812,
	813, 825, 818, 1028, 945, 946, 947, 0, 949, 952,
	0, 1012, 1014, 954, 956, 1023, 1024, 1025, 0, 0,
	0, 0, 0, 960, 964, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 986, 1158, 1159,
	1160, 1003, 281, 282, 0, 1004, 0, 861, 0, 0,
	0, 1002, 0, 0, 0, 0, 838, 839, 1188, 1185,
	0, 0, 1143, 1145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1161, 0, 0, 0, 0,
	0, 1181, 0, 1005, 1006, 1007, 0, 0, 0, 1330,
	0, 130, 131, 0, 0, 0, 0, 0, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	1191, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 795, 796, 798, 0,
	931, 0, 912, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 872, 851, 54, 49, 0,
	0, 889, 1250, 350, 1272, 0, 359, 359, 356, 1212,
	1213, 0, 1205, 1207, 1208, 77, 869, 865, 0, 943,
	0, 0, 926, 0, 875, 877, 878, 879, 909, 0,
	882, 0, 0, 0, 0, 0, 96, 928, 1302, 101,
	0, 0, 106, 107, 1303, 1304, 1305, 1306, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1214, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1206, 1231, 0, 0, 0, 1332, 1331, 1331, 1331, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1228, 1229, 1230, 0, 0, 679, 0, 0,
	427, 92, 1320, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	953, 1013, 1015, 957, 0, 961, 965, 0, 0, 0,
	0, 0, 0, 0, 1009, 1033, 1034, 0, 0, 1200,
	0, 1186, 0, 0, 1041, 1146, 1147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 1059,
	1060, 1061, 1062, 0, 1064, 0, 0, 0, 1068, 1069,
	0, 0, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 1083, 1084, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 1029, 0, 0, 847,
	0, 1148, 1149, 1150, 1151, 1152, 0, 0, 0, 0,
	1191, 794, 797, 799, 885, 932, 933, 0, 0, 0,
	0, 913, 1328, 840, 841, 844, -2, 0, 0, 1193,
	0, 0, 872, 943, 873, 0, 852, 51, 888, 0,
	1254, 1253, 1266, 1279, 359, 359, 353, 354, 360, 355,
	357, 358, 1204, 0, 1209, 0, 1290, 0, 0, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 916, 0,
	0, 919, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 362, 363, 144, 153,
	438, 168, 411, 0, 0, 287, 349, 312, 313, 314,
	0, 336, 0, 0, 0, 432, 116, 1218, 1217, 377,
	377, 368, 0, 371, 0, 0, 0, 1333, 339, 400,
	0, 134, 0, 0, 0, 0, 0, 140, 579, 0,
	0, 586, 0, 0, 0, 500, 0, 511, 512, 0,
	613, -2, 675, 365, 0, 379, 382, 898, 0, 0,
	513, 0, 516, 517, 431, 491, 522, 523, 536, 473,
	474, 471, 0, 0, 1241, 1242, 1247, 1245, 1246, 121,
	557, 559, 558, 562, 0, 0, 495, 0, 495, 555,
	0, 427, 1214, 0, 683, 428, 429, 748, 748, 804,
	95, 0, 807, 0, 0, 0, 0, 958, 962, 862,
	0, 1179, 338, 338, 1166, 338, 342, 1169, 338, 1171,
	338, 1174, 338, 1177, 1178, 1179, 0, 0, 0, 1183,
	1040, 1189, 0, 1048, 1049, 1050, 1051, 1052, 1053, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 132,
	133, 1115, 0, 0, 1117, 1119, 1120, 1074, 1116, 0,
	0, 1113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 1031, 0, 1192, 0, 0, 0, 0,
	934, 939, 939, 939, 0, 0, 0, 1315, 1316, 1194,
	1195, 943, 1196, 874, 853, 890, 1272, 0, 1265, 0,
	-2, 1274, 0, 0, 0, 1280, 351, 352, 866, 78,
	944, 81, 0, 1290, 1298, 0, 1281, 1292, 1294, 0,
	0, 0, 1286, 0, 943, 876, 905, 907, 0, 902,
	917, 918, 920, 0, 922, 0, 924, 925, 887, 881,
	883, 0, 0, 0, 98, 0, 943, 943, 97, 0,
	930, 108, 109, 110, 437, 172, 177, 0, 0, 0,
	182, 0, 184, 0, 0, 0, 189, 190, 377, 377,
	412, 0, 284, 286, 0, 0, 175, 350, 0, 350,
	0, 343, 0, 413, 433, 1215, 1216, 0, 0, 370,
	374, 375, 376, 0, 1322, 136, 0, 0, 0, 582,
	0, 610, 0, 0, 0, 0, 0, 0, 164, 492,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 0,
	377, 0, 0, 0, 377, 377, 377, 0, 667, 364,
	0, 0, 638, 635, 514, 0, 213, 214, 216, 0,
	0, 521, 887, 1232, 1233, 1234, 0, 1244, 1248, 124,
	0, 0, 0, 0, 569, 0, 494, 570, 680, 681,
	682, 93, 690, 696, 806, 826, 951, 959, 963, 0,
	0, 1180, 1164, 350, 1167, 1168, 1170, 1172, 1173, 1175,
	1176, 0, 999, 0, 1036, 0, 1038, 1209, 0, 1187,
	0, 0, 1056, 0, 0, 0, 1065, 1066, 1067, 0,
	0, 1073, 0, 1075, 0, 0, 0, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1032, 1098, 0,
	1103, 0, 0, 1109, 0, 0, 0, 0, 0, 911,
	-2, 62, 1196, 1198, 0, 1259, 1257, 1257, 1267, 1268,
	0, 0, 1275, 0, 0, 0, 0, 82, 0, 0,
	0, 1295, 0, 0, 0, 0, 99, 1200, 899, 906,
	0, 0, 900, 0, 901, 921, 923, 880, -2, 884,
	0, 943, 943, 88, 89, 0, 178, 0, 180, 206,
	207, 0, 183, 185, 186, 187, 193, 194, 195, 188,
	0, 0, 283, 285, 0, 0, 326, 337, 327, 0,
	0, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 887,
	137, 138, 139, 574, 0, 584, 0, 0, 0, 577,
	0, 503, 0, 0, 0, 377, 377, 377, 0, 0,
	0, 0, 652, 0, 0, 615, 0, 623, 0, 0,
	0, 217, 218, 0, 1243, 556, 0, 122, 123, 0,
	0, 561, 496, 497, 1153, 997, 1165, 998, 0, 0,
	0, 1184, 0, 0, 0, 0, 1063, 1071, 0, 1118,
	0, 1078, 0, 0, 0, 604, 605, 0, 1114, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 931,
	1198, 80, 0, 0, 1262, 0, 1255, 1258, 1256, 1269,
	0, 0, 1276, 0, 1278, 0, 1299, 1300, 1293, 0,
	1285, 1288, 1284, 1287, 1209, 903, 0, 908, 0, 1200,
	87, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 575, 0, 587, 578, 0, 665, 0,
	669, 0, 0, 0, 672, 673, 674, 651, 0, 655,
	405, 639, 636, 637, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1035, 1037, 1039, 1054, 1055, 1162,
	1163, 1072, 1076, 0, 1079, 0, 0, 1080, 0, 606,
	1099, 0, 1104, 1105, 0, 1110, 0, 0, 936, 893,
	894, 941, 942, 0, 0, 886, 79, 1199, 1197, 1251,
	0, 1260, 1261, 1270, 1271, 1277, 0, 1283, 0, 85,
	0, 0, 0, 1209, 179, 0, 198, 0, 583, 0,
	586, 576, 663, 664, 0, 676, 668, 670, 671, 653,
	-2, 1235, 0, 0, 0, 563, 996, 0, 0, 0,
	1115, 1081, 0, 602, 603, 0, 0, 0, 0, 935,
	937, 938, 1263, 1264, 1291, 1289, 904, 911, 0, 86,
	418, 411, 1235, 0, 0, 0, 656, 657, 658, 659,
	660, 661, 662, 553, 1237, 127, 128, 484, 485, 486,
	121, 1154, 0, 1157, 0, 1100, 0, 1106, 0, 1111,
	0, 895, 896, 588, 0, 590, 0, -2, 406, 419,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 677, 0, 1238, 1239, 124, 1155,
	1077, 0, 0, 0, 589, 0, 0, 361, 0, 599,
	407, 408, 0, 414, 415, 416, 417, 201, 202, 611,
	0, 0, 560, 0, 1101, 0, 1107, 0, 1112, 591,
	592, 600, 0, 409, 0, 410, 0, 0, 0, 580,
	0, 611, 1236, 0, 0, 0, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1156, 1102, 1108,
	0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 621,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:536
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:541
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:611
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:623
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:627
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:636
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:642
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:646
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:652
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:811
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:829
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:857
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:901
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:911
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:924
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:946
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:964
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:982
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:992
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1024
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1066
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1086
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1092
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1102
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1108
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1137
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1144
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1151
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1162
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1173
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1183
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1187
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1205
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1229
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1239
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1245
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1249
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1255
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1270
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1303
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1312
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1424
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1428
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1434
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1438
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1452
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1507
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1511
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1786
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1796
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1815
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2052
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2174
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2183
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2189
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2193
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2199
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2203
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2208
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2212
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2216
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2220
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2224
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2228
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2244
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2248
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2252
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2256
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2260
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2298
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2327
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2337
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2341
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2347
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2351
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2357
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2361
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2367
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2373
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2377
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2381
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2385
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2389
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2404
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2410
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2416
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2420
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2424
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2429
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2433
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2439
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2445
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2451
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2455
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2459
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2463
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2467
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2508
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2514
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2528
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2722
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2740
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2744
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2753
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2757
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2761
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2769
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2775
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2783
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2801
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2805
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2809
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2813
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2817
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2830
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2913
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2951
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2955
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2959
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2965
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2972
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2979
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2986
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3009
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3016
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3046
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3153
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3162
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3170
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3179
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3186
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3198
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3207
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3222
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3236
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3240
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3246
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3252
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3258
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3268
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3272
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3278
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3284
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3290
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3296
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3320
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3326
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3332
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3336
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3340
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3346
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3350
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3355
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3359
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3364
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3368
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3374
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3378
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3382
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3386
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3390
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3394
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3398
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3402
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3406
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3410
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3463
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3467
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3471
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3477
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3492
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3496
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3501
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3506
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3511
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3516
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3521
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3527
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3533
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3538
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3544
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3550
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3560
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3565
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3569
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3574
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3579
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3584
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3589
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3595
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3601
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3608
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3615
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3622
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3630
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3640
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3646
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3652
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3658
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3664
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3670
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3682
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3704
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3708
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3992
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4010
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4014
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4024
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4115
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4119
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4123
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4127
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4131
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4135
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4212
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4216
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4222
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4228
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4232
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4236
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4240
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4347
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4379
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4419
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4450
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4456
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4460
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4490
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4526
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4536
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4540
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4544
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4548
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4561
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4573
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4577
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4583
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4589
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4603
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4607
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4611
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4621
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4625
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4631
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4635
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4644
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4650
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4660
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4670
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4674
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4688
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4705
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4709
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4713
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4717
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4723
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4725
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4735
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4740
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4766
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4770
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4774
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4780
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4786
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4790
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4794
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4798
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4804
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4808
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4818
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4847
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4853
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4857
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4863
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4867
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4871
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4875
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4880
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4884
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4888
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4892
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5003
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5168
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5172
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5176
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5182
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5192
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5196
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5203
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5207
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5211
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5215
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5221
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5225
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5229
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5233
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5237
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5241
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5245
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5251
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5259
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5266
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5272
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5276
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &CountStar{Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &Count{Args: yyDollar[4].exprsUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &Max{Args: yyDollar[4].exprsUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &Min{Args: yyDollar[4].exprsUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &Sum{Args: yyDollar[4].exprsUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &Avg{Args: yyDollar[4].exprsUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5577
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5645
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5654
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5660
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5664
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5680
		{
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5682
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5686
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5690
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5694
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5698
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5702
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5706
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5710
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5714
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5718
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5722
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5728
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5732
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5736
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5740
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5744
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5748
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5752
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5756
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5760
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5815
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5819
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5823
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5827
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5831
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5855
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5859
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5865
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5869
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5873
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5877
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5881
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5887
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5891
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5895
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5899
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5903
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5907
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5911
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5915
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5919
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5923
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = string("")
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5957
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5961
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5967
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5982
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5986
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5990
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6019
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6037
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6043
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6049
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6053
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6059
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6064
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6068
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6072
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6081
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6087
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6091
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6095
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6104
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6108
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6112
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6116
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6123
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6127
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6131
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6135
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6141
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6145
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6149
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6153
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6175
		{
			yyVAL.str = ""
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6194
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6203
		{
			yyVAL.str = "cascaded"
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6220
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6226
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6232
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6238
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6247
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6251
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6256
		{
			yyVAL.str = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6266
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6270
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6276
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6280
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6284
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = ""
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6302
		{
			yyVAL.str = ""
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.str = " header"
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6311
		{
			yyVAL.str = ""
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6315
		{
			yyVAL.str = " manifest on"
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6319
		{
			yyVAL.str = " manifest off"
		}
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6324
		{
			yyVAL.str = ""
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6328
		{
			yyVAL.str = " overwrite on"
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6332
		{
			yyVAL.str = " overwrite off"
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6338
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6343
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6347
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6357
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6367
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6372
		{
			yyVAL.str = ""
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6376
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6386
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6396
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6405
		{
			yyVAL.str = ""
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.str = " optionally"
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6422
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6426
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6430
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6434
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6438
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6444
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6448
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6452
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6456
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6465
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6471
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6475
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6481
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6485
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6491
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6506
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6510
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6516
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6522
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6532
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6536
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6540
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6544
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6548
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6556
		{
			yyVAL.str = "charset"
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6583
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6590
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6598
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6603
		{
			yyVAL.empty = struct{}{}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6605
		{
			yyVAL.empty = struct{}{}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6607
		{
			yyVAL.empty = struct{}{}
		}
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6611
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6620
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6627
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6631
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6637
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6641
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6648
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6654
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6658
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6664
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6668
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6675
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7211
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7220
		{
			decNesting(yylex)
		}
	case 1855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7225
		{
			skipToEnd(yylex)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7230
		{
			skipToEnd(yylex)
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			skipToEnd(yylex)
		}
	case 1858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7238
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
