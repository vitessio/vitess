// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const DECLARE = 57578
const FOUND = 57579
const HANDLER = 57580
const CONTINUE = 57581
const EXIT = 57582
const UNDO = 57583
const SQLEXCEPTION = 57584
const SQLSTATE = 57585
const SQLWARNING = 57586
const SCHEMA = 57587
const TABLE = 57588
const INDEX = 57589
const VIEW = 57590
const TO = 57591
const IGNORE = 57592
const IF = 57593
const PRIMARY = 57594
const COLUMN = 57595
const SPATIAL = 57596
const FULLTEXT = 57597
const KEY_BLOCK_SIZE = 57598
const CHECK = 57599
const INDEXES = 57600
const ACTION = 57601
const CASCADE = 57602
const CONSTRAINT = 57603
const FOREIGN = 57604
const NO = 57605
const REFERENCES = 57606
const RESTRICT = 57607
const SHOW = 57608
const DESCRIBE = 57609
const EXPLAIN = 57610
const DATE = 57611
const ESCAPE = 57612
const REPAIR = 57613
const OPTIMIZE = 57614
const TRUNCATE = 57615
const COALESCE = 57616
const EXCHANGE = 57617
const REBUILD = 57618
const PARTITIONING = 57619
const REMOVE = 57620
const PREPARE = 57621
const EXECUTE = 57622
const MAXVALUE = 57623
const PARTITION = 57624
const REORGANIZE = 57625
const LESS = 57626
const THAN = 57627
const PROCEDURE = 57628
const TRIGGER = 57629
const VINDEX = 57630
const VINDEXES = 57631
const DIRECTORY = 57632
const NAME = 57633
const UPGRADE = 57634
const STATUS = 57635
const VARIABLES = 57636
const WARNINGS = 57637
const CASCADED = 57638
const DEFINER = 57639
const OPTION = 57640
const SQL = 57641
const UNDEFINED = 57642
const SEQUENCE = 57643
const MERGE = 57644
const TEMPORARY = 57645
const TEMPTABLE = 57646
const INVOKER = 57647
const SECURITY = 57648
const FIRST = 57649
const AFTER = 57650
const LAST = 57651
const VITESS_MIGRATION = 57652
const CANCEL = 57653
const RETRY = 57654
const LAUNCH = 57655
const COMPLETE = 57656
const CLEANUP = 57657
const THROTTLE = 57658
const UNTHROTTLE = 57659
const FORCE_CUTOVER = 57660
const CUTOVER_THRESHOLD = 57661
const EXPIRE = 57662
const RATIO = 57663
const VITESS_THROTTLER = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const RELEASE = 57671
const WORK = 57672
const CONSISTENT = 57673
const SNAPSHOT = 57674
const UNRESOLVED = 57675
const TRANSACTIONS = 57676
const BIT = 57677
const TINYINT = 57678
const SMALLINT = 57679
const MEDIUMINT = 57680
const INT = 57681
const INTEGER = 57682
const BIGINT = 57683
const INTNUM = 57684
const REAL = 57685
const DOUBLE = 57686
const FLOAT_TYPE = 57687
const FLOAT4_TYPE = 57688
const FLOAT8_TYPE = 57689
const DECIMAL_TYPE = 57690
const NUMERIC = 57691
const TIME = 57692
const TIMESTAMP = 57693
const DATETIME = 57694
const YEAR = 57695
const CHAR = 57696
const VARCHAR = 57697
const BOOL = 57698
const CHARACTER = 57699
const VARBINARY = 57700
const NCHAR = 57701
const TEXT = 57702
const TINYTEXT = 57703
const MEDIUMTEXT = 57704
const LONGTEXT = 57705
const BLOB = 57706
const TINYBLOB = 57707
const MEDIUMBLOB = 57708
const LONGBLOB = 57709
const JSON = 57710
const JSON_SCHEMA_VALID = 57711
const JSON_SCHEMA_VALIDATION_REPORT = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMCOLLECTION = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const ASCII = 57723
const UNICODE = 57724
const VECTOR = 57725
const NULLX = 57726
const AUTO_INCREMENT = 57727
const APPROXNUM = 57728
const SIGNED = 57729
const UNSIGNED = 57730
const ZEROFILL = 57731
const PURGE = 57732
const BEFORE = 57733
const CODE = 57734
const COLLATION = 57735
const COLUMNS = 57736
const DATABASES = 57737
const ENGINES = 57738
const EVENT = 57739
const EXTENDED = 57740
const FIELDS = 57741
const FULL = 57742
const FUNCTION = 57743
const GTID_EXECUTED = 57744
const KEYSPACES = 57745
const OPEN = 57746
const PLUGINS = 57747
const PRIVILEGES = 57748
const PROCESSLIST = 57749
const SCHEMAS = 57750
const TABLES = 57751
const TRIGGERS = 57752
const USER = 57753
const VGTID_EXECUTED = 57754
const VITESS_KEYSPACES = 57755
const VITESS_METADATA = 57756
const VITESS_MIGRATIONS = 57757
const VITESS_REPLICATION_STATUS = 57758
const VITESS_SHARDS = 57759
const VITESS_TABLETS = 57760
const VITESS_TARGET = 57761
const VSCHEMA = 57762
const VITESS_THROTTLED_APPS = 57763
const NAMES = 57764
const GLOBAL = 57765
const SESSION = 57766
const ISOLATION = 57767
const LEVEL = 57768
const READ = 57769
const WRITE = 57770
const ONLY = 57771
const REPEATABLE = 57772
const COMMITTED = 57773
const UNCOMMITTED = 57774
const SERIALIZABLE = 57775
const ADDDATE = 57776
const CURRENT_TIMESTAMP = 57777
const DATABASE = 57778
const CURRENT_DATE = 57779
const CURDATE = 57780
const DATE_ADD = 57781
const DATE_SUB = 57782
const NOW = 57783
const SUBDATE = 57784
const CURTIME = 57785
const CURRENT_TIME = 57786
const LOCALTIME = 57787
const LOCALTIMESTAMP = 57788
const CURRENT_USER = 57789
const UTC_DATE = 57790
const UTC_TIME = 57791
const UTC_TIMESTAMP = 57792
const SYSDATE = 57793
const DAY = 57794
const DAY_HOUR = 57795
const DAY_MICROSECOND = 57796
const DAY_MINUTE = 57797
const DAY_SECOND = 57798
const HOUR = 57799
const HOUR_MICROSECOND = 57800
const HOUR_MINUTE = 57801
const HOUR_SECOND = 57802
const MICROSECOND = 57803
const MINUTE = 57804
const MINUTE_MICROSECOND = 57805
const MINUTE_SECOND = 57806
const MONTH = 57807
const QUARTER = 57808
const SECOND = 57809
const SECOND_MICROSECOND = 57810
const YEAR_MONTH = 57811
const WEEK = 57812
const SQL_TSI_DAY = 57813
const SQL_TSI_WEEK = 57814
const SQL_TSI_HOUR = 57815
const SQL_TSI_MINUTE = 57816
const SQL_TSI_MONTH = 57817
const SQL_TSI_QUARTER = 57818
const SQL_TSI_SECOND = 57819
const SQL_TSI_MICROSECOND = 57820
const SQL_TSI_YEAR = 57821
const REPLACE = 57822
const CONVERT = 57823
const CAST = 57824
const SUBSTR = 57825
const SUBSTRING = 57826
const MID = 57827
const SEPARATOR = 57828
const TIMESTAMPADD = 57829
const TIMESTAMPDIFF = 57830
const WEIGHT_STRING = 57831
const LTRIM = 57832
const RTRIM = 57833
const TRIM = 57834
const JSON_ARRAY = 57835
const JSON_OBJECT = 57836
const JSON_QUOTE = 57837
const JSON_DEPTH = 57838
const JSON_TYPE = 57839
const JSON_LENGTH = 57840
const JSON_VALID = 57841
const JSON_ARRAY_APPEND = 57842
const JSON_ARRAY_INSERT = 57843
const JSON_INSERT = 57844
const JSON_MERGE = 57845
const JSON_MERGE_PATCH = 57846
const JSON_MERGE_PRESERVE = 57847
const JSON_REMOVE = 57848
const JSON_REPLACE = 57849
const JSON_SET = 57850
const JSON_UNQUOTE = 57851
const COUNT = 57852
const AVG = 57853
const MAX = 57854
const MIN = 57855
const SUM = 57856
const GROUP_CONCAT = 57857
const BIT_AND = 57858
const BIT_OR = 57859
const BIT_XOR = 57860
const STD = 57861
const STDDEV = 57862
const STDDEV_POP = 57863
const STDDEV_SAMP = 57864
const VAR_POP = 57865
const VAR_SAMP = 57866
const VARIANCE = 57867
const ANY_VALUE = 57868
const REGEXP_INSTR = 57869
const REGEXP_LIKE = 57870
const REGEXP_REPLACE = 57871
const REGEXP_SUBSTR = 57872
const ExtractValue = 57873
const UpdateXML = 57874
const GET_LOCK = 57875
const RELEASE_LOCK = 57876
const RELEASE_ALL_LOCKS = 57877
const IS_FREE_LOCK = 57878
const IS_USED_LOCK = 57879
const LOCATE = 57880
const POSITION = 57881
const ST_GeometryCollectionFromText = 57882
const ST_GeometryFromText = 57883
const ST_LineStringFromText = 57884
const ST_MultiLineStringFromText = 57885
const ST_MultiPointFromText = 57886
const ST_MultiPolygonFromText = 57887
const ST_PointFromText = 57888
const ST_PolygonFromText = 57889
const ST_GeometryCollectionFromWKB = 57890
const ST_GeometryFromWKB = 57891
const ST_LineStringFromWKB = 57892
const ST_MultiLineStringFromWKB = 57893
const ST_MultiPointFromWKB = 57894
const ST_MultiPolygonFromWKB = 57895
const ST_PointFromWKB = 57896
const ST_PolygonFromWKB = 57897
const ST_AsBinary = 57898
const ST_AsText = 57899
const ST_Dimension = 57900
const ST_Envelope = 57901
const ST_IsSimple = 57902
const ST_IsEmpty = 57903
const ST_GeometryType = 57904
const ST_X = 57905
const ST_Y = 57906
const ST_Latitude = 57907
const ST_Longitude = 57908
const ST_EndPoint = 57909
const ST_IsClosed = 57910
const ST_Length = 57911
const ST_NumPoints = 57912
const ST_StartPoint = 57913
const ST_PointN = 57914
const ST_Area = 57915
const ST_Centroid = 57916
const ST_ExteriorRing = 57917
const ST_InteriorRingN = 57918
const ST_NumInteriorRings = 57919
const ST_NumGeometries = 57920
const ST_GeometryN = 57921
const ST_LongFromGeoHash = 57922
const ST_PointFromGeoHash = 57923
const ST_LatFromGeoHash = 57924
const ST_GeoHash = 57925
const ST_AsGeoJSON = 57926
const ST_GeomFromGeoJSON = 57927
const MATCH = 57928
const AGAINST = 57929
const BOOLEAN = 57930
const LANGUAGE = 57931
const WITH = 57932
const QUERY = 57933
const EXPANSION = 57934
const WITHOUT = 57935
const VALIDATION = 57936
const ROLLUP = 57937
const UNUSED = 57938
const ARRAY = 57939
const BYTE = 57940
const CUME_DIST = 57941
const DESCRIPTION = 57942
const DENSE_RANK = 57943
const EMPTY = 57944
const EXCEPT = 57945
const FIRST_VALUE = 57946
const GROUPING = 57947
const GROUPS = 57948
const JSON_TABLE = 57949
const LAG = 57950
const LAST_VALUE = 57951
const LATERAL = 57952
const LEAD = 57953
const NTH_VALUE = 57954
const NTILE = 57955
const OF = 57956
const OVER = 57957
const PERCENT_RANK = 57958
const RANK = 57959
const RECURSIVE = 57960
const ROW_NUMBER = 57961
const SYSTEM = 57962
const WINDOW = 57963
const ACTIVE = 57964
const ADMIN = 57965
const AUTOEXTEND_SIZE = 57966
const BUCKETS = 57967
const CLONE = 57968
const COLUMN_FORMAT = 57969
const COMPONENT = 57970
const DEFINITION = 57971
const ENFORCED = 57972
const ENGINE_ATTRIBUTE = 57973
const EXCLUDE = 57974
const FOLLOWING = 57975
const GET_MASTER_PUBLIC_KEY = 57976
const HISTOGRAM = 57977
const HISTORY = 57978
const INACTIVE = 57979
const INVISIBLE = 57980
const LOCKED = 57981
const MASTER_COMPRESSION_ALGORITHMS = 57982
const MASTER_PUBLIC_KEY_PATH = 57983
const MASTER_TLS_CIPHERSUITES = 57984
const MASTER_ZSTD_COMPRESSION_LEVEL = 57985
const NESTED = 57986
const NETWORK_NAMESPACE = 57987
const NOWAIT = 57988
const NULLS = 57989
const OJ = 57990
const OLD = 57991
const OPTIONAL = 57992
const ORDINALITY = 57993
const ORGANIZATION = 57994
const OTHERS = 57995
const PARTIAL = 57996
const PATH = 57997
const PERSIST = 57998
const PERSIST_ONLY = 57999
const PRECEDING = 58000
const PRIVILEGE_CHECKS_USER = 58001
const PROCESS = 58002
const RANDOM = 58003
const REFERENCE = 58004
const REQUIRE_ROW_FORMAT = 58005
const RESOURCE = 58006
const RESPECT = 58007
const RESTART = 58008
const RETAIN = 58009
const REUSE = 58010
const ROLE = 58011
const SECONDARY = 58012
const SECONDARY_ENGINE = 58013
const SECONDARY_ENGINE_ATTRIBUTE = 58014
const SECONDARY_LOAD = 58015
const SECONDARY_UNLOAD = 58016
const SIMPLE = 58017
const SKIP = 58018
const SRID = 58019
const THREAD_PRIORITY = 58020
const TIES = 58021
const UNBOUNDED = 58022
const VCPU = 58023
const VISIBLE = 58024
const RETURNING = 58025
const MANUAL = 58026
const PARALLEL = 58027
const QUALIFY = 58028
const TABLESAMPLE = 58029
const OUT = 58030
const INOUT = 58031
const FORMAT_BYTES = 58032
const FORMAT_PICO_TIME = 58033
const PS_CURRENT_THREAD_ID = 58034
const PS_THREAD_ID = 58035
const GTID_SUBSET = 58036
const GTID_SUBTRACT = 58037
const WAIT_FOR_EXECUTED_GTID_SET = 58038
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58039
const FORMAT = 58040
const TREE = 58041
const VITESS = 58042
const TRADITIONAL = 58043
const VTEXPLAIN = 58044
const VEXPLAIN = 58045
const PLAN = 58046
const LOCAL = 58047
const LOW_PRIORITY = 58048
const NO_WRITE_TO_BINLOG = 58049
const LOGS = 58050
const ERROR = 58051
const GENERAL = 58052
const HOSTS = 58053
const OPTIMIZER_COSTS = 58054
const USER_RESOURCES = 58055
const SLOW = 58056
const CHANNEL = 58057
const RELAY = 58058
const EXPORT = 58059
const CURRENT = 58060
const ROW = 58061
const ROWS = 58062
const AVG_ROW_LENGTH = 58063
const CONNECTION = 58064
const CHECKSUM = 58065
const DELAY_KEY_WRITE = 58066
const ENCRYPTION = 58067
const ENGINE = 58068
const INSERT_METHOD = 58069
const MAX_ROWS = 58070
const MIN_ROWS = 58071
const PACK_KEYS = 58072
const PASSWORD = 58073
const FIXED = 58074
const DYNAMIC = 58075
const COMPRESSED = 58076
const REDUNDANT = 58077
const COMPACT = 58078
const ROW_FORMAT = 58079
const STATS_AUTO_RECALC = 58080
const STATS_PERSISTENT = 58081
const STATS_SAMPLE_PAGES = 58082
const STORAGE = 58083
const MEMORY = 58084
const DISK = 58085
const PARTITIONS = 58086
const LINEAR = 58087
const RANGE = 58088
const LIST = 58089
const SUBPARTITION = 58090
const SUBPARTITIONS = 58091
const HASH = 58092

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 85,
	17, 85,
	-2, 5,
	-1, 54,
	1, 200,
	768, 200,
	-2, 208,
	-1, 55,
	149, 208,
	192, 208,
	374, 208,
	-2, 568,
	-1, 63,
	38, 829,
	264, 829,
	275, 829,
	310, 843,
	311, 843,
	-2, 831,
	-1, 68,
	266, 867,
	-2, 865,
	-1, 130,
	1, 201,
	768, 201,
	-2, 208,
	-1, 141,
	150, 453,
	269, 453,
	-2, 557,
	-1, 160,
	149, 208,
	192, 208,
	374, 208,
	-2, 577,
	-1, 761,
	178, 77,
	-2, 79,
	-1, 970,
	95, 1699,
	-2, 1527,
	-1, 971,
	95, 1700,
	237, 1704,
	-2, 1528,
	-1, 972,
	237, 1703,
	-2, 78,
	-1, 1058,
	65, 941,
	-2, 954,
	-1, 1063,
	263, 1682,
	-2, 1596,
	-1, 1140,
	274, 1154,
	279, 1154,
	-2, 464,
	-1, 1228,
	1, 625,
	768, 625,
	-2, 208,
	-1, 1550,
	237, 1704,
	-2, 1528,
	-1, 1763,
	65, 942,
	-2, 958,
	-1, 1764,
	65, 943,
	-2, 959,
	-1, 1840,
	149, 208,
	192, 208,
	374, 208,
	-2, 503,
	-1, 1917,
	150, 453,
	269, 453,
	-2, 557,
	-1, 1926,
	274, 1155,
	279, 1155,
	-2, 465,
	-1, 2374,
	237, 1708,
	-2, 1702,
	-1, 2375,
	237, 1704,
	-2, 1700,
	-1, 2492,
	149, 208,
	192, 208,
	374, 208,
	-2, 504,
	-1, 2499,
	28, 229,
	-2, 231,
	-1, 2973,
	86, 135,
	96, 135,
	-2, 1021,
	-1, 3037,
	743, 747,
	-2, 721,
	-1, 3271,
	55, 1641,
	-2, 1635,
	-1, 4115,
	743, 747,
	-2, 735,
	-1, 4155,
	16, 85,
	17, 85,
	165, 66,
	-2, 855,
	-1, 4211,
	165, 67,
	-2, 85,
	-1, 4225,
	98, 679,
	104, 679,
	114, 679,
	194, 679,
	195, 679,
	196, 679,
	197, 679,
	198, 679,
	199, 679,
	200, 679,
	201, 679,
	202, 679,
	203, 679,
	204, 679,
	205, 679,
	206, 679,
	207, 679,
	208, 679,
	209, 679,
	210, 679,
	211, 679,
	212, 679,
	213, 679,
	214, 679,
	215, 679,
	216, 679,
	217, 679,
	218, 679,
	219, 679,
	220, 679,
	221, 679,
	222, 679,
	223, 679,
	224, 679,
	225, 679,
	226, 679,
	227, 679,
	228, 679,
	229, 679,
	230, 679,
	231, 679,
	232, 679,
	233, 679,
	234, 679,
	235, 679,
	-2, 2093,
	-1, 4292,
	163, 72,
	165, 72,
	-2, 85,
	-1, 4357,
	165, 71,
	-2, 85,
	-1, 4364,
	16, 85,
	17, 85,
	-2, 76,
}

const yyPrivate = 57344

const yyLast = 59575

var yyAct = [...]int{
	986, 3754, 3755, 89, 981, 4322, 3753, 4211, 973, 2167,
	4317, 4306, 4332, 4097, 935, 793, 3398, 4269, 4193, 4270,
	934, 4223, 1297, 2489, 3548, 2046, 3703, 2179, 4147, 3412,
	4076, 3323, 2202, 3330, 1295, 3367, 3999, 3691, 2548, 2405,
	3783, 4212, 2403, 87, 3284, 6, 3207, 3376, 4213, 3396,
	4074, 3381, 3378, 939, 1843, 3377, 43, 3796, 3375, 3380,
	3338, 3379, 1172, 2558, 765, 3288, 3395, 2946, 3602, 3285,
	3588, 3807, 3096, 3121, 2444, 127, 974, 2460, 2463, 3624,
	3282, 3272, 2933, 759, 3578, 1900, 2527, 760, 1056, 3007,
	89, 3078, 3419, 3034, 2918, 2532, 3008, 2589, 1110, 3009,
	169, 2477, 2958, 42, 2939, 44, 2917, 2465, 1078, 755,
	1053, 1085, 1056, 2891, 2423, 2907, 2464, 2201, 2327, 2113,
	2163, 3069, 3122, 2567, 1924, 1942, 2359, 1120, 2452, 2326,
	1148, 155, 2534, 1062, 3000, 1135, 1832, 1130, 2975, 1812,
	762, 1055, 1077, 1059, 988, 3613, 936, 1798, 1781, 3287,
	1744, 2432, 109, 1563, 110, 2467, 2207, 775, 2138, 2127,
	1488, 1471, 105, 2042, 1931, 1080, 763, 1114, 1117, 1138,
	1118, 1141, 2523, 1136, 1137, 1831, 3791, 2524, 2889, 770,
	1095, 1097, 1817, 1221, 1066, 1766, 104, 2215, 2234, 1546,
	1522, 1285, 2054, 1060, 133, 1061, 2104, 131, 132, 2445,
	3549, 11, 10, 9, 138, 139, 112, 173, 1916, 1090,
	1051, 1232, 1226, 1064, 96, 111, 4209, 86, 103, 4307,
	1174, 1271, 1567, 1293, 2560, 2561, 2562, 2604, 752, 1089,
	3692, 3364, 2560, 1191, 1192, 1193, 1572, 1196, 1197, 1198,
	1199, 1220, 4131, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1111, 1177, 134, 695, 140, 3057, 3056, 1070, 4132, 3025,
	3684, 1050, 4247, 1152, 1800, 3086, 3087, 2008, 4126, 4127,
	2400, 2401, 3649, 3758, 3758, 2120, 2119, 2118, 2117, 1242,
	2116, 2115, 1071, 1068, 2, 1185, 2085, 1241, 692, 3022,
	693, 1104, 1052, 753, 2887, 1054, 2656, 3268, 1505, 2935,
	4105, 3027, 1151, 4273, 3386, 1796, 2593, 1485, 3211, 1803,
	1482, 1105, 4311, 4352, 737, 1126, 1079, 3383, 1125, 1124,
	4251, 1178, 1181, 1182, 1127, 4297, 4249, 4268, 134, 116,
	117, 118, 1801, 121, 3050, 3552, 1777, 4310, 196, 1804,
	197, 3386, 3551, 687, 2441, 4250, 3047, 731, 2440, 98,
	2592, 4248, 4077, 2852, 2125, 750, 751, 987, 3438, 4208,
	3995, 135, 1802, 1194, 3384, 1044, 1045, 1046, 1047, 3757,
	3757, 3994, 1058, 1038, 737, 4127, 1063, 178, 976, 1039,
	990, 991, 992, 977, 1176, 3697, 978, 979, 3698, 980,
	1128, 1175, 1049, 3390, 4283, 4005, 134, 1103, 1107, 938,
	4245, 3384, 3715, 1092, 1093, 1473, 3704, 993, 994, 1103,
	1107, 938, 4190, 2549, 2586, 1484, 4004, 2172, 4228, 3464,
	2434, 3319, 3714, 731, 1278, 2984, 1280, 1833, 2983, 1834,
	3390, 2985, 2888, 1501, 4194, 3798, 3085, 175, 3320, 3321,
	176, 2660, 2663, 2484, 2485, 2483, 731, 1502, 3068, 1503,
	1504, 2097, 2098, 2591, 1261, 1042, 1041, 4098, 731, 2996,
	731, 1266, 1267, 3028, 1277, 1279, 195, 726, 88, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 4198, 2661, 88, 88, 711, 90, 1290, 3387, 100,
	1262, 1483, 88, 1255, 3416, 1249, 1225, 1249, 1233, 1234,
	1250, 2050, 1250, 2502, 2501, 2543, 3446, 709, 1248, 3414,
	1247, 2942, 2943, 3444, 1466, 2949, 3143, 731, 2654, 2402,
	2096, 98, 745, 2100, 749, 3387, 3420, 4274, 743, 2537,
	1236, 3407, 4233, 3070, 100, 3821, 1998, 4047, 1472, 4048,
	1268, 1748, 732, 2950, 3035, 1275, 2568, 706, 4275, 1276,
	1269, 3671, 4231, 2913, 1237, 1792, 721, 3254, 2424, 1281,
	1195, 179, 4238, 4239, 2611, 3255, 98, 98, 2609, 1282,
	185, 716, 3340, 3341, 2630, 98, 2631, 2422, 2632, 4232,
	1999, 1465, 2000, 719, 1274, 1287, 729, 1264, 1265, 1263,
	2424, 3417, 1256, 1270, 730, 1229, 2927, 2657, 2928, 2658,
	3073, 1289, 3686, 1523, 2607, 3685, 3415, 1288, 3979, 1096,
	2608, 3599, 3408, 3409, 2571, 1122, 2633, 3762, 732, 2612,
	1201, 1200, 1537, 2610, 2461, 1132, 3435, 1170, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1532, 1531, 1533, 1534, 1169,
	1168, 732, 1167, 2051, 2618, 2614, 2616, 2617, 2615, 2619,
	2620, 2621, 2622, 732, 696, 732, 698, 712, 1166, 734,
	1165, 733, 702, 1164, 700, 704, 713, 705, 3023, 699,
	1163, 710, 1158, 1751, 701, 714, 715, 718, 722, 723,
	724, 720, 717, 1909, 708, 735, 1294, 1224, 1294, 1294,
	1171, 3339, 2536, 3210, 3144, 3342, 1131, 1829, 1115, 170,
	1132, 4353, 1113, 3342, 1143, 1115, 1106, 1100, 1098, 3362,
	1144, 1115, 4363, 98, 2433, 1180, 2043, 3090, 1106, 1100,
	1098, 1143, 1091, 3074, 2597, 1179, 2596, 2039, 1474, 1188,
	3591, 3258, 3059, 2912, 2431, 3219, 4262, 2430, 1056, 1547,
	1552, 1553, 732, 1556, 1558, 1559, 1560, 1561, 1562, 3029,
	1565, 1566, 1568, 1568, 2429, 1568, 1568, 1573, 1573, 1573,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1557, 1548, 4104, 3026, 1700, 1235,
	1702, 1703, 1704, 1705, 1706, 1544, 1800, 1283, 1540, 1541,
	1542, 1543, 1573, 1573, 1573, 1573, 1573, 1573, 1554, 1462,
	1129, 1463, 1464, 2590, 4150, 3713, 4110, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 3600, 3326, 3800, 3799, 3756, 3756, 3049, 171, 1830,
	1489, 731, 4196, 3045, 3682, 183, 1245, 1161, 1251, 1252,
	1253, 1254, 2010, 2009, 2011, 2012, 2013, 3647, 3648, 3650,
	1481, 1227, 2925, 1159, 3536, 2425, 736, 1246, 91, 3388,
	3389, 2040, 1291, 1292, 1537, 1569, 2028, 1570, 1571, 1739,
	4195, 3048, 3392, 3327, 1150, 2448, 191, 727, 2661, 1099,
	1062, 1150, 1150, 2662, 1574, 1575, 1930, 1240, 1741, 686,
	1737, 1099, 728, 3077, 1747, 4351, 3388, 3389, 3329, 3097,
	2892, 2894, 3067, 1056, 4243, 3066, 4093, 1056, 731, 3392,
	2588, 1227, 3218, 1056, 1538, 1539, 2540, 3638, 3324, 2940,
	3620, 1489, 2980, 97, 1259, 172, 177, 174, 180, 181,
	182, 184, 186, 187, 188, 189, 2945, 4336, 3340, 3341,
	1738, 190, 192, 193, 194, 3325, 3436, 1499, 2864, 2175,
	1062, 694, 2448, 1821, 1701, 1239, 1755, 2541, 3681, 2678,
	1759, 130, 2490, 1537, 2539, 1534, 1055, 4237, 97, 97,
	3318, 1788, 89, 2689, 1791, 1074, 1777, 97, 1517, 1286,
	3331, 2923, 4118, 124, 1173, 1244, 3677, 1149, 3612, 2435,
	2216, 2109, 3099, 1795, 1149, 1149, 2036, 1162, 2542, 1529,
	1530, 1532, 1531, 1533, 1534, 1929, 4235, 2217, 2538, 1835,
	1738, 4236, 4356, 1160, 1757, 1062, 1758, 1903, 109, 4258,
	110, 3117, 4318, 1225, 1219, 43, 4343, 4284, 1707, 1708,
	1709, 1710, 1711, 1712, 1272, 3238, 3236, 2055, 1499, 2027,
	1906, 1907, 1908, 2208, 1753, 1187, 1150, 1745, 1527, 1528,
	1529, 1530, 1532, 1531, 1533, 1534, 732, 3339, 1150, 3080,
	1495, 2689, 125, 1799, 3079, 1504, 3109, 3108, 3107, 3342,
	3816, 3101, 112, 3105, 3080, 3100, 2208, 3098, 2698, 3079,
	2446, 2447, 3103, 1225, 2893, 1785, 3655, 1922, 1223, 3654,
	1505, 3102, 1787, 1786, 1993, 2575, 2032, 1779, 2030, 2031,
	2029, 2033, 2034, 2035, 2243, 1503, 1504, 1983, 1984, 1939,
	3104, 3106, 2048, 1989, 1990, 1756, 1915, 1754, 2587, 1742,
	1052, 1938, 1928, 1934, 1150, 1782, 1784, 1932, 1932, 1794,
	1054, 1975, 1294, 732, 1944, 1792, 1945, 1150, 1947, 1949,
	1243, 1237, 1953, 1955, 1957, 1959, 1961, 2214, 1936, 2585,
	1258, 1495, 1826, 1827, 1487, 1789, 2580, 2446, 2447, 1149,
	1228, 1260, 1933, 2583, 1895, 1143, 1146, 1147, 1150, 1115,
	1161, 1149, 2580, 1140, 1144, 1971, 1153, 1143, 1974, 4334,
	1976, 1155, 4335, 1505, 4333, 1156, 1154, 1505, 1913, 1911,
	3328, 1925, 1912, 1273, 1139, 2024, 2056, 2025, 1222, 2584,
	2026, 1760, 1159, 2235, 4276, 1505, 1157, 2725, 2237, 1505,
	4160, 3639, 2242, 2238, 1224, 2582, 2239, 2240, 2241, 2735,
	2023, 2236, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2131, 2132, 2129, 2130, 1069, 4085, 1149, 1979, 1502,
	2018, 1503, 1504, 1143, 1146, 1147, 1777, 1115, 4358, 2044,
	1149, 1140, 1144, 2143, 2213, 1153, 1143, 4338, 2128, 4161,
	1155, 4278, 98, 4354, 1156, 1154, 2016, 3987, 2144, 1535,
	1536, 2142, 2364, 1126, 1224, 1505, 1125, 1124, 3266, 1505,
	1777, 1149, 2141, 1186, 196, 4086, 134, 1183, 1511, 1512,
	1513, 1514, 1515, 1516, 1510, 1507, 1505, 2998, 1777, 3986,
	2061, 4289, 1777, 2131, 2132, 2668, 2669, 135, 990, 991,
	992, 2017, 1294, 1294, 2005, 3710, 1505, 3711, 1523, 2057,
	2058, 3977, 3727, 178, 2083, 3726, 3662, 1505, 89, 3661,
	3651, 89, 1502, 2062, 1503, 1504, 1502, 2015, 1503, 1504,
	2069, 2070, 2071, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1532, 1531, 1533, 1534, 1502, 2082, 1503, 1504, 1502, 4355,
	1503, 1504, 1494, 1491, 1492, 1493, 1498, 1500, 1497, 2989,
	1496, 3365, 3358, 2105, 3005, 3004, 2105, 3003, 737, 2546,
	1490, 43, 2019, 175, 43, 2004, 176, 2003, 4287, 1777,
	2199, 1505, 2002, 2170, 2170, 2059, 2001, 2168, 2168, 2171,
	1991, 1985, 2063, 1982, 2065, 2066, 2067, 2068, 4204, 1777,
	1981, 2072, 195, 1525, 1526, 1527, 1528, 1529, 1530, 1532,
	1531, 1533, 1534, 2084, 1502, 1980, 1503, 1504, 1502, 1951,
	1503, 1504, 3332, 4260, 1752, 1468, 3336, 3119, 3644, 1829,
	737, 1739, 2987, 3335, 737, 1502, 2133, 1503, 1504, 2556,
	4361, 2555, 1062, 1494, 1491, 1492, 1493, 1498, 1500, 1497,
	1806, 1496, 1737, 4277, 2554, 1502, 2553, 1503, 1504, 4113,
	2552, 1490, 2551, 2254, 1505, 2737, 1502, 3337, 1503, 1504,
	1905, 4308, 3333, 4202, 1777, 1501, 1777, 3334, 2268, 2191,
	2180, 2181, 2182, 2183, 2193, 2184, 2185, 2186, 2198, 2194,
	2187, 2188, 2195, 2196, 2197, 2189, 2190, 2192, 4112, 1807,
	4089, 2146, 1738, 2148, 2149, 2150, 2151, 2152, 2153, 2155,
	2157, 2158, 2159, 2160, 2161, 2162, 2140, 2110, 2203, 2108,
	2106, 2107, 2108, 2106, 2107, 2090, 2091, 179, 2147, 4088,
	1502, 1505, 1503, 1504, 1548, 4087, 185, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1532, 1531, 1533, 1534, 2360, 1505,
	2145, 3982, 2209, 4264, 1777, 2685, 4200, 1777, 2351, 2352,
	2353, 2354, 2355, 3967, 2374, 1905, 1777, 2373, 3966, 1523,
	3815, 3453, 1519, 2278, 1520, 2376, 2372, 2174, 2379, 2380,
	3813, 1565, 1501, 1777, 1905, 4189, 1905, 4170, 2270, 1521,
	1535, 1536, 1518, 1505, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1532, 1531, 1533, 1534, 2218, 2219, 2220, 2221, 3723,
	106, 1505, 1736, 1502, 2397, 1503, 1504, 2362, 1735, 2232,
	107, 1734, 1523, 2253, 3089, 2694, 106, 115, 1905, 4166,
	1777, 2364, 108, 4067, 1777, 2361, 107, 3659, 114, 3643,
	113, 2439, 1777, 1523, 2363, 3421, 1776, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1532, 1531, 1533, 1534, 2371, 1505,
	985, 2377, 2378, 1505, 3418, 170, 2739, 2469, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1532, 1531, 1533, 1534, 3361,
	1502, 1777, 1503, 1504, 2374, 4009, 109, 2458, 110, 3695,
	4103, 1505, 3990, 1777, 1905, 3978, 2372, 1777, 1502, 3360,
	1503, 1504, 1523, 2693, 2677, 2407, 3071, 2499, 109, 3014,
	110, 3001, 1505, 1777, 2419, 3695, 1777, 1905, 3693, 4106,
	2471, 2580, 1777, 3618, 1777, 4014, 2139, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1532, 1531, 1533, 1534, 1505, 2413,
	1120, 2414, 1502, 1505, 1503, 1504, 115, 2819, 1777, 3351,
	3350, 4060, 1777, 3348, 3349, 4058, 1777, 114, 1733, 113,
	1502, 1727, 1503, 1504, 2651, 2395, 1505, 108, 1120, 2508,
	2509, 2510, 2511, 2427, 2503, 2643, 2504, 2505, 2506, 2507,
	2494, 2493, 1070, 4055, 1777, 3346, 3347, 2475, 3346, 3345,
	2513, 2420, 2910, 2515, 2516, 2517, 2518, 1505, 2955, 1777,
	2661, 3058, 1899, 3039, 4037, 1777, 108, 2426, 1502, 2642,
	1503, 1504, 1502, 2569, 1503, 1504, 2602, 2497, 2436, 2601,
	1505, 2529, 2443, 2453, 2454, 3032, 3033, 2173, 1777, 3615,
	3577, 1777, 1777, 2535, 1505, 3570, 1777, 3611, 2408, 1505,
	1502, 2456, 1503, 1504, 108, 2086, 2481, 1523, 1104, 2480,
	2479, 2052, 2014, 2006, 1996, 2496, 2495, 1992, 3567, 1777,
	2566, 1502, 1988, 1503, 1504, 1987, 1986, 1808, 1105, 2545,
	2908, 1284, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532,
	1531, 1533, 1534, 1905, 1904, 2976, 2976, 1502, 4013, 1503,
	1504, 1152, 1502, 2574, 1503, 1504, 2577, 3614, 2578, 3971,
	1505, 1932, 2687, 2530, 171, 2526, 2519, 2521, 2522, 1777,
	2544, 183, 2686, 2594, 3970, 1502, 3597, 1503, 1504, 1899,
	1898, 2947, 1505, 1841, 1840, 114, 3565, 1777, 3036, 1505,
	1151, 3528, 1777, 2530, 1505, 2576, 2573, 2572, 1505, 2595,
	2598, 3019, 1505, 2498, 2599, 2600, 1502, 1505, 1503, 1504,
	3283, 1505, 191, 2977, 2977, 1505, 2947, 1501, 3313, 2581,
	4145, 3611, 1505, 2979, 2661, 4117, 2666, 1505, 2661, 1502,
	1905, 1503, 1504, 1057, 4081, 1056, 1056, 1056, 2606, 2955,
	3556, 2605, 3348, 1502, 2954, 1503, 1504, 3241, 1502, 2482,
	1503, 1504, 3526, 1777, 2819, 1558, 2722, 1558, 2955, 1501,
	2721, 172, 177, 174, 180, 181, 182, 184, 186, 187,
	188, 189, 2580, 2681, 3522, 1777, 2563, 190, 192, 193,
	194, 3519, 1777, 2580, 100, 2451, 3517, 1777, 2438, 1793,
	3515, 1777, 2398, 3611, 3513, 1777, 2173, 2111, 2374, 3511,
	1777, 2373, 2095, 3633, 2636, 2955, 1505, 3509, 1777, 1502,
	2684, 1503, 1504, 1505, 3507, 1777, 98, 1505, 2038, 3505,
	1777, 1828, 1134, 2199, 3663, 1505, 1133, 98, 4241, 1505,
	4172, 1502, 4001, 1503, 1504, 3968, 3828, 128, 1502, 3676,
	1503, 1504, 3673, 1502, 3657, 1503, 1504, 1502, 2704, 1503,
	1504, 1502, 1505, 1503, 1504, 3469, 1502, 2653, 1503, 1504,
	1502, 1505, 1503, 1504, 1502, 2719, 1503, 1504, 3468, 1901,
	2528, 1502, 2659, 1503, 1504, 1505, 1502, 3370, 1503, 1504,
	3366, 3664, 3665, 3666, 2674, 3368, 2676, 3264, 2667, 3040,
	1505, 2525, 2670, 2671, 2672, 2679, 1810, 2680, 3503, 1777,
	2140, 2673, 1505, 2520, 3011, 3501, 1777, 1505, 3413, 3499,
	1777, 2675, 2514, 2512, 2021, 1927, 1227, 3497, 1777, 1923,
	2682, 3572, 2191, 2180, 2181, 2182, 2183, 2193, 2184, 2185,
	2186, 2198, 2194, 2187, 2188, 2195, 2196, 2197, 2189, 2190,
	2192, 1897, 126, 3667, 3495, 1777, 4002, 2645, 2646, 3625,
	3626, 1505, 2648, 3493, 1777, 1502, 1505, 1503, 1504, 2543,
	2411, 2649, 1502, 2697, 1503, 1504, 1502, 1809, 1503, 1504,
	1505, 3631, 4303, 2863, 1502, 4301, 1503, 1504, 1502, 4271,
	1503, 1504, 3491, 1777, 4125, 2088, 1505, 4042, 3630, 3628,
	3596, 3595, 1505, 3010, 3489, 1777, 3668, 3669, 3670, 3475,
	1777, 1502, 3594, 1503, 1504, 2895, 88, 45, 46, 90,
	1502, 3283, 1503, 1504, 2170, 3259, 2637, 2733, 2168, 2898,
	1505, 691, 4121, 3305, 1502, 95, 1503, 1504, 3306, 49,
	78, 79, 4003, 76, 80, 3303, 1505, 3302, 1056, 1502,
	3304, 1503, 1504, 3451, 1777, 77, 2896, 3011, 2884, 1777,
	3301, 1502, 2089, 1503, 1504, 2442, 1502, 100, 1503, 1504,
	1072, 2952, 2953, 4279, 3307, 1505, 2964, 2965, 1805, 1505,
	2469, 4350, 2397, 1056, 2972, 1505, 2417, 64, 2882, 1777,
	2851, 3619, 3246, 3245, 2857, 1777, 3604, 4084, 1967, 98,
	4348, 1505, 3808, 2899, 3603, 2901, 3782, 754, 3781, 1505,
	1502, 3806, 1503, 1504, 1062, 1502, 2951, 1503, 1504, 1505,
	2139, 1073, 3568, 1062, 43, 3607, 1505, 1075, 2932, 1502,
	1505, 1503, 1504, 2969, 3270, 1076, 2971, 2037, 2834, 1777,
	1040, 3273, 3275, 3344, 2994, 1502, 3015, 1503, 1504, 85,
	3276, 1502, 2916, 1503, 1504, 1968, 1969, 1970, 2970, 2886,
	2629, 3780, 2941, 3429, 1745, 2628, 2627, 2826, 1777, 2216,
	1505, 2817, 1777, 2626, 1505, 2625, 2624, 2815, 1777, 1502,
	1505, 1503, 1504, 1738, 2911, 2915, 2217, 2914, 1505, 2997,
	2999, 2906, 3044, 1799, 4102, 1502, 2930, 1503, 1504, 1084,
	2623, 2944, 3974, 2990, 2974, 2929, 2136, 2134, 2135, 3013,
	3010, 2802, 1777, 1083, 3016, 3017, 1505, 1190, 2800, 1777,
	1189, 1505, 2798, 1777, 1502, 2978, 1503, 1504, 1502, 2981,
	1503, 1504, 3055, 3083, 1502, 1467, 1503, 1504, 2535, 2988,
	2991, 4294, 3046, 1963, 135, 92, 56, 59, 58, 61,
	1502, 75, 1503, 1504, 84, 81, 3609, 4157, 1502, 3002,
	1503, 1504, 2796, 1777, 106, 1505, 2794, 1777, 1502, 108,
	1503, 1504, 4156, 3678, 107, 1502, 3012, 1503, 1504, 1502,
	3534, 1503, 1504, 4330, 1505, 3263, 3020, 63, 94, 93,
	1505, 2640, 73, 74, 60, 1505, 1964, 1965, 1966, 3052,
	82, 83, 2453, 2454, 4207, 1915, 3997, 3343, 2792, 1777,
	3041, 3042, 2968, 2790, 1777, 2437, 1121, 3093, 3094, 1502,
	4295, 1503, 1504, 1502, 106, 1503, 1504, 3244, 3051, 1502,
	108, 1503, 1504, 3113, 107, 3243, 3579, 1502, 1505, 1503,
	1504, 115, 1505, 2665, 4155, 66, 2094, 67, 68, 69,
	70, 1505, 114, 3053, 113, 2093, 1505, 2788, 1777, 3072,
	113, 114, 108, 1505, 4066, 1502, 3075, 1503, 1504, 3110,
	1502, 4065, 1503, 1504, 1505, 3091, 2786, 1777, 1505, 115,
	4045, 3814, 2784, 1777, 3812, 3811, 3793, 2782, 1777, 3674,
	114, 3589, 113, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3608, 1505, 3606, 3371, 2564, 1910, 1082,
	1733, 62, 3792, 3145, 1502, 1731, 1503, 1504, 3111, 3766,
	1729, 2947, 2910, 1730, 1728, 3147, 1732, 115, 4305, 4304,
	2780, 1777, 3095, 1502, 3530, 1503, 1504, 2723, 114, 1502,
	3112, 1503, 1504, 3466, 1502, 2409, 1503, 1504, 2778, 1777,
	1822, 1505, 1814, 119, 120, 3092, 3006, 4304, 4305, 4090,
	3642, 4154, 3, 3205, 5, 3187, 3465, 3189, 3149, 102,
	2776, 1777, 1, 1048, 1470, 1469, 3081, 1778, 1780, 3082,
	2360, 3646, 2360, 3200, 3201, 3202, 3203, 1502, 4230, 1503,
	1504, 1502, 707, 1503, 1504, 2399, 2774, 1777, 1743, 4272,
	1502, 91, 1503, 1504, 1505, 1502, 4226, 1503, 1504, 3223,
	4227, 2007, 1502, 3214, 1503, 1504, 1997, 3705, 2325, 3998,
	3794, 2469, 3795, 1502, 3797, 1503, 1504, 1502, 3374, 1503,
	1504, 2960, 2963, 2964, 2965, 2961, 2570, 2962, 2966, 3672,
	3138, 3625, 3626, 2772, 1777, 756, 2533, 1142, 3185, 2362,
	160, 2362, 1505, 1502, 1865, 1503, 1504, 2491, 2492, 4184,
	123, 3290, 1108, 89, 122, 1145, 2469, 2469, 2469, 2469,
	2469, 1257, 2565, 3696, 2471, 3195, 3196, 3197, 3198, 3199,
	2995, 2500, 1847, 1845, 1505, 3248, 2469, 3212, 1505, 2469,
	3223, 3222, 3213, 1846, 3215, 1844, 2770, 1777, 1849, 3250,
	1502, 1505, 1503, 1504, 1848, 1505, 1062, 4149, 3437, 3295,
	1505, 97, 2724, 2048, 3234, 1905, 1059, 1505, 3535, 2471,
	2471, 2471, 2471, 2471, 2099, 744, 3312, 2967, 738, 1505,
	3249, 3240, 3247, 3235, 3237, 3239, 3260, 3261, 3262, 2471,
	3257, 198, 2471, 1836, 2768, 1777, 1815, 2092, 3391, 1184,
	697, 3277, 3278, 1502, 3352, 1503, 1504, 2603, 3399, 1081,
	703, 1555, 1087, 1087, 3314, 2087, 1060, 3315, 1061, 3242,
	2982, 1505, 3403, 3400, 3297, 3298, 3457, 3300, 3404, 3308,
	2763, 1777, 3296, 3356, 3357, 3299, 1102, 1505, 109, 3294,
	110, 3316, 1505, 2759, 1777, 1094, 2410, 2757, 1777, 3280,
	3322, 1502, 3455, 1503, 1504, 1505, 3286, 2900, 1101, 2750,
	1777, 3286, 1852, 3975, 3353, 3291, 3355, 3601, 3354, 3269,
	3271, 2748, 1777, 2934, 72, 2960, 2963, 2964, 2965, 2961,
	3274, 2962, 2966, 1502, 3267, 1503, 1504, 1502, 4083, 1503,
	1504, 3372, 3805, 4293, 2535, 3393, 4171, 2992, 1811, 3555,
	1502, 2696, 1503, 1504, 1502, 3410, 1503, 1504, 2206, 1502,
	1545, 1503, 1504, 2880, 769, 2468, 1502, 940, 1503, 1504,
	1797, 1505, 3761, 2126, 767, 3422, 3425, 3424, 1502, 2879,
	1503, 1504, 766, 764, 2875, 2902, 2948, 3432, 1509, 1508,
	975, 2890, 3373, 3439, 3440, 1823, 3441, 2874, 3442, 3443,
	2959, 3445, 2957, 3447, 2956, 1866, 2638, 3458, 3459, 3460,
	3461, 3462, 2476, 1505, 3627, 3623, 4222, 2470, 2466, 2909,
	1502, 926, 1503, 1504, 925, 776, 768, 1558, 758, 989,
	3031, 1558, 924, 923, 3401, 1505, 1502, 3402, 1503, 1504,
	2924, 1502, 1790, 1503, 1504, 4349, 3265, 3580, 2926, 3582,
	2993, 3253, 1505, 1486, 1502, 1762, 1503, 1504, 1765, 2418,
	1783, 3434, 3590, 2873, 1505, 4108, 2664, 3433, 3463, 1505,
	1761, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 4115, 1888,
	1889, 1891, 1892, 1890, 1893, 1894, 1867, 1868, 1869, 1870,
	1850, 1851, 1880, 3382, 1853, 3690, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 2872, 3363, 1863, 1871, 1872,
	1873, 1874, 3037, 1875, 1876, 1877, 1878, 2557, 71, 1864,
	1502, 47, 1503, 1504, 2469, 3587, 4075, 2871, 3289, 4146,
	1505, 918, 3581, 1739, 3583, 3585, 915, 3640, 3763, 1505,
	3550, 3764, 3765, 3208, 2870, 3209, 4128, 3554, 4129, 1505,
	914, 3403, 3400, 3641, 1505, 4130, 2861, 3404, 1505, 2263,
	3598, 2860, 1502, 3605, 1503, 1504, 1505, 3557, 1480, 3559,
	3560, 3561, 1477, 3622, 3021, 3610, 2101, 2471, 1505, 101,
	37, 3427, 3428, 1505, 1502, 2211, 1503, 1504, 1505, 3629,
	2212, 36, 3636, 3637, 1505, 3632, 35, 34, 33, 27,
	3634, 1502, 3635, 1503, 1504, 26, 25, 24, 23, 3652,
	3653, 30, 1505, 1502, 20, 1503, 1504, 22, 1502, 1505,
	1503, 1504, 2859, 21, 19, 4315, 4316, 1505, 2274, 4342,
	3658, 2858, 3660, 4210, 1505, 4151, 3385, 4267, 4329, 1505,
	129, 2855, 4321, 4216, 57, 54, 2850, 52, 137, 136,
	2843, 55, 1505, 53, 51, 50, 1505, 3683, 2842, 1230,
	1505, 3687, 3688, 3689, 48, 99, 1505, 32, 31, 18,
	2841, 17, 16, 15, 14, 2840, 13, 12, 8, 1502,
	2839, 1503, 1504, 1505, 7, 40, 2838, 39, 1502, 1505,
	1503, 1504, 3700, 3701, 38, 1505, 29, 3702, 1502, 28,
	1503, 1504, 41, 1502, 2837, 1503, 1504, 1502, 2357, 1503,
	1504, 2836, 4, 3024, 2559, 1502, 0, 1503, 1504, 2835,
	0, 0, 0, 0, 1881, 3717, 2829, 1502, 0, 1503,
	1504, 2828, 1502, 0, 1503, 1504, 0, 1502, 2389, 1503,
	1504, 0, 0, 1502, 2827, 1503, 1504, 1505, 2824, 0,
	0, 0, 2823, 1505, 3728, 1778, 2396, 0, 2822, 1505,
	0, 1502, 0, 1503, 1504, 0, 0, 0, 1502, 1505,
	1503, 1504, 0, 3750, 1505, 2820, 1502, 0, 1503, 1504,
	1505, 2813, 0, 1502, 1505, 1503, 1504, 2810, 1502, 3779,
	1503, 1504, 3786, 1505, 3788, 3769, 2421, 3770, 3771, 3772,
	0, 1502, 1505, 1503, 1504, 1502, 0, 1503, 1504, 1502,
	0, 1503, 1504, 0, 0, 1502, 3722, 1503, 1504, 3759,
	0, 0, 0, 1505, 0, 3290, 0, 0, 89, 0,
	3290, 0, 1502, 3787, 1503, 1504, 1505, 3789, 1502, 2808,
	1503, 1504, 0, 0, 1502, 2806, 1503, 1504, 2170, 0,
	0, 2765, 2168, 3830, 0, 0, 0, 0, 0, 0,
	0, 2745, 0, 0, 0, 3820, 2744, 0, 3790, 0,
	0, 1062, 2740, 3822, 0, 0, 2738, 0, 0, 0,
	3810, 43, 3809, 0, 0, 2730, 0, 0, 0, 0,
	3819, 3817, 0, 3981, 2701, 0, 1502, 0, 1503, 1504,
	0, 0, 1502, 1506, 1503, 1504, 3394, 0, 1502, 0,
	1503, 1504, 3831, 3832, 0, 2695, 0, 3834, 1502, 2547,
	1503, 1504, 0, 1502, 0, 1503, 1504, 0, 2690, 1502,
	0, 1503, 1504, 1502, 1564, 1503, 1504, 0, 0, 3988,
	0, 0, 1502, 0, 1503, 1504, 0, 0, 3973, 4000,
	3972, 1502, 0, 1503, 1504, 3993, 0, 3983, 3984, 3985,
	0, 0, 0, 0, 3992, 4039, 4040, 0, 3286, 1767,
	0, 0, 1502, 2170, 1503, 1504, 0, 2168, 4043, 3824,
	0, 0, 0, 1775, 0, 1502, 1768, 1503, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2415, 2416, 1774, 1772, 1773, 1769, 0, 1770, 0,
	4046, 0, 0, 0, 4049, 0, 0, 0, 0, 0,
	4063, 4091, 3290, 0, 0, 0, 4079, 4069, 0, 4071,
	0, 1771, 0, 3826, 0, 0, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696,
	1697, 1698, 1699, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 4073, 4072, 4095,
	4094, 4092, 4044, 0, 0, 0, 0, 0, 0, 0,
	4109, 2683, 3289, 0, 0, 2688, 0, 3289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2691, 0,
	2692, 0, 0, 0, 1739, 0, 2700, 0, 1813, 0,
	2702, 2703, 0, 4111, 0, 0, 3679, 3680, 4114, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 0,
	2720, 1062, 4099, 4116, 0, 0, 0, 0, 0, 0,
	3980, 43, 0, 0, 0, 0, 1902, 0, 0, 0,
	0, 0, 0, 2726, 2727, 2728, 2729, 0, 2731, 2732,
	4123, 2734, 0, 0, 0, 2736, 0, 0, 4133, 2741,
	2742, 89, 2743, 0, 0, 2746, 2747, 2749, 2751, 2752,
	2753, 2754, 2755, 2756, 2758, 2760, 2761, 2762, 2764, 4168,
	2766, 2767, 2769, 2771, 2773, 2775, 2777, 2779, 2781, 2783,
	2785, 2787, 2789, 2791, 2793, 2795, 2797, 2799, 2801, 2803,
	2804, 2805, 4153, 2807, 4144, 2809, 0, 2811, 2812, 4152,
	2814, 2816, 2818, 0, 43, 4162, 2821, 4159, 0, 4158,
	2825, 4173, 1739, 0, 2830, 2831, 2832, 2833, 0, 0,
	0, 4197, 4000, 4186, 4183, 4182, 89, 2844, 2845, 2846,
	2847, 2848, 2849, 4176, 0, 2853, 2854, 4181, 4178, 4134,
	0, 4177, 4135, 2856, 4175, 4180, 4205, 4179, 2862, 1767,
	2053, 0, 0, 2865, 2866, 2867, 2868, 2869, 0, 3289,
	0, 0, 0, 1775, 2876, 2877, 1768, 2878, 0, 0,
	2881, 2883, 2421, 4229, 2885, 4234, 0, 0, 4257, 43,
	4221, 0, 89, 4246, 2897, 4197, 0, 0, 0, 4244,
	0, 1763, 1764, 1774, 1772, 1773, 1769, 0, 1770, 0,
	0, 0, 0, 0, 0, 4256, 0, 3286, 4164, 0,
	0, 0, 4169, 0, 0, 0, 2931, 0, 0, 0,
	0, 1771, 0, 4259, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 43, 2048, 0, 4292, 4281,
	4261, 4282, 2170, 0, 0, 0, 2168, 4299, 0, 4266,
	4285, 0, 4291, 0, 0, 0, 4296, 0, 4302, 4300,
	4298, 0, 0, 89, 0, 4319, 0, 0, 0, 0,
	0, 0, 0, 4309, 0, 4197, 0, 0, 0, 3403,
	3400, 4320, 0, 4331, 43, 3404, 0, 0, 4337, 0,
	4339, 0, 89, 0, 0, 0, 0, 4344, 0, 0,
	0, 0, 3976, 0, 4259, 0, 0, 0, 0, 4252,
	0, 0, 0, 0, 89, 0, 43, 4107, 0, 0,
	0, 4357, 0, 0, 4360, 0, 0, 2170, 89, 89,
	0, 2168, 4362, 0, 4366, 89, 4364, 4367, 4040, 4365,
	4347, 0, 0, 0, 0, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 0, 4259,
	0, 0, 0, 0, 0, 0, 4259, 0, 0, 0,
	0, 43, 43, 0, 0, 0, 0, 0, 43, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2121, 2122, 2123,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4096, 0, 0, 0, 2176, 2177,
	0, 0, 0, 0, 2200, 0, 0, 2204, 2205, 0,
	0, 0, 2210, 0, 0, 0, 0, 0, 0, 0,
	0, 3123, 3124, 3125, 3126, 3127, 0, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 0, 2233, 0,
	0, 3142, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2264, 0, 2269, 0, 2271, 2272, 2273, 0, 2275, 2276,
	2277, 0, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 0, 0, 0, 4101, 0, 2356, 0, 2358, 0,
	2365, 2366, 2367, 2368, 2369, 2370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 4119, 2390, 2391,
	2392, 2393, 2394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1038, 2449, 2450, 4163, 0, 976,
	1039, 990, 991, 992, 977, 0, 0, 978, 979, 3292,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2488, 0, 0, 0, 0, 0, 3310, 993, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2531, 0, 0, 0, 0, 0, 0,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 4198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3431, 0, 4280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3448, 3449, 0,
	3450, 3452, 3454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3467, 0,
	0, 0, 0, 3470, 0, 3472, 3473, 3474, 3476, 3477,
	3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
	3488, 3490, 3492, 3494, 3496, 3498, 3500, 3502, 3504, 3506,
	3508, 3510, 3512, 3514, 3516, 3518, 3520, 3521, 3523, 3524,
	3525, 3527, 0, 0, 3529, 0, 3531, 3532, 3533, 0,
	0, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545,
	3546, 3547, 0, 3408, 3409, 0, 0, 0, 0, 0,
	3553, 0, 0, 0, 3558, 0, 0, 0, 3562, 3563,
	0, 3564, 3566, 0, 3569, 3571, 0, 3573, 3574, 3575,
	3576, 0, 0, 0, 0, 0, 0, 3584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3616, 3617, 0,
	0, 3621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 2699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2705, 2706, 2707, 2708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 1564,
	0, 201, 3694, 0, 196, 742, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 135, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 3712, 0, 178, 3716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 201, 748, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 168, 3729, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 1038, 0, 0, 2364, 0, 0, 1039, 0,
	0, 0, 0, 175, 0, 0, 176, 0, 2169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	167, 166, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3752, 4196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3760, 0, 0, 0, 0,
	0, 0, 3767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4195, 0, 0, 0, 0, 0, 1813, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	0, 0, 0, 0, 0, 161, 142, 164, 149, 141,
	0, 162, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 151, 146, 147, 148, 152, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 3989, 0, 0,
	0, 0, 154, 0, 0, 0, 3996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4006, 4007, 4008, 0, 4010,
	0, 4011, 4012, 0, 0, 0, 0, 4015, 4016, 4017,
	4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027,
	4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 0,
	4038, 4041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4050, 4051, 4052, 4053,
	4054, 4056, 4057, 4059, 4061, 4062, 4064, 0, 0, 0,
	4068, 0, 0, 0, 4070, 170, 0, 0, 0, 0,
	0, 4080, 3088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3114,
	3115, 3116, 0, 0, 3118, 0, 0, 3120, 0, 0,
	4100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4265, 3139, 3140, 3141,
	0, 0, 0, 0, 0, 1865, 3146, 0, 0, 0,
	0, 3148, 0, 0, 3150, 3151, 3152, 0, 0, 0,
	3153, 3154, 0, 0, 3155, 0, 3156, 0, 0, 0,
	0, 165, 0, 3157, 0, 3158, 0, 0, 0, 3159,
	0, 3160, 0, 0, 3161, 0, 3162, 0, 3163, 0,
	3164, 0, 3165, 0, 3166, 0, 3167, 0, 3168, 0,
	3169, 0, 3170, 0, 3171, 0, 3172, 0, 3173, 0,
	3174, 0, 3175, 0, 3176, 0, 3177, 0, 3178, 0,
	0, 0, 3179, 0, 3180, 0, 3181, 0, 0, 3182,
	0, 3183, 0, 3184, 0, 2328, 3186, 0, 0, 3188,
	0, 0, 3190, 3191, 3192, 3193, 0, 0, 0, 0,
	3194, 2328, 2328, 2328, 2328, 2328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3204, 0, 0, 0,
	0, 0, 0, 0, 3217, 0, 0, 3221, 0, 0,
	158, 0, 0, 159, 0, 0, 3224, 3225, 3226, 3227,
	3228, 3229, 0, 0, 0, 3230, 3231, 0, 3232, 0,
	3233, 0, 0, 1852, 0, 0, 0, 201, 0, 201,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1087, 0, 4124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 748, 748,
	4139, 0, 0, 0, 0, 0, 4142, 0, 4143, 0,
	0, 0, 191, 3281, 0, 0, 0, 0, 0, 0,
	748, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4167, 0, 0, 0, 3311, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	4192, 172, 177, 174, 180, 181, 182, 184, 186, 187,
	188, 189, 0, 4199, 4201, 4203, 0, 190, 192, 193,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3369, 0, 0, 0, 0, 0,
	4220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4242, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 0,
	1888, 1889, 1891, 1892, 1890, 1893, 1894, 1867, 1868, 1869,
	1870, 1850, 1851, 1880, 0, 1853, 0, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 0, 0, 1863, 1871,
	1872, 1873, 1874, 0, 1875, 1876, 1877, 1878, 0, 4263,
	1864, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3456, 135, 0, 157, 0,
	4286, 4288, 4290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4314, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 4340,
	4341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4359, 0, 0, 0, 1918, 1919, 167,
	166, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 748, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 201, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 1920, 164, 0, 1917, 0,
	162, 163, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 748, 0, 0, 0, 0, 179, 0, 0, 748,
	0, 0, 1550, 748, 0, 185, 748, 748, 748, 748,
	0, 748, 3675, 748, 748, 0, 748, 748, 748, 748,
	748, 748, 0, 0, 0, 0, 0, 0, 0, 1550,
	748, 748, 1550, 748, 1550, 201, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 3699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 748, 0, 0,
	201, 201, 0, 0, 0, 0, 0, 3718, 0, 3719,
	0, 3720, 0, 3721, 0, 0, 0, 201, 0, 0,
	0, 3724, 3725, 0, 201, 0, 0, 0, 0, 0,
	0, 3730, 0, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 748, 0, 170, 3731, 0, 3732, 0, 3733,
	0, 3734, 0, 3735, 0, 3736, 0, 3737, 0, 3738,
	0, 3739, 0, 3740, 0, 3741, 0, 3742, 0, 3743,
	0, 3744, 0, 3745, 0, 3746, 0, 0, 3747, 0,
	0, 0, 3748, 0, 3749, 0, 0, 0, 0, 0,
	3751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3768, 0, 0, 0, 0, 0, 0, 0,
	0, 3773, 0, 3774, 3775, 0, 3776, 0, 3777, 0,
	970, 0, 0, 3778, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 3818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3827, 0, 0, 3829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 725, 0, 3833, 0, 0, 0,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3969, 0, 0, 0, 0, 0, 0,
	0, 689, 748, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 196,
	0, 1043, 0, 0, 0, 0, 0, 0, 201, 158,
	1914, 0, 159, 0, 0, 747, 0, 747, 0, 747,
	0, 0, 135, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 171, 0, 0, 1116, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 927, 0, 0, 1550, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 4078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1918, 1919, 167, 166, 195, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 0, 0, 0, 0, 0, 190, 192, 193, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 1119, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2375, 0, 0, 0, 0, 0, 0, 0,
	161, 1920, 164, 0, 1917, 0, 162, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 748,
	0, 0, 2375, 201, 0, 201, 0, 201, 201, 0,
	0, 0, 0, 0, 88, 45, 46, 90, 0, 0,
	0, 0, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 4136, 0, 95, 4137, 0, 4138, 49, 78, 79,
	0, 76, 80, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 64, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 0,
	0, 0, 748, 0, 0, 0, 0, 0, 748, 748,
	0, 0, 748, 0, 748, 0, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 85, 4240, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 0,
	748, 0, 0, 0, 748, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4253, 0, 4254, 0,
	4255, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	201, 0, 0, 201, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 201, 92, 56, 59, 58, 61, 0, 75,
	0, 0, 84, 81, 0, 158, 0, 0, 159, 0,
	0, 0, 0, 4312, 0, 4313, 0, 1231, 201, 1238,
	0, 0, 0, 0, 0, 201, 747, 1461, 747, 747,
	748, 0, 0, 0, 0, 63, 94, 93, 0, 171,
	73, 74, 60, 0, 4345, 4346, 183, 0, 82, 83,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 1476, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 1852, 65, 66, 0, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 1550, 0, 2375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 177, 174, 180,
	181, 182, 184, 186, 187, 188, 189, 0, 0, 0,
	0, 0, 190, 192, 193, 194, 0, 0, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	1879, 1882, 1883, 1884, 1885, 1886, 1887, 0, 1888, 1889,
	1891, 1892, 1890, 1893, 1894, 1867, 1868, 1869, 1870, 1850,
	1851, 1880, 0, 1853, 0, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 0, 0, 1863, 1871, 1872, 1873,
	1874, 0, 1875, 1876, 1877, 1878, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 747, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	748, 748, 748, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 747, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 747, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	1842, 747, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 1549, 747, 0, 0, 747, 747, 747, 747,
	0, 747, 0, 747, 747, 0, 747, 747, 747, 747,
	747, 747, 72, 0, 748, 0, 0, 0, 0, 1549,
	747, 747, 1549, 747, 1549, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 0,
	0, 0, 748, 1881, 0, 0, 748, 748, 0, 0,
	0, 748, 0, 0, 0, 1977, 0, 0, 747, 0,
	0, 1749, 1750, 0, 0, 0, 0, 1550, 748, 0,
	0, 0, 0, 0, 747, 0, 0, 747, 201, 201,
	201, 201, 201, 201, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 201, 201, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 747, 0, 0, 0, 0, 2060, 0, 1896,
	0, 0, 201, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 0, 0, 1112, 0, 1926, 0, 748, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 1937, 0,
	0, 1940, 1941, 1943, 1943, 0, 1943, 0, 1943, 1943,
	0, 1952, 1943, 1943, 1943, 1943, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 1112, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 45, 46, 90, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 49, 78, 79, 2041,
	76, 80, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 45,
	46, 90, 0, 0, 64, 0, 0, 1296, 0, 0,
	0, 0, 747, 747, 0, 0, 98, 95, 0, 0,
	0, 49, 78, 79, 0, 76, 80, 747, 0, 0,
	0, 0, 0, 748, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 2114, 64,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 98, 0, 0, 0, 4318, 0, 0, 747, 0,
	0, 201, 201, 201, 0, 201, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	1550, 85, 0, 748, 748, 1550, 201, 201, 201, 201,
	201, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 201, 0, 201, 0, 0, 201,
	201, 201, 92, 56, 59, 58, 61, 0, 75, 0,
	0, 84, 81, 0, 4157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 1296, 4156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2102, 0, 63, 94, 93, 0, 0, 73,
	74, 60, 0, 748, 0, 0, 1550, 82, 83, 0,
	0, 748, 0, 0, 0, 0, 201, 92, 56, 59,
	58, 61, 0, 75, 0, 0, 84, 81, 0, 4157,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 4156, 201, 0, 0, 201, 0,
	0, 4155, 66, 2164, 67, 68, 69, 70, 0, 63,
	94, 93, 0, 0, 73, 74, 60, 0, 0, 0,
	0, 0, 82, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4155, 66, 62, 67,
	68, 69, 70, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 928, 0,
	0, 0, 747, 62, 0, 2455, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 2462, 0, 0, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 0, 201, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	201, 0, 0, 0, 0, 0, 199, 0, 0, 690,
	747, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	0, 0, 747, 0, 0, 0, 0, 2412, 747, 747,
	0, 0, 747, 91, 747, 0, 1067, 0, 0, 0,
	747, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 1088, 0, 0, 0,
	0, 2428, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 747, 0, 0, 97, 0,
	747, 0, 0, 0, 747, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 1296, 0, 0,
	0, 748, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 748, 748, 748, 748, 0, 0,
	0, 0, 2114, 0, 0, 0, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2634,
	2635, 0, 0, 2639, 0, 1119, 0, 0, 0, 0,
	0, 2550, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 72, 2647, 0, 0, 0, 0, 1112, 0, 0,
	747, 0, 0, 1119, 1935, 0, 0, 1935, 0, 1935,
	0, 0, 0, 0, 0, 2579, 0, 0, 2650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 2164, 72, 0, 0, 2164,
	2164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 748, 0, 201, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 201, 201, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 0, 0, 201, 0, 0, 748,
	0, 748, 0, 0, 0, 0, 1038, 0, 0, 0,
	0, 0, 1039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 0, 0, 2655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 0, 0, 0, 0, 0, 748, 747, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	747, 747, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 690, 0, 690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 747, 747, 0, 0,
	0, 747, 0, 0, 0, 0, 0, 0, 0, 690,
	0, 0, 0, 2903, 0, 0, 0, 1549, 747, 748,
	0, 0, 0, 0, 0, 2919, 2920, 2921, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 1551, 0, 0,
	0, 2936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 201, 0, 0, 0, 0, 3060, 3061,
	3062, 3063, 3064, 3065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2114, 3076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 3084, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3018,
	0, 1550, 748, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	1123, 0, 0, 0, 0, 0, 0, 3038, 748, 2375,
	0, 1935, 1935, 0, 0, 0, 3043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 747, 0, 0, 0, 0,
	0, 0, 748, 0, 201, 0, 0, 0, 0, 0,
	690, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 748, 747, 0, 0, 0,
	0, 0, 0, 0, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 690,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3252, 0, 3256, 747, 0, 690, 0,
	1549, 0, 0, 747, 747, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3359, 1551, 0, 0,
	1551, 0, 1551, 690, 0, 0, 0, 0, 3206, 0,
	0, 0, 0, 747, 0, 0, 1549, 0, 0, 0,
	1296, 747, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 690, 1038,
	0, 0, 0, 0, 976, 1039, 990, 991, 992, 977,
	0, 1943, 978, 979, 0, 980, 3397, 0, 2047, 690,
	0, 0, 0, 0, 0, 0, 0, 0, 3430, 0,
	3411, 985, 0, 993, 994, 690, 0, 0, 0, 0,
	0, 0, 690, 0, 0, 3423, 0, 0, 3426, 0,
	0, 2073, 2074, 690, 690, 690, 690, 690, 690, 690,
	0, 1296, 0, 0, 0, 0, 0, 0, 3293, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3405, 3406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3592,
	3593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 3408, 3409,
	0, 0, 3645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 747, 3656, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 1551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 0, 0, 0, 0,
	0, 0, 0, 941, 747, 747, 747, 747, 0, 945,
	0, 0, 0, 942, 943, 0, 0, 0, 944, 946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 1123, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 747, 0, 1994, 0, 0, 0, 3706,
	3707, 3708, 3709, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 0, 0, 0, 0, 0, 747,
	0, 747, 3801, 0, 0, 3802, 3803, 3804, 0, 0,
	0, 0, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 0, 0, 0,
	2047, 690, 0, 690, 0, 690, 2478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3784, 0, 3784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 0, 0, 0, 0, 0, 747, 0, 747,
	0, 0, 0, 0, 3823, 0, 3825, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	690, 0, 0, 0, 0, 0, 690, 0, 3991, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 690, 0,
	1296, 690, 0, 2641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 0, 0, 0,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 2652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3784, 0, 0, 0, 0,
	0, 0, 3784, 0, 3784, 0, 0, 0, 0, 747,
	0, 0, 0, 4082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 747, 0, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 3855, 3857, 3856, 3922, 3923,
	3924, 3925, 3926, 3927, 3928, 3858, 3859, 818, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 0, 0,
	0, 0, 747, 4140, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 4148, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 747, 0, 1123, 0, 4165,
	0, 2922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 0,
	0, 0, 0, 690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4224, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3871, 3872, 0, 1123, 3947, 3946,
	3945, 0, 0, 3943, 3944, 3942, 0, 0, 0, 0,
	0, 0, 0, 1896, 0, 1551, 0, 0, 0, 0,
	4224, 0, 0, 0, 0, 0, 690, 690, 690, 690,
	690, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4325, 0, 0, 0, 690, 690, 0, 0, 3948,
	941, 0, 794, 795, 3949, 3950, 945, 3951, 797, 798,
	942, 943, 0, 792, 796, 944, 946, 0, 0, 0,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4325, 0, 0, 0, 0, 0,
	0, 0, 3852, 3853, 3854, 3860, 3861, 3862, 3873, 3920,
	3921, 3929, 3931, 897, 3930, 3932, 3933, 3934, 3937, 3938,
	3939, 3940, 3935, 3936, 3941, 3835, 3839, 3836, 3837, 3838,
	3850, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848,
	3849, 3851, 3952, 3953, 3954, 3955, 3956, 3957, 3866, 3870,
	3869, 3867, 3868, 3864, 3865, 3892, 3891, 3893, 3894, 3895,
	3896, 3897, 3898, 3900, 3899, 3901, 3902, 3903, 3904, 3905,
	3906, 3874, 3875, 3878, 3879, 3877, 3876, 3880, 3889, 3890,
	3881, 3882, 3883, 3884, 3885, 3886, 3888, 3887, 3907, 3908,
	3909, 3910, 3911, 3913, 3912, 3916, 3917, 3915, 3914, 3919,
	3918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 947, 0, 948, 0, 0, 952,
	0, 0, 0, 954, 953, 0, 955, 917, 916, 0,
	0, 949, 950, 0, 951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3958, 3959, 3960, 3961, 3962,
	3963, 3964, 3965, 0, 0, 0, 0, 1088, 0, 690,
	3251, 690, 0, 690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1551, 0,
	0, 0, 0, 1551, 690, 690, 690, 690, 690, 0,
	0, 0, 0, 0, 0, 0, 3309, 0, 0, 0,
	0, 0, 1994, 0, 690, 0, 0, 690, 3317, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	690, 0, 0, 690, 690, 690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 1444, 1424, 540, 0, 1365, 1447, 1330, 1351,
	1457, 1354, 1357, 1402, 1306, 1380, 426, 1348, 1334, 1301,
	1342, 1302, 1332, 1367, 277, 1329, 1426, 1384, 1446, 375,
	274, 1308, 1299, 210, 517, 1335, 441, 1353, 209, 1405,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 1453, 379, 1390, 0, 509, 411,
	0, 0, 2047, 1430, 1429, 1358, 1369, 1435, 1378, 1417,
	1363, 1404, 1317, 1389, 1448, 1349, 1399, 1449, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 4187,
	519, 972, 0, 0, 0, 0, 4188, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	1345, 1396, 622, 1442, 1346, 1398, 272, 330, 279, 271,
	593, 1454, 1434, 1305, 1377, 1441, 1372, 609, 0, 0,
	235, 1445, 1371, 0, 1401, 0, 1460, 1300, 1392, 0,
	1303, 1307, 1456, 1439, 1338, 1339, 282, 0, 0, 0,
	0, 0, 0, 0, 1368, 1379, 1414, 1418, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1388,
	0, 0, 0, 1312, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 0,
	0, 0, 1316, 0, 1337, 1415, 0, 1298, 304, 1309,
	412, 264, 0, 465, 1328, 310, 324, 1314, 1343, 1443,
	1431, 1432, 1433, 1422, 1438, 1362, 642, 1440, 1360, 1359,
	1409, 1313, 1428, 1352, 374, 1311, 339, 203, 231, 0,
	1350, 422, 473, 485, 1427, 1333, 1344, 260, 1341, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 1387,
	1407, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 1310, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 1327, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 1423, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 1412, 1459, 435, 484, 246,
	619, 508, 205, 1321, 1326, 1319, 0, 261, 262, 1393,
	587, 1322, 1320, 1382, 1383, 1323, 1450, 1451, 1452, 1436,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 1416, 1315,
	0, 1324, 1325, 408, 1425, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 1386, 202, 227, 377, 1455, 466,
	295, 663, 631, 496, 626, 212, 229, 1318, 269, 1331,
	1340, 0, 1347, 1355, 1356, 1370, 1373, 1374, 1375, 1376,
	1394, 1395, 1397, 1406, 1408, 1411, 1413, 1420, 1437, 1458,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 1403, 1364, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 1385, 1391, 390, 288, 313, 329,
	1400, 630, 514, 233, 478, 297, 257, 1419, 1421, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 1381, 1410, 385, 588, 589, 325, 406,
	0, 0, 0, 0, 0, 0, 1444, 1424, 540, 0,
	1365, 1447, 1330, 1351, 1457, 1354, 1357, 1402, 1306, 1380,
	426, 1348, 1334, 1301, 1342, 1302, 1332, 1367, 277, 1329,
	1426, 1384, 1446, 375, 274, 1308, 1299, 210, 517, 1335,
	441, 1353, 209, 1405, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 1453, 379,
	1390, 0, 509, 411, 0, 0, 0, 1430, 1429, 1358,
	1369, 1435, 1378, 1417, 1363, 1404, 1317, 1389, 1448, 1349,
	1399, 1449, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 1345, 1396, 622, 1442, 1346, 1398,
	272, 330, 279, 271, 593, 1454, 1434, 1305, 1377, 1441,
	1372, 609, 0, 0, 235, 1445, 1371, 0, 1401, 0,
	1460, 1300, 1392, 0, 1303, 1307, 1456, 1439, 1338, 1339,
	282, 0, 0, 0, 0, 0, 0, 0, 1368, 1379,
	1414, 1418, 1361, 0, 0, 0, 0, 0, 0, 3318,
	0, 1336, 0, 1388, 0, 0, 0, 1312, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 1316, 0, 1337, 1415,
	0, 1298, 304, 1309, 412, 264, 0, 465, 1328, 310,
	324, 1314, 1343, 1443, 1431, 1432, 1433, 1422, 1438, 1362,
	642, 1440, 1360, 1359, 1409, 1313, 1428, 1352, 374, 1311,
	339, 203, 231, 0, 1350, 422, 473, 485, 1427, 1333,
	1344, 260, 1341, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 1387, 1407, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 1310,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 1327, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	1423, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 1412,
	1459, 435, 484, 246, 619, 508, 205, 1321, 1326, 1319,
	0, 261, 262, 1393, 587, 1322, 1320, 1382, 1383, 1323,
	1450, 1451, 1452, 1436, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 1416, 1315, 0, 1324, 1325, 408, 1425, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 1386, 202,
	227, 377, 1455, 466, 295, 663, 631, 496, 626, 212,
	229, 1318, 269, 1331, 1340, 0, 1347, 1355, 1356, 1370,
	1373, 1374, 1375, 1376, 1394, 1395, 1397, 1406, 1408, 1411,
	1413, 1420, 1437, 1458, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	1403, 1364, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 1385, 1391,
	390, 288, 313, 329, 1400, 630, 514, 233, 478, 297,
	257, 1419, 1421, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 1381, 1410, 385,
	588, 589, 325, 406, 0, 0, 0, 0, 0, 0,
	1444, 1424, 540, 0, 1365, 1447, 1330, 1351, 1457, 1354,
	1357, 1402, 1306, 1380, 426, 1348, 1334, 1301, 1342, 1302,
	1332, 1367, 277, 1329, 1426, 1384, 1446, 375, 274, 1308,
	1299, 210, 517, 1335, 441, 1353, 209, 1405, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 1453, 379, 1390, 0, 509, 411, 0, 0,
	0, 1430, 1429, 1358, 1369, 1435, 1378, 1417, 1363, 1404,
	1317, 1389, 1448, 1349, 1399, 1449, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 1345, 1396,
	622, 1442, 1346, 1398, 272, 330, 279, 271, 593, 1454,
	1434, 1305, 1377, 1441, 1372, 609, 0, 0, 235, 1445,
	1371, 0, 1401, 0, 1460, 1300, 1392, 0, 1303, 1307,
	1456, 1439, 1338, 1339, 282, 0, 0, 0, 0, 0,
	0, 0, 1368, 1379, 1414, 1418, 1361, 0, 0, 0,
	0, 0, 0, 3279, 0, 1336, 0, 1388, 0, 0,
	0, 1312, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1366, 0, 0, 0, 0,
	1316, 0, 1337, 1415, 0, 1298, 304, 1309, 412, 264,
	0, 465, 1328, 310, 324, 1314, 1343, 1443, 1431, 1432,
	1433, 1422, 1438, 1362, 642, 1440, 1360, 1359, 1409, 1313,
	1428, 1352, 374, 1311, 339, 203, 231, 0, 1350, 422,
	473, 485, 1427, 1333, 1344, 260, 1341, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 1387, 1407, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 1310, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 1327, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 1423, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 1412, 1459, 435, 484, 246, 619, 508,
	205, 1321, 1326, 1319, 0, 261, 262, 1393, 587, 1322,
	1320, 1382, 1383, 1323, 1450, 1451, 1452, 1436, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 1416, 1315, 0, 1324,
	1325, 408, 1425, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 1386, 202, 227, 377, 1455, 466, 295, 663,
	631, 496, 626, 212, 229, 1318, 269, 1331, 1340, 0,
	1347, 1355, 1356, 1370, 1373, 1374, 1375, 1376, 1394, 1395,
	1397, 1406, 1408, 1411, 1413, 1420, 1437, 1458, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 1403, 1364, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 1385, 1391, 390, 288, 313, 329, 1400, 630,
	514, 233, 478, 297, 257, 1419, 1421, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 1381, 1410, 385, 588, 589, 325, 406, 0, 0,
	0, 0, 0, 0, 1444, 1424, 540, 0, 1365, 1447,
	1330, 1351, 1457, 1354, 1357, 1402, 1306, 1380, 426, 1348,
	1334, 1301, 1342, 1302, 1332, 1367, 277, 1329, 1426, 1384,
	1446, 375, 274, 1308, 1299, 210, 517, 1335, 441, 1353,
	209, 1405, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 1453, 379, 1390, 0,
	509, 411, 0, 0, 0, 1430, 1429, 1358, 1369, 1435,
	1378, 1417, 1363, 1404, 1317, 1389, 1448, 1349, 1399, 1449,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 1345, 1396, 622, 1442, 1346, 1398, 272, 330,
	279, 271, 593, 1454, 1434, 1305, 1377, 1441, 1372, 609,
	0, 0, 235, 1445, 1371, 0, 1401, 0, 1460, 1300,
	1392, 0, 1303, 1307, 1456, 1439, 1338, 1339, 282, 0,
	0, 0, 0, 0, 0, 0, 1368, 1379, 1414, 1418,
	1361, 0, 0, 0, 0, 0, 0, 2457, 0, 1336,
	0, 1388, 0, 0, 0, 1312, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 1316, 0, 1337, 1415, 0, 1298,
	304, 1309, 412, 264, 0, 465, 1328, 310, 324, 1314,
	1343, 1443, 1431, 1432, 1433, 1422, 1438, 1362, 642, 1440,
	1360, 1359, 1409, 1313, 1428, 1352, 374, 1311, 339, 203,
	231, 0, 1350, 422, 473, 485, 1427, 1333, 1344, 260,
	1341, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 1387, 1407, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 1310, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 1327, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 1423, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 1412, 1459, 435,
	484, 246, 619, 508, 205, 1321, 1326, 1319, 0, 261,
	262, 1393, 587, 1322, 1320, 1382, 1383, 1323, 1450, 1451,
	1452, 1436, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	1416, 1315, 0, 1324, 1325, 408, 1425, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 1386, 202, 227, 377,
	1455, 466, 295, 663, 631, 496, 626, 212, 229, 1318,
	269, 1331, 1340, 0, 1347, 1355, 1356, 1370, 1373, 1374,
	1375, 1376, 1394, 1395, 1397, 1406, 1408, 1411, 1413, 1420,
	1437, 1458, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 1403, 1364,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 1385, 1391, 390, 288,
	313, 329, 1400, 630, 514, 233, 478, 297, 257, 1419,
	1421, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 1381, 1410, 385, 588, 589,
	325, 406, 0, 0, 0, 0, 0, 0, 1444, 1424,
	540, 0, 1365, 1447, 1330, 1351, 1457, 1354, 1357, 1402,
	1306, 1380, 426, 1348, 1334, 1301, 1342, 1302, 1332, 1367,
	277, 1329, 1426, 1384, 1446, 375, 274, 1308, 1299, 210,
	517, 1335, 441, 1353, 209, 1405, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	1453, 379, 1390, 0, 509, 411, 0, 0, 0, 1430,
	1429, 1358, 1369, 1435, 1378, 1417, 1363, 1404, 1317, 1389,
	1448, 1349, 1399, 1449, 332, 254, 334, 208, 423, 510,
	293, 0, 98, 0, 0, 0, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 1345, 1396, 622, 1442,
	1346, 1398, 272, 330, 279, 271, 593, 1454, 1434, 1305,
	1377, 1441, 1372, 609, 0, 0, 235, 1445, 1371, 0,
	1401, 0, 1460, 1300, 1392, 0, 1303, 1307, 1456, 1439,
	1338, 1339, 282, 0, 0, 0, 0, 0, 0, 0,
	1368, 1379, 1414, 1418, 1361, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 1388, 0, 0, 0, 1312,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 0, 1316, 0,
	1337, 1415, 0, 1298, 304, 1309, 412, 264, 0, 465,
	1328, 310, 324, 1314, 1343, 1443, 1431, 1432, 1433, 1422,
	1438, 1362, 642, 1440, 1360, 1359, 1409, 1313, 1428, 1352,
	374, 1311, 339, 203, 231, 0, 1350, 422, 473, 485,
	1427, 1333, 1344, 260, 1341, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 1387, 1407, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 1310, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 1327,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 1423, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 1412, 1459, 435, 484, 246, 619, 508, 205, 1321,
	1326, 1319, 0, 261, 262, 1393, 587, 1322, 1320, 1382,
	1383, 1323, 1450, 1451, 1452, 1436, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 1416, 1315, 0, 1324, 1325, 408,
	1425, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	1386, 202, 227, 377, 1455, 466, 295, 663, 631, 496,
	626, 212, 229, 1318, 269, 1331, 1340, 0, 1347, 1355,
	1356, 1370, 1373, 1374, 1375, 1376, 1394, 1395, 1397, 1406,
	1408, 1411, 1413, 1420, 1437, 1458, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 1403, 1364, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	1385, 1391, 390, 288, 313, 329, 1400, 630, 514, 233,
	478, 297, 257, 1419, 1421, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 1381,
	1410, 385, 588, 589, 325, 406, 0, 0, 0, 0,
	0, 0, 1444, 1424, 540, 0, 1365, 1447, 1330, 1351,
	1457, 1354, 1357, 1402, 1306, 1380, 426, 1348, 1334, 1301,
	1342, 1302, 1332, 1367, 277, 1329, 1426, 1384, 1446, 375,
	274, 1308, 1299, 210, 517, 1335, 441, 1353, 209, 1405,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 1453, 379, 1390, 0, 509, 411,
	0, 0, 0, 1430, 1429, 1358, 1369, 1435, 1378, 1417,
	1363, 1404, 1317, 1389, 1448, 1349, 1399, 1449, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 0,
	519, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	1345, 1396, 622, 1442, 1346, 1398, 272, 330, 279, 271,
	593, 1454, 1434, 1305, 1377, 1441, 1372, 609, 0, 0,
	235, 1445, 1371, 0, 1401, 0, 1460, 1300, 1392, 0,
	1303, 1307, 1456, 1439, 1338, 1339, 282, 0, 0, 0,
	0, 0, 0, 0, 1368, 1379, 1414, 1418, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 1388,
	0, 0, 0, 1312, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 0,
	0, 0, 1316, 0, 1337, 1415, 0, 1298, 304, 1309,
	412, 264, 0, 465, 1328, 310, 324, 1314, 1343, 1443,
	1431, 1432, 1433, 1422, 1438, 1362, 642, 1440, 1360, 1359,
	1409, 1313, 1428, 1352, 374, 1311, 339, 203, 231, 0,
	1350, 422, 473, 485, 1427, 1333, 1344, 260, 1341, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 1387,
	1407, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 1310, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 1327, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 1423, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 1412, 1459, 435, 484, 246,
	619, 508, 205, 1321, 1326, 1319, 0, 261, 262, 1393,
	587, 1322, 1320, 1382, 1383, 1323, 1450, 1451, 1452, 1436,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 1416, 1315,
	0, 1324, 1325, 408, 1425, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 1386, 202, 227, 377, 1455, 466,
	295, 663, 631, 496, 626, 212, 229, 1318, 269, 1331,
	1340, 0, 1347, 1355, 1356, 1370, 1373, 1374, 1375, 1376,
	1394, 1395, 1397, 1406, 1408, 1411, 1413, 1420, 1437, 1458,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 1403, 1364, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 1385, 1391, 390, 288, 313, 329,
	1400, 630, 514, 233, 478, 297, 257, 1419, 1421, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 1381, 1410, 385, 588, 589, 325, 406,
	0, 0, 0, 0, 0, 0, 1444, 1424, 540, 0,
	1365, 1447, 1330, 1351, 1457, 1354, 1357, 1402, 1306, 1380,
	426, 1348, 1334, 1301, 1342, 1302, 1332, 1367, 277, 1329,
	1426, 1384, 1446, 375, 274, 1308, 1299, 210, 517, 1335,
	441, 1353, 209, 1405, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 1453, 379,
	1390, 0, 509, 411, 0, 0, 0, 1430, 1429, 1358,
	1369, 1435, 1378, 1417, 1363, 1404, 1317, 1389, 1448, 1349,
	1399, 1449, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 1345, 1396, 622, 1442, 1346, 1398,
	272, 330, 279, 271, 593, 1454, 1434, 1305, 1377, 1441,
	1372, 609, 0, 0, 235, 1445, 1371, 0, 1401, 0,
	1460, 1300, 1392, 0, 1303, 1307, 1456, 1439, 1338, 1339,
	282, 0, 0, 0, 0, 0, 0, 0, 1368, 1379,
	1414, 1418, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 1388, 0, 0, 0, 1312, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 1316, 0, 1337, 1415,
	0, 1298, 304, 1309, 412, 264, 0, 465, 1328, 310,
	324, 1314, 1343, 1443, 1431, 1432, 1433, 1422, 1438, 1362,
	642, 1440, 1360, 1359, 1409, 1313, 1428, 1352, 374, 1311,
	339, 203, 231, 0, 1350, 422, 473, 485, 1427, 1333,
	1344, 260, 1341, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 1387, 1407, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 1310,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 1327, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	1423, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 1412,
	1459, 435, 484, 246, 619, 508, 205, 1321, 1326, 1319,
	0, 261, 262, 1393, 587, 1322, 1320, 1382, 1383, 1323,
	1450, 1451, 1452, 1436, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 1416, 1315, 0, 1324, 1325, 408, 1425, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 1386, 202,
	227, 377, 1455, 466, 295, 663, 631, 496, 626, 212,
	229, 1318, 269, 1331, 1340, 0, 1347, 1355, 1356, 1370,
	1373, 1374, 1375, 1376, 1394, 1395, 1397, 1406, 1408, 1411,
	1413, 1420, 1437, 1458, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	1403, 1364, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 1385, 1391,
	390, 288, 313, 329, 1400, 630, 514, 233, 478, 297,
	257, 1419, 1421, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 1381, 1410, 385,
	588, 589, 325, 406, 0, 0, 0, 0, 0, 0,
	1444, 1424, 540, 0, 1365, 1447, 1330, 1351, 1457, 1354,
	1357, 1402, 1306, 1380, 426, 1348, 1334, 1301, 1342, 1302,
	1332, 1367, 277, 1329, 1426, 1384, 1446, 375, 274, 1308,
	1299, 210, 517, 1335, 441, 1353, 209, 1405, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 1453, 379, 1390, 0, 509, 411, 0, 0,
	0, 1430, 1429, 1358, 1369, 1435, 1378, 1417, 1363, 1404,
	1317, 1389, 1448, 1349, 1399, 1449, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 1345, 1396,
	622, 1442, 1346, 1398, 272, 330, 279, 271, 593, 1454,
	1434, 1305, 1377, 1441, 1372, 609, 0, 0, 235, 1445,
	1371, 0, 1401, 0, 1460, 1300, 1392, 0, 1303, 1307,
	1456, 1439, 1338, 1339, 282, 0, 0, 0, 0, 0,
	0, 0, 1368, 1379, 1414, 1418, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 1388, 0, 0,
	0, 1312, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1366, 0, 0, 0, 0,
	1316, 0, 1337, 1415, 0, 1298, 304, 1309, 412, 264,
	0, 465, 1328, 310, 324, 1314, 1343, 1443, 1431, 1432,
	1433, 1422, 1438, 1362, 642, 1440, 1360, 1359, 1409, 1313,
	1428, 1352, 374, 1311, 339, 203, 231, 0, 1350, 422,
	473, 485, 1427, 1333, 1344, 260, 1341, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 1387, 1407, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 1310, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 1327, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 1423, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 1412, 1459, 435, 484, 246, 619, 508,
	205, 1321, 1326, 1319, 0, 261, 262, 1393, 587, 1322,
	1320, 1382, 1383, 1323, 1450, 1451, 1452, 1436, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 1416, 1315, 0, 1324,
	1325, 408, 1425, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 1386, 202, 227, 377, 1455, 466, 295, 663,
	631, 496, 626, 212, 229, 1318, 269, 1331, 1340, 0,
	1347, 1355, 1356, 1370, 1373, 1374, 1375, 1376, 1394, 1395,
	1397, 1406, 1408, 1411, 1413, 1420, 1437, 1458, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 1403, 1364, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 1385, 1391, 390, 288, 313, 329, 1400, 630,
	514, 233, 478, 297, 257, 1419, 1421, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 1381, 1410, 385, 588, 589, 325, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 777, 0, 0, 0, 277, 782, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 789, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	784, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 98, 0,
	0, 1038, 519, 972, 761, 938, 976, 1039, 990, 991,
	992, 977, 0, 244, 978, 979, 251, 980, 0, 937,
	820, 822, 821, 887, 888, 889, 890, 891, 892, 893,
	823, 824, 818, 985, 622, 993, 994, 0, 272, 330,
	279, 271, 593, 0, 0, 2265, 2266, 2267, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	757, 774, 0, 788, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 772, 0, 0, 0,
	0, 932, 0, 773, 0, 0, 781, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 931, 0, 0, 642, 0,
	0, 929, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 982,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	983, 984, 263, 665, 828, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 836,
	837, 287, 315, 913, 912, 911, 314, 316, 909, 910,
	908, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 919, 941, 930, 794, 795, 920,
	921, 945, 922, 797, 798, 942, 943, 791, 792, 796,
	944, 946, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	933, 780, 779, 0, 786, 787, 0, 816, 817, 819,
	825, 826, 827, 838, 885, 886, 894, 896, 897, 895,
	898, 899, 900, 903, 904, 905, 906, 901, 902, 907,
	799, 803, 800, 801, 802, 814, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 815, 956, 957, 958,
	959, 960, 961, 831, 835, 834, 832, 833, 829, 830,
	857, 856, 858, 859, 860, 861, 862, 863, 865, 864,
	866, 867, 868, 869, 870, 871, 839, 840, 843, 844,
	842, 841, 845, 854, 855, 846, 847, 848, 849, 850,
	851, 853, 852, 872, 873, 874, 875, 876, 878, 877,
	881, 882, 880, 879, 884, 883, 778, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 947,
	269, 948, 0, 0, 952, 0, 0, 0, 954, 953,
	0, 955, 917, 916, 0, 0, 949, 950, 0, 951,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	962, 963, 964, 965, 966, 967, 968, 969, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 1037,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	777, 0, 0, 0, 277, 782, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 789, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	0, 0, 0, 0, 0, 0, 2486, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 98, 0, 0, 1038,
	519, 972, 761, 938, 976, 1039, 990, 991, 992, 977,
	0, 244, 978, 979, 251, 980, 0, 937, 820, 822,
	821, 887, 888, 889, 890, 891, 892, 893, 823, 824,
	818, 985, 622, 993, 994, 2487, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 757, 774,
	0, 788, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 772, 0, 0, 0, 0, 932,
	0, 773, 0, 0, 781, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 642, 0, 0, 929,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 982, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 983, 984,
	263, 665, 828, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 836, 837, 287,
	315, 913, 912, 911, 314, 316, 909, 910, 908, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 919, 941, 930, 794, 795, 920, 921, 945,
	922, 797, 798, 942, 943, 791, 792, 796, 944, 946,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 933, 780,
	779, 0, 786, 787, 0, 816, 817, 819, 825, 826,
	827, 838, 885, 886, 894, 896, 897, 895, 898, 899,
	900, 903, 904, 905, 906, 901, 902, 907, 799, 803,
	800, 801, 802, 814, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 815, 956, 957, 958, 959, 960,
	961, 831, 835, 834, 832, 833, 829, 830, 857, 856,
	858, 859, 860, 861, 862, 863, 865, 864, 866, 867,
	868, 869, 870, 871, 839, 840, 843, 844, 842, 841,
	845, 854, 855, 846, 847, 848, 849, 850, 851, 853,
	852, 872, 873, 874, 875, 876, 878, 877, 881, 882,
	880, 879, 884, 883, 778, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 947, 269, 948,
	0, 0, 952, 0, 0, 0, 954, 953, 0, 955,
	917, 916, 0, 0, 949, 950, 0, 951, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 962, 963,
	964, 965, 966, 967, 968, 969, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 1037, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 88, 540, 0, 790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 777, 0,
	0, 0, 277, 782, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 1740, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 98, 0, 0, 1038, 519, 972,
	761, 938, 976, 1039, 990, 991, 992, 977, 0, 244,
	978, 979, 251, 980, 0, 937, 820, 822, 821, 887,
	888, 889, 890, 891, 892, 893, 823, 824, 818, 985,
	622, 993, 994, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 757, 774, 0, 788,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 772, 0, 0, 0, 0, 932, 0, 773,
	0, 0, 781, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 931, 0, 0, 642, 0, 0, 929, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 982, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 983, 984, 263, 665,
	828, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 836, 837, 287, 315, 913,
	912, 911, 314, 316, 909, 910, 908, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	919, 941, 930, 794, 795, 920, 921, 945, 922, 797,
	798, 942, 943, 791, 792, 796, 944, 946, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 933, 780, 779, 0,
	786, 787, 0, 816, 817, 819, 825, 826, 827, 838,
	885, 886, 894, 896, 897, 895, 898, 899, 900, 903,
	904, 905, 906, 901, 902, 907, 799, 803, 800, 801,
	802, 814, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 815, 956, 957, 958, 959, 960, 961, 831,
	835, 834, 832, 833, 829, 830, 857, 856, 858, 859,
	860, 861, 862, 863, 865, 864, 866, 867, 868, 869,
	870, 871, 839, 840, 843, 844, 842, 841, 845, 854,
	855, 846, 847, 848, 849, 850, 851, 853, 852, 872,
	873, 874, 875, 876, 878, 877, 881, 882, 880, 879,
	884, 883, 778, 202, 227, 377, 97, 466, 295, 663,
	631, 496, 626, 212, 229, 947, 269, 948, 0, 0,
	952, 0, 0, 0, 954, 953, 0, 955, 917, 916,
	0, 0, 949, 950, 0, 951, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 962, 963, 964, 965,
	966, 967, 968, 969, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 1037, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 777, 0, 0, 0,
	277, 782, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	789, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 98, 0, 0, 1038, 519, 972, 761, 938,
	976, 1039, 990, 991, 992, 977, 0, 244, 978, 979,
	251, 980, 0, 937, 820, 822, 821, 887, 888, 889,
	890, 891, 892, 893, 823, 824, 818, 985, 622, 993,
	994, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 757, 774, 0, 788, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	772, 0, 0, 0, 0, 932, 0, 773, 0, 0,
	781, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 931,
	0, 0, 642, 0, 0, 929, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 982, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 4174, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 983, 984, 263, 665, 828, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 836, 837, 287, 315, 913, 912, 911,
	314, 316, 909, 910, 908, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 919, 941,
	930, 794, 795, 920, 921, 945, 922, 797, 798, 942,
	943, 791, 792, 796, 944, 946, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 933, 780, 779, 0, 786, 787,
	0, 816, 817, 819, 825, 826, 827, 838, 885, 886,
	894, 896, 897, 895, 898, 899, 900, 903, 904, 905,
	906, 901, 902, 907, 799, 803, 800, 801, 802, 814,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	815, 956, 957, 958, 959, 960, 961, 831, 835, 834,
	832, 833, 829, 830, 857, 856, 858, 859, 860, 861,
	862, 863, 865, 864, 866, 867, 868, 869, 870, 871,
	839, 840, 843, 844, 842, 841, 845, 854, 855, 846,
	847, 848, 849, 850, 851, 853, 852, 872, 873, 874,
	875, 876, 878, 877, 881, 882, 880, 879, 884, 883,
	778, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 947, 269, 948, 0, 0, 952, 0,
	0, 0, 954, 953, 0, 955, 917, 916, 0, 0,
	949, 950, 0, 951, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 962, 963, 964, 965, 966, 967,
	968, 969, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 1037, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 777, 0, 0, 0, 277, 782,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 789, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	98, 0, 1777, 1038, 519, 972, 761, 938, 976, 1039,
	990, 991, 992, 977, 0, 244, 978, 979, 251, 980,
	0, 937, 820, 822, 821, 887, 888, 889, 890, 891,
	892, 893, 823, 824, 818, 985, 622, 993, 994, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 757, 774, 0, 788, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 772, 0,
	0, 0, 0, 932, 0, 773, 0, 0, 781, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	642, 0, 0, 929, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 982, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 983, 984, 263, 665, 828, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 836, 837, 287, 315, 913, 912, 911, 314, 316,
	909, 910, 908, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 919, 941, 930, 794,
	795, 920, 921, 945, 922, 797, 798, 942, 943, 791,
	792, 796, 944, 946, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 933, 780, 779, 0, 786, 787, 0, 816,
	817, 819, 825, 826, 827, 838, 885, 886, 894, 896,
	897, 895, 898, 899, 900, 903, 904, 905, 906, 901,
	902, 907, 799, 803, 800, 801, 802, 814, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 815, 956,
	957, 958, 959, 960, 961, 831, 835, 834, 832, 833,
	829, 830, 857, 856, 858, 859, 860, 861, 862, 863,
	865, 864, 866, 867, 868, 869, 870, 871, 839, 840,
	843, 844, 842, 841, 845, 854, 855, 846, 847, 848,
	849, 850, 851, 853, 852, 872, 873, 874, 875, 876,
	878, 877, 881, 882, 880, 879, 884, 883, 778, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 947, 269, 948, 0, 0, 952, 0, 0, 0,
	954, 953, 0, 955, 917, 916, 0, 0, 949, 950,
	0, 951, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 962, 963, 964, 965, 966, 967, 968, 969,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 1037, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 777, 0, 0, 0, 277, 782, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 789, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	784, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 98, 0,
	0, 1038, 519, 972, 761, 938, 976, 1039, 990, 991,
	992, 977, 0, 244, 978, 979, 251, 980, 0, 937,
	820, 822, 821, 887, 888, 889, 890, 891, 892, 893,
	823, 824, 818, 985, 622, 993, 994, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	757, 774, 0, 788, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 772, 1086, 0, 0,
	0, 932, 0, 773, 0, 0, 781, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 931, 0, 0, 642, 0,
	0, 929, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 982,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	983, 984, 263, 665, 828, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 836,
	837, 287, 315, 913, 912, 911, 314, 316, 909, 910,
	908, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 919, 941, 930, 794, 795, 920,
	921, 945, 922, 797, 798, 942, 943, 791, 792, 796,
	944, 946, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	933, 780, 779, 0, 786, 787, 0, 816, 817, 819,
	825, 826, 827, 838, 885, 886, 894, 896, 897, 895,
	898, 899, 900, 903, 904, 905, 906, 901, 902, 907,
	799, 803, 800, 801, 802, 814, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 815, 956, 957, 958,
	959, 960, 961, 831, 835, 834, 832, 833, 829, 830,
	857, 856, 858, 859, 860, 861, 862, 863, 865, 864,
	866, 867, 868, 869, 870, 871, 839, 840, 843, 844,
	842, 841, 845, 854, 855, 846, 847, 848, 849, 850,
	851, 853, 852, 872, 873, 874, 875, 876, 878, 877,
	881, 882, 880, 879, 884, 883, 778, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 947,
	269, 948, 0, 0, 952, 0, 0, 0, 954, 953,
	0, 955, 917, 916, 0, 0, 949, 950, 0, 951,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	962, 963, 964, 965, 966, 967, 968, 969, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 1037,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	777, 0, 0, 0, 277, 782, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 789, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 98, 0, 0, 1038,
	519, 972, 761, 938, 976, 1039, 990, 991, 992, 977,
	0, 244, 978, 979, 251, 980, 0, 937, 820, 822,
	821, 887, 888, 889, 890, 891, 892, 893, 823, 824,
	818, 985, 622, 993, 994, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 757, 774,
	0, 788, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 772, 0, 0, 0, 0, 932,
	0, 773, 0, 0, 781, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 642, 0, 0, 929,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 982, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 983, 984,
	263, 665, 828, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 836, 837, 287,
	315, 913, 912, 911, 314, 316, 909, 910, 908, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 919, 941, 930, 794, 795, 920, 921, 945,
	922, 797, 798, 942, 943, 791, 792, 796, 944, 946,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 933, 780,
	779, 0, 786, 787, 0, 816, 817, 819, 825, 826,
	827, 838, 885, 886, 894, 896, 897, 895, 898, 899,
	900, 903, 904, 905, 906, 901, 902, 907, 799, 803,
	800, 801, 802, 814, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 815, 956, 957, 958, 959, 960,
	961, 831, 835, 834, 832, 833, 829, 830, 857, 856,
	858, 859, 860, 861, 862, 863, 865, 864, 866, 867,
	868, 869, 870, 871, 839, 840, 843, 844, 842, 841,
	845, 854, 855, 846, 847, 848, 849, 850, 851, 853,
	852, 872, 873, 874, 875, 876, 878, 877, 881, 882,
	880, 879, 884, 883, 778, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 947, 269, 948,
	0, 0, 952, 0, 0, 0, 954, 953, 0, 955,
	917, 916, 0, 0, 949, 950, 0, 951, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 962, 963,
	964, 965, 966, 967, 968, 969, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 1037, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 777, 0,
	0, 0, 277, 782, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 789, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 98, 0, 0, 1038, 519, 972,
	761, 938, 976, 1039, 990, 991, 992, 977, 0, 244,
	978, 979, 251, 980, 0, 937, 820, 822, 821, 887,
	888, 889, 890, 891, 892, 893, 823, 824, 818, 985,
	622, 993, 994, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 757, 774, 0, 788,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 772, 0, 0, 0, 0, 932, 0, 773,
	0, 0, 781, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 3220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 931, 0, 0, 642, 0, 0, 929, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 982, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 983, 984, 263, 665,
	828, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 836, 837, 287, 315, 913,
	912, 911, 314, 316, 909, 910, 908, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	919, 941, 930, 794, 795, 920, 921, 945, 922, 797,
	798, 942, 943, 791, 792, 796, 944, 946, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 933, 780, 779, 0,
	786, 787, 0, 816, 817, 819, 825, 826, 827, 838,
	885, 886, 894, 896, 897, 895, 898, 899, 900, 903,
	904, 905, 906, 901, 902, 907, 799, 803, 800, 801,
	802, 814, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 815, 956, 957, 958, 959, 960, 961, 831,
	835, 834, 832, 833, 829, 830, 857, 856, 858, 859,
	860, 861, 862, 863, 865, 864, 866, 867, 868, 869,
	870, 871, 839, 840, 843, 844, 842, 841, 845, 854,
	855, 846, 847, 848, 849, 850, 851, 853, 852, 872,
	873, 874, 875, 876, 878, 877, 881, 882, 880, 879,
	884, 883, 778, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 947, 269, 948, 0, 0,
	952, 0, 0, 0, 954, 953, 0, 955, 917, 916,
	0, 0, 949, 950, 0, 951, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 962, 963, 964, 965,
	966, 967, 968, 969, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 1037, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 777, 0, 0, 0,
	277, 782, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	789, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 98, 0, 0, 1038, 519, 972, 761, 938,
	976, 1039, 990, 991, 992, 977, 0, 244, 978, 979,
	251, 980, 0, 937, 820, 822, 821, 887, 888, 889,
	890, 891, 892, 893, 823, 824, 818, 985, 622, 993,
	994, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 757, 774, 0, 788, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	772, 0, 0, 0, 0, 932, 0, 773, 0, 0,
	781, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 3216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 931,
	0, 0, 642, 0, 0, 929, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 982, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 983, 984, 263, 665, 828, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 836, 837, 287, 315, 913, 912, 911,
	314, 316, 909, 910, 908, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 919, 941,
	930, 794, 795, 920, 921, 945, 922, 797, 798, 942,
	943, 791, 792, 796, 944, 946, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 933, 780, 779, 0, 786, 787,
	0, 816, 817, 819, 825, 826, 827, 838, 885, 886,
	894, 896, 897, 895, 898, 899, 900, 903, 904, 905,
	906, 901, 902, 907, 799, 803, 800, 801, 802, 814,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	815, 956, 957, 958, 959, 960, 961, 831, 835, 834,
	832, 833, 829, 830, 857, 856, 858, 859, 860, 861,
	862, 863, 865, 864, 866, 867, 868, 869, 870, 871,
	839, 840, 843, 844, 842, 841, 845, 854, 855, 846,
	847, 848, 849, 850, 851, 853, 852, 872, 873, 874,
	875, 876, 878, 877, 881, 882, 880, 879, 884, 883,
	778, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 947, 269, 948, 0, 0, 952, 0,
	0, 0, 954, 953, 0, 955, 917, 916, 0, 0,
	949, 950, 0, 951, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 962, 963, 964, 965, 966, 967,
	968, 969, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 1037, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 777, 0, 0, 0, 277, 782,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 789, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	98, 0, 0, 1038, 519, 972, 1107, 938, 976, 1039,
	990, 991, 992, 977, 0, 244, 978, 979, 251, 980,
	0, 937, 820, 822, 821, 887, 888, 889, 890, 891,
	892, 893, 823, 824, 818, 985, 622, 993, 994, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 788, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 772, 0,
	0, 0, 0, 932, 0, 773, 0, 0, 781, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	642, 0, 0, 929, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 982, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 983, 984, 263, 665, 828, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 836, 837, 287, 315, 913, 912, 911, 314, 316,
	909, 910, 908, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 919, 941, 930, 794,
	795, 920, 921, 945, 922, 797, 798, 942, 943, 791,
	792, 796, 944, 946, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 933, 780, 779, 0, 786, 787, 0, 816,
	817, 819, 825, 826, 827, 838, 885, 886, 894, 896,
	897, 895, 898, 899, 900, 903, 904, 905, 906, 901,
	902, 907, 799, 803, 800, 801, 802, 814, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 815, 956,
	957, 958, 959, 960, 961, 831, 835, 834, 832, 833,
	829, 830, 857, 856, 858, 859, 860, 861, 862, 863,
	865, 864, 866, 867, 868, 869, 870, 871, 839, 840,
	843, 844, 842, 841, 845, 854, 855, 846, 847, 848,
	849, 850, 851, 853, 852, 872, 873, 874, 875, 876,
	878, 877, 881, 882, 880, 879, 884, 883, 778, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 947, 269, 948, 0, 0, 952, 0, 0, 0,
	954, 953, 0, 955, 917, 916, 0, 0, 949, 950,
	0, 951, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 962, 963, 964, 965, 966, 967, 968, 969,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 1037, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 777, 0, 0, 0, 277, 782, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 789, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	784, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 98, 0,
	0, 1038, 519, 972, 1107, 938, 976, 1039, 990, 991,
	992, 977, 0, 244, 978, 979, 251, 980, 0, 937,
	820, 822, 821, 887, 888, 889, 890, 891, 892, 893,
	823, 824, 818, 985, 622, 993, 994, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 774, 0, 788, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 772, 0, 0, 0,
	0, 932, 0, 773, 0, 0, 781, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 2156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 931, 0, 0, 642, 0,
	0, 929, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 982,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	983, 984, 263, 665, 828, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 836,
	837, 287, 315, 913, 912, 911, 314, 316, 909, 910,
	908, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 919, 941, 930, 794, 795, 920,
	921, 945, 922, 797, 798, 942, 943, 791, 792, 796,
	944, 946, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	933, 780, 779, 0, 786, 787, 0, 816, 817, 819,
	825, 826, 827, 838, 885, 886, 894, 896, 897, 895,
	898, 899, 900, 903, 904, 905, 906, 901, 902, 907,
	799, 803, 800, 801, 802, 814, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 815, 956, 957, 958,
	959, 960, 961, 831, 835, 834, 832, 833, 829, 830,
	857, 856, 858, 859, 860, 861, 862, 863, 865, 864,
	866, 867, 868, 869, 870, 871, 839, 840, 843, 844,
	842, 841, 845, 854, 855, 846, 847, 848, 849, 850,
	851, 853, 852, 872, 873, 874, 875, 876, 878, 877,
	881, 882, 880, 879, 884, 883, 778, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 947,
	269, 948, 0, 0, 952, 0, 0, 0, 954, 953,
	0, 955, 917, 916, 0, 0, 949, 950, 0, 951,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	962, 963, 964, 965, 966, 967, 968, 969, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 1037,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	777, 0, 0, 0, 277, 782, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 789, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 98, 0, 0, 1038,
	519, 972, 1107, 938, 976, 1039, 990, 991, 992, 977,
	0, 244, 978, 979, 251, 980, 0, 937, 820, 822,
	821, 887, 888, 889, 890, 891, 892, 893, 823, 824,
	818, 985, 622, 993, 994, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	0, 788, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 772, 0, 0, 0, 0, 932,
	0, 773, 0, 0, 781, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 2154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 642, 0, 0, 929,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 982, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 983, 984,
	263, 665, 828, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 836, 837, 287,
	315, 913, 912, 911, 314, 316, 909, 910, 908, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 919, 941, 930, 794, 795, 920, 921, 945,
	922, 797, 798, 942, 943, 791, 792, 796, 944, 946,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 933, 780,
	779, 0, 786, 787, 0, 816, 817, 819, 825, 826,
	827, 838, 885, 886, 894, 896, 897, 895, 898, 899,
	900, 903, 904, 905, 906, 901, 902, 907, 799, 803,
	800, 801, 802, 814, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 815, 956, 957, 958, 959, 960,
	961, 831, 835, 834, 832, 833, 829, 830, 857, 856,
	858, 859, 860, 861, 862, 863, 865, 864, 866, 867,
	868, 869, 870, 871, 839, 840, 843, 844, 842, 841,
	845, 854, 855, 846, 847, 848, 849, 850, 851, 853,
	852, 872, 873, 874, 875, 876, 878, 877, 881, 882,
	880, 879, 884, 883, 778, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 947, 269, 948,
	0, 0, 952, 0, 0, 0, 954, 953, 0, 955,
	917, 916, 0, 0, 949, 950, 0, 951, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 962, 963,
	964, 965, 966, 967, 968, 969, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 1037, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	1150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 642, 0, 0, 0, 0, 0,
	1146, 1147, 374, 1115, 339, 203, 231, 1140, 1144, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 88,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	100, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 98, 0, 0, 0, 519, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 97, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 2473, 0, 0, 2472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 737, 0, 0, 0, 0,
	4323, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 4327, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 4328, 4324, 4326, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 88, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 100, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 98, 0,
	1777, 0, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	97, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 1816, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 1818,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 1820,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 1502, 0, 1503, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 4217, 4218, 4219, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 98, 0, 0, 0, 519, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 2473, 0, 0, 2472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 2406, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 1995, 519, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 2404, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 1115, 339, 203,
	231, 1113, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 2406,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 1995,
	519, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 1777, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 3785, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 2165, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 2937, 519, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 737, 0, 0, 0, 0, 2904, 0,
	0, 0, 0, 244, 0, 0, 251, 2905, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 1839, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 1838,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 0, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 4141, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 1995, 519, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 3785, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 98, 0, 0, 0,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 2474, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 1820, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 2112, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 2103, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 1962, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 0,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	1960, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 1958, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 0, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 1956, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 1954, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 1950, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 0,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	1948, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 1946, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 0, 519, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	1921, 0, 0, 0, 519, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 1824, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 419, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 98, 0, 0, 0,
	519, 972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 1478, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 0, 519, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1065, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 406,
	0, 385, 588, 589, 325, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 375, 274, 0, 0, 210, 517, 0,
	441, 0, 209, 0, 499, 259, 386, 383, 596, 289,
	280, 276, 256, 326, 395, 438, 530, 432, 0, 379,
	0, 0, 509, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 254, 334, 208, 423, 510, 293, 0,
	0, 0, 0, 0, 519, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 360, 369, 368, 348, 349, 351, 353, 359,
	366, 372, 345, 354, 0, 0, 622, 0, 0, 0,
	272, 330, 279, 271, 593, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 412, 264, 0, 465, 0, 310,
	324, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	339, 203, 231, 0, 0, 422, 473, 485, 0, 0,
	0, 260, 0, 483, 436, 617, 239, 291, 470, 443,
	481, 451, 294, 0, 0, 482, 381, 598, 461, 614,
	643, 644, 270, 416, 628, 534, 636, 661, 232, 267,
	430, 518, 620, 506, 407, 594, 595, 338, 505, 302,
	207, 378, 649, 230, 491, 380, 248, 237, 600, 625,
	306, 258, 296, 468, 656, 219, 529, 611, 245, 495,
	0, 0, 664, 253, 516, 623, 612, 221, 607, 515,
	403, 335, 336, 220, 0, 469, 275, 300, 0, 0,
	265, 425, 602, 603, 263, 665, 234, 635, 226, 0,
	634, 418, 597, 608, 404, 392, 225, 606, 402, 391,
	343, 364, 365, 287, 315, 458, 384, 459, 314, 316,
	414, 413, 415, 213, 621, 639, 0, 214, 0, 511,
	624, 666, 463, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 311, 312, 321, 376, 429, 457, 453, 462,
	0, 591, 615, 629, 641, 647, 648, 650, 651, 652,
	653, 654, 657, 655, 417, 319, 507, 342, 382, 0,
	0, 435, 484, 246, 619, 508, 205, 0, 0, 0,
	0, 261, 262, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 662, 520, 526, 521, 522, 523, 524, 525,
	0, 527, 0, 0, 0, 0, 0, 408, 0, 604,
	605, 685, 393, 498, 616, 344, 358, 361, 350, 370,
	0, 371, 346, 347, 352, 355, 356, 357, 362, 363,
	367, 373, 255, 216, 400, 409, 590, 320, 222, 223,
	224, 536, 537, 538, 539, 632, 633, 637, 211, 474,
	475, 476, 477, 299, 627, 317, 480, 479, 340, 341,
	388, 460, 552, 554, 565, 569, 571, 573, 579, 582,
	553, 555, 566, 570, 572, 574, 580, 583, 542, 544,
	546, 548, 561, 560, 557, 585, 586, 563, 568, 547,
	559, 564, 577, 584, 581, 541, 545, 549, 558, 576,
	575, 556, 567, 578, 562, 550, 543, 551, 0, 202,
	227, 377, 0, 466, 295, 663, 631, 496, 626, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 318, 327, 328, 331,
	337, 389, 396, 397, 398, 399, 419, 420, 421, 424,
	427, 428, 431, 433, 434, 437, 442, 446, 447, 448,
	450, 452, 454, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 500, 501, 502, 503, 504, 512, 513, 528,
	599, 601, 618, 638, 645, 492, 394, 440, 464, 592,
	0, 0, 308, 309, 455, 456, 322, 323, 659, 660,
	307, 613, 646, 610, 658, 640, 449, 387, 0, 0,
	390, 288, 313, 329, 0, 630, 514, 233, 478, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 333,
	401, 410, 439, 445, 303, 278, 250, 471, 247, 497,
	531, 532, 533, 535, 405, 273, 444, 406, 0, 385,
	588, 589, 325, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 375, 274, 0, 0, 210, 517, 0, 441, 0,
	209, 0, 499, 259, 386, 383, 596, 289, 280, 276,
	256, 326, 395, 438, 530, 432, 0, 379, 0, 0,
	509, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 254, 334, 208, 423, 510, 293, 0, 0, 0,
	0, 0, 519, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	360, 369, 368, 348, 349, 351, 353, 359, 366, 372,
	345, 354, 0, 0, 622, 0, 0, 0, 272, 330,
	279, 271, 593, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 412, 264, 0, 465, 0, 310, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 339, 203,
	231, 0, 0, 422, 473, 485, 0, 0, 0, 260,
	0, 483, 436, 617, 239, 291, 470, 443, 481, 451,
	294, 0, 0, 482, 381, 598, 461, 614, 643, 644,
	270, 416, 628, 534, 636, 661, 232, 267, 430, 518,
	620, 506, 407, 594, 595, 338, 505, 302, 207, 378,
	649, 230, 491, 380, 248, 237, 600, 625, 306, 258,
	296, 468, 656, 219, 529, 611, 245, 495, 0, 0,
	664, 253, 516, 623, 612, 221, 607, 515, 403, 335,
	336, 220, 0, 469, 275, 300, 0, 0, 265, 425,
	602, 603, 263, 665, 234, 635, 226, 0, 634, 418,
	597, 608, 404, 392, 225, 606, 402, 391, 343, 364,
	365, 287, 315, 458, 384, 459, 314, 316, 414, 413,
	415, 213, 621, 639, 0, 214, 0, 511, 624, 666,
	463, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	311, 312, 321, 376, 429, 457, 453, 462, 0, 591,
	615, 629, 641, 647, 648, 650, 651, 652, 653, 654,
	657, 655, 417, 319, 507, 342, 382, 0, 0, 435,
	484, 246, 619, 508, 205, 0, 0, 0, 0, 261,
	262, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	662, 520, 526, 521, 522, 523, 524, 525, 0, 527,
	0, 0, 0, 0, 0, 408, 0, 604, 605, 685,
	393, 498, 616, 344, 358, 361, 350, 370, 0, 371,
	346, 347, 352, 355, 356, 357, 362, 363, 367, 373,
	255, 216, 400, 409, 590, 320, 222, 223, 224, 536,
	537, 538, 539, 632, 633, 637, 211, 474, 475, 476,
	477, 299, 627, 317, 480, 479, 340, 341, 388, 460,
	552, 554, 565, 569, 571, 573, 579, 582, 553, 555,
	566, 570, 572, 574, 580, 583, 542, 544, 546, 548,
	561, 560, 557, 585, 586, 563, 568, 547, 559, 564,
	577, 584, 581, 541, 545, 549, 558, 576, 575, 556,
	567, 578, 562, 550, 543, 551, 0, 202, 227, 377,
	0, 466, 295, 663, 631, 496, 626, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 318, 327, 328, 331, 337, 389,
	396, 397, 398, 399, 4225, 420, 421, 424, 427, 428,
	431, 433, 434, 437, 442, 446, 447, 448, 450, 452,
	454, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	500, 501, 502, 503, 504, 512, 513, 528, 599, 601,
	618, 638, 645, 492, 394, 440, 464, 592, 0, 0,
	308, 309, 455, 456, 322, 323, 659, 660, 307, 613,
	646, 610, 658, 640, 449, 387, 0, 0, 390, 288,
	313, 329, 0, 630, 514, 233, 478, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 333, 401, 410,
	439, 445, 303, 278, 250, 471, 247, 497, 531, 532,
	533, 535, 405, 273, 444, 406, 0, 385, 588, 589,
	325, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 375,
	274, 0, 0, 210, 517, 0, 441, 0, 209, 0,
	499, 259, 386, 383, 596, 289, 280, 276, 256, 326,
	395, 438, 530, 432, 0, 379, 0, 0, 509, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 254,
	334, 208, 423, 510, 293, 0, 0, 0, 0, 0,
	519, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 360, 369,
	368, 348, 349, 351, 353, 359, 366, 372, 345, 354,
	0, 0, 622, 0, 0, 0, 272, 330, 279, 271,
	593, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	412, 264, 0, 465, 0, 310, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 339, 203, 231, 0,
	0, 422, 473, 485, 0, 0, 0, 260, 0, 483,
	436, 617, 239, 291, 470, 443, 481, 451, 294, 0,
	0, 482, 381, 598, 461, 614, 643, 644, 270, 416,
	628, 534, 636, 661, 232, 267, 430, 518, 620, 506,
	407, 594, 595, 338, 505, 302, 207, 378, 649, 230,
	491, 380, 248, 237, 600, 625, 306, 258, 296, 468,
	656, 219, 529, 611, 245, 495, 0, 0, 664, 253,
	516, 623, 612, 221, 607, 515, 403, 335, 336, 220,
	0, 469, 275, 300, 0, 0, 265, 425, 602, 603,
	263, 665, 234, 635, 226, 0, 634, 418, 597, 608,
	404, 392, 225, 606, 402, 391, 343, 364, 365, 287,
	315, 458, 384, 459, 314, 316, 414, 413, 415, 213,
	621, 639, 0, 214, 0, 511, 624, 666, 463, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 311, 312,
	321, 376, 429, 457, 453, 462, 0, 591, 615, 629,
	641, 647, 648, 650, 651, 652, 653, 654, 657, 655,
	417, 319, 507, 342, 382, 0, 0, 435, 484, 246,
	619, 508, 205, 0, 0, 0, 0, 261, 262, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 662, 520,
	526, 521, 522, 523, 524, 525, 0, 527, 0, 0,
	0, 0, 0, 408, 0, 604, 605, 685, 393, 498,
	616, 344, 358, 361, 350, 370, 0, 371, 346, 347,
	352, 355, 356, 357, 362, 363, 367, 373, 255, 216,
	400, 409, 590, 320, 222, 223, 224, 536, 537, 538,
	539, 632, 633, 637, 211, 474, 475, 476, 477, 299,
	627, 317, 480, 479, 340, 341, 388, 460, 552, 554,
	565, 569, 571, 573, 579, 582, 553, 555, 566, 570,
	572, 574, 580, 583, 542, 544, 546, 548, 561, 560,
	557, 585, 586, 563, 568, 547, 559, 564, 577, 584,
	581, 541, 545, 549, 558, 576, 575, 556, 567, 578,
	562, 550, 543, 551, 0, 202, 227, 377, 0, 466,
	295, 663, 631, 496, 626, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 318, 327, 328, 331, 337, 389, 396, 397,
	398, 399, 419, 420, 421, 424, 427, 428, 431, 433,
	434, 437, 442, 446, 447, 448, 450, 452, 454, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 500, 501,
	502, 503, 504, 512, 513, 528, 599, 601, 618, 638,
	645, 492, 394, 440, 464, 592, 0, 0, 308, 309,
	455, 456, 322, 323, 659, 660, 307, 613, 646, 610,
	658, 640, 449, 387, 0, 0, 390, 288, 313, 329,
	0, 630, 514, 233, 478, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 333, 401, 410, 439, 445,
	303, 278, 250, 471, 247, 497, 531, 532, 533, 535,
	405, 273, 444, 406, 0, 385, 588, 589, 325, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 375, 274, 0,
	0, 210, 517, 0, 441, 0, 209, 0, 499, 259,
	386, 383, 596, 289, 280, 276, 256, 326, 395, 438,
	530, 432, 0, 379, 0, 0, 509, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 254, 334, 208,
	423, 510, 293, 0, 0, 0, 0, 0, 519, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 360, 369, 368, 348,
	349, 351, 353, 359, 366, 372, 345, 354, 0, 0,
	622, 0, 0, 0, 272, 330, 279, 271, 593, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 412, 264,
	0, 465, 0, 310, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 339, 203, 231, 0, 0, 422,
	473, 485, 0, 0, 0, 260, 0, 483, 436, 617,
	239, 291, 470, 443, 481, 451, 294, 0, 0, 482,
	381, 598, 461, 614, 643, 644, 270, 416, 628, 534,
	636, 661, 232, 267, 430, 518, 620, 506, 407, 594,
	595, 338, 505, 302, 207, 378, 649, 230, 491, 380,
	248, 237, 600, 625, 306, 258, 296, 468, 656, 219,
	529, 611, 245, 495, 0, 0, 664, 253, 516, 623,
	612, 221, 607, 515, 403, 335, 336, 220, 0, 469,
	275, 300, 0, 0, 265, 425, 602, 603, 263, 665,
	234, 635, 226, 0, 634, 418, 597, 608, 404, 392,
	225, 606, 402, 391, 343, 364, 365, 287, 315, 458,
	384, 459, 314, 316, 414, 413, 415, 213, 621, 639,
	0, 214, 0, 511, 624, 666, 463, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 311, 312, 321, 376,
	429, 457, 453, 462, 0, 591, 615, 629, 641, 647,
	648, 650, 651, 652, 653, 654, 657, 655, 417, 319,
	507, 342, 382, 0, 0, 435, 484, 246, 619, 508,
	205, 0, 0, 0, 0, 261, 262, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 662, 520, 526, 521,
	522, 523, 524, 525, 0, 527, 0, 0, 0, 0,
	0, 408, 0, 604, 605, 685, 393, 498, 616, 344,
	358, 361, 350, 370, 0, 371, 346, 347, 352, 355,
	356, 357, 362, 363, 367, 373, 255, 216, 400, 409,
	590, 320, 222, 223, 224, 536, 537, 538, 539, 632,
	633, 637, 211, 474, 475, 476, 477, 299, 627, 317,
	480, 479, 340, 341, 388, 460, 552, 554, 565, 569,
	571, 573, 579, 582, 553, 555, 566, 570, 572, 574,
	580, 583, 542, 544, 546, 548, 561, 560, 557, 585,
	586, 563, 568, 547, 559, 564, 577, 584, 581, 541,
	545, 549, 558, 576, 575, 556, 567, 578, 562, 550,
	543, 551, 0, 202, 227, 377, 0, 466, 295, 663,
	631, 496, 626, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	318, 327, 328, 331, 337, 389, 396, 397, 398, 399,
	419, 420, 421, 424, 427, 428, 431, 433, 434, 437,
	442, 446, 447, 448, 450, 452, 454, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 500, 501, 502, 503,
	504, 512, 513, 528, 599, 601, 618, 638, 645, 492,
	394, 440, 464, 592, 0, 0, 308, 309, 455, 456,
	322, 323, 659, 660, 307, 613, 646, 610, 658, 640,
	449, 387, 0, 0, 390, 288, 313, 329, 0, 630,
	514, 233, 478, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 333, 401, 410, 439, 445, 303, 278,
	250, 471, 247, 497, 531, 532, 533, 535, 405, 273,
	444, 406, 0, 385, 588, 589, 325, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 375, 274, 0, 0, 210,
	517, 0, 441, 0, 209, 0, 499, 259, 386, 383,
	596, 289, 280, 276, 256, 326, 395, 438, 530, 432,
	0, 379, 0, 0, 509, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 254, 334, 208, 423, 510,
	293, 0, 0, 0, 0, 0, 519, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 360, 369, 368, 348, 349, 351,
	353, 359, 366, 372, 345, 354, 0, 0, 622, 0,
	0, 0, 272, 330, 279, 271, 593, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 412, 264, 0, 465,
	0, 310, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 339, 203, 231, 0, 0, 422, 473, 485,
	0, 0, 0, 260, 0, 483, 436, 617, 239, 291,
	470, 443, 481, 451, 294, 0, 0, 482, 381, 598,
	461, 614, 643, 644, 270, 416, 628, 534, 636, 661,
	232, 267, 430, 518, 620, 506, 407, 594, 595, 338,
	505, 302, 207, 378, 649, 230, 491, 380, 248, 237,
	600, 625, 306, 258, 296, 468, 656, 219, 529, 611,
	245, 495, 0, 0, 664, 253, 516, 623, 612, 221,
	607, 515, 403, 335, 336, 220, 0, 469, 275, 300,
	0, 0, 265, 425, 602, 603, 263, 665, 234, 635,
	226, 0, 634, 418, 597, 608, 404, 392, 225, 606,
	402, 391, 343, 364, 365, 287, 315, 458, 384, 459,
	314, 316, 414, 413, 415, 213, 621, 639, 0, 214,
	0, 511, 624, 666, 463, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 311, 312, 321, 376, 429, 457,
	453, 462, 0, 591, 615, 629, 641, 647, 648, 650,
	651, 652, 653, 654, 657, 655, 417, 319, 507, 342,
	382, 0, 0, 435, 484, 246, 619, 508, 205, 0,
	0, 0, 0, 261, 262, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 662, 520, 526, 521, 522, 523,
	524, 525, 0, 527, 0, 0, 0, 0, 0, 408,
	0, 604, 605, 685, 393, 498, 616, 344, 358, 361,
	350, 370, 0, 371, 346, 347, 352, 355, 356, 357,
	362, 363, 367, 373, 255, 216, 400, 409, 590, 320,
	222, 223, 224, 536, 537, 538, 539, 632, 633, 637,
	211, 474, 475, 476, 477, 299, 627, 317, 480, 479,
	340, 341, 388, 460, 552, 554, 565, 569, 571, 573,
	579, 582, 553, 555, 566, 570, 572, 574, 580, 583,
	542, 544, 546, 548, 561, 560, 557, 585, 586, 563,
	568, 547, 559, 564, 577, 584, 581, 541, 545, 549,
	558, 576, 575, 556, 567, 578, 562, 550, 543, 551,
	0, 202, 227, 377, 0, 466, 295, 663, 631, 496,
	626, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 318, 327,
	328, 331, 337, 389, 396, 397, 398, 399, 419, 420,
	421, 424, 427, 428, 431, 433, 434, 437, 442, 446,
	447, 448, 450, 452, 454, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 500, 501, 502, 503, 504, 512,
	513, 528, 599, 601, 618, 638, 645, 492, 394, 440,
	464, 592, 0, 0, 308, 309, 455, 456, 322, 323,
	659, 660, 307, 613, 646, 610, 658, 640, 449, 387,
	0, 0, 390, 288, 313, 329, 0, 630, 514, 233,
	478, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 333, 401, 410, 439, 445, 303, 278, 250, 471,
	247, 497, 531, 532, 533, 535, 405, 273, 444, 0,
	0, 385, 588, 589, 325,
}

var yyPact = [...]int{
	-1000, -1000, 6962, -1000, -550, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2688, 2720, -1000, -1000, -1000, -1000, 2827, -1000,
	1038, -1000, 2247, 2142, 2600, 5193, -1000, 58807, 776, -1000,
	55775, -424, 908, 284, 39099, -1000, 226, -1000, 215, 57291,
	219, -1000, -1000, -1000, -1000, -424, 23181, 2480, 40, 39,
	58807, -1000, -1000, -1000, -1000, -337, 2806, 2121, -1000, 466,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55017, -1000, -1000,
	-1000, 1276, -1000, -1000, 2627, 2628, 2444, 948, 2469, -1000,
	2726, 2121, -1000, 23181, 2776, 2562, 22423, 22423, 495, -1000,
	-1000, 307, -1000, -1000, 33793, 58807, 42131, 2678, 57291, -1000,
	2600, -1000, -1000, -1000, 208, -1000, 441, 2130, -1000, 2126,
	-1000, 1045, 1057, 413, 864, 848, 411, 404, 401, 399,
	383, 381, 380, 368, 436, -1000, 968, 968, -210, -217,
	337, 491, 474, 474, 1167, 503, 2572, 2569, -1000, -1000,
	968, 968, 968, 408, 968, 968, 968, 968, 354, 353,
	968, 968, 968, 968, 968, 968, 968, 968, 968, 968,
	968, 968, 968, 968, 968, 968, 968, 911, 2600, 326,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58807, 274, 58807, -1000,
	868, 774, -1000, -1000, -428, 1116, 1116, 124, 1116, 1116,
	1116, 1116, 223, 1036, 38, -1000, 220, 317, 161, 323,
	1166, 171, -1000, -1000, 298, 1166, 1933, -1000, 955, 315,
	221, -1000, 1116, 1116, -1000, 15577, 224, 15577, 15577, 311,
	203, -1000, 2590, -1000, -1000, -1000, -1000, -1000, 1484, -1000,
	-1000, -1000, -1000, -29, 502, -1000, -1000, -1000, -1000, 57291,
	54259, 279, -1000, -1000, 878, 2021, 1473, 23181, 1272, 950,
	-1000, -1000, 1575, 921, -1000, -1000, -1000, -1000, -1000, 825,
	-1000, 25455, 25455, 25455, 25455, -1000, -1000, 2132, 53501, 2132,
	2132, 25455, 2132, 25455, 2132, 2132, 2132, 2132, 23181, 2132,
	2132, 2132, 2132, -1000, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, -1000, -1000, -1000, -1000, 2132, 867, 2132,
	2132, 2132, 2132, 2132, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2132, 2132, 2132, 2132, 2132, 2132, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	-1000, -1000, -1000, 1823, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2702, 1683, 1680, 1674, -1000, 20149, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2132, -1000, -1000,
	-1000, 58807, -1000, 2132, 254, 57291, 57291, 417, 1479, -1000,
	-1000, 2726, 2121, -1000, 2806, 2758, 466, -1000, 4152, 1895,
	1760, 1693, 2121, 971, 2093, 58807, -1000, 2142, 200, -1000,
	-1000, -1000, -321, -344, 2401, 1561, 1929, -1000, -1000, -1000,
	-1000, 2271, 23181, -1000, -1000, 2824, -1000, 30761, 866, 2822,
	52743, -1000, 495, 495, 2125, 637, -5, -1000, -1000, -1000,
	-1000, 993, 38341, -1000, -1000, -1000, -1000, -1000, 1987, 58807,
	-1000, -1000, 7108, 57291, -1000, 2246, -1000, 1983, -1000, 2174,
	23181, 466, 1947, -1000, -1000, -1000, -1000, 968, 968, 968,
	-1000, 429, 2775, 5193, 6608, -1000, -1000, -1000, 51985, 2224,
	57291, -1000, 2220, -1000, 1121, 886, 873, 873, 57291, -1000,
	-1000, 58049, 57291, 1120, 1108, 57291, 57291, 57291, 57291, -1000,
	51227, -1000, 50469, 49711, 1474, 57291, 48953, 48195, 47437, 46679,
	45921, -1000, 2599, -1000, 2454, -1000, -1000, -1000, 58049, 57291,
	57291, 58049, 57291, 58049, 58807, 57291, -1000, -1000, 321, -1000,
	-1000, 1470, 1455, 1448, 968, 968, 1446, 1928, 1927, 1924,
	968, 968, 1445, 1919, 40615, 1916, 296, 1441, 1437, 1432,
	1430, 1915, 243, 1914, 1382, 1356, 1427, 57291, 2219, 58807,
	-1000, 281, 1104, 918, -1000, -1000, -1000, 980, 2600, 2477,
	2122, 501, 748, 57291, 488, 488, 57291, -1000, -1000, 16341,
	58807, 275, -1000, 1913, 23181, -1000, 1169, 1166, 1166, -1000,
	-1000, -1000, -1000, -1000, -1000, 1116, 58807, 1169, -1000, -1000,
	-1000, 1166, 1116, 58807, 1116, 1116, 1116, 1116, 1166, 1166,
	1166, 1116, 58807, 58807, 58807, 58807, 58807, 58807, 58807, 58807,
	58807, 15577, 955, 1116, -429, -1000, 1907, -1000, -1000, -1000,
	2367, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15577, 15577, -1000, -1000, 2719, 2710, -1000, -1000, -1000,
	2106, -1000, 212, 16, 218, -1000, 45163, 511, 975, -1000,
	511, -1000, -1000, -1000, -1000, -1000, 2101, 44405, -1000, -434,
	-435, -437, -438, -1000, -1000, -1000, -439, -440, -1000, -1000,
	-1000, 23181, 23181, 23181, 23181, -267, -1000, 1251, 25455, 2555,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23181, 1317, 1244,
	25455, 25455, 25455, 25455, 25455, 25455, 25455, 26971, 26213, 25455,
	25455, 25455, 25455, 25455, 25455, -1000, -1000, 36067, 8668, 8668,
	921, 921, 921, 921, -1000, -177, 2100, 58049, -1000, -1000,
	-1000, 862, 23181, 23181, 921, -1000, 1428, 1853, 20149, 23181,
	23181, 23181, 23181, 1032, 1473, 58049, 23181, -1000, 1693, -1000,
	-1000, -1000, -1000, 1299, -1000, -1000, 1113, 2532, 2532, 2532,
	2532, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 2532, 23181, 884, 884, 1170, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 18633, 23181, 23181, 25455, 23181, 23181,
	23181, 1693, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 1693, 23181, 1690, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 17869, 23181, 23181, 23181, 23181, 23181, -1000, -1000, -1000,
	-1000, -1000, -1000, 23181, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 1693, 23181, 23181, 23181, 23181, 23181, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1776, 1744, 1646,
	2132, 23181, -1000, 2096, -1000, -164, 33035, 23181, 1900, 2817,
	2274, 57291, -1000, -1000, -1000, -1000, 2726, -1000, 2726, 1776,
	3732, 2411, 22423, -1000, -1000, 3732, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1972,
	-1000, 314, 742, 2226, 281, 57291, 530, 513, 510, 486,
	-1000, -67, 973, 58807, 2093, 2677, -1000, 2092, -1000, -1000,
	2132, -1000, -298, -1000, -302, 2387, 1884, 909, -1000, 23181,
	23181, 2089, -1000, 1953, 58807, -1000, -267, -1000, 43647, -1000,
	-1000, 14813, 58807, 365, 58807, -1000, 32277, 42889, 319, -1000,
	-5, 2053, -1000, 12, 8, 19391, 920, -1000, -1000, -1000,
	337, 27729, 2006, 920, 139, -1000, -1000, -1000, 2174, -1000,
	2174, 2174, 2174, 2174, 909, 909, 909, 909, -1000, -1000,
	-1000, -1000, -1000, 2218, 2174, 2217, -1000, 2174, 2174, 2174,
	2174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2208, 2208,
	2208, 2196, 2196, 2175, 2175, 477, -1000, 23181, 459, 42131,
	2662, 1424, 1333, -184, -1000, 57291, 1522, 1516, 1501, -1000,
	-538, 2080, -1000, -1000, 2774, -1000, -1000, 1123, 1213, 1181,
	1136, 57291, 262, 355, -1000, 471, -1000, 42131, 57291, 1094,
	873, 57291, -1000, 57291, -1000, -1000, -1000, -1000, -1000, 57291,
	-1000, -1000, 2076, -1000, 2087, 1226, 1174, 1210, 1160, 2076,
	-1000, -1000, -183, 2076, -1000, 2076, -1000, 2076, -1000, 2076,
	-1000, 2076, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1025, 306, -339, 57291, 262, 500, -1000, 498, 36067,
	-1000, -1000, -1000, 36067, 36067, -1000, -1000, -1000, -1000, 1881,
	1878, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-531, 58807, -1000, 282, 339, 345, 341, 58807, 356, 2549,
	2525, 2524, 2522, 2515, 2514, 2509, 297, 349, 58807, 58807,
	488, 2331, 58807, 2652, 58807, -1000, -1000, -1000, -1000, -1000,
	1871, 1837, -1000, 1473, 58807, -1000, -1000, 1116, 1116, -1000,
	-1000, 58807, 1116, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 58807, -1000, -1000,
	-1000, -1000, 1826, -1000, 58807, -29, 209, -1000, -1000, 57291,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -79,
	-1000, 787, 7, 426, -1000, -1000, -1000, -1000, -1000, 2707,
	-1000, 1473, 1100, 1059, -1000, 2132, -1000, -1000, 1323, -1000,
	-1000, -1000, -1000, -1000, 2132, 2132, 2132, -1000, -1000, -1000,
	-1000, -1000, 1317, 25455, 25455, 25455, 1708, 822, 1314, 1518,
	1383, 1016, 1016, 965, 25455, 965, 25455, 926, 926, 926,
	926, 926, -1000, -1000, -1000, -1000, -1000, -1000, 1823, -1000,
	1820, -1000, 2132, 58049, 1891, 17869, 1687, 1976, 1693, 941,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3622, 1693, 2021, 1693, 1767, 3609, 1065, -1000, 23181, 1693,
	3588, -1000, -1000, 1693, 1693, 23181, -1000, -1000, 23181, 23181,
	23181, 23181, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333,
	1333, 1333, 23181, 1333, 2064, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2060, 2809, 1329, 1333, 1333, 1333, 1333,
	3579, 1333, 1333, 23181, 1351, -1000, -1000, -1000, 1539, 3570,
	1649, 3566, 1333, 1333, -1000, 1333, 3560, 3555, 1693, 3015,
	3003, 1333, 1333, 1333, 1333, 1333, 2991, 2987, 1333, 1333,
	2974, 1333, 3545, 1333, 2938, 2890, 2837, 2790, 2764, 2742,
	2724, 2681, 2676, 2670, 2651, 2607, 2602, 2560, 2556, 2516,
	2512, 2505, 1333, 1333, 1333, 3539, 1333, 3533, 1333, 3481,
	1333, 1333, 3475, 2471, 2465, 1693, 2058, -1000, 3469, 1333,
	3452, 3446, 3442, 2461, 3438, 3425, 3420, 1333, 1333, 1333,
	2432, 3413, 3405, 3398, 3380, 3374, 3369, 3364, 3352, 3344,
	1333, 1646, 1646, 1646, 1646, 1646, 3340, -269, 1333, 1693,
	-1000, -1000, -1000, -1000, -1000, 3335, 2388, 3325, 3316, 3255,
	3250, 1693, 2132, 861, -1000, -1000, 1646, 1693, 1693, 1646,
	1646, 3238, 3221, 3199, 3157, 3091, 3078, 1333, 1333, -1000,
	1333, 3073, 3057, 2382, 2352, 1693, -1000, 1646, 58807, -1000,
	-418, -1000, -3, 967, 2132, -1000, 40615, 1693, -1000, 5194,
	-1000, 1321, -1000, -1000, -1000, -1000, -1000, 37583, 1934, -1000,
	-1000, -1000, 486, 508, 270, 486, 281, 282, 2273, 57291,
	57291, 57291, 58807, 974, -1000, 538, -1000, 2132, -462, 21665,
	-1000, -1000, -1000, 909, 126, 36825, 876, 876, 153, 1473,
	1473, 23181, -1000, -1000, -1000, -1000, -1000, -1000, 849, 2792,
	520, 2132, -1000, 2109, 3040, -1000, -1000, -1000, 2674, 28487,
	-1000, -1000, 2132, 2132, 58807, 2028, 2027, -1000, 835, -1000,
	1489, 2053, -5, -9, -1000, -1000, -1000, -1000, 1473, -1000,
	1494, 366, 1423, -1000, 464, -1000, -1000, -1000, -1000, 2488,
	63, -1000, -1000, -1000, 832, 909, -1000, -1000, -1000, -1000,
	-1000, -1000, 1773, -1000, 1773, -1000, -1000, -1000, -1000, -1000,
	1422, -1000, -1000, -1000, -1000, 1420, -1000, -1000, 1419, -1000,
	-1000, 2749, 2357, 459, -1000, -1000, 968, 1771, -1000, -1000,
	2491, 968, 968, 57291, -1000, -1000, 2004, 2662, -1000, -14,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -492, 160, 378,
	-1000, -1000, -1000, 6022, 57291, 1889, -1000, 259, -1000, 1991,
	-1000, 57291, -1000, 1866, 2194, 57291, 57291, -1000, -1000, -1000,
	57291, 2132, -1000, -1000, -1000, -1000, 720, 2598, 322, -1000,
	-1000, -303, -1000, -1000, 262, 259, 58049, 57291, 920, -1000,
	-1000, -1000, -1000, -1000, -494, 1864, 507, 58807, 58807, 58807,
	58807, 58807, 58807, 809, -1000, -1000, 24, -1000, -1000, 236,
	-1000, -1000, 1768, -1000, -1000, -1000, -1000, 236, -1000, -1000,
	-1000, -1000, -1000, 332, 497, -1000, 58807, 58807, 947, -1000,
	-1000, -1000, -1000, -1000, 1166, -1000, -1000, 1166, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2587, 58807, 2, -459, -1000, -456, 23181, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1628, 470, 1314, 25455, 25455, 1853,
	1853, 25455, -1000, -1000, -1000, 856, 856, 36067, -1000, 25455,
	23181, -1000, -1000, 23181, 23181, 23181, 1006, -1000, 23181, 1425,
	-1000, 23181, -1000, -269, 1646, 1333, 1333, 1333, 1333, -269,
	-269, -269, -269, -269, -269, -269, -269, -269, -269, 2063,
	-1000, 23181, 23181, 23181, 1693, 363, -1000, -1000, -1000, -269,
	23181, -1000, -1000, 2797, -1000, 23181, -1000, 36067, 23181, 23181,
	23181, -1000, -1000, -1000, 23181, 23181, -1000, -1000, 23181, -1000,
	23181, -1000, -1000, -1000, -1000, -1000, -1000, 23181, -1000, 23181,
	-1000, -1000, -1000, 23181, -1000, 23181, -1000, -1000, 23181, -1000,
	23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000,
	23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000,
	23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000,
	23181, -1000, 23181, -1000, -1000, -1000, 23181, -1000, 23181, -1000,
	23181, -1000, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181,
	23181, -1000, 23181, 23181, 23181, -1000, 23181, 23181, 23181, 23181,
	-1000, -1000, -1000, -1000, 23181, 23181, 23181, 23181, 23181, 23181,
	23181, 23181, 23181, 23181, -1000, -1000, -1000, -1000, -1000, -1000,
	23181, -1000, 42131, 51, -269, 1690, 51, 1690, 24697, 826,
	539, 23939, -1000, 23181, 17105, -1000, -1000, -1000, -1000, -1000,
	23181, 23181, 23181, 23181, 23181, 23181, -1000, -1000, -1000, 23181,
	23181, -1000, 23181, -1000, 23181, -1000, -1000, -1000, -1000, -1000,
	967, -1000, 881, 880, 873, 57291, -1000, -1000, -1000, -1000,
	2051, -1000, 2699, -1000, 2420, 2419, 2794, 2792, 22423, -1000,
	32277, 58807, 58807, 283, 58807, 282, 506, 2330, -1000, 2273,
	2273, 2273, -1000, 2646, -1000, 2192, 1327, -1000, -1000, -1000,
	-1000, -1000, -408, -1000, 2472, 2478, 876, 876, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14049, 2726, 23181, 2326, 58049,
	2132, -1000, 30003, 57291, 58049, 32277, 32277, 32277, 32277, 32277,
	-1000, 2375, 2362, -1000, 2360, 2348, 2389, 58807, -1000, 1776,
	1862, -1000, 23181, 34551, 2032, 32277, -1000, -1000, 32277, 58807,
	13285, -1000, -1000, -13, 0, -1000, -1000, -1000, -1000, 337,
	-1000, -1000, 938, 2669, 2486, -1000, -1000, -1000, -1000, -1000,
	1852, -1000, 1849, 2046, 1817, 1813, 306, -1000, 2214, 2564,
	968, 968, -1000, 1417, -1000, 1428, 1761, 1741, -1000, -1000,
	-1000, 475, -1000, -1000, -534, 1416, 2185, 2195, 23181, 2182,
	2773, 2034, 57291, -1000, -1000, 58049, -1000, 264, -1000, 459,
	57291, -1000, -1000, -1000, 355, 58807, -1000, 9471, -1000, -1000,
	-1000, 259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58807,
	2222, -1000, -1000, -1000, -1000, -1000, 244, 229, 1726, 228,
	1707, -1000, 228, -1000, 58807, 932, 2357, 58807, -1000, -1000,
	-1000, 1116, 1116, -1000, -1000, 2517, -1000, 1428, 1333, 25455,
	25455, -1000, 921, -1000, -1000, 489, -246, 2174, 2174, -1000,
	2174, 2175, -1000, 2174, 196, 2174, 189, 2174, -1000, -1000,
	1693, 1693, -1000, 1646, 2347, 1705, 2996, -1000, 1473, 23181,
	2970, -1000, -1000, -269, -269, -269, -269, -269, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -74, 2760,
	2737, 1333, -1000, 2173, 2160, -1000, 1333, 23181, 1333, 1693,
	2303, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333,
	1333, 1333, 1333, 2298, 2286, 2257, 2248, 2221, 2213, 2209,
	2202, 2123, 2118, 2111, 2103, 2098, 2094, 2090, 2085, 1333,
	1333, 2078, 1333, 2056, 1995, -1000, 1473, 1646, 2728, 1646,
	1333, 1333, 2574, 304, 1333, 1811, 1811, 1811, 1811, 1811,
	1646, 1646, 1646, 1646, 1333, 57291, -1000, -269, -1000, -1000,
	-312, -319, -1000, 1693, -269, 2044, 25455, 1333, 25455, 25455,
	25455, 1333, 1693, -1000, 1990, 1922, 2416, 1899, 1333, 2225,
	1333, 1333, 1333, 1894, -1000, 2700, 2132, 2700, 2132, 2700,
	1785, 1321, 58807, -1000, -1000, -1000, -1000, 2792, 2761, -1000,
	2043, 2132, -1000, -1000, -1000, -1000, -1000, 505, 58807, 58807,
	2317, 2306, 2305, -1000, 1979, -1000, -1000, 126, 594, -1000,
	2433, 2478, -1000, 2772, 2460, 2770, -1000, -1000, -1000, -1000,
	-1000, 1473, -1000, 2613, 2025, -1000, 972, 1961, -1000, -1000,
	21665, 1787, 2418, 833, 1785, 2097, 3040, 2264, 2304, 2846,
	-1000, -1000, -1000, -1000, 2313, -1000, 2296, -1000, -1000, 2142,
	-1000, 2107, 365, 32277, 2062, 2062, -1000, 830, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1231, 9471, 2834, -1000, 1701,
	-1000, 1490, 248, 1375, -1000, -1000, 968, 968, -1000, 1088,
	1085, -1000, 58807, 2149, -1000, 909, 1699, 909, 1374, -1000,
	-1000, 1371, -1000, -1000, -1000, -1000, 2190, 2309, -1000, -1000,
	-1000, -1000, 276, 2147, 2756, -1000, 23181, 2144, 970, 2566,
	57291, 57291, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 807, 968, -473, 338, 335, 968, 968,
	968, -535, -1000, -1000, 1781, 1779, -1000, -212, -1000, 23181,
	-1000, -1000, -1000, -1000, -1000, 1353, 1353, 1683, 1680, 1674,
	-1000, 2142, -191, 57291, 57291, 57291, 57291, -1000, -1000, -1000,
	1360, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 921, 1693, 350, -196, 1693, -1000, -1000,
	909, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23181, -1000, 23181, -1000, 23181, 1473, 23181, -1000, -1000,
	-1000, -1000, -1000, 2726, 1671, 23181, 23181, -1000, 1370, 1367,
	-269, 1333, -1000, -1000, -1000, 23181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23181,
	-1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181,
	-1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181,
	-1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181, -1000, 23181,
	-1000, -1000, 23181, -1000, -1000, -1000, 23181, -1000, 23181, -1000,
	23181, -1000, -1000, -1000, 23181, 249, 856, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1693, 358,
	-1000, -1000, -1000, 2791, -1000, 1693, 23181, 1853, -1000, 1853,
	1853, 1853, -1000, -1000, -1000, 23181, -1000, 23181, 23181, -1000,
	23181, -1000, 23181, -1000, -1000, -1000, -1000, 23181, 2132, 2476,
	41373, 2132, 41373, 2132, 34551, -1000, -1000, 2761, 2781, 2753,
	268, 58807, -1000, -1000, 58807, 58807, 58807, -1000, 2442, 2434,
	2434, 2433, -1000, 2752, 2751, -1000, 1642, 2748, 1632, 1069,
	-1000, 58049, 23181, -1000, 2132, 40615, -1000, 512, 57291, 2132,
	57291, -1000, 2729, -1000, -1000, 23181, 2141, -1000, 23181, -1000,
	-1000, -1000, -1000, 8668, 2792, 2062, -1000, -1000, 936, -1000,
	23181, -1000, 10538, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1630, 1625, -1000, -1000, 2140, 23181, -1000, -1000,
	-1000, 1977, 1962, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 355, -530, 2495, 57291, 1366, -1000, 1758,
	2034, 346, 2132, 1613, 968, 968, 968, 1344, 1312, 40615,
	1756, -1000, 57291, 454, -1000, 355, -1000, -230, -241, 1333,
	-1000, -1000, 2668, -1000, 17105, -1000, -1000, 2137, 2260, -1000,
	-1000, -1000, -1000, 2364, -180, -204, -1000, -1000, 1333, 1333,
	1333, 1749, 1693, -1000, 1333, 1333, 1951, 1788, -1000, -1000,
	1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333,
	1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333,
	1646, 1868, -1000, 249, 1693, 2302, -1000, -1000, 8668, -1000,
	-1000, 2729, 2747, 51, -1000, -1000, 253, 51, 1473, 1029,
	1693, 1693, 1029, 1847, 1333, 1819, 1815, 1333, 1333, 35309,
	-1000, 2738, 2731, 1697, -1000, -1000, 41373, 1697, 41373, 967,
	2781, -276, 23181, 23181, 1693, 2038, -1000, 57291, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2427, 1301, -1000, -1000, -1000,
	-1000, 1597, 1591, -1000, 1562, -1000, 2833, -1000, 1473, -1000,
	2132, 2132, -1000, 819, 1961, -1000, 2726, 1473, 57291, 1473,
	56, 2729, -1000, 1333, -1000, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
	2132, 2132, 2132, 2132, 2132, 2132, -1000, -1000, 57291, 2487,
	-1000, -1000, 1753, 159, -1000, 1782, 2034, -1000, -1000, 658,
	-1000, 23181, -1000, 40615, 1560, 1521, -1000, -1000, -1000, -1000,
	-535, -1000, -1000, -1000, -1000, -1000, -1000, 466, 2029, -1000,
	966, 57291, 58807, -1000, 2354, -1000, -1000, -1000, -1000, 23181,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23181, -1000, 1693,
	2299, -1000, -341, -1000, -495, 23181, -269, -1000, -1000, -269,
	-1000, -1000, -1000, -1000, -1000, 23181, -1000, -1000, 23181, -1000,
	23181, -1000, -1000, 1697, -1000, -1000, -1000, 39857, -1000, 1697,
	-1000, 1697, -1000, -276, -1000, 2024, -1000, 57291, 1473, 347,
	7946, 268, 7108, -1000, 1275, -1000, -1000, -1000, -1000, -1000,
	58049, 57291, 1961, 57291, -1000, -1000, 1692, 1693, 2132, 2726,
	-1000, 1650, -1000, -1000, 2135, 2195, -1000, -1000, -1000, 20907,
	-1000, -1000, -1000, -1000, -1000, 301, -184, 17105, 12521, 1648,
	-1000, -185, 1333, 1646, -1000, -447, -1000, -1000, -1000, -1000,
	285, -1000, -1000, 2021, -1000, -1000, 1620, 1537, 1462, -1000,
	-1000, -1000, -1000, -1000, -1000, -276, -1000, -1000, 2666, -1000,
	-243, -1000, -552, -1000, -1000, 7946, 23181, 31519, -1000, -1000,
	-1000, -1000, 1901, 1629, -1000, -1000, -1000, 34551, 56533, -1000,
	-175, 462, 23181, 2133, 1693, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 817, -1000, -1000, -1000, 2222,
	-198, -1000, -1000, -1000, 4646, -464, -314, -320, 25455, -1000,
	23181, -1000, 23181, -1000, 23181, -1000, 57291, 2132, -1000, -1000,
	1004, 7946, -1000, -552, 1421, 2909, 521, -1000, -1000, -1000,
	-1000, -1000, 1617, -1000, 5630, -335, 2294, -1000, -104, -1000,
	-1000, -1000, 1224, 1515, -1000, 1306, -1000, -1000, -1000, -1000,
	2366, 57291, -1000, 16341, -191, -205, 1021, -1000, -1000, -1000,
	-1000, -1000, 1853, 1442, 1355, 1333, -1000, 57291, -1000, -1000,
	7946, 2597, 2684, -1000, 56533, -333, 920, 8668, -1000, 2290,
	2287, 2802, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -547,
	1534, -1000, -1000, -1000, 4646, -328, -1000, 23181, -1000, 23181,
	-1000, 1693, 7881, -1000, 9471, 29245, -1000, -1000, 2644, 56,
	-1000, 2832, -1000, 2830, 1052, 1052, -1000, 1302, -547, -1000,
	-1000, -1000, 1333, 1333, -1000, 1013, 1008, -1000, 23181, 23181,
	-1000, 2394, -1000, -1000, 2405, -1000, -1000, 791, -1000, -349,
	-1000, -1000, -1000, -1000, -1000, 465, 1379, -1000, -1000, -1000,
	-1000, -1000, 997, 7946, -1000, 1236, 1333, -1000, 29245, 1502,
	-1000, -1000, 8668, -1000, -1000, -1000, 484, 7946, 7946, -1000,
	-1000, -1000, 250, -1000, 7946, 250, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3504, 3503, 35, 11, 61, 59, 2851, 3502, 3492,
	3489, 196, 3486, 3484, 3477, 3475, 3474, 3468, 203, 202,
	201, 3467, 3466, 3464, 3463, 3462, 3461, 3459, 3458, 3457,
	45, 105, 53, 103, 217, 214, 3455, 3454, 43, 184,
	213, 3449, 3445, 3444, 3443, 3441, 131, 208, 96, 99,
	205, 3439, 3438, 89, 3437, 3435, 3434, 3433, 3432, 5,
	198, 197, 194, 1111, 3430, 207, 123, 63, 3428, 3427,
	3426, 3425, 48, 41, 3423, 7, 3419, 10, 3416, 3415,
	3414, 3413, 3407, 3404, 3401, 3398, 3397, 3396, 3395, 3389,
	3388, 3387, 3386, 3381, 3370, 293, 3369, 3366, 38, 3364,
	91, 3362, 3358, 3349, 3345, 3340, 18, 3338, 3336, 24,
	122, 73, 3335, 3333, 46, 3332, 3331, 3328, 3326, 3321,
	28, 3319, 30, 3316, 50, 3311, 3308, 137, 3307, 3302,
	3296, 37, 3285, 3283, 3268, 27, 188, 3260, 3258, 160,
	3256, 3255, 3251, 187, 215, 3250, 2421, 3249, 111, 3248,
	3245, 3243, 185, 183, 212, 3241, 114, 3240, 3238, 3236,
	3235, 148, 3232, 3230, 2935, 3227, 3224, 14, 16, 140,
	3223, 3222, 166, 20, 76, 3219, 8, 9, 3218, 3216,
	15, 87, 3215, 126, 3214, 3211, 115, 78, 3209, 116,
	107, 3208, 3207, 21, 13, 3206, 1, 6, 2, 79,
	3205, 3204, 119, 3202, 3196, 3194, 102, 3192, 3190, 6540,
	3185, 101, 155, 113, 84, 3181, 178, 67, 3180, 3179,
	3178, 3176, 3175, 3173, 64, 3172, 3164, 3163, 158, 32,
	117, 3162, 3160, 149, 367, 144, 65, 147, 3157, 157,
	3155, 146, 93, 3154, 189, 3150, 3148, 156, 153, 3141,
	3139, 70, 176, 210, 3138, 110, 139, 128, 142, 108,
	162, 3137, 3136, 3133, 71, 82, 3132, 3128, 3124, 3120,
	190, 3113, 3110, 81, 3109, 68, 3107, 186, 3105, 655,
	75, 3103, 40, 179, 3098, 83, 3097, 3086, 77, 125,
	80, 44, 3085, 175, 181, 136, 199, 3076, 3060, 69,
	3059, 3055, 3051, 209, 309, 3050, 3047, 289, 191, 163,
	151, 97, 3044, 211, 3040, 3039, 3037, 22, 5140, 6685,
	200, 34, 182, 3036, 3033, 8348, 25, 39, 42, 3031,
	221, 3018, 145, 3017, 3015, 3014, 228, 223, 120, 180,
	72, 3008, 3002, 2998, 2997, 54, 2994, 2988, 2985, 2983,
	2973, 2972, 58, 55, 52, 85, 236, 74, 23, 104,
	177, 172, 86, 2971, 2970, 2963, 134, 98, 2962, 174,
	173, 135, 130, 2961, 192, 164, 124, 2955, 62, 51,
	2954, 2952, 2950, 2949, 100, 2948, 2947, 2940, 2937, 170,
	168, 132, 94, 2936, 95, 106, 171, 167, 66, 2929,
	49, 2926, 2918, 47, 204, 57, 2914, 2912, 2910, 36,
	2909, 26, 118, 129, 2908, 6510, 2907, 29, 241, 169,
	2906, 2901, 12, 17, 19, 2900, 2896, 2889, 2888, 150,
	2885, 2882, 2878, 2871, 33, 60, 31, 4, 121, 159,
	92, 2865, 2864, 161, 2863, 2862, 2859, 0, 1806, 138,
	2852, 222,
}

//line sql.y:9098
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() CompoundStatements {
	v, _ := st.union.(CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) handlerActionUnion() HandlerAction {
	v, _ := st.union.(HandlerAction)
	return v
}

func (st *yySymType) handlerConditionUnion() HandlerCondition {
	v, _ := st.union.(HandlerCondition)
	return v
}

func (st *yySymType) handlerConditionsUnion() []HandlerCondition {
	v, _ := st.union.([]HandlerCondition)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 445, 446, 446, 8, 8, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 72, 72, 72, 72, 72, 57, 57, 57,
	58, 58, 59, 59, 59, 59, 59, 59, 160, 160,
	263, 263, 263, 73, 71, 71, 74, 74, 75, 75,
	76, 76, 79, 79, 78, 78, 77, 285, 415, 283,
	283, 29, 90, 38, 38, 37, 37, 40, 40, 39,
	32, 32, 32, 33, 33, 33, 33, 33, 33, 33,
	33, 34, 34, 34, 34, 34, 30, 30, 30, 30,
	31, 31, 31, 31, 31, 36, 36, 16, 17, 35,
	35, 35, 18, 18, 125, 125, 19, 20, 20, 20,
	20, 449, 449, 204, 204, 202, 202, 203, 203, 288,
	288, 21, 292, 292, 294, 294, 294, 294, 284, 284,
	284, 22, 22, 293, 293, 295, 295, 295, 298, 298,
	298, 298, 339, 339, 339, 23, 23, 23, 23, 23,
	23, 145, 417, 417, 416, 411, 411, 410, 410, 409,
	414, 414, 413, 413, 412, 43, 42, 44, 44, 44,
	45, 54, 54, 54, 54, 55, 56, 418, 418, 380,
	64, 64, 63, 63, 63, 63, 63, 63, 65, 65,
	61, 61, 60, 60, 62, 62, 382, 382, 368, 368,
	381, 381, 381, 381, 381, 381, 381, 367, 367, 157,
	157, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 433, 433,
	433, 433, 432, 432, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 168, 168, 180, 180, 180, 180, 180,
	180, 166, 166, 167, 165, 165, 165, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 179, 179, 174, 174, 174,
	176, 176, 175, 175, 175, 177, 177, 434, 434, 434,
	434, 345, 345, 345, 345, 348, 348, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 347, 347, 347, 347,
	347, 347, 347, 349, 349, 349, 349, 349, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 351, 351, 351, 351, 351,
	351, 351, 351, 366, 366, 355, 355, 360, 360, 361,
	361, 362, 362, 362, 363, 363, 363, 364, 364, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 359, 359,
	358, 358, 358, 369, 394, 394, 393, 393, 391, 391,
	391, 391, 391, 391, 391, 391, 378, 378, 388, 388,
	388, 388, 388, 377, 377, 373, 373, 373, 374, 374,
	375, 375, 372, 372, 376, 376, 390, 390, 389, 389,
	370, 370, 371, 371, 396, 435, 435, 435, 435, 435,
	436, 436, 397, 425, 427, 427, 427, 426, 426, 423,
	424, 422, 422, 422, 422, 422, 100, 100, 100, 311,
	311, 312, 312, 386, 386, 385, 385, 385, 387, 387,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 306, 306, 306, 421, 421, 421, 421, 421, 421,
	420, 420, 420, 383, 383, 383, 383, 419, 419, 66,
	66, 242, 242, 438, 438, 440, 440, 440, 51, 51,
	51, 51, 51, 51, 50, 50, 50, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 52, 52,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 127, 127, 128, 128, 128, 128,
	130, 130, 130, 399, 399, 67, 67, 3, 3, 192,
	194, 195, 195, 193, 193, 193, 193, 193, 193, 69,
	69, 68, 68, 197, 196, 198, 198, 198, 1, 1,
	2, 2, 4, 4, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 365, 365, 365, 398,
	398, 400, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 133, 132, 132, 131, 134, 134, 134, 134,
	134, 134, 134, 134, 402, 402, 402, 70, 70, 403,
	352, 353, 354, 5, 6, 379, 401, 141, 141, 25,
	41, 41, 26, 26, 26, 26, 27, 27, 80, 83,
	83, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 316, 316, 305,
	305, 314, 314, 304, 304, 330, 330, 330, 307, 307,
	307, 308, 308, 431, 431, 431, 301, 301, 82, 82,
	82, 331, 331, 331, 331, 85, 85, 441, 441, 442,
	442, 443, 443, 443, 86, 87, 87, 334, 334, 335,
	335, 88, 89, 101, 101, 101, 101, 101, 102, 102,
	102, 102, 102, 102, 126, 126, 126, 11, 11, 11,
	11, 97, 97, 97, 10, 10, 12, 84, 84, 91,
	428, 428, 429, 430, 430, 430, 430, 92, 94, 28,
	28, 28, 28, 28, 28, 151, 151, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 146,
	146, 146, 140, 140, 450, 95, 96, 96, 144, 144,
	144, 137, 137, 137, 143, 143, 143, 13, 13, 14,
	287, 287, 15, 15, 150, 150, 149, 149, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 147,
	147, 148, 148, 148, 148, 323, 323, 323, 322, 322,
	186, 186, 188, 187, 187, 189, 189, 190, 190, 190,
	190, 240, 240, 212, 212, 280, 280, 281, 281, 279,
	279, 286, 286, 282, 282, 282, 282, 289, 289, 191,
	191, 191, 191, 199, 199, 200, 200, 201, 201, 333,
	333, 328, 328, 328, 327, 327, 205, 205, 205, 207,
	206, 206, 206, 206, 208, 208, 210, 210, 209, 209,
	211, 216, 216, 215, 215, 213, 213, 213, 213, 213,
	213, 214, 214, 214, 214, 217, 217, 164, 164, 164,
	164, 164, 164, 164, 164, 439, 439, 178, 178, 178,
	178, 178, 178, 178, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 270, 270, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 245, 245, 244,
	244, 103, 103, 103, 104, 104, 105, 105, 105, 105,
	105, 106, 106, 106, 106, 106, 106, 106, 108, 108,
	107, 107, 231, 231, 320, 320, 109, 110, 110, 111,
	111, 114, 114, 113, 112, 112, 118, 118, 115, 115,
	117, 117, 116, 119, 119, 120, 121, 121, 302, 302,
	218, 218, 227, 227, 227, 227, 219, 219, 220, 220,
	220, 220, 220, 220, 228, 228, 228, 239, 229, 229,
	225, 225, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 183, 183, 183, 183,
	250, 250, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 171, 171, 184,
	184, 184, 184, 185, 185, 185, 185, 185, 185, 185,
	341, 341, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	451, 451, 356, 356, 356, 226, 226, 226, 226, 226,
	142, 142, 142, 142, 142, 338, 338, 338, 342, 342,
	342, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 343, 343, 248, 248,
	138, 138, 246, 246, 247, 249, 249, 241, 241, 241,
	241, 243, 243, 222, 222, 222, 251, 251, 344, 344,
	252, 252, 122, 123, 123, 124, 124, 253, 253, 255,
	254, 254, 256, 257, 257, 257, 258, 258, 259, 259,
	259, 53, 53, 53, 53, 53, 48, 48, 48, 48,
	49, 49, 49, 49, 153, 153, 154, 154, 154, 156,
	156, 155, 155, 98, 98, 99, 99, 99, 408, 408,
	407, 407, 405, 406, 406, 406, 161, 161, 162, 163,
	163, 163, 158, 158, 159, 159, 277, 277, 277, 277,
	277, 277, 277, 260, 260, 260, 268, 268, 268, 264,
	264, 266, 266, 266, 267, 267, 267, 265, 274, 274,
	276, 276, 275, 275, 271, 271, 272, 272, 273, 273,
	273, 269, 269, 221, 221, 221, 221, 221, 278, 278,
	278, 278, 332, 332, 332, 290, 290, 232, 232, 233,
	233, 237, 237, 236, 236, 234, 235, 238, 238, 182,
	291, 291, 299, 296, 296, 297, 297, 324, 324, 324,
	300, 300, 313, 313, 309, 309, 310, 310, 303, 303,
	315, 315, 315, 93, 230, 230, 395, 395, 392, 319,
	319, 321, 321, 325, 325, 329, 329, 326, 326, 9,
	444, 444, 444, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	447, 448, 336, 337, 337, 337,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 8, 4, 6, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 2, 1, 0, 1,
	0, 4, 2, 2, 1, 1, 0, 1, 1, 2,
	0, 2, 0, 1, 2, 1, 4, 1, 1, 1,
	1, 2, 3, 2, 3, 0, 1, 3, 1, 4,
	3, 3, 4, 3, 2, 3, 4, 3, 4, 2,
	7, 1, 3, 3, 3, 3, 1, 2, 1, 1,
	3, 2, 3, 3, 2, 3, 3, 5, 7, 10,
	9, 1, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 1, 6, 5,
	2, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	0, 1, 1, 3, 3, 10, 6, 6, 8, 7,
	4, 7, 8, 8, 8, 5, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	3, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 2, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 1,
	3, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	3, 3, 2, 2, 2, 1, 2, 2, 0, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 1, 1, 3, 3, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 4,
	3, 1, 3, 1, 7, 6, 7, 7, 8, 8,
	0, 1, 5, 2, 1, 1, 1, 0, 1, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 1,
	2, 0, 1, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 6, 10, 7, 5, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 5, 5, 6, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 4, 5,
	5, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	5, 2, 3, 3, 2, 3, 4, 4, 4, 3,
	4, 4, 5, 3, 5, 3, 5, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 5,
	5, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 1, 1, 3, 4, 3,
	4, 4, 4, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 5, 5, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 5, 6, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 4, 2, 4, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 1,
	0, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	5, 6, 6, 6, 6, 6, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 8, 4, 8, 8,
	6, 5, 4, 4, 4, 5, 7, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 4, 0, 2,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 1, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	1, 3, 3, 1, 1, 1, 0, 1, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	3, 1, 3, 1, 2, 3, 4, 1, 1, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -445, -95, -450, -8, -7, -30, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -27, -80,
	-83, -81, -82, -85, -86, -87, -88, -89, -10, -12,
	-84, -28, -29, -90, -91, -92, -93, -94, -13, -14,
	-15, -9, -33, -32, -31, 13, 14, -125, -37, 35,
	-42, -43, -54, -44, -55, -45, 242, -56, 244, 243,
	290, 245, 407, 283, 83, 340, 341, 343, 344, 345,
	346, -126, 720, 288, 289, 247, 39, 51, 36, 37,
	40, 251, 296, 297, 250, 145, -34, -38, 12, -447,
	15, 497, 241, 285, 284, 31, -35, 607, 95, -36,
	63, -96, -446, 768, -277, -260, 26, 36, 32, -259,
	-255, -144, -260, 24, 22, 11, -95, -95, -95, 16,
	17, -95, -380, -382, 95, 174, 95, -280, 95, -64,
	-63, -61, -60, -62, -65, 34, -51, -52, -404, -50,
	-47, 246, 243, 300, 135, 136, 290, 291, 292, 245,
	274, 289, 293, 288, 309, -46, 90, 36, 607, 610,
	-387, 242, 248, 249, 244, 498, 138, 137, 84, -384,
	402, 641, 738, -65, 740, 110, 113, 739, 50, 264,
	741, 742, 743, 648, 744, 273, 745, 746, 747, 748,
	754, 689, 755, 756, 757, 139, 11, -95, -329, -325,
	100, -318, 604, 276, 639, 451, 640, 325, 90, 47,
	42, 543, 614, 398, 402, 641, 528, 738, 408, 340,
	358, 352, 533, 534, 535, 381, 373, 605, 642, 615,
	328, 277, 313, 732, 371, 149, 740, 332, 643, 291,
	409, 410, 644, 411, 110, 343, 448, 753, 331, 645,
	751, 113, 739, 348, 88, 527, 57, 735, 336, 50,
	286, 456, 457, 369, 250, 365, 741, 314, 646, 617,
	307, 138, 135, 760, 39, 361, 56, 33, 750, 137,
	55, 742, 165, 647, 743, 648, 413, 388, 726, 54,
	414, 292, 649, 93, 297, 609, 337, 734, 415, 548,
	362, 416, 324, 749, 247, 650, 335, 715, 707, 708,
	254, 417, 418, 727, 393, 389, 394, 550, 651, 440,
	532, 419, 711, 712, 255, 767, 58, 652, 653, 728,
	136, 654, 87, 744, 89, 356, 357, 655, 322, 275,
	553, 554, 442, 385, 510, 127, 517, 518, 120, 121,
	513, 122, 519, 123, 128, 520, 521, 522, 511, 124,
	117, 512, 523, 524, 386, 387, 125, 525, 119, 118,
	514, 516, 126, 526, 273, 38, 420, 606, 326, 64,
	330, 301, 443, 52, 391, 764, 51, 722, 555, 656,
	725, 384, 380, 507, 701, 59, 657, 658, 659, 660,
	529, 745, 383, 355, 379, 759, 4, 319, 502, 530,
	746, 68, 249, 396, 395, 397, 308, 439, 376, 661,
	662, 663, 280, 91, 664, 366, 25, 665, 666, 421,
	315, 667, 62, 668, 669, 446, 289, 670, 60, 747,
	702, 45, 671, 294, 761, 748, 672, 673, 674, 721,
	675, 296, 676, 423, 677, 709, 710, 422, 390, 392,
	556, 303, 424, 407, 703, 252, 608, 678, 338, 360,
	293, 752, 679, 281, 544, 545, 546, 547, 733, 552,
	551, 295, 300, 288, 447, 282, 680, 681, 682, 683,
	684, 329, 700, 685, 686, 344, 612, 754, 508, 49,
	687, 688, 689, 690, 691, 323, 318, 441, 450, 67,
	92, 404, 692, 693, 731, 354, 349, 43, 316, 99,
	488, 490, 491, 492, 493, 494, 489, 496, 694, 341,
	61, 755, 756, 757, 310, 758, 536, 537, 538, 539,
	13, 590, 573, 601, 574, 591, 575, 584, 576, 592,
	600, 602, 557, 565, 558, 566, 596, 579, 593, 585,
	578, 577, 599, 582, 586, 559, 567, 597, 583, 560,
	568, 561, 569, 562, 570, 595, 594, 587, 598, 563,
	571, 589, 564, 572, 588, 580, 581, 459, 765, 766,
	531, 426, 704, 139, 320, 321, 53, 377, 302, 695,
	333, 696, 367, 368, 504, 505, 382, 353, 378, 146,
	718, 342, 351, 716, 304, 427, 509, 290, 697, 449,
	317, 399, 131, 350, 405, 334, 613, 549, 309, 428,
	730, 611, 540, 541, 375, 372, 311, 542, 698, 400,
	720, 429, 265, 305, 306, 699, 717, 430, 431, 327,
	432, 433, 434, 435, 436, 438, 339, 437, 719, 713,
	714, 312, 487, 610, 347, 370, 406, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 506, 263, -95, 263, -209,
	-325, -146, 722, 724, 193, -296, 410, -314, 412, 425,
	420, 430, 418, -305, 421, 423, 303, -431, 440, 263,
	427, 241, 413, 422, 431, 432, 327, 438, 433, 339,
	437, 312, 434, 435, 436, -415, 193, 743, 758, 342,
	350, 149, 374, 417, 415, 441, 722, 100, -331, 100,
	101, 102, -318, 342, -334, 347, -319, -415, -318, 345,
	-95, -95, -336, -336, -146, -229, -164, 157, -178, -285,
	-181, 101, -169, -172, -223, -224, -225, -226, -179, -243,
	-283, 182, 183, 190, 158, -239, -182, 29, 603, 499,
	498, 193, 34, 236, 77, 78, 501, 502, 160, 63,
	15, 464, 465, -180, 454, 455, 466, 460, 461, 527,
	529, 530, 531, 528, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 532, 543, 504, 505, 129, 506,
	117, 119, 118, 127, 128, 507, 508, 509, 371, 555,
	556, 550, 553, 554, 552, 551, 386, 387, 510, 573,
	574, 578, 577, 575, 576, 579, 582, 583, 584, 585,
	586, 587, 589, 588, 580, 581, 558, 557, 559, 560,
	561, 562, 563, 564, 566, 565, 567, 568, 569, 570,
	571, 572, 590, 591, 592, 593, 594, 596, 595, 600,
	599, 597, 598, 602, 601, 511, 512, 120, 121, 122,
	123, 124, 125, 126, 513, 516, 514, 515, 517, 518,
	519, 524, 525, 520, 521, 522, 523, 526, 397, 395,
	396, 392, 391, 390, -105, -118, 630, 629, -119, 451,
	456, 457, 459, -170, -171, -184, -185, -319, -325, 268,
	453, 262, 188, 497, -173, -167, -241, 116, 102, -32,
	-238, 452, 462, 463, 467, 458, 468, 616, 618, 633,
	634, 636, 621, 626, 625, 628, 544, 545, 546, 547,
	548, 549, 707, 708, 709, 710, 711, 712, 713, 714,
	-415, -318, 100, -176, -174, -218, 103, 108, 111, 112,
	114, -437, 286, 367, 368, 130, -447, -234, -235, -175,
	105, 106, 107, 132, 133, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 736, 98, 104,
	50, 426, 426, -209, -95, -95, -95, -95, -444, 739,
	608, -253, -144, -255, -34, -32, -447, 12, -95, -32,
	-33, -31, -38, -95, -40, 635, -39, -325, -95, 109,
	-260, -277, 16, 67, 177, 48, 56, -258, -259, -35,
	-32, -164, 23, 41, 27, -148, 184, -164, -325, -148,
	-303, 267, -95, -95, -292, -339, 342, -294, 441, 722,
	440, -284, -297, 100, -283, -296, 439, 101, -381, 174,
	-367, -371, -319, 278, -397, 274, -209, -390, -389, -319,
	-447, 28, -279, -319, -60, -61, -62, -296, 192, 742,
	-127, 295, 299, 96, 96, -371, -370, -369, -419, 299,
	278, -396, -388, 270, 279, -377, 271, 272, -372, 264,
	151, -419, -372, 269, 279, 274, 278, 299, 299, 139,
	299, 139, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 294, -378, 166, -378, 611, 611, -384, -419, 274,
	264, -419, -419, 270, -315, -372, 266, 28, 266, 38,
	38, -378, -378, -378, -296, 192, -378, -378, -378, -378,
	307, 307, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, 263,
	-418, -153, 437, 327, 453, 262, -154, 90, -63, 309,
	-41, -209, -313, 264, 265, -418, 296, 320, -209, 237,
	263, 725, -307, 174, 19, -307, -304, 426, 424, 411,
	416, -307, -307, -307, -307, 310, 409, -373, 264, 38,
	275, 426, 310, 409, 310, 311, 310, 311, 419, 429,
	310, -330, 18, 177, 453, 414, 418, 303, 263, 304,
	265, 428, 311, -330, 98, -308, 174, 310, 426, 420,
	306, -307, -307, -337, -447, -321, -319, -317, 246, 41,
	156, 28, 30, 159, 193, 142, 23, 160, 40, 248,
	374, 274, 192, 270, 256, 498, 241, 81, 616, 454,
	461, 452, 460, 464, 500, 501, 453, 412, 253, 34,
	17, 618, 31, 284, 27, 44, 186, 243, 163, 164,
	619, 287, 29, 257, 285, 129, 133, 621, 26, 84,
	279, 18, 272, 46, 20, 622, 623, 21, 74, 268,
	267, 177, 264, 79, 706, 15, 236, 32, 173, 75,
	624, 151, 145, 625, 626, 627, 628, 143, 77, 174,
	24, 762, 462, 463, 36, 723, 603, 298, 188, 82,
	65, 724, 157, 458, 629, 630, 130, 631, 134, 85,
	729, 153, 22, 705, 80, 48, 632, 299, 633, 269,
	763, 634, 444, 635, 175, 244, 497, 78, 176, 736,
	636, 737, 262, 425, 12, 503, 35, 283, 271, 73,
	72, 259, 260, 261, 141, 76, 468, 637, 263, 162,
	266, 144, 132, 258, 11, 150, 37, 16, 83, 86,
	465, 466, 467, 63, 140, 607, 161, 19, 638, 445,
	155, -415, 725, -337, -337, 310, 351, 35, 101, -441,
	-442, -443, 607, 444, 266, -319, -209, -101, 715, 245,
	-102, 721, 41, 252, 146, 38, -151, 426, -139, 193,
	743, 726, 727, 728, 725, 423, 733, 731, 729, 310,
	730, 96, 153, 155, 156, 4, -164, 173, -219, -220,
	172, 166, 167, 168, 169, 170, 171, 178, 177, 157,
	159, 174, -270, 154, 179, 180, 181, 182, 183, 184,
	185, 187, 186, 188, 189, 175, 176, 192, 239, 240,
	-172, -172, -172, -172, -239, -245, -244, -447, -241, -415,
	-318, -325, -447, -447, -172, -302, -447, -169, -447, -447,
	-447, -447, -447, -248, -164, -447, -447, -451, -447, -451,
	-451, -451, -356, -447, -356, -356, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -447,
	-447, 237, -447, -447, -447, -447, -447, -356, -356, -356,
	-356, -356, -356, -447, -447, -447, -447, -447, -447, -447,
	-447, -447, -447, -447, -447, -447, -447, 98, 112, 108,
	111, 103, 114, 98, 98, 98, 98, -32, -33, -229,
	63, -447, -336, -428, -429, -212, -209, -447, 327, -319,
	-319, 296, 105, -258, -35, -32, -253, -259, -255, -32,
	-95, -137, -150, 69, 70, -149, -152, 27, 44, 74,
	76, 99, 72, 73, 71, 41, -448, 97, -448, -277,
	-448, -161, -313, -145, -154, 264, 272, 271, 150, -418,
	-162, 153, 314, 96, -40, -280, 115, -232, -237, -235,
	736, 663, 693, 663, 693, 67, 49, 98, 98, 96,
	25, -254, -256, -164, 18, -323, 4, -322, 28, -319,
	98, 237, 18, -210, 32, -209, -303, -303, 96, 100,
	342, -293, -295, 442, 444, 166, -324, -319, 98, 34,
	97, 96, -209, -345, -348, -350, -349, -351, -346, -347,
	371, 372, 193, 375, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 388, 400, 35, 286, 367, 368, 369,
	370, 389, 390, 391, 392, 394, 395, 396, 397, 352,
	373, 605, 353, 354, 355, 356, 357, 358, 360, 361,
	364, 362, 363, 365, 366, -320, -319, 95, 97, 96,
	-355, 95, -164, -30, 97, 96, -378, -378, -378, 294,
	23, -50, -47, -404, 22, -46, -47, 246, 135, 136,
	243, 95, -367, 95, -376, -320, -319, 95, 151, 269,
	150, -375, -372, -375, -376, -319, -241, -319, 151, 151,
	-319, -319, -289, -319, -289, -289, 41, -289, 41, -289,
	41, 105, -319, -289, 41, -289, 41, -289, 41, -289,
	41, -289, 41, 34, 87, 88, 89, 34, 91, 92,
	93, -241, -319, -319, -241, -367, -241, -209, -319, -296,
	105, 105, 105, -378, -378, 105, 98, 98, 98, -378,
	-378, 105, 98, -327, -325, 98, 98, -420, 280, 324,
	326, 105, 105, 105, 105, 34, 98, -421, 34, 750,
	749, 751, 752, 753, 98, 105, 34, 105, 34, 105,
	-319, 95, -209, -161, 241, 243, 246, 85, 98, 332,
	330, 331, 328, 333, 334, 335, 166, 50, 96, 266,
	263, -319, -309, 268, -309, -319, -326, -325, -317, -209,
	266, 408, 98, -164, -374, 18, 177, -330, -330, -307,
	-209, -374, -330, -307, -209, -307, -307, -307, -307, -330,
	-330, -330, -307, -325, -325, -209, -209, -209, -209, -209,
	-209, -209, -337, -308, -307, 725, 98, -301, 18, 85,
	-337, -337, -316, 26, 26, 96, 348, 445, 446, -335,
	345, -97, -319, 98, -11, -30, -19, -18, -20, 166,
	-11, 96, 607, -202, -209, 725, 725, 725, 725, 725,
	725, -164, -164, -164, -164, 631, -227, -439, 157, 132,
	133, 130, 131, -181, 42, 43, 41, -164, -228, -234,
	-239, 115, 177, 159, 174, -270, -169, -172, -169, -169,
	-169, -169, -169, -169, 236, -169, 236, -169, -169, -169,
	-169, -169, -169, -338, -319, 98, 193, -177, -176, 114,
	-437, -177, 604, 96, -244, 237, -164, -164, -415, -135,
	470, 471, 472, 473, 475, 476, 477, 480, 481, 485,
	486, 469, 487, 474, 479, 482, 483, 484, 478, 370,
	-164, -230, -229, -230, -164, -164, -246, -247, 161, -241,
	-164, -448, -448, 105, 184, -143, 27, 44, -143, -143,
	-143, -143, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -143, -164, -136, 469, 487, 474, 479, 482,
	483, 484, 478, 370, 488, 489, 490, 491, 492, 493,
	494, 495, 496, -136, -135, -164, -164, -164, -164, -164,
	-164, -164, -164, -103, -164, 142, 143, 144, -229, -164,
	-169, -164, -164, -164, -448, -164, -164, -164, -230, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -414, -413, -412, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -229, -229, -229, -229, -229, -164, -448, -164, -183,
	-167, 105, -285, 114, 101, -164, -164, -164, -164, -164,
	-164, -230, -321, -326, -317, -318, -229, -230, -230, -229,
	-229, -164, -164, -164, -164, -164, -164, -164, -164, -448,
	-164, -164, -164, -164, -164, -277, -448, -229, 96, -430,
	444, 445, 723, -328, 299, -327, 28, -230, 98, 18,
	-287, 86, -319, -258, -258, 69, 70, 65, -147, -148,
	-152, -448, 303, -156, 316, 263, -153, -161, -319, 264,
	264, 264, -310, 268, 497, 166, -39, 28, 96, -447,
	656, 656, 68, 98, -357, -296, 398, 399, 193, -164,
	-164, 96, -257, 30, 31, -209, -322, 184, -326, -209,
	-288, 299, -209, -187, -189, -190, -191, -212, -240, -447,
	-192, -32, 627, 624, 18, -202, -203, -211, -325, -294,
	-339, -293, 96, 443, 445, 446, 85, 134, -164, -358,
	192, -386, -385, -384, -367, -369, -370, -371, 97, -358,
	-363, 405, 404, -355, -355, -355, -355, -355, -357, -357,
	-357, -357, 95, -355, 95, -355, -355, -355, -355, -360,
	95, -360, -360, -361, -360, 95, -361, -362, 95, -362,
	-397, -164, -394, -393, -391, -392, 273, 110, 699, 655,
	607, 648, 689, 86, -389, -257, 105, -448, -98, 607,
	-319, 100, 98, 100, 98, 100, 98, -128, -67, -1,
	762, 763, 764, 96, 23, -368, -367, -66, 324, -400,
	-401, 299, -396, -390, -376, 151, -375, -376, -376, -319,
	96, 32, 139, 139, 139, 139, 607, 243, 35, -311,
	647, 157, 699, 655, -367, -66, 266, 266, -338, -338,
	-338, 98, 98, -306, 758, -202, -156, 305, 305, 263,
	318, 263, 318, -209, 329, 332, 330, 331, 328, 333,
	334, 335, 336, 41, 41, 41, 41, 41, 41, 41,
	317, 319, 321, 307, -209, -209, -309, 85, -204, -209,
	29, -325, 98, 98, -209, -307, -307, -209, -307, -307,
	-209, 98, -325, -443, 349, -319, 385, 716, 718, -139,
	444, 96, 607, 26, -140, 26, -447, -439, 132, 133,
	-239, -239, -239, -228, -169, -172, -169, 156, 287, -169,
	-169, -447, -241, -448, -321, 28, 96, 86, -448, 182,
	96, -448, -448, 96, 18, 96, -249, -247, 163, -164,
	-448, 96, -448, -448, -229, -164, -164, -164, -164, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, -229,
	-448, 96, 96, 18, -342, 28, -448, -448, -448, -448,
	96, -448, -448, -248, -448, 18, -448, 86, 96, 177,
	96, -448, -448, -448, 96, 96, -448, -448, 96, -448,
	96, -448, -448, -448, -448, -448, -448, 96, -448, 96,
	-448, -448, -448, 96, -448, 96, -448, -448, 96, -448,
	96, -448, 96, -448, 96, -448, 96, -448, 96, -448,
	96, -448, 96, -448, 96, -448, 96, -448, 96, -448,
	96, -448, 96, -448, 96, -448, 96, -448, 96, -448,
	96, -448, 96, -448, -448, -448, 96, -448, 96, -448,
	96, -448, -448, 96, -448, 96, -448, 96, -448, 96,
	96, -448, 96, 96, 96, -448, 96, 96, 96, 96,
	-448, -448, -448, -448, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, -448, -448, -448, -448, -448, -448,
	96, -110, 632, -448, -448, 96, -448, 96, 96, 96,
	96, 96, -448, -447, 237, -448, -448, -448, -448, -448,
	96, 96, 96, 96, 96, 96, -448, -448, -448, 96,
	96, -448, 96, -448, 96, -448, -429, 722, 445, -216,
	-215, -213, 83, 267, 84, -447, -327, -448, -177, -285,
	-286, -285, -222, -319, 105, 114, -260, -186, 96, -188,
	18, -310, 265, 323, -310, -161, -156, -395, -392, -319,
	-319, -319, -325, 157, -163, 464, -158, 98, 100, -239,
	-237, -448, -357, -265, -271, -304, -319, 98, 193, -359,
	193, -359, 398, 399, -256, 237, -217, 19, -221, 35,
	63, -30, -447, -447, 35, 96, -205, -207, -206, -208,
	75, 79, 81, 76, 77, 78, 82, -333, 28, -32,
	-187, -32, -447, -209, -202, -449, 18, 86, -449, 96,
	237, -295, -298, 447, 444, 450, -415, 98, -127, 96,
	-384, -371, -261, -157, 46, -364, 406, -357, 615, -357,
	-366, 98, -366, 105, 105, 105, 97, -53, -48, -49,
	36, 90, -391, -378, 98, 45, -378, -378, -319, 97,
	-257, -99, 313, 722, -2, 761, 767, 151, 95, 411,
	22, -279, 96, 97, -242, 325, 97, -129, -319, 97,
	95, -376, -376, -319, -447, 263, 34, 34, 699, 655,
	647, -66, -242, -241, -319, -358, 760, 759, 97, 265,
	-209, -209, -209, -209, -209, -209, 246, 243, 434, -438,
	337, 98, -438, 308, 266, -202, -209, 96, -100, 282,
	277, -330, -330, 36, -209, 444, 734, 732, -164, 156,
	287, -181, -172, -135, -135, -169, -340, 193, 371, 286,
	369, 365, 385, 376, 404, 367, 405, 362, 361, 360,
	-340, -338, -169, -229, -164, -164, -164, 165, -164, 162,
	-164, -111, -110, -448, -448, -448, -448, -448, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -253, -164,
	-164, -164, -448, 193, 371, -111, -164, 18, -164, -338,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -412, -164, -229, -164, -229,
	-164, -164, -164, -164, -164, -413, -413, -413, -413, -413,
	-229, -229, -229, -229, -164, -447, -319, -114, -113, -112,
	682, 267, -110, -183, -114, -183, 236, -164, 236, 236,
	236, -164, -230, -321, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -213, -372, 305, -372, 305, -372,
	-289, 96, -300, 26, 18, 63, 63, -186, -217, -148,
	-187, -325, -209, -155, 314, 322, -209, -156, 265, 85,
	-395, -395, -395, 29, 95, -159, 101, -268, 715, -274,
	52, -272, -273, 53, -269, 54, 62, -359, -359, 184,
	-258, -164, -290, 85, -291, -299, -241, -233, -236, -234,
	-447, -278, -448, -319, -289, -291, -189, -190, -190, -189,
	-190, 75, 75, 75, 80, 75, 80, 75, -206, -325,
	-448, -164, -328, 86, -187, -187, -211, -325, 184, 444,
	448, 449, -384, -436, 130, 157, 34, 85, 402, 110,
	-434, 192, 644, 694, 699, 655, 648, 689, -435, 269,
	150, 151, 281, 28, 47, 97, 96, 97, 96, 97,
	97, 96, -312, -311, -49, -48, -378, -378, 105, -415,
	98, 98, 274, -130, 765, 105, 95, -3, 90, -164,
	95, 23, -367, -241, -402, -352, -403, -353, -354, -5,
	-6, -379, -133, 63, 110, -70, 50, 264, 745, 746,
	139, -447, 758, -394, -279, -398, -400, -209, -168, -447,
	-180, -166, -165, -167, -173, 182, 183, 286, 367, 368,
	-242, -209, -417, 86, 305, 402, 305, 402, 98, -440,
	338, 98, -440, -209, -100, -53, -209, -307, -307, 36,
	-415, -448, -181, -172, -142, 177, 607, -343, 614, -355,
	-355, -355, -362, -355, 357, -355, 357, -355, -448, -448,
	-448, 96, -448, 26, -448, 96, -164, 96, -111, -111,
	-111, -111, -111, -138, 503, 96, 96, -448, 95, 95,
	-448, -164, -448, -448, -448, 96, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, 96,
	-448, 96, -448, 96, -448, 96, -448, 96, -448, 96,
	-448, 96, -448, 96, -448, 96, -448, 96, -448, 96,
	-448, 96, -448, 96, -448, 96, -448, 96, -448, 96,
	-448, -448, 96, -448, -448, -448, 96, -448, 96, -448,
	96, -448, -448, -448, 96, -341, 700, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -109, -320,
	-110, 664, 664, -448, -110, -250, 96, -169, -448, -169,
	-169, -169, -448, -448, -448, 96, -448, 96, 96, -448,
	96, -448, 96, -448, -448, -448, -448, 96, -214, 26,
	-447, -214, -447, -214, -448, -285, -209, -217, -251, 20,
	-447, 265, -209, -209, 85, 85, 85, 97, -265, 57,
	377, -276, -275, 61, 53, -273, 23, 55, 23, 33,
	-290, 96, 166, -332, 96, 28, -448, -448, 96, 63,
	237, -448, -217, -200, -199, 85, 86, -201, 85, -199,
	75, 75, -280, 96, -288, -187, -217, -217, 237, 130,
	-447, -168, 16, 98, 98, -415, -433, 749, 750, 34,
	751, 105, -378, -378, 151, 151, -209, 95, -357, 98,
	-357, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, 315, -399, 95, 23, -164, 95, 166, 97, -279,
	-279, 301, 177, -378, 743, 307, 307, -378, -378, -378,
	-132, -131, 765, 97, -448, 96, -365, 607, 610, -164,
	-174, -174, -280, -411, 607, -416, -319, -319, -319, -319,
	105, 107, -448, 605, 82, 608, -448, -357, -164, -164,
	-164, -164, -258, 98, -164, -164, 105, 105, -111, -448,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-229, -164, -448, -197, -196, -198, 726, 130, 34, -340,
	-448, -231, 299, -117, -116, -115, 18, -448, -164, -135,
	-135, -135, -135, -164, -164, -164, -164, -164, -164, -447,
	75, 22, 20, -282, -319, 269, -447, -282, -447, -328,
	-251, -252, 21, 23, -408, -407, -405, -406, 177, 706,
	705, -209, -209, -209, -209, -266, 59, -264, 58, -264,
	-275, 23, 23, 98, 23, 98, 151, -299, -164, -236,
	-327, 63, -30, -319, -233, -319, -253, -164, 95, -164,
	-177, -217, -217, -164, -224, 527, 529, 530, 531, 528,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	532, 543, 504, 505, 506, 117, 119, 118, 127, 128,
	507, 508, 509, 371, 555, 556, 550, 553, 554, 552,
	551, 386, 387, 510, 573, 574, 578, 577, 575, 576,
	579, 582, 583, 584, 585, 586, 587, 589, 588, 580,
	581, 558, 557, 559, 560, 561, 562, 563, 564, 566,
	565, 567, 568, 569, 570, 571, 572, 590, 591, 592,
	593, 594, 596, 595, 600, 599, 597, 598, 602, 601,
	511, 512, 120, 121, 122, 123, 124, 125, 126, 513,
	516, 514, 517, 518, 519, 524, 525, 520, 521, 522,
	523, 526, 397, 395, 396, 392, 391, 390, 451, 456,
	457, 459, 544, 545, 546, 547, 548, 549, 707, 708,
	709, 710, 711, 712, 713, 714, 98, 98, 95, -164,
	97, 97, -398, -67, 97, -281, -279, 105, 97, 302,
	-234, -447, 98, -378, -378, -378, 105, 105, -327, -448,
	96, -319, -435, -400, 611, 611, -448, 28, -410, -409,
	-321, 95, 86, 68, 606, 609, -448, -448, -448, 96,
	-448, -448, -448, 97, 97, -448, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, -448, -448, -448,
	-448, -448, -448, -448, -448, -448, -448, 96, -448, -196,
	-198, -448, 85, -177, -253, 23, -114, 324, 326, -114,
	-448, -448, -448, -448, -448, 96, -448, -448, 96, -448,
	96, -448, -448, -282, -448, 23, 23, 96, -448, -282,
	-448, -282, -216, -252, -124, -123, -122, 638, -164, -229,
	-448, 96, -319, -267, 60, 85, 134, 98, 98, 98,
	16, -447, -233, 237, -332, -258, -279, -194, 411, -253,
	-448, -279, 97, 97, 767, 151, 97, -234, -141, -447,
	298, -327, 98, 98, -131, -134, -30, 96, 166, -279,
	-209, 68, -164, -229, -448, 85, 619, 726, -108, -107,
	-104, 737, 763, -229, -110, -110, -164, -164, -164, -448,
	-319, 269, -448, -448, -124, 96, -121, -120, -319, -344,
	607, -71, -72, -73, -7, 340, 268, 253, -405, -345,
	85, 134, -291, -279, -332, -319, 97, -448, -447, -258,
	97, -262, 95, -3, 298, -352, -403, -353, -354, -5,
	-6, -379, -98, -409, -383, -325, -321, 98, 105, 97,
	607, -448, -448, -106, 159, 735, 697, -173, 236, -448,
	96, -448, 96, -448, 96, -122, 96, 28, 612, 768,
	-74, -75, -73, -72, -164, -279, -57, 256, 257, 258,
	-448, -328, -195, -193, -319, 661, -426, -425, 603, -436,
	-432, 130, 157, 110, -434, 694, 699, 655, 140, 141,
	-164, 95, -448, 237, -417, 608, -106, 736, 675, 650,
	675, 650, -169, -164, -164, -164, -120, -447, 165, -73,
	162, -345, 255, -448, 96, 26, -345, -69, 672, -423,
	-424, 85, -427, 417, 671, 692, 130, 98, 105, 97,
	-279, -326, -411, 609, 156, -135, -448, 96, -448, 96,
	-448, -109, -75, -263, 34, 26, -193, 668, -358, -177,
	-424, 85, -423, 85, 17, 16, -4, 766, 97, -106,
	675, 650, -164, -164, -448, -79, -78, -77, 164, -447,
	-168, -58, -59, 105, 260, -319, 261, 157, 259, -68,
	29, -194, -422, 282, 277, 280, 35, -422, 105, -4,
	-448, -448, -76, 163, -77, -164, -164, -72, 96, -160,
	66, 254, 672, 276, 34, 130, 165, -75, 162, -448,
	-59, 98, -177, 268, -75, -197, -196, -196,
}

var yyDef = [...]int{
	934, -2, -2, 936, 2, 4, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 106, 108, 109, 934, 934, 934, 0, 934,
	0, 167, 0, 995, -2, -2, 934, 1705, 0, 934,
	0, 929, 0, -2, 849, 855, 0, 864, -2, 0,
	0, 934, 934, 2362, 2362, 929, 0, 0, 0, 0,
	0, 934, 934, 934, 934, 1710, 1547, 86, 934, 0,
	124, 125, 934, 884, 885, 886, 101, 0, 2360, 121,
	934, 935, 1, 3, 107, 111, 0, 0, 0, 94,
	1556, 0, 114, 0, 0, 938, 0, 0, 1688, 934,
	934, 0, 165, 166, 0, 0, 0, 0, 0, 170,
	-2, 202, 203, 204, 0, 209, 654, 571, 623, 569,
	608, -2, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 446, 446, 0, 0,
	-2, 557, 557, 557, 1690, 0, 0, 0, 605, 508,
	446, 446, 446, 0, 446, 446, 446, 446, 0, 0,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 1574, 208, 1706,
	1703, 1704, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 0, 1682, 0, 767,
	1038, 0, 930, 931, 0, 838, 838, 0, 838, 838,
	838, 838, 0, 0, 0, 781, 0, 0, 0, 0,
	835, 0, 797, 798, 0, 835, 0, 804, 841, 0,
	0, 811, 838, 838, 814, 2363, 0, 2363, 2363, 0,
	0, 1673, 0, 832, 830, 844, 845, 78, 848, 851,
	852, 853, 854, 857, 0, 868, 871, 1699, 1700, 0,
	873, 878, 897, 898, 0, 81, 1198, 0, 1062, 0,
	1073, -2, 1084, 1101, 1102, 1103, 1104, 1105, 1107, 1108,
	1109, 0, 0, 0, 0, 1114, 1115, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 2082, 1518, 0,
	0, 1480, 1480, 1214, 1480, 1480, 1482, 1482, 1482, 1929,
	2074, 2083, 2264, 1890, 1896, 1897, 1898, 2210, 2211, 2212,
	2213, 2306, 2307, 2311, 1994, 1885, 2278, 2279, 0, 2359,
	2034, 2042, 2043, 2019, 2028, 2067, 2172, 2290, 1908, 2062,
	2134, 1991, 2014, 2015, 2153, 2154, 2038, 2039, 2018, 2216,
	2218, 2234, 2235, 2220, 2222, 2231, 2237, 2242, 2221, 2233,
	2238, 2251, 2255, 2258, 2259, 2260, 2228, 2226, 2239, 2243,
	2245, 2247, 2253, 2256, 2229, 2227, 2240, 2244, 2246, 2248,
	2254, 2257, 2215, 2219, 2223, 2232, 2250, 2230, 2249, 2224,
	2236, 2241, 2252, 2225, 2217, 2032, 2035, 2022, 2023, 2025,
	2027, 2033, 2040, 2046, 2024, 2045, 2044, 0, 2020, 2021,
	2026, 2037, 2041, 2029, 2030, 2031, 2036, 2047, 2089, 2088,
	2087, 2133, 2058, 2132, 0, 0, 0, 0, 0, 1879,
	1935, 1936, 2261, 1402, 1403, 1404, 1405, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 1531, 1532, 80, 1197,
	1669, 1482, 1482, 1482, 1482, 1482, 1482, 1136, 1137, 1138,
	1139, 1140, 1166, 1167, 1173, 1174, 2148, 2149, 2150, 2151,
	1973, 2301, 1982, 1983, 2129, 2130, 1996, 1997, 2333, 2334,
	-2, -2, -2, 277, 278, 279, 280, 281, 282, 283,
	284, 0, 1934, 2276, 2277, 273, 0, 1667, 1668, 340,
	337, 338, 339, 1180, 1181, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
	308, 309, 310, 311, 312, 313, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 342, 343,
	2362, 0, 907, 0, 0, 0, 0, 0, 0, 1711,
	1712, 1556, 0, 1548, 1547, 99, 0, 934, -2, 0,
	0, 0, 0, -2, 83, 0, 88, 995, 0, 937,
	113, 112, 1606, 1609, 0, 0, 0, 95, 1557, 103,
	105, 1558, 0, 939, 940, 0, 971, 975, 0, 0,
	0, 1689, 1688, 1688, 141, 0, 0, 142, 162, 163,
	164, 0, 0, 148, 149, 1675, 1676, 79, 0, 0,
	220, 221, 0, 1154, 473, 0, 216, 0, 466, 405,
	0, 0, 0, 999, 205, 206, 207, 446, 446, 446,
	620, 0, 0, 208, 208, 578, 579, 580, 0, 0,
	-2, 471, 0, 558, 0, 0, 460, 460, 464, 462,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 447, 0, 618, 619, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 1692, 0, 595,
	596, 0, 0, 0, 446, 446, 0, 0, 0, 0,
	446, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 1596, 0, 0, 197, 198, 1575, 0, -2, 0,
	759, 0, 0, 0, 1684, 1684, 0, 1683, 766, 0,
	0, 0, 771, 0, 0, 772, 0, 835, 835, 833,
	834, 774, 775, 776, 777, 838, 0, 0, 455, 456,
	457, 835, 838, 0, 838, 838, 838, 838, 835, 835,
	835, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2363, 841, 838, 0, 805, 0, 806, 807, 808,
	809, 812, 813, 815, 2364, 2365, 1701, 1702, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 2363, 2363, 819, 823, 827, 825, 1674, 850, 856,
	858, 859, 0, 0, 869, 872, 891, 85, 1981, 877,
	85, 879, 880, 881, 882, 883, 909, 910, 915, 0,
	0, 0, 0, 921, 922, 923, 0, 0, 926, 927,
	928, 0, 0, 0, 0, 0, 1060, 0, 0, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1085, 1086, 0, 0, 0,
	1110, 1111, 1112, 1113, 1116, 0, 1127, 0, 1129, 1527,
	-2, 0, 0, 0, 1121, 1122, 0, 0, 0, 1694,
	1694, 0, 0, 0, 1519, 0, 0, 1212, 0, 1213,
	1215, 1216, 1217, 0, 1218, 1219, 944, 944, 944, 944,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 1694, 1694, 0, 0, 265, 266, 267,
	268, 269, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 285, 286,
	287, 288, 289, 344, 290, 291, 292, 1197, 0, 0,
	934, 0, 82, 899, 900, 0, 1021, 1694, 0, 0,
	950, 0, 1709, 93, 102, 104, 1556, 97, 1556, 0,
	954, 0, 0, -2, -2, 955, 956, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 90, 2361, 91, 0,
	110, 1579, 0, 1574, 1596, 0, 0, 0, 0, 1686,
	1597, 0, 0, 0, 84, 0, 115, 116, 1657, 1661,
	0, 1607, 0, 1610, 0, 0, 0, 419, 1614, 0,
	0, 1549, 1550, 1553, 0, 972, 2080, 976, 0, 978,
	979, 0, 0, 139, 0, 1037, 0, 0, 0, 150,
	0, 152, 153, 0, 0, 0, 430, 1677, 1678, 1679,
	-2, 453, 0, 430, 414, 352, 353, 354, 405, 356,
	405, 405, 405, 405, 419, 419, 419, 419, 387, 388,
	389, 390, 391, 0, 405, 0, 373, 405, 405, 405,
	405, 395, 396, 397, 398, 399, 400, 401, 402, 357,
	358, 359, 360, 361, 362, 363, 364, 365, 407, 407,
	407, 407, 407, 411, 411, 0, 1155, 0, 434, 0,
	1553, 0, 0, 1583, 996, 0, 0, 0, 0, 621,
	665, 572, 609, 622, 0, 575, 576, -2, 0, 0,
	557, 0, 559, 0, 454, 0, -2, 0, 464, 0,
	460, 464, 461, 464, 452, 465, 599, 600, 601, 0,
	603, 604, 695, 1007, 0, 0, 0, 0, 0, 701,
	702, 703, 0, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 0, 0, 0, 559, 0, 606, 0, 0,
	510, 511, 512, 0, 0, 515, 516, 517, 518, 0,
	0, 521, 522, 523, 1024, 1025, 524, 525, 550, 551,
	552, 526, 527, 528, 529, 530, 531, 532, 544, 545,
	546, 547, 548, 549, 533, 534, 535, 536, 537, 538,
	541, 0, 190, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 953, 1039, 1707, 1708, 768,
	0, 0, 839, 840, 0, 458, 459, 838, 838, 778,
	820, 0, 838, 782, 821, 783, 785, 784, 786, 799,
	800, 838, 789, 836, 837, 790, 791, 792, 793, 794,
	795, 796, 816, 801, 802, 803, 842, 0, 846, 847,
	817, 818, 0, 828, 0, 0, 0, 862, 863, 0,
	870, 894, 892, 893, 895, 887, 888, 889, 890, 0,
	896, 0, 0, 912, 135, 917, 918, 919, 920, 932,
	925, 1199, 1057, 1058, 1059, 0, 1061, 1067, 0, 1182,
	1184, 1065, 1066, 1069, 0, 0, 0, 1063, 1074, 1194,
	1195, 1196, 0, 0, 0, 0, 0, 1078, 1082, 1087,
	1088, 1089, 1090, 1091, 0, 1092, 0, 1095, 1096, 1097,
	1098, 1099, 1100, 1106, 1495, 1496, 1497, 1125, 345, 346,
	0, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1198, 0, 1695, 0, 0, 0, 1525, 1522, 0, 0,
	0, 1481, 1483, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 1131, 1132, 1133, 0, 0,
	0, 0, 0, 0, 1260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 1407, 1408, 1409, 77, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 1665, 0, 0, 902,
	903, 905, 0, 1041, 0, 1022, 0, 0, 908, 0,
	949, 0, 952, 96, 98, 958, 959, 0, 980, 969,
	957, 92, 1686, 0, 0, 1686, 1596, 1579, 1696, 0,
	0, 0, 0, 0, 171, 0, 87, 0, 0, 0,
	1608, 1611, 1612, 419, 1634, 0, 428, 428, 425, 1559,
	1560, 0, 1552, 1554, 1555, 117, 977, 973, 0, 1055,
	0, 0, 1036, 0, 983, 985, 986, 987, 1019, 0,
	990, 991, 0, 0, 0, 0, 0, 137, 1038, 143,
	0, 151, 0, 0, 156, 157, 144, 145, 146, 147,
	0, 654, -2, 505, 222, 224, 225, 226, 217, -2,
	417, 415, 416, 355, 419, 419, 381, 382, 383, 384,
	385, 386, 0, 393, 0, 374, 375, 376, 377, 366,
	0, 367, 368, 369, 409, 0, 370, 371, 0, 372,
	472, 0, 1561, 435, 436, 438, 446, 0, 441, 442,
	0, 446, 446, 0, 467, 468, 0, 1553, 169, 1585,
	1000, 210, 211, 212, 213, 214, 215, 690, 0, 0,
	666, 688, 689, 208, 0, 0, 218, 561, 560, 0,
	722, 0, 470, 0, 0, 464, 464, 449, 450, 602,
	0, 0, 697, 698, 699, 700, 0, 0, 0, 588,
	499, 0, 589, 590, 559, 561, 0, 0, 430, 513,
	514, 519, 520, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 638, 640, 643, 645, 563,
	649, 651, 0, 639, 642, 644, 646, 563, 650, 652,
	1576, 1577, 1578, 0, 0, 760, 0, 0, 496, 133,
	1685, 765, 769, 770, 835, 788, 822, 835, 780, 787,
	810, 824, 826, 860, 861, 866, 874, 875, 876, 916,
	0, 0, 0, 0, 924, 0, 0, 1068, 1183, 1185,
	1070, 1071, 1072, 1075, 0, 1079, 1083, 0, 0, 0,
	0, 0, 1130, 1128, 1529, 0, 0, 0, 1179, 0,
	0, 1202, 1203, 0, 0, 0, 0, 1523, 0, 0,
	1210, 0, 1484, 1160, 0, 0, 0, 0, 0, 1160,
	1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1547,
	1237, 0, 0, 0, 0, 0, 1242, 1243, 1244, 1160,
	0, 1247, 1248, 0, 1250, 0, 1251, 0, 0, 0,
	0, 1258, 1259, 1261, 0, 0, 1264, 1265, 0, 1267,
	0, 1269, 1270, 1271, 1272, 1273, 1274, 0, 1276, 0,
	1278, 1279, 1280, 0, 1282, 0, 1284, 1285, 0, 1287,
	0, 1289, 0, 1292, 0, 1295, 0, 1298, 0, 1301,
	0, 1304, 0, 1307, 0, 1310, 0, 1313, 0, 1316,
	0, 1319, 0, 1322, 0, 1325, 0, 1328, 0, 1331,
	0, 1334, 0, 1337, 1338, 1339, 0, 1341, 0, 1343,
	0, 1346, 1347, 0, 1349, 0, 1352, 0, 1355, 0,
	0, 1356, 0, 0, 0, 1360, 0, 0, 0, 0,
	1369, 1370, 1371, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 1384, 1385, 1386, 1387, 1388,
	0, 1390, 0, 1161, 0, 0, 1161, 0, 0, 0,
	0, 0, 1200, 1694, 0, 1485, 1486, 1487, 1488, 1489,
	0, 0, 0, 0, 0, 0, 1429, 1430, 1432, 0,
	0, 1435, 0, 1437, 0, 1666, 901, 904, 906, 993,
	1042, 1043, 0, 0, 0, 0, 1023, 1693, 947, 948,
	951, 1001, 0, 1533, 0, 0, 980, 1055, 0, 981,
	0, 0, 0, 0, 0, 1579, 0, 0, 1697, 1696,
	1696, 1696, 195, 0, 1598, 1599, 1604, 1602, 1603, 89,
	1658, 1662, 1616, 1615, 1628, 1641, 428, 428, 422, 423,
	429, 424, 426, 427, 1551, 0, 1556, 0, 1655, 0,
	934, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 1029, 0, 0, 0, 0, 1020, 991,
	0, 992, 0, -2, 0, 0, 131, 132, 0, 0,
	0, 154, 155, 0, 0, 161, 431, 432, 199, 208,
	507, 223, 480, 0, 0, 351, 418, 378, 379, 380,
	0, 403, 0, 0, 0, 0, 501, 168, 1565, 1564,
	446, 446, 437, 0, 440, 0, 0, 0, 1698, 406,
	469, 0, 1586, 1587, 660, 0, 0, 667, 0, 0,
	0, 570, 0, 581, 582, 0, 694, -2, 756, 434,
	0, 448, 451, 1008, 0, 0, 583, 0, 586, 587,
	500, 561, 592, 593, 607, 594, 542, 543, 540, 0,
	172, 628, 630, 634, 629, 633, 0, 0, 0, 565,
	0, 653, 565, 626, 0, 496, 1561, 0, 764, 497,
	498, 838, 838, 911, 136, 0, 914, 0, 0, 0,
	0, 1076, 1080, 1093, 1094, 1490, 1516, 405, 405, 1503,
	405, 411, 1506, 405, 1508, 405, 1511, 405, 1514, 1515,
	0, 0, 1123, 0, 0, 0, 0, 1209, 1526, 0,
	0, 1220, 1159, 1160, 1160, 1160, 1160, 1160, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1520, 0,
	0, 0, 1241, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 0, 0, 0,
	0, 0, 0, 1440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 1158, 0, 1162, 1163,
	0, 0, 1392, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1044, 1051, 0, 1051, 0, 1051,
	0, 0, 0, 1680, 1681, 1534, 1535, 1055, 1536, 970,
	982, 0, 187, 1580, 1581, 1582, 186, 0, 0, 0,
	0, 0, 0, 1687, 0, 1601, 1605, 1634, 0, 1627,
	0, -2, 1636, 0, 0, 0, 1642, 420, 421, 974,
	118, 1056, 122, 0, 1655, 1670, 0, 1652, 1659, 1663,
	0, 0, 0, 1648, 0, 1055, 984, 1015, 1017, 0,
	1012, 1027, 1028, 1030, 0, 1032, 0, 1034, 1035, 995,
	989, 0, 139, 0, 1055, 1055, 138, 0, 1040, 158,
	159, 160, 506, 227, 232, 0, 0, 0, 237, 0,
	239, 0, 0, 0, 244, 245, 446, 446, 481, 0,
	348, 350, 0, 0, 230, 419, 0, 419, 0, 410,
	412, 0, 482, 502, 1562, 1563, 0, 0, 439, 443,
	444, 445, 0, 663, 0, 691, 0, 0, 0, 0,
	0, 0, 219, 562, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 0, 446, 0, 0, 0, 446, 446,
	446, 0, 748, 433, 0, 0, 719, 716, 584, 0,
	263, 264, 271, 272, 274, 0, 0, 0, 0, 0,
	591, 995, 175, 0, 0, 0, 0, 636, 641, 647,
	0, 564, 648, 761, 762, 763, 134, 773, 779, 913,
	933, 1064, 1077, 1081, 0, 0, 0, 0, 1517, 1501,
	419, 1504, 1505, 1507, 1509, 1510, 1512, 1513, 1119, 1120,
	1124, 0, 1206, 0, 1208, 0, 1524, 0, 1221, 1222,
	1223, 1224, 1225, 1556, 0, 0, 0, 1240, 0, 0,
	1160, 0, 1253, 1252, 1254, 0, 1256, 1257, 1262, 1263,
	1266, 1268, 1275, 1277, 1281, 1283, 1286, 1288, 1290, 0,
	1293, 0, 1296, 0, 1299, 0, 1302, 0, 1305, 0,
	1308, 0, 1311, 0, 1314, 0, 1317, 0, 1320, 0,
	1323, 0, 1326, 0, 1329, 0, 1332, 0, 1335, 0,
	1340, 1342, 0, 1345, 1348, 1350, 0, 1353, 0, 1357,
	0, 1359, 1361, 1362, 0, 0, 0, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1389, 0, 1152,
	1391, 1164, 1165, 1170, 1394, 0, 0, 0, 1397, 0,
	0, 0, 1401, 1201, 1412, 0, 1417, 0, 0, 1423,
	0, 1427, 0, 1433, 1434, 1436, 1438, 0, 0, 0,
	0, 0, 0, 0, 1021, 1002, 100, 1536, 1540, 0,
	1588, 0, 189, 191, 0, 0, 0, 1600, 1621, 1619,
	1619, 1629, 1630, 0, 0, 1637, 0, 0, 0, 0,
	123, 0, 0, 1643, 0, 0, 1664, 0, 0, 0,
	0, 140, 1547, 1009, 1016, 0, 0, 1010, 0, 1011,
	1031, 1033, 988, 0, 1055, 1055, 129, 130, 0, 233,
	0, 235, 0, 238, 240, 241, 242, 248, 249, 250,
	251, 243, 0, 0, 347, 349, 0, 0, 392, 404,
	394, 0, 0, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1584, 655, 0, 665, 0, 997, 0, 658, 0,
	573, 0, 0, 0, 446, 446, 446, 0, 0, 0,
	0, 733, 0, 0, 696, 0, 704, 0, 0, 0,
	275, 276, 0, 627, 0, 173, 174, 0, 0, 632,
	566, 567, 1117, 0, 0, 0, 1118, 1502, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 1246, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 685, 686, 0, 1441,
	1157, 1547, 0, 1161, 1171, 1172, 0, 1161, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 1003, 1004, 0, 0, 0, 1041,
	1540, 1545, 0, 0, 0, 1589, 1590, 0, 1593, 1594,
	1595, 188, 192, 193, 194, 1624, 0, 1617, 1620, 1618,
	1631, 0, 0, 1638, 0, 1640, 0, 1671, 1672, 1660,
	1653, 934, 1647, 1650, 1652, 1649, 1556, 1013, 0, 1018,
	0, 1547, 128, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 247, 0, 0,
	408, 413, 0, 0, 656, 0, 998, 668, 659, 0,
	746, 0, 750, 0, 0, 0, 753, 754, 755, 732,
	0, 736, 474, 720, 717, 718, 585, 0, 176, 177,
	0, 0, 0, 1491, 0, 1494, 1204, 1207, 1205, 0,
	1236, 1238, 1239, 1499, 1500, 1255, 1291, 1294, 1297, 1300,
	1303, 1306, 1309, 1312, 1315, 1318, 1321, 1324, 1327, 1330,
	1333, 1336, 1344, 1351, 1354, 1358, 1363, 0, 1366, 0,
	0, 1367, 0, 687, 1148, 0, 0, 1168, 1169, 0,
	1396, 1398, 1399, 1400, 1413, 0, 1418, 1419, 0, 1424,
	0, 1428, 1439, 0, 1046, 1053, 1054, 0, 1049, 0,
	1050, 0, 994, 1545, 120, 1546, 1543, 0, 1541, 1538,
	85, 0, 0, 1613, 0, 1622, 1623, 1632, 1633, 1639,
	0, 0, 1652, 0, 1646, 126, 0, 0, 0, 1556,
	234, 0, 254, 664, 0, 667, 657, 744, 745, 0,
	757, 749, 751, 752, 734, -2, 1583, 0, 0, 0,
	635, 1492, 0, 0, 1368, 0, 683, 684, 1156, 1149,
	0, 1134, 1135, 1153, 1393, 1395, 0, 0, 0, 1045,
	1005, 1006, 1047, 1048, 119, 0, 1542, 1176, 0, 1537,
	0, 185, 64, 65, 42, -2, 0, 0, 1591, 1592,
	1625, 1626, 1656, 0, 1645, 1651, 1014, 1021, 0, 127,
	487, 480, 0, 0, 0, 737, 738, 739, 740, 741,
	742, 743, 624, 178, 179, 0, 554, 555, 556, 172,
	0, 1211, 1364, 1150, 0, 0, 0, 0, 0, 1414,
	0, 1420, 0, 1425, 0, 1544, 0, 0, 1539, 63,
	0, -2, 68, 0, 0, 0, 0, 47, 48, 49,
	1654, 669, 0, 671, 0, -2, 475, 488, 0, 228,
	255, 256, 0, 0, 259, 0, 261, 262, 252, 253,
	0, 0, 758, 0, 175, 0, 0, 1141, 1142, 1143,
	1144, 1146, 0, 0, 0, 0, 1177, 1154, 43, 69,
	85, 60, 0, 670, 0, 0, 430, 0, 680, 476,
	477, 0, 483, 484, 485, 486, 257, 258, 260, 692,
	0, 553, 631, 1493, 0, 0, 1415, 0, 1421, 0,
	1426, 0, -2, 45, 0, 0, 672, 673, 681, 0,
	478, 0, 479, 0, 0, 0, 661, 0, 692, 1151,
	1145, 1147, 0, 0, 1175, 70, 73, 75, 0, 0,
	62, 85, 51, 52, 58, 54, 55, 0, 57, 0,
	682, 678, 489, 491, 492, 0, 0, 490, 693, 662,
	1416, 1422, 0, 85, 74, 0, 0, 46, 0, 0,
	59, 56, 0, 493, 494, 495, 0, -2, 85, 61,
	50, 53, 674, 44, -2, 675, 676, 677,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 768,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:677
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			setParseTree(yylex, nil)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:687
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:728
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:732
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:736
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:740
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:745
		{
			yyLOCAL = &DeclareHandler{Action: yyDollar[2].handlerActionUnion(), Conditions: yyDollar[5].handlerConditionsUnion(), Statement: yyDollar[6].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:751
		{
			yyLOCAL = ContinueAction
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:755
		{
			yyLOCAL = ExitAction
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:759
		{
			yyLOCAL = UndoAction
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:765
		{
			yySLICE := (*[]HandlerCondition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].handlerConditionUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []HandlerCondition
//line sql.y:769
		{
			yyLOCAL = []HandlerCondition{yyDollar[1].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:775
		{
			yyLOCAL = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:779
		{
			yyLOCAL = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:783
		{
			yyLOCAL = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:787
		{
			yyLOCAL = &HandlerConditionSQLWarning{}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:791
		{
			yyLOCAL = &HandlerConditionNotFound{}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:795
		{
			yyLOCAL = &HandlerConditionSQLException{}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:800
		{
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:808
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:812
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:831
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:837
		{
			yyLOCAL = CompoundStatements{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*CompoundStatements)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:850
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:859
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:869
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:875
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:881
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:893
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:897
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:915
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:919
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:928
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:938
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:944
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:950
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:954
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:958
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:981
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:987
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:992
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:998
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1005
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1011
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1018
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1022
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1028
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1032
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1036
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1040
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1044
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1054
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1059
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1063
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1069
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1073
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1078
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1084
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1090
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1097
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1101
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1107
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1113
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1121
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1125
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1129
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1135
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1159
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1163
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1169
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1175
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1179
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1183
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1187
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1197
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1207
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1217
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1230
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1236
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1242
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1252
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1256
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1260
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1264
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1270
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1274
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1278
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1284
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1288
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1294
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1304
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1308
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1312
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.str = RepeatableReadStr
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.str = ReadCommittedStr
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.str = SerializableStr
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1336
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1340
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1344
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1350
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1356
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1363
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1367
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1376
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1383
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1391
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1396
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1411
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1416
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1422
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1442
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1448
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1464
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1470
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1486
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1490
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1494
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1501
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1508
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1513
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1518
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1523
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1530
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1537
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1548
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1559
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1565
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1569
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1573
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1601
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1605
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1611
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1615
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1621
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1625
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1631
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1635
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1641
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1651
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1656
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1678
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1689
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1698
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1720
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1724
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1729
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1734
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1739
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1745
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1750
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1755
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1760
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1769
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1778
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1783
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1788
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1797
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1803
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1807
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1811
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1815
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1821
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1825
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1830
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1834
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1839
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1844
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1849
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1854
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1859
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1864
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1869
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1876
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1891
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1895
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1899
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1903
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1974
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1978
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1983
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1987
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1991
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = Armscii8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = ASCIIStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = Big5Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = UBinaryStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = Cp1250Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = Cp1251Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = Cp1256Str
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = Cp1257Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = Cp850Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = Cp852Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = Cp866Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = Cp932Str
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = Dec8Str
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = EucjpmsStr
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = EuckrStr
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = Gb18030Str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = Gb2312Str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = GbkStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = Geostd8Str
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = GreekStr
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = HebrewStr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = Hp8Str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = Keybcs2Str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = Koi8rStr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = Koi8uStr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = Latin1Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = Latin2Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = Latin5Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = Latin7Str
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = MacceStr
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = MacromanStr
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = SjisStr
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = Swe7Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = Tis620Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = Ucs2Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = UjisStr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = Utf16Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = Utf16leStr
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = Utf32Str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = Utf8mb3Str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = Utf8mb4Str
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = Utf8mb3Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2171
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2175
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2179
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2185
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2189
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2195
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2199
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2203
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2209
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2213
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2219
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2223
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2227
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2231
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2484
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2493
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2513
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2523
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2557
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2595
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2599
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = ""
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2618
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2627
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2633
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2643
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2647
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2652
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2656
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2660
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2664
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2668
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2672
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2688
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2692
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2696
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2700
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2704
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = yyDollar[2].str
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = yyDollar[1].str
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = ""
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2771
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2775
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2781
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2785
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2791
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2795
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2801
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2805
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2811
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2817
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2821
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2825
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2829
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2833
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2842
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2848
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2854
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2860
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2864
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2868
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2873
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2877
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2883
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2889
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2895
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2899
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2903
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2907
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2911
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2943
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2952
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2958
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2972
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2982
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2986
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2990
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2994
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2998
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3002
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3006
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3010
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3014
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3018
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3022
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3026
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3030
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3034
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3038
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3042
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3046
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3050
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3054
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3058
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3062
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3066
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3070
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3074
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3078
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3082
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3086
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3090
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3098
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3102
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3107
		{
			yyVAL.str = ""
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3170
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3188
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3192
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3201
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3205
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3209
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3217
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3223
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3237
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3241
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3245
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3249
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3253
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3257
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3261
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3265
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3269
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3273
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3277
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3281
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3285
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3289
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3293
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3297
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3301
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3305
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3309
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3313
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3317
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3321
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3325
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3329
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3333
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3337
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3341
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3345
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3349
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3353
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3357
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3363
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3373
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3377
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3381
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3385
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3389
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3393
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3397
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3401
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3405
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3409
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3509
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3668
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3677
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3685
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3694
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3701
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3713
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3722
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3737
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3751
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3755
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3761
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3767
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3773
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3783
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3787
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3793
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3799
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3805
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3811
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3829
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3835
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3841
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3847
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3851
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3855
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3861
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3865
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3870
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3874
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3879
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3883
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3889
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3893
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3897
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3901
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3905
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3909
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3913
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3917
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3921
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3925
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3929
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3933
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3937
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3941
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3945
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3949
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3953
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3957
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3961
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3965
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3969
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3973
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3978
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3986
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3992
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4007
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4011
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4016
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4021
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4026
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4031
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4036
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4041
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4046
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4051
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4057
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4063
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4073
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4078
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4082
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4087
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4092
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4097
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4102
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4107
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4112
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4119
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4126
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4133
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4145
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4151
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4157
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4163
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4169
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4175
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4181
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4193
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4215
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4219
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4346
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4398
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4406
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4418
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4422
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4430
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4497
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4502
		{
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = ""
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = "extended "
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4538
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4556
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4560
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4570
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4576
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4600
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4653
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4663
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4667
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4671
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4678
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4684
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4688
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4693
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4704
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4710
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4715
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4719
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4723
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4727
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4731
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4736
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4740
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4744
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4748
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4752
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4756
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = yyDollar[1].str
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = yyDollar[1].str
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4788
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4807
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4811
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4817
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4823
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4833
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4839
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4849
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4855
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4859
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4863
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4867
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4873
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4879
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4885
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4889
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4893
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4897
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4901
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4905
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4970
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4974
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4983
		{
			yyVAL.str = ""
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4992
		{
			setAllowComments(yylex, true)
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4996
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5002
		{
			yyVAL.strs = nil
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5006
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5025
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5033
		{
			yyVAL.str = SQLCacheStr
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5038
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5042
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5052
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5056
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5066
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5075
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5081
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5085
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5090
		{
			yyVAL.strs = nil
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5104
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			yyVAL.str = SQLCacheStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.str = DistinctStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = DistinctStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.str = HighPriorityStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.str = StraightJoinHint
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = SQLBigResultStr
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5156
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5160
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5168
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5172
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5176
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5180
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5205
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5209
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5215
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5221
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5225
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5235
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5239
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5243
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5247
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5253
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5257
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5263
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5267
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5276
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5291
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5295
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5301
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5305
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5311
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5315
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5319
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5329
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5333
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5346
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5350
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5354
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5358
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5364
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5366
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5370
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5376
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5378
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5381
		{
			yyVAL.empty = struct{}{}
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.empty = struct{}{}
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5407
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5411
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5415
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5421
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5427
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5431
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5435
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5439
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5445
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5449
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5459
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5473
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5479
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5488
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5494
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5504
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5508
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5512
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5516
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5520
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5524
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5529
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5533
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5537
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5541
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5853
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5857
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5863
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5867
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5873
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5877
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5881
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5887
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5891
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5898
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5902
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5906
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5910
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5914
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5920
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5924
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5928
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5932
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5936
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5940
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5944
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5953
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5959
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5963
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5972
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5977
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5987
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5993
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5997
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6003
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6019
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6025
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6029
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6035
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6039
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6045
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6049
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6061
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6067
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6071
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6077
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6083
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6103
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6107
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6114
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6118
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6122
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6126
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6132
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6136
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6142
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6146
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6150
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6154
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6158
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6162
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6168
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6172
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6176
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6183
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6189
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6193
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6908
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6912
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6916
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6956
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6960
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6964
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6968
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7004
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7008
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7016
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7020
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7024
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7038
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7042
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7046
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7055
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7082
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7086
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7090
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7094
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7098
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7102
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7107
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7111
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7115
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7119
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7126
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7130
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7144
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7148
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7154
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7158
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7162
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7166
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7170
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7174
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7178
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7193
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7197
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7201
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7205
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7209
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7213
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7217
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7221
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7225
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7229
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7233
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7237
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7241
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7245
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7249
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7253
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7257
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7261
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7265
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7269
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7275
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7279
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7283
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7287
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7291
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7295
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7299
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7303
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7307
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7311
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7315
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7319
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7323
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7327
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7331
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7335
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7339
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7343
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7353
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7357
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7361
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7371
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7375
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7379
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7383
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7387
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7393
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7397
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7401
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7405
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7409
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7415
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7469
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7473
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7477
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7481
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7485
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7489
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7501
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7525
		{
			yyVAL.str = string("")
		}
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7535
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7539
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7545
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7554
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7560
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7564
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7568
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7572
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7578
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7582
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7588
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7597
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7601
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7610
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7615
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7619
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7629
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7635
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7641
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7645
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7654
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7663
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7669
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7675
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7679
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7685
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7690
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7694
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7698
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7707
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7713
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7717
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7721
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7730
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7734
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7738
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7742
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7749
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7753
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7757
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7761
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7767
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7771
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7775
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7779
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7784
		{
			yyVAL.str = ""
		}
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7791
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7795
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7804
		{
			yyVAL.str = ""
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7818
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = ""
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7827
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7832
		{
			yyVAL.str = "cascaded"
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7849
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7855
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7859
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7865
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7871
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7875
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7879
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7891
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7897
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7903
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7909
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7918
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7922
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7927
		{
			yyVAL.str = ""
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7931
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7937
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7941
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7945
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7949
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7953
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7957
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7961
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7967
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7971
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7975
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7980
		{
			yyVAL.str = ""
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7984
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7988
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7993
		{
			yyVAL.str = ""
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7997
		{
			yyVAL.str = " header"
		}
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8002
		{
			yyVAL.str = ""
		}
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8006
		{
			yyVAL.str = " manifest on"
		}
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8010
		{
			yyVAL.str = " manifest off"
		}
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8015
		{
			yyVAL.str = ""
		}
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8019
		{
			yyVAL.str = " overwrite on"
		}
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8023
		{
			yyVAL.str = " overwrite off"
		}
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8029
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8034
		{
			yyVAL.str = ""
		}
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8038
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8044
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8048
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8054
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8058
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8063
		{
			yyVAL.str = ""
		}
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8067
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8073
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8077
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8083
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8087
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8091
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8096
		{
			yyVAL.str = ""
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8100
		{
			yyVAL.str = " optionally"
		}
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8113
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8117
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8121
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8125
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8129
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8135
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8139
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8143
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8147
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8156
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8160
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8169
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8175
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8179
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8185
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8189
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8195
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8199
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8205
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8209
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8215
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8221
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8231
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8241
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8245
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8251
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8258
		{
			yyVAL.str = "charset"
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8268
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8272
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8276
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8287
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8302
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8305
		{
			yyVAL.empty = struct{}{}
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8307
		{
			yyVAL.empty = struct{}{}
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8309
		{
			yyVAL.empty = struct{}{}
		}
	case 1693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8313
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8322
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8329
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8333
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8339
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8343
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8350
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8356
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8360
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8366
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8370
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8377
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8383
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8389
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8393
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8397
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9073
		{
		}
	case 2361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9078
		{
		}
	case 2362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9082
		{
			skipToEnd(yylex)
		}
	case 2363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9087
		{
			skipToEnd(yylex)
		}
	case 2364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9091
		{
			skipToEnd(yylex)
		}
	case 2365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9095
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
