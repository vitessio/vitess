// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const CODE = 57702
const COLLATION = 57703
const COLUMNS = 57704
const DATABASES = 57705
const ENGINES = 57706
const EVENT = 57707
const EXTENDED = 57708
const FIELDS = 57709
const FULL = 57710
const FUNCTION = 57711
const GTID_EXECUTED = 57712
const KEYSPACES = 57713
const OPEN = 57714
const PLUGINS = 57715
const PRIVILEGES = 57716
const PROCESSLIST = 57717
const SCHEMAS = 57718
const TABLES = 57719
const TRIGGERS = 57720
const USER = 57721
const VGTID_EXECUTED = 57722
const VITESS_KEYSPACES = 57723
const VITESS_METADATA = 57724
const VITESS_MIGRATIONS = 57725
const VITESS_REPLICATION_STATUS = 57726
const VITESS_SHARDS = 57727
const VITESS_TABLETS = 57728
const VITESS_TARGET = 57729
const VSCHEMA = 57730
const VITESS_THROTTLED_APPS = 57731
const NAMES = 57732
const GLOBAL = 57733
const SESSION = 57734
const ISOLATION = 57735
const LEVEL = 57736
const READ = 57737
const WRITE = 57738
const ONLY = 57739
const REPEATABLE = 57740
const COMMITTED = 57741
const UNCOMMITTED = 57742
const SERIALIZABLE = 57743
const CURRENT_TIMESTAMP = 57744
const DATABASE = 57745
const CURRENT_DATE = 57746
const NOW = 57747
const CURRENT_TIME = 57748
const LOCALTIME = 57749
const LOCALTIMESTAMP = 57750
const CURRENT_USER = 57751
const UTC_DATE = 57752
const UTC_TIME = 57753
const UTC_TIMESTAMP = 57754
const DAY = 57755
const DAY_HOUR = 57756
const DAY_MICROSECOND = 57757
const DAY_MINUTE = 57758
const DAY_SECOND = 57759
const HOUR = 57760
const HOUR_MICROSECOND = 57761
const HOUR_MINUTE = 57762
const HOUR_SECOND = 57763
const MICROSECOND = 57764
const MINUTE = 57765
const MINUTE_MICROSECOND = 57766
const MINUTE_SECOND = 57767
const MONTH = 57768
const QUARTER = 57769
const SECOND = 57770
const SECOND_MICROSECOND = 57771
const YEAR_MONTH = 57772
const WEEK = 57773
const REPLACE = 57774
const CONVERT = 57775
const CAST = 57776
const SUBSTR = 57777
const SUBSTRING = 57778
const SEPARATOR = 57779
const TIMESTAMPADD = 57780
const TIMESTAMPDIFF = 57781
const WEIGHT_STRING = 57782
const LTRIM = 57783
const RTRIM = 57784
const TRIM = 57785
const JSON_ARRAY = 57786
const JSON_OBJECT = 57787
const JSON_QUOTE = 57788
const JSON_DEPTH = 57789
const JSON_TYPE = 57790
const JSON_LENGTH = 57791
const JSON_VALID = 57792
const JSON_ARRAY_APPEND = 57793
const JSON_ARRAY_INSERT = 57794
const JSON_INSERT = 57795
const JSON_MERGE = 57796
const JSON_MERGE_PATCH = 57797
const JSON_MERGE_PRESERVE = 57798
const JSON_REMOVE = 57799
const JSON_REPLACE = 57800
const JSON_SET = 57801
const JSON_UNQUOTE = 57802
const COUNT = 57803
const AVG = 57804
const MAX = 57805
const MIN = 57806
const SUM = 57807
const GROUP_CONCAT = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const STD = 57812
const STDDEV = 57813
const STDDEV_POP = 57814
const STDDEV_SAMP = 57815
const VAR_POP = 57816
const VAR_SAMP = 57817
const VARIANCE = 57818
const REGEXP_INSTR = 57819
const REGEXP_LIKE = 57820
const REGEXP_REPLACE = 57821
const REGEXP_SUBSTR = 57822
const ExtractValue = 57823
const UpdateXML = 57824
const GET_LOCK = 57825
const RELEASE_LOCK = 57826
const RELEASE_ALL_LOCKS = 57827
const IS_FREE_LOCK = 57828
const IS_USED_LOCK = 57829
const LOCATE = 57830
const POSITION = 57831
const MATCH = 57832
const AGAINST = 57833
const BOOLEAN = 57834
const LANGUAGE = 57835
const WITH = 57836
const QUERY = 57837
const EXPANSION = 57838
const WITHOUT = 57839
const VALIDATION = 57840
const UNUSED = 57841
const ARRAY = 57842
const BYTE = 57843
const CUME_DIST = 57844
const DESCRIPTION = 57845
const DENSE_RANK = 57846
const EMPTY = 57847
const EXCEPT = 57848
const FIRST_VALUE = 57849
const GROUPING = 57850
const GROUPS = 57851
const JSON_TABLE = 57852
const LAG = 57853
const LAST_VALUE = 57854
const LATERAL = 57855
const LEAD = 57856
const NTH_VALUE = 57857
const NTILE = 57858
const OF = 57859
const OVER = 57860
const PERCENT_RANK = 57861
const RANK = 57862
const RECURSIVE = 57863
const ROW_NUMBER = 57864
const SYSTEM = 57865
const WINDOW = 57866
const ACTIVE = 57867
const ADMIN = 57868
const AUTOEXTEND_SIZE = 57869
const BUCKETS = 57870
const CLONE = 57871
const COLUMN_FORMAT = 57872
const COMPONENT = 57873
const DEFINITION = 57874
const ENFORCED = 57875
const ENGINE_ATTRIBUTE = 57876
const EXCLUDE = 57877
const FOLLOWING = 57878
const GET_MASTER_PUBLIC_KEY = 57879
const HISTOGRAM = 57880
const HISTORY = 57881
const INACTIVE = 57882
const INVISIBLE = 57883
const LOCKED = 57884
const MASTER_COMPRESSION_ALGORITHMS = 57885
const MASTER_PUBLIC_KEY_PATH = 57886
const MASTER_TLS_CIPHERSUITES = 57887
const MASTER_ZSTD_COMPRESSION_LEVEL = 57888
const NESTED = 57889
const NETWORK_NAMESPACE = 57890
const NOWAIT = 57891
const NULLS = 57892
const OJ = 57893
const OLD = 57894
const OPTIONAL = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PARTIAL = 57899
const PATH = 57900
const PERSIST = 57901
const PERSIST_ONLY = 57902
const PRECEDING = 57903
const PRIVILEGE_CHECKS_USER = 57904
const PROCESS = 57905
const RANDOM = 57906
const REFERENCE = 57907
const REQUIRE_ROW_FORMAT = 57908
const RESOURCE = 57909
const RESPECT = 57910
const RESTART = 57911
const RETAIN = 57912
const REUSE = 57913
const ROLE = 57914
const SECONDARY = 57915
const SECONDARY_ENGINE = 57916
const SECONDARY_ENGINE_ATTRIBUTE = 57917
const SECONDARY_LOAD = 57918
const SECONDARY_UNLOAD = 57919
const SIMPLE = 57920
const SKIP = 57921
const SRID = 57922
const THREAD_PRIORITY = 57923
const TIES = 57924
const UNBOUNDED = 57925
const VCPU = 57926
const VISIBLE = 57927
const RETURNING = 57928
const FORMAT_BYTES = 57929
const FORMAT_PICO_TIME = 57930
const PS_CURRENT_THREAD_ID = 57931
const PS_THREAD_ID = 57932
const GTID_SUBSET = 57933
const GTID_SUBTRACT = 57934
const WAIT_FOR_EXECUTED_GTID_SET = 57935
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57936
const FORMAT = 57937
const TREE = 57938
const VITESS = 57939
const TRADITIONAL = 57940
const VTEXPLAIN = 57941
const VEXPLAIN = 57942
const PLAN = 57943
const LOCAL = 57944
const LOW_PRIORITY = 57945
const NO_WRITE_TO_BINLOG = 57946
const LOGS = 57947
const ERROR = 57948
const GENERAL = 57949
const HOSTS = 57950
const OPTIMIZER_COSTS = 57951
const USER_RESOURCES = 57952
const SLOW = 57953
const CHANNEL = 57954
const RELAY = 57955
const EXPORT = 57956
const CURRENT = 57957
const ROW = 57958
const ROWS = 57959
const AVG_ROW_LENGTH = 57960
const CONNECTION = 57961
const CHECKSUM = 57962
const DELAY_KEY_WRITE = 57963
const ENCRYPTION = 57964
const ENGINE = 57965
const INSERT_METHOD = 57966
const MAX_ROWS = 57967
const MIN_ROWS = 57968
const PACK_KEYS = 57969
const PASSWORD = 57970
const FIXED = 57971
const DYNAMIC = 57972
const COMPRESSED = 57973
const REDUNDANT = 57974
const COMPACT = 57975
const ROW_FORMAT = 57976
const STATS_AUTO_RECALC = 57977
const STATS_PERSISTENT = 57978
const STATS_SAMPLE_PAGES = 57979
const STORAGE = 57980
const MEMORY = 57981
const DISK = 57982
const PARTITIONS = 57983
const LINEAR = 57984
const RANGE = 57985
const LIST = 57986
const SUBPARTITION = 57987
const SUBPARTITIONS = 57988
const HASH = 57989

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 49,
	14, 49,
	-2, 38,
	-1, 50,
	1, 157,
	665, 157,
	-2, 165,
	-1, 51,
	135, 165,
	176, 165,
	345, 165,
	-2, 520,
	-1, 58,
	36, 767,
	239, 767,
	250, 767,
	285, 781,
	286, 781,
	-2, 769,
	-1, 63,
	241, 805,
	-2, 803,
	-1, 118,
	238, 1457,
	-2, 131,
	-1, 120,
	1, 158,
	665, 158,
	-2, 165,
	-1, 131,
	136, 405,
	244, 405,
	-2, 509,
	-1, 150,
	135, 165,
	176, 165,
	345, 165,
	-2, 529,
	-1, 810,
	87, 1474,
	-2, 1328,
	-1, 811,
	87, 1475,
	221, 1479,
	-2, 1329,
	-1, 812,
	221, 1478,
	-2, 40,
	-1, 892,
	60, 879,
	-2, 894,
	-1, 978,
	249, 41,
	254, 41,
	-2, 416,
	-1, 1063,
	1, 577,
	665, 577,
	-2, 165,
	-1, 1362,
	221, 1479,
	-2, 1329,
	-1, 1510,
	60, 880,
	-2, 899,
	-1, 1511,
	60, 881,
	-2, 900,
	-1, 1562,
	135, 165,
	176, 165,
	345, 165,
	-2, 455,
	-1, 1643,
	136, 405,
	244, 405,
	-2, 509,
	-1, 1652,
	249, 42,
	254, 42,
	-2, 417,
	-1, 2011,
	221, 1483,
	-2, 1477,
	-1, 2012,
	221, 1479,
	-2, 1475,
	-1, 2112,
	135, 165,
	176, 165,
	345, 165,
	-2, 456,
	-1, 2119,
	26, 186,
	-2, 188,
	-1, 2486,
	78, 96,
	88, 96,
	-2, 958,
	-1, 2555,
	640, 693,
	-2, 667,
	-1, 2722,
	50, 1425,
	-2, 1419,
	-1, 3375,
	640, 693,
	-2, 681,
	-1, 3464,
	90, 625,
	95, 625,
	105, 625,
	178, 625,
	179, 625,
	180, 625,
	181, 625,
	182, 625,
	183, 625,
	184, 625,
	185, 625,
	186, 625,
	187, 625,
	188, 625,
	189, 625,
	190, 625,
	191, 625,
	192, 625,
	193, 625,
	194, 625,
	195, 625,
	196, 625,
	197, 625,
	198, 625,
	199, 625,
	200, 625,
	201, 625,
	202, 625,
	203, 625,
	204, 625,
	205, 625,
	206, 625,
	207, 625,
	208, 625,
	209, 625,
	210, 625,
	211, 625,
	212, 625,
	213, 625,
	214, 625,
	215, 625,
	216, 625,
	217, 625,
	218, 625,
	219, 625,
	-2, 1836,
}

const yyPrivate = 57344

const yyLast = 47659

var yyAct = [...]int{
	1518, 821, 3537, 3123, 3548, 3122, 813, 3356, 3441, 814,
	3124, 3505, 3462, 684, 3506, 2950, 3093, 1565, 1878, 3406,
	1771, 2060, 1129, 2872, 3429, 2040, 2774, 2781, 3340, 3288,
	2832, 3338, 2837, 2834, 2833, 2831, 2836, 2835, 1824, 2823,
	2735, 5, 3080, 2738, 2109, 781, 885, 3328, 3152, 2183,
	2420, 2459, 2386, 2851, 2681, 666, 2739, 2736, 2989, 2042,
	1525, 3157, 2852, 775, 774, 694, 2789, 2064, 663, 2983,
	2616, 2080, 3009, 2854, 2733, 2446, 2723, 2002, 2975, 2171,
	2552, 1075, 2146, 2471, 2520, 2878, 2600, 1621, 2151, 940,
	2214, 2521, 159, 2522, 2083, 1127, 2097, 664, 2452, 2438,
	662, 1999, 1972, 2084, 41, 39, 2422, 1874, 1973, 1893,
	2592, 2085, 1104, 2192, 1650, 1832, 145, 908, 2170, 2072,
	2231, 2153, 2513, 973, 968, 1554, 986, 2488, 1534, 1668,
	1374, 2087, 96, 909, 1492, 887, 676, 1512, 1851, 1897,
	1302, 1657, 1287, 947, 944, 976, 1767, 979, 2168, 776,
	1749, 2142, 2143, 1553, 974, 948, 671, 1010, 975, 926,
	1539, 899, 659, 928, 1358, 1334, 1823, 896, 1969, 95,
	81, 1125, 780, 103, 100, 40, 101, 1118, 1776, 163,
	1616, 2065, 123, 121, 1642, 128, 122, 897, 895, 894,
	129, 1059, 921, 102, 80, 653, 670, 2007, 1378, 1382,
	3365, 2545, 94, 3538, 3081, 2, 89, 2185, 2186, 2187,
	2185, 2820, 3391, 2575, 2574, 2229, 2543, 916, 920, 3073,
	1734, 1488, 632, 3489, 2608, 3036, 2609, 3387, 902, 91,
	124, 91, 638, 1839, 3127, 1838, 130, 1837, 3392, 941,
	598, 91, 1836, 1015, 2037, 2038, 1835, 1834, 107, 108,
	109, 1303, 112, 1807, 889, 118, 893, 3386, 187, 990,
	1854, 593, 656, 966, 657, 654, 903, 912, 3483, 935,
	918, 918, 651, 652, 886, 911, 888, 2274, 989, 1298,
	3127, 1023, 881, 882, 883, 884, 2418, 2719, 892, 1303,
	2842, 1519, 2565, 658, 936, 2008, 3509, 1016, 1019, 1020,
	124, 1906, 2448, 964, 963, 1012, 965, 962, 952, 910,
	957, 2685, 830, 831, 832, 3558, 923, 924, 1029, 1030,
	1031, 3126, 1034, 1035, 1036, 1037, 1319, 186, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1032, 2840, 934, 778, 779,
	3493, 125, 3472, 147, 830, 831, 832, 3504, 3387, 1313,
	2218, 3442, 3528, 2955, 168, 3491, 2954, 3126, 124, 2842,
	3470, 2216, 2846, 2568, 3341, 3492, 2387, 1844, 2897, 3476,
	3477, 3284, 2839, 3283, 2162, 1014, 3086, 2791, 2792, 3087,
	3490, 632, 1013, 3519, 3471, 158, 632, 1313, 3294, 3487,
	3105, 146, 1289, 186, 2217, 82, 3094, 2156, 82, 3430,
	82, 91, 3438, 2211, 2548, 3370, 82, 2283, 3293, 84,
	165, 1883, 3467, 166, 3104, 2840, 2917, 125, 1631, 147,
	2582, 2583, 633, 1111, 2462, 1113, 3448, 1555, 2068, 1556,
	168, 2419, 134, 135, 157, 156, 185, 2497, 2771, 2772,
	2496, 2846, 2039, 2498, 3170, 961, 2770, 1068, 1069, 2463,
	2607, 1316, 1062, 1317, 1318, 1309, 2104, 2105, 1301, 1816,
	1817, 158, 2280, 1110, 1112, 2591, 2103, 146, 3448, 934,
	778, 779, 2281, 91, 2843, 3510, 91, 1094, 91, 1071,
	879, 1299, 1122, 878, 91, 2790, 165, 956, 1058, 166,
	958, 1288, 2546, 1309, 3357, 1082, 3511, 2793, 1099, 1100,
	1083, 1082, 1095, 959, 2509, 2986, 1083, 1088, 1644, 1645,
	157, 156, 185, 632, 1081, 2650, 1080, 2122, 2121, 2455,
	2456, 2905, 2874, 632, 2275, 2276, 2278, 2277, 2903, 632,
	646, 2272, 1815, 1819, 650, 151, 132, 154, 139, 131,
	1551, 152, 153, 644, 2155, 2879, 2593, 2578, 169, 1496,
	2232, 2193, 3316, 2843, 3317, 2553, 3540, 175, 140, 1750,
	2867, 927, 632, 1115, 1033, 1097, 1098, 1108, 2868, 1120,
	1103, 1109, 143, 141, 136, 137, 138, 142, 2252, 1724,
	2253, 1114, 2254, 1064, 133, 2595, 3075, 3074, 961, 3484,
	953, 633, 2237, 144, 1096, 1121, 633, 955, 954, 1089,
	1101, 2255, 1039, 1038, 2068, 1107, 2236, 961, 1057, 2876,
	1102, 151, 1646, 154, 2875, 1643, 2234, 152, 153, 186,
	2066, 2067, 3268, 1725, 169, 1726, 3071, 999, 960, 988,
	969, 997, 2196, 175, 970, 1335, 2244, 2240, 2242, 2243,
	2241, 2245, 2246, 125, 2684, 3131, 959, 2238, 2235, 2081,
	970, 1755, 1499, 937, 931, 929, 168, 2894, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1344, 1343, 1345, 1346, 1008,
	1007, 1078, 1061, 1084, 1085, 1086, 1087, 1006, 1005, 2793,
	2651, 160, 1004, 186, 1003, 1002, 1308, 1305, 1306, 1307,
	1312, 1314, 1311, 1001, 1310, 996, 1349, 1123, 1124, 2502,
	1635, 1009, 1349, 945, 1304, 945, 3559, 125, 982, 943,
	2281, 3516, 165, 1656, 945, 166, 967, 3364, 2544, 3552,
	168, 1116, 981, 633, 1308, 1305, 1306, 1307, 1312, 1314,
	1311, 987, 1310, 633, 1768, 922, 991, 981, 185, 633,
	3070, 993, 1304, 2599, 1370, 994, 992, 2596, 1018, 2423,
	2425, 1025, 2222, 1280, 981, 2169, 2580, 160, 1017, 155,
	1352, 1353, 1354, 1355, 1552, 827, 995, 827, 2215, 2511,
	1366, 960, 633, 2221, 1000, 1060, 165, 827, 998, 166,
	1764, 1092, 2612, 1290, 2547, 937, 931, 929, 2295, 1026,
	960, 2813, 1281, 1282, 2577, 1629, 2066, 2067, 1628, 3475,
	2563, 2987, 185, 988, 1627, 1356, 3444, 2159, 2567, 1765,
	1625, 597, 592, 1320, 2590, 3125, 2213, 2589, 988, 1360,
	148, 1655, 3485, 149, 1736, 1735, 1737, 1738, 1739, 3034,
	3035, 1350, 1351, 3353, 3023, 155, 3005, 1754, 3443, 2493,
	2458, 2395, 1375, 3474, 1886, 1543, 85, 2160, 3444, 3103,
	169, 1451, 2566, 161, 2158, 1073, 120, 2453, 2110, 175,
	173, 3125, 988, 1297, 1758, 930, 1756, 1757, 1349, 1759,
	1760, 1346, 2769, 905, 2602, 1907, 1119, 2844, 2845, 2601,
	3443, 3378, 1380, 1011, 1381, 1520, 1522, 1384, 2161, 1908,
	2848, 1077, 1067, 1079, 1070, 2282, 148, 90, 2157, 149,
	90, 181, 90, 1105, 1777, 987, 115, 2602, 90, 3066,
	2999, 2636, 2601, 2233, 169, 2939, 2424, 1828, 1761, 1557,
	987, 1898, 1487, 175, 2536, 1503, 981, 984, 985, 161,
	945, 3520, 3166, 1319, 978, 982, 173, 1898, 3550, 2312,
	1318, 3551, 3041, 3549, 162, 167, 164, 170, 171, 172,
	174, 176, 177, 178, 179, 977, 2844, 2845, 1319, 3040,
	180, 182, 183, 184, 987, 2200, 1024, 1317, 1318, 2848,
	1021, 1665, 1457, 1458, 1459, 1460, 1461, 181, 116, 1664,
	2210, 1654, 988, 160, 1091, 1751, 1487, 1752, 1856, 1486,
	1753, 2208, 999, 1500, 997, 1093, 2205, 930, 3560, 3408,
	1493, 3512, 1857, 1347, 1348, 1855, 2895, 2205, 1480, 3024,
	2212, 901, 3346, 1504, 1744, 1505, 103, 100, 1905, 101,
	162, 167, 164, 170, 171, 172, 174, 176, 177, 178,
	179, 1846, 1848, 1849, 1076, 2209, 180, 182, 183, 184,
	1319, 1742, 3524, 1519, 3409, 1063, 2207, 160, 3554, 1502,
	1106, 1778, 3276, 1506, 1521, 1847, 1648, 3347, 3100, 889,
	3101, 3275, 2339, 1490, 1319, 3266, 1535, 2004, 1316, 3116,
	1317, 1318, 886, 3115, 1319, 2309, 1524, 2638, 1743, 1641,
	3048, 888, 3047, 1501, 987, 3561, 1773, 1507, 3037, 991,
	981, 1660, 1719, 1316, 993, 1317, 1318, 1319, 994, 992,
	1701, 1658, 1658, 1623, 2821, 1741, 1548, 1549, 988, 2287,
	2288, 2289, 1335, 1632, 1633, 1634, 1670, 1659, 1671, 2809,
	1673, 1675, 2518, 1319, 1679, 1681, 1683, 1685, 1687, 1662,
	830, 831, 832, 1624, 2351, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1344, 1343, 1345, 1346, 1638, 1639, 2308, 1651,
	1519, 2517, 1637, 1630, 2516, 161, 1697, 1903, 3297, 1700,
	1781, 1702, 173, 1731, 2165, 1745, 1904, 1785, 1319, 1787,
	1788, 1789, 1790, 1729, 1728, 1316, 1794, 1317, 1318, 1727,
	1709, 1710, 1519, 1779, 1780, 1717, 1715, 1716, 1806, 1341,
	1342, 1344, 1343, 1345, 1346, 1947, 1711, 1784, 1705, 1316,
	1708, 1317, 1318, 181, 1791, 1792, 1793, 1769, 3514, 1316,
	987, 1317, 1318, 1707, 1319, 2871, 981, 984, 985, 161,
	945, 1706, 1677, 638, 978, 982, 173, 1730, 3031, 638,
	1775, 1284, 1316, 124, 1317, 1318, 964, 963, 2073, 2074,
	962, 2500, 638, 2181, 2180, 1551, 162, 167, 164, 170,
	171, 172, 174, 176, 177, 178, 179, 97, 1316, 1783,
	1317, 1318, 180, 182, 183, 184, 3513, 181, 98, 2617,
	2179, 2178, 1319, 2177, 2176, 1528, 1804, 2444, 3539, 1319,
	3500, 1519, 1519, 1805, 1939, 1928, 1929, 1930, 1931, 1941,
	1932, 1933, 1934, 1946, 1942, 1935, 1936, 1943, 1944, 1945,
	1937, 1938, 1940, 1316, 3373, 1317, 1318, 1335, 1319, 2611,
	162, 167, 164, 170, 171, 172, 174, 176, 177, 178,
	179, 1529, 3372, 1519, 1315, 1519, 180, 182, 183, 184,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1343, 1345,
	1346, 2004, 1881, 1881, 3350, 2001, 1319, 1879, 1879, 1316,
	3349, 1317, 1318, 2619, 2003, 3348, 1335, 3361, 3366, 1331,
	1882, 1332, 2349, 3522, 1519, 2912, 1852, 3271, 825, 3255,
	1901, 3254, 1315, 1519, 1902, 1333, 1347, 1348, 1330, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1344, 1343, 1345, 1346,
	3165, 1859, 3018, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 3163, 1316, 1965, 1317,
	1318, 97, 3112, 1850, 1316, 3302, 1317, 1318, 99, 2444,
	3437, 1860, 98, 2629, 2628, 2627, 1485, 1484, 2621, 1483,
	2625, 1519, 2620, 3045, 2618, 3030, 1997, 2444, 3416, 2623,
	2880, 1812, 1813, 1316, 2877, 1317, 1318, 106, 2622, 2444,
	3412, 81, 2812, 1829, 81, 2811, 40, 1853, 105, 40,
	104, 2026, 2010, 2527, 2011, 1487, 2624, 2626, 1840, 1841,
	1842, 1843, 1961, 3399, 1519, 3084, 3363, 1519, 1520, 2033,
	2514, 1316, 1482, 1317, 1318, 3279, 1519, 1858, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1344, 1343, 1345, 1346, 1360,
	2227, 2000, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1343,
	1345, 1346, 2057, 2226, 1885, 2063, 1899, 1887, 1888, 2444,
	3267, 3301, 1890, 2045, 918, 918, 1895, 1808, 1519, 3259,
	1900, 1774, 1486, 3084, 1519, 2444, 3082, 2009, 2205, 1519,
	3003, 1519, 3258, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1740, 2078, 1732, 2011, 1948, 1949, 1950,
	1951, 1952, 1953, 1955, 1722, 1960, 1718, 1962, 1963, 1964,
	1714, 1966, 1967, 1968, 1713, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1712, 1998,
	2119, 2005, 2006, 918, 1530, 918, 918, 918, 918, 918,
	100, 2050, 101, 2051, 2166, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 1959, 2027, 2028, 2029, 2030, 2031, 2009,
	100, 99, 101, 1970, 2128, 2129, 2130, 2131, 1117, 1319,
	2056, 2014, 2015, 2114, 902, 2113, 3092, 2032, 2123, 2554,
	2124, 2125, 2126, 2127, 2044, 2095, 2532, 1892, 1894, 2360,
	1519, 2118, 918, 2802, 2801, 2460, 2134, 2135, 2136, 2137,
	2799, 2800, 2797, 2798, 2998, 2058, 1315, 2117, 1909, 1910,
	1911, 1912, 2797, 2796, 2069, 2070, 2468, 1519, 2148, 2154,
	1519, 2076, 1923, 2281, 2576, 2489, 2101, 935, 1620, 2557,
	2100, 2034, 2194, 2460, 2099, 2550, 2551, 1970, 2116, 3000,
	2108, 2091, 2115, 1339, 1340, 1341, 1342, 1344, 1343, 1345,
	1346, 828, 936, 2004, 3263, 2440, 829, 2191, 2489, 2444,
	2443, 2164, 2305, 1519, 1319, 105, 1880, 2468, 2013, 2206,
	99, 2016, 2017, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1321, 2149, 2138, 2140, 2141, 2145, 2300, 2764, 2490, 2199,
	1884, 1519, 2202, 990, 2203, 2167, 2163, 2281, 2492, 2175,
	2734, 2150, 3404, 1658, 1316, 2998, 1317, 1318, 1620, 1619,
	2219, 2998, 989, 1319, 1563, 1562, 2149, 2198, 2201, 2197,
	1319, 2490, 3377, 2444, 1319, 2055, 2468, 2205, 2305, 1319,
	2467, 2281, 2959, 2223, 1315, 2220, 3049, 2224, 2225, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 2265, 2266, 2230, 2799, 2468, 2268, 3050, 3051, 3052,
	2707, 2102, 2824, 2305, 1319, 2269, 2360, 3454, 1519, 1316,
	2336, 1317, 1318, 2335, 3452, 1519, 2298, 2205, 3450, 1519,
	2303, 2188, 1319, 2306, 3067, 2307, 2071, 1523, 2035, 1884,
	2314, 1852, 1830, 2347, 2316, 2317, 2318, 2010, 1814, 2011,
	1763, 1550, 2258, 972, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 971, 2291, 891, 2293, 1316, 91,
	1317, 1318, 3480, 3419, 3290, 1316, 2777, 1317, 1318, 1316,
	1526, 1317, 1318, 3256, 1316, 3177, 1317, 1318, 3065, 3062,
	2340, 2341, 2342, 2343, 2344, 2292, 2346, 2271, 3325, 1519,
	2348, 3043, 2922, 2921, 2353, 2354, 1622, 2355, 1693, 2147,
	2358, 2279, 2359, 2869, 2826, 2524, 2362, 1519, 2822, 2558,
	2366, 2778, 2299, 1319, 2371, 2372, 2373, 2374, 2144, 2139,
	2133, 2523, 1853, 2132, 2290, 1747, 1653, 2385, 1319, 2388,
	2389, 1649, 1319, 1618, 91, 2780, 117, 2391, 2393, 1316,
	3053, 1317, 1318, 1062, 2396, 2397, 2398, 2399, 2400, 1694,
	1695, 1696, 2873, 2775, 3291, 2407, 2408, 1316, 2409, 1317,
	1318, 2412, 2414, 2057, 2297, 2416, 2311, 2162, 1319, 2524,
	2791, 2792, 2048, 1319, 3534, 2428, 3532, 2776, 1881, 106,
	3507, 1689, 3385, 1879, 3010, 3011, 3016, 3054, 3055, 3056,
	105, 2313, 104, 1810, 1335, 2429, 2294, 3323, 1519, 1319,
	3311, 99, 2320, 2321, 2322, 2323, 2302, 1319, 3013, 2818,
	2782, 1335, 3320, 1519, 1319, 2345, 2301, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1344, 1343, 1345, 1346, 1690, 1691,
	1692, 2817, 1319, 2427, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1344, 1343, 1345, 1346, 2816, 3015, 1375, 1316, 2464,
	1317, 1318, 3306, 1519, 2430, 1811, 2432, 2969, 2319, 2734,
	1519, 2445, 1319, 1316, 2537, 1317, 1318, 1316, 2259, 1317,
	1318, 3147, 1319, 3146, 2756, 2334, 1319, 2054, 2790, 2757,
	2754, 2753, 2752, 2974, 1519, 2755, 3381, 1517, 1513, 1319,
	2793, 2967, 1519, 3292, 2062, 1319, 2454, 1493, 2964, 1519,
	2417, 1527, 1514, 1316, 3004, 1317, 1318, 2712, 1316, 2711,
	1317, 1318, 2991, 3156, 2483, 3345, 2962, 1519, 2437, 3158,
	2990, 3145, 2510, 2512, 2441, 1487, 2442, 2052, 2053, 1516,
	2457, 1515, 2994, 2721, 1316, 2503, 1317, 1318, 1762, 877,
	2487, 2549, 1316, 2795, 1317, 1318, 2927, 1519, 2507, 1316,
	1319, 1317, 1318, 2528, 2491, 1319, 2910, 1519, 2494, 1028,
	2415, 1519, 2154, 1027, 1535, 97, 2501, 1316, 2504, 1317,
	1318, 1319, 99, 2413, 1519, 2888, 98, 1319, 2523, 2392,
	1519, 906, 811, 40, 1319, 2758, 2515, 2477, 2478, 907,
	2605, 1319, 2482, 1283, 1907, 2484, 1319, 1316, 2573, 1317,
	1318, 2996, 1532, 2564, 2525, 99, 2779, 1316, 1908, 1317,
	1318, 1316, 1319, 1317, 1318, 125, 2533, 97, 2534, 1319,
	3546, 2538, 2539, 2540, 1316, 2814, 1317, 1318, 98, 1319,
	1316, 2570, 1317, 1318, 2965, 1641, 191, 2073, 2074, 191,
	2519, 2262, 643, 2526, 3459, 2559, 2560, 649, 2529, 2530,
	2640, 2641, 2642, 2643, 2644, 2375, 1519, 3362, 191, 3286,
	2794, 2367, 1519, 2569, 2481, 2724, 2726, 2059, 1531, 2649,
	914, 915, 2251, 191, 2727, 2937, 2710, 2250, 2249, 2248,
	2933, 1319, 2247, 2976, 2709, 1316, 2285, 1317, 1318, 104,
	1316, 2594, 1317, 1318, 3333, 2615, 2919, 105, 649, 191,
	649, 2571, 2630, 2918, 2597, 106, 1316, 2603, 1317, 1318,
	2604, 2645, 1316, 2915, 1317, 1318, 105, 3153, 104, 1316,
	3332, 1317, 1318, 2614, 106, 2613, 1316, 99, 1317, 1318,
	3314, 1316, 3164, 1317, 1318, 105, 2984, 104, 3162, 1319,
	2631, 3161, 3154, 3063, 2995, 2633, 2993, 1316, 2827, 1317,
	1318, 2189, 1636, 1319, 1316, 3135, 1317, 1318, 106, 913,
	2460, 3536, 3535, 3, 1316, 2411, 1317, 1318, 2440, 105,
	2652, 2337, 2686, 2046, 1544, 1536, 2688, 110, 111, 2610,
	3535, 2783, 3536, 3351, 2000, 2787, 2000, 2654, 3029, 904,
	1827, 1825, 2786, 10, 9, 93, 2743, 1826, 918, 2660,
	8, 2634, 2635, 1, 1286, 2637, 1285, 3033, 2639, 2670,
	2671, 2672, 2673, 2674, 2761, 3469, 1316, 610, 1317, 1318,
	2714, 2691, 2687, 2410, 2689, 2036, 2788, 1491, 2646, 2647,
	2648, 2784, 3508, 3465, 3466, 1733, 2785, 2406, 2746, 2740,
	2653, 1723, 2763, 2655, 2656, 2657, 1773, 3095, 1971, 2658,
	2659, 3287, 2830, 1974, 2661, 2195, 2632, 2663, 2702, 3061,
	2665, 2666, 2667, 2668, 2152, 2715, 980, 2713, 2669, 1974,
	1974, 1974, 1974, 1974, 1316, 150, 1317, 1318, 2728, 2729,
	2703, 2704, 2705, 2111, 2691, 2112, 2706, 918, 1316, 3432,
	1317, 1318, 114, 2759, 2692, 2693, 2694, 2695, 2696, 2697,
	895, 894, 2747, 2698, 2699, 2750, 2700, 2731, 2701, 2716,
	2850, 2748, 2749, 2765, 2751, 2662, 2766, 2664, 938, 2767,
	113, 983, 2690, 1090, 2190, 2773, 2745, 3085, 2508, 2120,
	1569, 1567, 1568, 2675, 2676, 2677, 2678, 1566, 1571, 1570,
	2804, 2890, 2737, 2091, 2806, 2805, 100, 2737, 101, 2896,
	2338, 2938, 1818, 2732, 645, 2480, 639, 188, 1558, 2857,
	2858, 2907, 2908, 2909, 1319, 2911, 2913, 2154, 893, 1319,
	2828, 2091, 2091, 2091, 2091, 2091, 2849, 1537, 2762, 2920,
	2864, 1319, 2951, 1022, 2924, 2925, 2926, 2928, 2929, 2930,
	2931, 2091, 600, 2932, 2091, 2934, 2935, 2936, 1319, 2803,
	2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949,
	2881, 2807, 2808, 2884, 2883, 2886, 2887, 2228, 2956, 1319,
	606, 2960, 1367, 2961, 2963, 1319, 2966, 2968, 1809, 2970,
	2971, 2972, 2973, 2829, 2901, 2898, 2899, 2979, 2900, 2825,
	2892, 2902, 2891, 2904, 2708, 2906, 2495, 933, 2405, 925,
	1319, 2047, 2431, 2404, 932, 1319, 3264, 2742, 2988, 2720,
	1319, 2722, 2447, 2725, 2953, 2403, 1319, 2718, 3344, 3155,
	3417, 2957, 3001, 3002, 2505, 1533, 3006, 2958, 2310, 1896,
	1319, 1357, 2402, 2088, 1319, 3130, 2473, 2476, 2477, 2478,
	2474, 1845, 2475, 2479, 668, 2982, 3010, 3011, 667, 1316,
	1319, 1317, 1318, 2401, 1316, 665, 1317, 1318, 2433, 2390,
	2461, 1322, 815, 2977, 2978, 2980, 1316, 2421, 1317, 1318,
	1545, 2472, 1319, 2470, 2985, 2469, 1319, 2260, 3007, 2992,
	2096, 2914, 3012, 1316, 2384, 1317, 1318, 3008, 3461, 2383,
	2997, 2090, 1319, 2086, 2382, 2923, 2439, 3021, 3022, 766,
	2381, 3017, 765, 3014, 1316, 1319, 1317, 1318, 677, 669,
	1316, 1319, 1317, 1318, 2380, 3019, 1319, 661, 2379, 764,
	763, 2857, 2858, 3027, 1319, 191, 3026, 191, 3068, 3069,
	191, 3028, 3083, 2856, 2378, 1316, 1319, 1317, 1318, 3020,
	1316, 3445, 1317, 1318, 3044, 1316, 3046, 1317, 1318, 3089,
	3090, 1316, 2579, 1317, 1318, 2870, 2377, 1319, 2581, 2506,
	2376, 649, 2866, 649, 649, 1316, 1319, 1317, 1318, 1316,
	1300, 1317, 1318, 1319, 3102, 1509, 2370, 3106, 655, 951,
	2893, 3368, 2284, 649, 191, 1316, 2916, 1317, 1318, 2369,
	2473, 2476, 2477, 2478, 2474, 2368, 2475, 2479, 1508, 1926,
	2365, 1927, 3375, 1319, 3117, 2838, 3091, 1316, 2364, 1317,
	1318, 1316, 1362, 1317, 1318, 3079, 2819, 2091, 2555, 3121,
	2363, 2182, 66, 44, 3339, 3038, 3039, 1316, 3405, 1317,
	1318, 3129, 762, 759, 3132, 3133, 1319, 3134, 2682, 3136,
	1316, 2361, 1317, 1318, 2683, 3388, 1316, 3107, 1317, 1318,
	2357, 1316, 3389, 1317, 1318, 758, 3390, 2356, 1954, 1316,
	1296, 1317, 1318, 1293, 3482, 3064, 1820, 92, 35, 34,
	33, 1316, 32, 1317, 1318, 31, 25, 24, 3072, 23,
	22, 21, 3076, 3077, 3078, 3150, 28, 2352, 20, 19,
	3128, 18, 1316, 2841, 1317, 1318, 3503, 3545, 3088, 1319,
	1881, 1316, 119, 1317, 1318, 1879, 53, 50, 1316, 48,
	1317, 1318, 127, 126, 3111, 51, 47, 3179, 1065, 45,
	2350, 3171, 30, 29, 17, 16, 2740, 3160, 3173, 3159,
	2740, 15, 3151, 14, 3175, 13, 3167, 3169, 1316, 12,
	1317, 1318, 11, 7, 1517, 1513, 6, 38, 37, 27,
	36, 3180, 3181, 3108, 1362, 3109, 26, 4, 3110, 1514,
	3278, 3113, 3114, 1319, 2542, 3183, 2184, 3265, 0, 3285,
	3118, 1316, 0, 1317, 1318, 0, 0, 0, 0, 0,
	3120, 0, 0, 2315, 1510, 1511, 1516, 0, 1515, 3295,
	3296, 0, 3298, 3262, 3299, 3300, 3261, 3269, 3260, 3303,
	3304, 3305, 3137, 3307, 3310, 3138, 3308, 3139, 3140, 1881,
	3141, 191, 3142, 3309, 1879, 649, 649, 3143, 3277, 3319,
	3321, 3322, 3324, 3326, 3327, 3329, 3312, 3282, 2737, 3281,
	0, 191, 0, 0, 1316, 3119, 1317, 1318, 0, 0,
	0, 0, 3168, 0, 0, 0, 0, 2304, 0, 0,
	0, 649, 0, 3176, 191, 40, 3178, 3313, 0, 0,
	0, 0, 0, 3359, 0, 0, 649, 3315, 3182, 0,
	3289, 3318, 191, 0, 0, 0, 3334, 3335, 0, 3355,
	3337, 3336, 0, 0, 0, 0, 3257, 0, 0, 0,
	0, 0, 0, 0, 3352, 0, 2740, 0, 1316, 0,
	1317, 1318, 0, 0, 0, 0, 0, 3358, 0, 649,
	0, 3272, 3273, 3274, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 649, 649,
	0, 649, 0, 649, 649, 0, 649, 649, 649, 649,
	649, 649, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 1362, 649, 1362, 191, 0, 0, 3360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3354, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 649, 3384,
	191, 0, 3379, 0, 3367, 0, 3342, 0, 0, 0,
	0, 0, 3374, 0, 649, 3376, 191, 0, 0, 3400,
	0, 0, 3371, 0, 0, 3401, 3402, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 3413, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 649, 3394, 3403,
	0, 3395, 0, 0, 0, 0, 3343, 0, 0, 0,
	0, 0, 0, 3439, 3440, 0, 0, 0, 0, 0,
	0, 0, 3410, 0, 0, 0, 0, 3449, 3451, 3453,
	3446, 3418, 0, 0, 3447, 3420, 3423, 3431, 3428, 3425,
	3424, 3422, 3427, 3426, 0, 0, 0, 0, 0, 0,
	0, 0, 3481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3457, 0, 0, 0, 0, 0, 3460,
	0, 0, 0, 3478, 3468, 3473, 0, 0, 0, 0,
	0, 3488, 3446, 0, 0, 0, 3447, 0, 0, 40,
	3382, 3486, 3499, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 83, 3289, 3434, 0, 3415, 0, 3497, 0,
	0, 3502, 0, 3396, 0, 0, 3397, 0, 3398, 0,
	0, 0, 0, 0, 0, 3521, 3523, 3525, 0, 0,
	0, 2737, 3515, 3518, 0, 1881, 3517, 0, 1773, 0,
	1879, 0, 0, 3527, 3526, 0, 0, 1370, 3533, 0,
	3531, 0, 3530, 0, 0, 0, 0, 3544, 3383, 3541,
	3446, 0, 649, 649, 3447, 40, 3393, 0, 3547, 0,
	0, 3553, 3555, 3556, 3557, 649, 0, 3529, 0, 0,
	638, 890, 0, 83, 191, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 1879, 3564, 3565, 3563, 0,
	0, 0, 890, 0, 3309, 0, 0, 3562, 0, 0,
	0, 0, 3479, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 3494, 0, 3495, 0, 3496, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 3542, 0, 3543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 191, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 622, 0, 0, 0, 0, 191, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 649, 0, 0, 2012, 191, 0, 191,
	0, 191, 191, 0, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 601,
	615, 0, 635, 0, 634, 605, 0, 603, 607, 616,
	608, 0, 602, 0, 613, 0, 0, 604, 617, 618,
	621, 625, 626, 627, 623, 620, 0, 611, 636, 0,
	0, 186, 0, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 147, 0, 0,
	649, 0, 0, 0, 0, 0, 649, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 649, 0,
	0, 0, 649, 649, 165, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 1645, 157, 156,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 191, 0, 0,
	191, 0, 191, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	1646, 154, 0, 1643, 0, 152, 153, 0, 1126, 630,
	1126, 1126, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 1359,
	1364, 1365, 0, 1368, 0, 1369, 1371, 1372, 1373, 0,
	1376, 1377, 1379, 1379, 0, 1379, 1383, 1383, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 0, 0, 160, 0, 1450, 0, 1452,
	1453, 1454, 1455, 1456, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 1383, 1383, 1383, 1383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 191, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 191, 0, 0,
	1495, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 173, 649, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 810, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 181, 0, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 191, 191, 191,
	191, 191, 648, 0, 0, 0, 0, 0, 162, 167,
	164, 170, 171, 172, 174, 176, 177, 178, 179, 0,
	0, 191, 191, 0, 180, 182, 183, 184, 0, 0,
	0, 0, 0, 3201, 3203, 3202, 3220, 3221, 3222, 3223,
	3224, 3225, 3226, 716, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 1362, 0, 0, 649, 649,
	1362, 191, 191, 191, 191, 191, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 191,
	0, 191, 0, 0, 191, 191, 191, 0, 0, 1126,
	1126, 0, 0, 0, 0, 0, 0, 3207, 0, 0,
	0, 0, 0, 83, 0, 0, 83, 0, 0, 0,
	0, 0, 3215, 3216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 0, 1362, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 782, 3501, 695, 786, 697, 783,
	784, 0, 693, 696, 785, 1586, 0, 0, 0, 191,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 715, 3200, 3204, 3205, 3206, 3217, 3218, 3219, 3227,
	3229, 747, 3228, 3230, 3231, 3232, 3235, 3236, 3237, 3238,
	3233, 3234, 3239, 3184, 3188, 3185, 3186, 3187, 3199, 3189,
	3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3240,
	3241, 3242, 3243, 3244, 3245, 3210, 3214, 3213, 3211, 3212,
	3208, 3209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 787, 0, 788, 0, 0, 792,
	0, 0, 0, 794, 793, 0, 795, 761, 760, 0,
	0, 789, 790, 0, 791, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 42, 43, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 88, 0, 0, 0, 46, 73, 74, 0, 71,
	75, 0, 0, 0, 0, 0, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 2089, 3246,
	3247, 3248, 3249, 3250, 3251, 3252, 3253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 648, 1279, 648, 648,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 191,
	191, 191, 0, 1587, 0, 0, 0, 0, 648, 649,
	649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 649, 649, 649, 649,
	0, 0, 0, 0, 0, 1600, 1603, 1604, 1605, 1606,
	1607, 1608, 0, 1609, 1610, 1612, 1613, 1611, 1614, 1615,
	1588, 1589, 1590, 1591, 1572, 1573, 1601, 0, 1575, 0,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 0,
	0, 1585, 1592, 1593, 1594, 1595, 0, 1596, 1597, 1598,
	1599, 0, 0, 0, 0, 0, 0, 49, 52, 55,
	54, 57, 0, 70, 0, 0, 79, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	58, 87, 86, 0, 0, 68, 69, 56, 0, 0,
	0, 0, 191, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 1362, 0, 0, 0, 0, 649, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	0, 0, 0, 0, 0, 60, 61, 0, 62, 63,
	64, 65, 0, 0, 0, 0, 0, 0, 880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 648, 0, 0, 2286, 0, 0, 0, 649, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 946,
	0, 191, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 649, 0, 0,
	0, 0, 0, 2296, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 649, 649, 0, 648, 0, 1652, 0, 0, 0,
	0, 85, 0, 0, 1661, 0, 0, 1361, 1663, 0,
	0, 1666, 1667, 648, 648, 0, 648, 0, 648, 648,
	649, 648, 648, 648, 648, 648, 648, 0, 0, 0,
	0, 0, 0, 0, 1361, 1698, 1699, 1361, 648, 1361,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 2394,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 2426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 191, 596, 0, 0, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 649, 191, 596, 0, 0, 0, 0,
	2465, 2466, 0, 0, 0, 0, 0, 0, 0, 2089,
	900, 0, 890, 2485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 919, 919, 67,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	649, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 2562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 648, 0,
	0, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 191, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 0, 648, 0,
	0, 0, 0, 0, 1361, 1066, 0, 1072, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 648,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2679, 0, 0,
	0, 0, 0, 0, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 0, 0, 1600, 1603, 1604, 1605,
	1606, 1607, 1608, 0, 1609, 1610, 1612, 1613, 1611, 1614,
	1615, 1588, 1589, 1590, 1591, 1572, 1573, 1601, 0, 1575,
	2089, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	0, 0, 1585, 1592, 1593, 1594, 1595, 648, 1596, 1597,
	1598, 1599, 0, 2741, 0, 83, 0, 0, 2089, 2089,
	2089, 2089, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 2089, 0,
	0, 2089, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 0, 0, 2172, 2173, 2174, 0, 0,
	0, 0, 596, 0, 596, 0, 0, 596, 0, 0,
	0, 0, 1602, 0, 0, 648, 0, 0, 0, 0,
	0, 648, 1661, 0, 0, 1661, 0, 1661, 0, 0,
	0, 91, 0, 2204, 828, 0, 0, 0, 816, 829,
	830, 831, 832, 817, 0, 0, 818, 819, 0, 820,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 596, 0, 825, 833, 834, 0, 0, 648, 0,
	0, 0, 0, 648, 1547, 0, 0, 648, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2859, 2860, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 0, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 0, 0, 0, 0, 0, 0,
	942, 0, 949, 0, 2089, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 3025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2861, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 1361, 0, 648, 0, 0, 0, 0, 0,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2862, 2863, 0, 0, 0, 0, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 786, 0, 783, 784,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3144, 0, 3148, 3149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2741, 0, 83, 0, 2741, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 1363, 0, 0, 1363,
	0, 1363, 596, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2499, 0,
	0, 3270, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 596, 596, 596,
	596, 596, 596, 596, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 1661, 1661,
	0, 0, 0, 648, 0, 0, 0, 0, 0, 0,
	2741, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	2572, 0, 0, 0, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 0, 0, 0, 3369, 0,
	0, 0, 0, 1128, 0, 1128, 1128, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 83, 2079, 0, 2082,
	0, 0, 1833, 0, 0, 1291, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 3414, 0, 1363,
	0, 0, 83, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 919, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	1361, 0, 0, 648, 648, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 1772, 919, 919, 919, 919, 919, 0, 0, 3498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2810, 0, 0, 0,
	1833, 0, 0, 0, 1720, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 2256, 2257, 648, 919,
	2261, 1361, 0, 0, 0, 0, 648, 0, 0, 2264,
	0, 0, 0, 900, 0, 0, 2267, 1497, 1498, 0,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 0, 1772, 596, 0, 596, 0, 596, 2098,
	0, 0, 2270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 2889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	1669, 1669, 0, 1669, 0, 1669, 1669, 0, 1678, 1669,
	1669, 1669, 1669, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3032, 0, 0, 0, 0, 0, 0, 596, 0, 0,
	828, 0, 0, 0, 596, 829, 0, 0, 0, 1128,
	0, 0, 0, 596, 596, 1880, 0, 596, 0, 2263,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 0, 596, 648, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 648, 648, 648, 0, 0, 2486, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	0, 0, 0, 0, 1363, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1128, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 648, 0, 648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2584, 2585, 2586,
	2587, 2588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1833, 2598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	0, 0, 0, 648, 2606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 0, 0, 0, 648,
	0, 0, 0, 1720, 0, 0, 1924, 1925, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 596, 0, 1128, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 648, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	0, 2061, 0, 0, 0, 2541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 596, 596, 596, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 596,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2815, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 949, 648,
	0, 0, 0, 0, 0, 919, 2853, 0, 0, 1361,
	0, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	2865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 648, 0, 0, 2882,
	0, 0, 2885, 0, 0, 942, 0, 0, 0, 0,
	1875, 0, 0, 0, 1875, 1875, 0, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2981, 0, 0, 0, 0, 648, 0, 648, 0,
	0, 0, 1363, 2273, 0, 0, 0, 1363, 596, 596,
	596, 596, 596, 0, 0, 0, 0, 0, 0, 0,
	2760, 0, 0, 0, 0, 0, 1720, 0, 596, 0,
	0, 596, 2768, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 828, 0, 0, 0, 816, 829, 830, 831,
	832, 817, 0, 0, 818, 819, 0, 820, 0, 0,
	0, 1128, 0, 0, 0, 0, 3042, 596, 0, 0,
	0, 825, 833, 834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 3057, 0, 0, 3058,
	3059, 3060, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2859, 2860,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 596,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2434,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	2449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2862, 2863, 0, 0, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2531, 0, 0,
	0, 0, 0, 596, 0, 0, 596, 596, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2061, 0, 0, 0, 0, 0,
	0, 2556, 0, 0, 0, 0, 0, 0, 0, 0,
	2561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2680, 0, 3380, 0, 0, 0, 0, 0,
	1128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1128, 0, 0, 0, 0, 0, 0,
	2744, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3096, 3097,
	3098, 3099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3172, 0,
	3174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3330,
	0, 0, 0, 3330, 3330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1128, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 2952, 0, 3463, 1262, 1247, 502, 0,
	1190, 1265, 1159, 1178, 1275, 1181, 1184, 1226, 1138, 1204,
	402, 1175, 1131, 1163, 1133, 1170, 1134, 1161, 1192, 260,
	1158, 1249, 1208, 1264, 353, 257, 1140, 1164, 416, 1180,
	198, 1228, 471, 244, 364, 361, 510, 272, 263, 259,
	242, 306, 372, 414, 492, 408, 1271, 357, 1214, 0,
	481, 387, 0, 0, 0, 1194, 1253, 1202, 1240, 1189,
	1227, 1148, 1213, 1266, 1176, 1223, 1267, 312, 240, 314,
	197, 399, 482, 276, 0, 0, 0, 0, 3435, 812,
	0, 0, 0, 0, 3436, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 1172, 1220, 1261, 1173,
	1222, 255, 310, 262, 254, 507, 1272, 1252, 1137, 1201,
	1260, 0, 0, 221, 1263, 1196, 0, 1225, 0, 1278,
	1132, 1216, 0, 1135, 1139, 1274, 1256, 1167, 265, 0,
	0, 0, 0, 0, 0, 0, 1193, 1203, 1237, 1241,
	1187, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	1212, 0, 0, 0, 1144, 1136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 0, 0, 1147, 0, 1166, 1238, 0, 1130, 287,
	1141, 388, 247, 0, 438, 1245, 1255, 1188, 549, 1259,
	1186, 1185, 1232, 1145, 1251, 1179, 352, 1143, 319, 193,
	217, 0, 1177, 398, 446, 458, 1250, 1162, 1171, 245,
	1169, 456, 412, 527, 225, 274, 443, 418, 454, 426,
	277, 1211, 1230, 455, 359, 512, 436, 524, 550, 551,
	253, 392, 536, 496, 544, 568, 218, 250, 406, 489,
	530, 478, 384, 508, 509, 318, 477, 285, 196, 356,
	556, 216, 464, 358, 234, 223, 514, 533, 279, 441,
	563, 205, 491, 522, 231, 468, 0, 0, 570, 239,
	488, 207, 519, 487, 380, 315, 316, 206, 0, 442,
	258, 283, 0, 0, 248, 401, 516, 517, 246, 571,
	220, 543, 212, 1142, 542, 394, 511, 520, 381, 370,
	211, 518, 379, 369, 323, 342, 343, 270, 296, 433,
	362, 434, 295, 297, 390, 389, 391, 200, 531, 0,
	201, 0, 483, 532, 572, 226, 227, 229, 1157, 269,
	273, 281, 284, 292, 293, 302, 354, 405, 432, 428,
	437, 1246, 506, 525, 537, 548, 554, 555, 557, 558,
	559, 560, 561, 564, 562, 393, 300, 479, 322, 360,
	1235, 1277, 411, 457, 232, 529, 480, 1152, 1156, 1150,
	1217, 1151, 1206, 1207, 1153, 1268, 1269, 1270, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 0, 1239, 1146, 0,
	1154, 1155, 1248, 1257, 1258, 591, 371, 470, 526, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 241, 203, 377, 385,
	505, 301, 208, 209, 210, 498, 499, 500, 501, 540,
	541, 545, 447, 448, 449, 450, 282, 535, 298, 453,
	452, 320, 321, 366, 435, 1210, 192, 213, 355, 1273,
	439, 278, 569, 539, 534, 199, 215, 1149, 252, 1160,
	1168, 0, 1174, 1182, 1183, 1195, 1197, 1198, 1199, 1200,
	1218, 1219, 1221, 1229, 1231, 1234, 1236, 1243, 1254, 1276,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 425, 427, 429, 440,
	445, 459, 460, 461, 462, 463, 466, 467, 472, 473,
	474, 475, 476, 484, 485, 490, 513, 515, 528, 546,
	552, 465, 290, 291, 430, 431, 303, 304, 566, 567,
	289, 523, 553, 521, 565, 547, 424, 365, 1209, 1215,
	368, 271, 294, 309, 1224, 538, 486, 219, 451, 280,
	243, 1242, 1244, 204, 238, 222, 249, 264, 267, 313,
	378, 386, 415, 420, 286, 261, 236, 444, 233, 469,
	493, 494, 495, 497, 382, 256, 419, 1205, 1233, 363,
	503, 504, 305, 383, 0, 0, 0, 1262, 1247, 502,
	0, 1190, 1265, 1159, 1178, 1275, 1181, 1184, 1226, 1138,
	1204, 402, 1175, 1131, 1163, 1133, 1170, 1134, 1161, 1192,
	260, 1158, 1249, 1208, 1264, 353, 257, 1140, 1164, 416,
	1180, 198, 1228, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 1271, 357, 1214,
	0, 481, 387, 0, 0, 0, 1194, 1253, 1202, 1240,
	1189, 1227, 1148, 1213, 1266, 1176, 1223, 1267, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 1172, 1220, 1261,
	1173, 1222, 255, 310, 262, 254, 507, 1272, 1252, 1137,
	1201, 1260, 0, 0, 221, 1263, 1196, 0, 1225, 0,
	1278, 1132, 1216, 0, 1135, 1139, 1274, 1256, 1167, 265,
	0, 0, 0, 0, 0, 0, 0, 1193, 1203, 1237,
	1241, 1187, 0, 0, 0, 0, 0, 2769, 0, 1165,
	0, 1212, 0, 0, 0, 1144, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	0, 0, 0, 0, 1147, 0, 1166, 1238, 0, 1130,
	287, 1141, 388, 247, 0, 438, 1245, 1255, 1188, 549,
	1259, 1186, 1185, 1232, 1145, 1251, 1179, 352, 1143, 319,
	193, 217, 0, 1177, 398, 446, 458, 1250, 1162, 1171,
	245, 1169, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 1211, 1230, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 1142, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 1157,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 1246, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 1235, 1277, 411, 457, 232, 529, 480, 1152, 1156,
	1150, 1217, 1151, 1206, 1207, 1153, 1268, 1269, 1270, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 1239, 1146,
	0, 1154, 1155, 1248, 1257, 1258, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 1210, 192, 213, 355,
	1273, 439, 278, 569, 539, 534, 199, 215, 1149, 252,
	1160, 1168, 0, 1174, 1182, 1183, 1195, 1197, 1198, 1199,
	1200, 1218, 1219, 1221, 1229, 1231, 1234, 1236, 1243, 1254,
	1276, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 1209,
	1215, 368, 271, 294, 309, 1224, 538, 486, 219, 451,
	280, 243, 1242, 1244, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 1205, 1233,
	363, 503, 504, 305, 383, 0, 0, 0, 1262, 1247,
	502, 0, 1190, 1265, 1159, 1178, 1275, 1181, 1184, 1226,
	1138, 1204, 402, 1175, 1131, 1163, 1133, 1170, 1134, 1161,
	1192, 260, 1158, 1249, 1208, 1264, 353, 257, 1140, 1164,
	416, 1180, 198, 1228, 471, 244, 364, 361, 510, 272,
	263, 259, 242, 306, 372, 414, 492, 408, 1271, 357,
	1214, 0, 481, 387, 0, 0, 0, 1194, 1253, 1202,
	1240, 1189, 1227, 1148, 1213, 1266, 1176, 1223, 1267, 312,
	240, 314, 197, 399, 482, 276, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 338, 347,
	346, 327, 328, 330, 332, 337, 344, 350, 1172, 1220,
	1261, 1173, 1222, 255, 310, 262, 254, 507, 1272, 1252,
	1137, 1201, 1260, 0, 0, 221, 1263, 1196, 0, 1225,
	0, 1278, 1132, 1216, 0, 1135, 1139, 1274, 1256, 1167,
	265, 0, 0, 0, 0, 0, 0, 0, 1193, 1203,
	1237, 1241, 1187, 0, 0, 0, 0, 0, 2730, 0,
	1165, 0, 1212, 0, 0, 0, 1144, 1136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 1147, 0, 1166, 1238, 0,
	1130, 287, 1141, 388, 247, 0, 438, 1245, 1255, 1188,
	549, 1259, 1186, 1185, 1232, 1145, 1251, 1179, 352, 1143,
	319, 193, 217, 0, 1177, 398, 446, 458, 1250, 1162,
	1171, 245, 1169, 456, 412, 527, 225, 274, 443, 418,
	454, 426, 277, 1211, 1230, 455, 359, 512, 436, 524,
	550, 551, 253, 392, 536, 496, 544, 568, 218, 250,
	406, 489, 530, 478, 384, 508, 509, 318, 477, 285,
	196, 356, 556, 216, 464, 358, 234, 223, 514, 533,
	279, 441, 563, 205, 491, 522, 231, 468, 0, 0,
	570, 239, 488, 207, 519, 487, 380, 315, 316, 206,
	0, 442, 258, 283, 0, 0, 248, 401, 516, 517,
	246, 571, 220, 543, 212, 1142, 542, 394, 511, 520,
	381, 370, 211, 518, 379, 369, 323, 342, 343, 270,
	296, 433, 362, 434, 295, 297, 390, 389, 391, 200,
	531, 0, 201, 0, 483, 532, 572, 226, 227, 229,
	1157, 269, 273, 281, 284, 292, 293, 302, 354, 405,
	432, 428, 437, 1246, 506, 525, 537, 548, 554, 555,
	557, 558, 559, 560, 561, 564, 562, 393, 300, 479,
	322, 360, 1235, 1277, 411, 457, 232, 529, 480, 1152,
	1156, 1150, 1217, 1151, 1206, 1207, 1153, 1268, 1269, 1270,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 0, 1239,
	1146, 0, 1154, 1155, 1248, 1257, 1258, 591, 371, 470,
	526, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 241, 203,
	377, 385, 505, 301, 208, 209, 210, 498, 499, 500,
	501, 540, 541, 545, 447, 448, 449, 450, 282, 535,
	298, 453, 452, 320, 321, 366, 435, 1210, 192, 213,
	355, 1273, 439, 278, 569, 539, 534, 199, 215, 1149,
	252, 1160, 1168, 0, 1174, 1182, 1183, 1195, 1197, 1198,
	1199, 1200, 1218, 1219, 1221, 1229, 1231, 1234, 1236, 1243,
	1254, 1276, 194, 195, 202, 214, 224, 228, 235, 251,
	266, 268, 275, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 425, 427,
	429, 440, 445, 459, 460, 461, 462, 463, 466, 467,
	472, 473, 474, 475, 476, 484, 485, 490, 513, 515,
	528, 546, 552, 465, 290, 291, 430, 431, 303, 304,
	566, 567, 289, 523, 553, 521, 565, 547, 424, 365,
	1209, 1215, 368, 271, 294, 309, 1224, 538, 486, 219,
	451, 280, 243, 1242, 1244, 204, 238, 222, 249, 264,
	267, 313, 378, 386, 415, 420, 286, 261, 236, 444,
	233, 469, 493, 494, 495, 497, 382, 256, 419, 1205,
	1233, 363, 503, 504, 305, 383, 0, 0, 0, 1262,
	1247, 502, 0, 1190, 1265, 1159, 1178, 1275, 1181, 1184,
	1226, 1138, 1204, 402, 1175, 1131, 1163, 1133, 1170, 1134,
	1161, 1192, 260, 1158, 1249, 1208, 1264, 353, 257, 1140,
	1164, 416, 1180, 198, 1228, 471, 244, 364, 361, 510,
	272, 263, 259, 242, 306, 372, 414, 492, 408, 1271,
	357, 1214, 0, 481, 387, 0, 0, 0, 1194, 1253,
	1202, 1240, 1189, 1227, 1148, 1213, 1266, 1176, 1223, 1267,
	312, 240, 314, 197, 399, 482, 276, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 338,
	347, 346, 327, 328, 330, 332, 337, 344, 350, 1172,
	1220, 1261, 1173, 1222, 255, 310, 262, 254, 507, 1272,
	1252, 1137, 1201, 1260, 0, 0, 221, 1263, 1196, 0,
	1225, 0, 1278, 1132, 1216, 0, 1135, 1139, 1274, 1256,
	1167, 265, 0, 0, 0, 0, 0, 0, 0, 1193,
	1203, 1237, 1241, 1187, 0, 0, 0, 0, 0, 2077,
	0, 1165, 0, 1212, 0, 0, 0, 1144, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 0, 0, 0, 0, 1147, 0, 1166, 1238,
	0, 1130, 287, 1141, 388, 247, 0, 438, 1245, 1255,
	1188, 549, 1259, 1186, 1185, 1232, 1145, 1251, 1179, 352,
	1143, 319, 193, 217, 0, 1177, 398, 446, 458, 1250,
	1162, 1171, 245, 1169, 456, 412, 527, 225, 274, 443,
	418, 454, 426, 277, 1211, 1230, 455, 359, 512, 436,
	524, 550, 551, 253, 392, 536, 496, 544, 568, 218,
	250, 406, 489, 530, 478, 384, 508, 509, 318, 477,
	285, 196, 356, 556, 216, 464, 358, 234, 223, 514,
	533, 279, 441, 563, 205, 491, 522, 231, 468, 0,
	0, 570, 239, 488, 207, 519, 487, 380, 315, 316,
	206, 0, 442, 258, 283, 0, 0, 248, 401, 516,
	517, 246, 571, 220, 543, 212, 1142, 542, 394, 511,
	520, 381, 370, 211, 518, 379, 369, 323, 342, 343,
	270, 296, 433, 362, 434, 295, 297, 390, 389, 391,
	200, 531, 0, 201, 0, 483, 532, 572, 226, 227,
	229, 1157, 269, 273, 281, 284, 292, 293, 302, 354,
	405, 432, 428, 437, 1246, 506, 525, 537, 548, 554,
	555, 557, 558, 559, 560, 561, 564, 562, 393, 300,
	479, 322, 360, 1235, 1277, 411, 457, 232, 529, 480,
	1152, 1156, 1150, 1217, 1151, 1206, 1207, 1153, 1268, 1269,
	1270, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 0,
	1239, 1146, 0, 1154, 1155, 1248, 1257, 1258, 591, 371,
	470, 526, 324, 336, 339, 329, 348, 0, 349, 325,
	326, 331, 333, 334, 335, 340, 341, 345, 351, 241,
	203, 377, 385, 505, 301, 208, 209, 210, 498, 499,
	500, 501, 540, 541, 545, 447, 448, 449, 450, 282,
	535, 298, 453, 452, 320, 321, 366, 435, 1210, 192,
	213, 355, 1273, 439, 278, 569, 539, 534, 199, 215,
	1149, 252, 1160, 1168, 0, 1174, 1182, 1183, 1195, 1197,
	1198, 1199, 1200, 1218, 1219, 1221, 1229, 1231, 1234, 1236,
	1243, 1254, 1276, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 528, 546, 552, 465, 290, 291, 430, 431, 303,
	304, 566, 567, 289, 523, 553, 521, 565, 547, 424,
	365, 1209, 1215, 368, 271, 294, 309, 1224, 538, 486,
	219, 451, 280, 243, 1242, 1244, 204, 238, 222, 249,
	264, 267, 313, 378, 386, 415, 420, 286, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 382, 256, 419,
	1205, 1233, 363, 503, 504, 305, 383, 0, 0, 0,
	1262, 1247, 502, 0, 1190, 1265, 1159, 1178, 1275, 1181,
	1184, 1226, 1138, 1204, 402, 1175, 1131, 1163, 1133, 1170,
	1134, 1161, 1192, 260, 1158, 1249, 1208, 1264, 353, 257,
	1140, 1164, 416, 1180, 198, 1228, 471, 244, 364, 361,
	510, 272, 263, 259, 242, 306, 372, 414, 492, 408,
	1271, 357, 1214, 0, 481, 387, 0, 0, 0, 1194,
	1253, 1202, 1240, 1189, 1227, 1148, 1213, 1266, 1176, 1223,
	1267, 312, 240, 314, 197, 399, 482, 276, 0, 91,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	1172, 1220, 1261, 1173, 1222, 255, 310, 262, 254, 507,
	1272, 1252, 1137, 1201, 1260, 0, 0, 221, 1263, 1196,
	0, 1225, 0, 1278, 1132, 1216, 0, 1135, 1139, 1274,
	1256, 1167, 265, 0, 0, 0, 0, 0, 0, 0,
	1193, 1203, 1237, 1241, 1187, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 1212, 0, 0, 0, 1144, 1136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1191, 0, 0, 0, 0, 1147, 0, 1166,
	1238, 0, 1130, 287, 1141, 388, 247, 0, 438, 1245,
	1255, 1188, 549, 1259, 1186, 1185, 1232, 1145, 1251, 1179,
	352, 1143, 319, 193, 217, 0, 1177, 398, 446, 458,
	1250, 1162, 1171, 245, 1169, 456, 412, 527, 225, 274,
	443, 418, 454, 426, 277, 1211, 1230, 455, 359, 512,
	436, 524, 550, 551, 253, 392, 536, 496, 544, 568,
	218, 250, 406, 489, 530, 478, 384, 508, 509, 318,
	477, 285, 196, 356, 556, 216, 464, 358, 234, 223,
	514, 533, 279, 441, 563, 205, 491, 522, 231, 468,
	0, 0, 570, 239, 488, 207, 519, 487, 380, 315,
	316, 206, 0, 442, 258, 283, 0, 0, 248, 401,
	516, 517, 246, 571, 220, 543, 212, 1142, 542, 394,
	511, 520, 381, 370, 211, 518, 379, 369, 323, 342,
	343, 270, 296, 433, 362, 434, 295, 297, 390, 389,
	391, 200, 531, 0, 201, 0, 483, 532, 572, 226,
	227, 229, 1157, 269, 273, 281, 284, 292, 293, 302,
	354, 405, 432, 428, 437, 1246, 506, 525, 537, 548,
	554, 555, 557, 558, 559, 560, 561, 564, 562, 393,
	300, 479, 322, 360, 1235, 1277, 411, 457, 232, 529,
	480, 1152, 1156, 1150, 1217, 1151, 1206, 1207, 1153, 1268,
	1269, 1270, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	0, 1239, 1146, 0, 1154, 1155, 1248, 1257, 1258, 591,
	371, 470, 526, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	241, 203, 377, 385, 505, 301, 208, 209, 210, 498,
	499, 500, 501, 540, 541, 545, 447, 448, 449, 450,
	282, 535, 298, 453, 452, 320, 321, 366, 435, 1210,
	192, 213, 355, 1273, 439, 278, 569, 539, 534, 199,
	215, 1149, 252, 1160, 1168, 0, 1174, 1182, 1183, 1195,
	1197, 1198, 1199, 1200, 1218, 1219, 1221, 1229, 1231, 1234,
	1236, 1243, 1254, 1276, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 528, 546, 552, 465, 290, 291, 430, 431,
	303, 304, 566, 567, 289, 523, 553, 521, 565, 547,
	424, 365, 1209, 1215, 368, 271, 294, 309, 1224, 538,
	486, 219, 451, 280, 243, 1242, 1244, 204, 238, 222,
	249, 264, 267, 313, 378, 386, 415, 420, 286, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 382, 256,
	419, 1205, 1233, 363, 503, 504, 305, 383, 0, 0,
	0, 1262, 1247, 502, 0, 1190, 1265, 1159, 1178, 1275,
	1181, 1184, 1226, 1138, 1204, 402, 1175, 1131, 1163, 1133,
	1170, 1134, 1161, 1192, 260, 1158, 1249, 1208, 1264, 353,
	257, 1140, 1164, 416, 1180, 198, 1228, 471, 244, 364,
	361, 510, 272, 263, 259, 242, 306, 372, 414, 492,
	408, 1271, 357, 1214, 0, 481, 387, 0, 0, 0,
	1194, 1253, 1202, 1240, 1189, 1227, 1148, 1213, 1266, 1176,
	1223, 1267, 312, 240, 314, 197, 399, 482, 276, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 1172, 1220, 1261, 1173, 1222, 255, 310, 262, 254,
	507, 1272, 1252, 1137, 1201, 1260, 0, 0, 221, 1263,
	1196, 0, 1225, 0, 1278, 1132, 1216, 0, 1135, 1139,
	1274, 1256, 1167, 265, 0, 0, 0, 0, 0, 0,
	0, 1193, 1203, 1237, 1241, 1187, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 1212, 0, 0, 0, 1144,
	1136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 0, 0, 0, 0, 1147, 0,
	1166, 1238, 0, 1130, 287, 1141, 388, 247, 0, 438,
	1245, 1255, 1188, 549, 1259, 1186, 1185, 1232, 1145, 1251,
	1179, 352, 1143, 319, 193, 217, 0, 1177, 398, 446,
	458, 1250, 1162, 1171, 245, 1169, 456, 412, 527, 225,
	274, 443, 418, 454, 426, 277, 1211, 1230, 455, 359,
	512, 436, 524, 550, 551, 253, 392, 536, 496, 544,
	568, 218, 250, 406, 489, 530, 478, 384, 508, 509,
	318, 477, 285, 196, 356, 556, 216, 464, 358, 234,
	223, 514, 533, 279, 441, 563, 205, 491, 522, 231,
	468, 0, 0, 570, 239, 488, 207, 519, 487, 380,
	315, 316, 206, 0, 442, 258, 283, 0, 0, 248,
	401, 516, 517, 246, 571, 220, 543, 212, 1142, 542,
	394, 511, 520, 381, 370, 211, 518, 379, 369, 323,
	342, 343, 270, 296, 433, 362, 434, 295, 297, 390,
	389, 391, 200, 531, 0, 201, 0, 483, 532, 572,
	226, 227, 229, 1157, 269, 273, 281, 284, 292, 293,
	302, 354, 405, 432, 428, 437, 1246, 506, 525, 537,
	548, 554, 555, 557, 558, 559, 560, 561, 564, 562,
	393, 300, 479, 322, 360, 1235, 1277, 411, 457, 232,
	529, 480, 1152, 1156, 1150, 1217, 1151, 1206, 1207, 1153,
	1268, 1269, 1270, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 0, 1239, 1146, 0, 1154, 1155, 1248, 1257, 1258,
	591, 371, 470, 526, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 241, 203, 377, 385, 505, 301, 208, 209, 210,
	498, 499, 500, 501, 540, 541, 545, 447, 448, 449,
	450, 282, 535, 298, 453, 452, 320, 321, 366, 435,
	1210, 192, 213, 355, 1273, 439, 278, 569, 539, 534,
	199, 215, 1149, 252, 1160, 1168, 0, 1174, 1182, 1183,
	1195, 1197, 1198, 1199, 1200, 1218, 1219, 1221, 1229, 1231,
	1234, 1236, 1243, 1254, 1276, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 528, 546, 552, 465, 290, 291, 430,
	431, 303, 304, 566, 567, 289, 523, 553, 521, 565,
	547, 424, 365, 1209, 1215, 368, 271, 294, 309, 1224,
	538, 486, 219, 451, 280, 243, 1242, 1244, 204, 238,
	222, 249, 264, 267, 313, 378, 386, 415, 420, 286,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 382,
	256, 419, 1205, 1233, 363, 503, 504, 305, 383, 0,
	0, 0, 1262, 1247, 502, 0, 1190, 1265, 1159, 1178,
	1275, 1181, 1184, 1226, 1138, 1204, 402, 1175, 1131, 1163,
	1133, 1170, 1134, 1161, 1192, 260, 1158, 1249, 1208, 1264,
	353, 257, 1140, 1164, 416, 1180, 198, 1228, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 1271, 357, 1214, 0, 481, 387, 0, 0,
	0, 1194, 1253, 1202, 1240, 1189, 1227, 1148, 1213, 1266,
	1176, 1223, 1267, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 1172, 1220, 1261, 1173, 1222, 255, 310, 262,
	254, 507, 1272, 1252, 1137, 1201, 1260, 0, 0, 221,
	1263, 1196, 0, 1225, 0, 1278, 1132, 1216, 0, 1135,
	1139, 1274, 1256, 1167, 265, 0, 0, 0, 0, 0,
	0, 0, 1193, 1203, 1237, 1241, 1187, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 1212, 0, 0, 0,
	1144, 1136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 1147,
	0, 1166, 1238, 0, 1130, 287, 1141, 388, 247, 0,
	438, 1245, 1255, 1188, 549, 1259, 1186, 1185, 1232, 1145,
	1251, 1179, 352, 1143, 319, 193, 217, 0, 1177, 398,
	446, 458, 1250, 1162, 1171, 245, 1169, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 1211, 1230, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 1142,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 1157, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 1246, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 1235, 1277, 411, 457,
	232, 529, 480, 1152, 1156, 1150, 1217, 1151, 1206, 1207,
	1153, 1268, 1269, 1270, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 1239, 1146, 0, 1154, 1155, 1248, 1257,
	1258, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 1210, 192, 213, 355, 1273, 439, 278, 569, 539,
	534, 199, 215, 1149, 252, 1160, 1168, 0, 1174, 1182,
	1183, 1195, 1197, 1198, 1199, 1200, 1218, 1219, 1221, 1229,
	1231, 1234, 1236, 1243, 1254, 1276, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 1209, 1215, 368, 271, 294, 309,
	1224, 538, 486, 219, 451, 280, 243, 1242, 1244, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 1205, 1233, 363, 503, 504, 305, 383,
	0, 0, 0, 1262, 1247, 502, 0, 1190, 1265, 1159,
	1178, 1275, 1181, 1184, 1226, 1138, 1204, 402, 1175, 1131,
	1163, 1133, 1170, 1134, 1161, 1192, 260, 1158, 1249, 1208,
	1264, 353, 257, 1140, 1164, 416, 1180, 198, 1228, 471,
	244, 364, 361, 510, 272, 263, 259, 242, 306, 372,
	414, 492, 408, 1271, 357, 1214, 0, 481, 387, 0,
	0, 0, 1194, 1253, 1202, 1240, 1189, 1227, 1148, 1213,
	1266, 1176, 1223, 1267, 312, 240, 314, 197, 399, 482,
	276, 0, 0, 0, 0, 0, 812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 338, 347, 346, 327, 328, 330, 332,
	337, 344, 350, 1172, 1220, 1261, 1173, 1222, 255, 310,
	262, 254, 507, 1272, 1252, 1137, 1201, 1260, 0, 0,
	221, 1263, 1196, 0, 1225, 0, 1278, 1132, 1216, 0,
	1135, 1139, 1274, 1256, 1167, 265, 0, 0, 0, 0,
	0, 0, 0, 1193, 1203, 1237, 1241, 1187, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 1212, 0, 0,
	0, 1144, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 0,
	1147, 0, 1166, 1238, 0, 1130, 287, 1141, 388, 247,
	0, 438, 1245, 1255, 1188, 549, 1259, 1186, 1185, 1232,
	1145, 1251, 1179, 352, 1143, 319, 193, 217, 0, 1177,
	398, 446, 458, 1250, 1162, 1171, 245, 1169, 456, 412,
	527, 225, 274, 443, 418, 454, 426, 277, 1211, 1230,
	455, 359, 512, 436, 524, 550, 551, 253, 392, 536,
	496, 544, 568, 218, 250, 406, 489, 530, 478, 384,
	508, 509, 318, 477, 285, 196, 356, 556, 216, 464,
	358, 234, 223, 514, 533, 279, 441, 563, 205, 491,
	522, 231, 468, 0, 0, 570, 239, 488, 207, 519,
	487, 380, 315, 316, 206, 0, 442, 258, 283, 0,
	0, 248, 401, 516, 517, 246, 571, 220, 543, 212,
	1142, 542, 394, 511, 520, 381, 370, 211, 518, 379,
	369, 323, 342, 343, 270, 296, 433, 362, 434, 295,
	297, 390, 389, 391, 200, 531, 0, 201, 0, 483,
	532, 572, 226, 227, 229, 1157, 269, 273, 281, 284,
	292, 293, 302, 354, 405, 432, 428, 437, 1246, 506,
	525, 537, 548, 554, 555, 557, 558, 559, 560, 561,
	564, 562, 393, 300, 479, 322, 360, 1235, 1277, 411,
	457, 232, 529, 480, 1152, 1156, 1150, 1217, 1151, 1206,
	1207, 1153, 1268, 1269, 1270, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 0, 1239, 1146, 0, 1154, 1155, 1248,
	1257, 1258, 591, 371, 470, 526, 324, 336, 339, 329,
	348, 0, 349, 325, 326, 331, 333, 334, 335, 340,
	341, 345, 351, 241, 203, 377, 385, 505, 301, 208,
	209, 210, 498, 499, 500, 501, 540, 541, 545, 447,
	448, 449, 450, 282, 535, 298, 453, 452, 320, 321,
	366, 435, 1210, 192, 213, 355, 1273, 439, 278, 569,
	539, 534, 199, 215, 1149, 252, 1160, 1168, 0, 1174,
	1182, 1183, 1195, 1197, 1198, 1199, 1200, 1218, 1219, 1221,
	1229, 1231, 1234, 1236, 1243, 1254, 1276, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 395,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 528, 546, 552, 465, 290,
	291, 430, 431, 303, 304, 566, 567, 289, 523, 553,
	521, 565, 547, 424, 365, 1209, 1215, 368, 271, 294,
	309, 1224, 538, 486, 219, 451, 280, 243, 1242, 1244,
	204, 238, 222, 249, 264, 267, 313, 378, 386, 415,
	420, 286, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 382, 256, 419, 1205, 1233, 363, 503, 504, 305,
	383, 0, 0, 0, 0, 0, 502, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 678, 0, 0, 0, 260, 683, 0,
	0, 0, 353, 257, 0, 0, 416, 0, 198, 0,
	471, 244, 364, 361, 510, 272, 263, 259, 242, 306,
	372, 414, 492, 408, 690, 357, 0, 0, 481, 387,
	0, 0, 0, 0, 0, 686, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 240, 314, 197, 399,
	482, 276, 0, 91, 0, 0, 828, 812, 778, 779,
	816, 829, 830, 831, 832, 817, 0, 230, 818, 819,
	237, 820, 0, 777, 718, 720, 719, 737, 738, 739,
	740, 741, 742, 743, 716, 825, 833, 834, 0, 255,
	310, 262, 254, 507, 0, 0, 1956, 1957, 1958, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 660,
	675, 0, 689, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 673, 0, 0, 0, 0, 772, 0,
	674, 0, 0, 682, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	247, 0, 438, 771, 0, 0, 549, 0, 0, 769,
	0, 0, 0, 0, 352, 0, 319, 193, 217, 0,
	0, 398, 446, 458, 0, 0, 0, 822, 0, 456,
	412, 527, 225, 274, 443, 418, 454, 426, 277, 0,
	0, 455, 359, 512, 436, 524, 550, 551, 253, 392,
	536, 496, 544, 568, 218, 250, 406, 489, 530, 478,
	384, 508, 509, 318, 477, 285, 196, 356, 556, 216,
	464, 358, 234, 223, 514, 533, 279, 441, 563, 205,
	491, 522, 231, 468, 0, 0, 570, 239, 488, 207,
	519, 487, 380, 315, 316, 206, 0, 442, 258, 283,
	0, 0, 248, 401, 823, 824, 246, 571, 724, 543,
	212, 0, 542, 394, 511, 520, 381, 370, 211, 518,
	379, 369, 323, 732, 733, 270, 296, 433, 362, 434,
	295, 297, 390, 389, 391, 200, 531, 0, 201, 0,
	483, 532, 572, 226, 227, 229, 0, 269, 273, 281,
	284, 292, 293, 302, 354, 405, 432, 428, 437, 0,
	506, 525, 537, 548, 554, 555, 557, 558, 559, 560,
	561, 564, 562, 393, 300, 479, 322, 360, 0, 0,
	411, 457, 232, 529, 480, 782, 770, 695, 786, 697,
	783, 784, 692, 693, 696, 785, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 0, 773, 681, 680, 0, 688,
	0, 714, 715, 717, 721, 722, 723, 734, 735, 736,
	744, 746, 747, 745, 748, 749, 750, 753, 754, 755,
	756, 751, 752, 757, 698, 702, 699, 700, 701, 713,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	796, 797, 798, 799, 800, 801, 727, 731, 730, 728,
	729, 725, 726, 679, 192, 213, 355, 0, 439, 278,
	569, 539, 534, 199, 215, 787, 252, 788, 0, 0,
	792, 0, 0, 0, 794, 793, 0, 795, 761, 760,
	0, 0, 789, 790, 0, 791, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 251, 266, 268, 275, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 425, 427, 429, 440, 445, 459,
	460, 461, 462, 463, 466, 467, 472, 473, 474, 475,
	476, 484, 485, 490, 513, 515, 528, 546, 552, 465,
	802, 803, 804, 805, 806, 807, 808, 809, 289, 523,
	553, 521, 565, 547, 424, 365, 0, 0, 368, 271,
	294, 309, 0, 538, 486, 219, 451, 280, 243, 827,
	0, 204, 238, 222, 249, 264, 267, 313, 378, 386,
	415, 420, 286, 261, 236, 444, 233, 469, 493, 494,
	495, 497, 382, 256, 419, 383, 0, 363, 503, 504,
	305, 502, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 678, 0,
	0, 0, 260, 683, 0, 0, 0, 353, 257, 0,
	0, 416, 0, 198, 0, 471, 244, 364, 361, 510,
	272, 263, 259, 242, 306, 372, 414, 492, 408, 690,
	357, 0, 0, 481, 387, 0, 0, 0, 0, 0,
	686, 687, 0, 0, 0, 0, 0, 0, 2106, 0,
	312, 240, 314, 197, 399, 482, 276, 0, 91, 0,
	0, 828, 812, 778, 779, 816, 829, 830, 831, 832,
	817, 0, 230, 818, 819, 237, 820, 0, 777, 718,
	720, 719, 737, 738, 739, 740, 741, 742, 743, 716,
	825, 833, 834, 2107, 255, 310, 262, 254, 507, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 660, 675, 0, 689, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 673, 0,
	0, 0, 0, 772, 0, 674, 0, 0, 682, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 247, 0, 438, 771, 0,
	0, 549, 0, 0, 769, 0, 0, 0, 0, 352,
	0, 319, 193, 217, 0, 0, 398, 446, 458, 0,
	0, 0, 822, 0, 456, 412, 527, 225, 274, 443,
	418, 454, 426, 277, 0, 0, 455, 359, 512, 436,
	524, 550, 551, 253, 392, 536, 496, 544, 568, 218,
	250, 406, 489, 530, 478, 384, 508, 509, 318, 477,
	285, 196, 356, 556, 216, 464, 358, 234, 223, 514,
	533, 279, 441, 563, 205, 491, 522, 231, 468, 0,
	0, 570, 239, 488, 207, 519, 487, 380, 315, 316,
	206, 0, 442, 258, 283, 0, 0, 248, 401, 823,
	824, 246, 571, 724, 543, 212, 0, 542, 394, 511,
	520, 381, 370, 211, 518, 379, 369, 323, 732, 733,
	270, 296, 433, 362, 434, 295, 297, 390, 389, 391,
	200, 531, 0, 201, 0, 483, 532, 572, 226, 227,
	229, 0, 269, 273, 281, 284, 292, 293, 302, 354,
	405, 432, 428, 437, 0, 506, 525, 537, 548, 554,
	555, 557, 558, 559, 560, 561, 564, 562, 393, 300,
	479, 322, 360, 0, 0, 411, 457, 232, 529, 480,
	782, 770, 695, 786, 697, 783, 784, 692, 693, 696,
	785, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 0,
	773, 681, 680, 0, 688, 0, 714, 715, 717, 721,
	722, 723, 734, 735, 736, 744, 746, 747, 745, 748,
	749, 750, 753, 754, 755, 756, 751, 752, 757, 698,
	702, 699, 700, 701, 713, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 796, 797, 798, 799, 800,
	801, 727, 731, 730, 728, 729, 725, 726, 679, 192,
	213, 355, 0, 439, 278, 569, 539, 534, 199, 215,
	787, 252, 788, 0, 0, 792, 0, 0, 0, 794,
	793, 0, 795, 761, 760, 0, 0, 789, 790, 0,
	791, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 528, 546, 552, 465, 802, 803, 804, 805, 806,
	807, 808, 809, 289, 523, 553, 521, 565, 547, 424,
	365, 0, 0, 368, 271, 294, 309, 0, 538, 486,
	219, 451, 280, 243, 827, 0, 204, 238, 222, 249,
	264, 267, 313, 378, 386, 415, 420, 286, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 382, 256, 419,
	0, 383, 363, 503, 504, 305, 82, 502, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 678, 0, 0, 0, 260, 683,
	0, 0, 0, 353, 257, 0, 0, 416, 0, 198,
	0, 471, 244, 364, 361, 510, 272, 263, 259, 242,
	306, 372, 414, 492, 408, 690, 357, 0, 0, 481,
	387, 0, 0, 0, 0, 0, 686, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 240, 314, 197,
	399, 482, 276, 0, 91, 0, 0, 828, 812, 778,
	779, 816, 829, 830, 831, 832, 817, 0, 230, 818,
	819, 237, 820, 0, 777, 718, 720, 719, 737, 738,
	739, 740, 741, 742, 743, 716, 825, 833, 834, 0,
	255, 310, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	660, 675, 0, 689, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 673, 0, 0, 0, 0, 772,
	0, 674, 0, 0, 682, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 247, 0, 438, 771, 0, 0, 549, 0, 0,
	769, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 446, 458, 0, 0, 0, 822, 0,
	456, 412, 527, 225, 274, 443, 418, 454, 426, 277,
	0, 0, 455, 359, 512, 436, 524, 550, 551, 253,
	392, 536, 496, 544, 568, 218, 250, 406, 489, 530,
	478, 384, 508, 509, 318, 477, 285, 196, 356, 556,
	216, 464, 358, 234, 223, 514, 533, 279, 441, 563,
	205, 491, 522, 231, 468, 0, 0, 570, 239, 488,
	207, 519, 487, 380, 315, 316, 206, 0, 442, 258,
	283, 0, 0, 248, 401, 823, 824, 246, 571, 724,
	543, 212, 0, 542, 394, 511, 520, 381, 370, 211,
	518, 379, 369, 323, 732, 733, 270, 296, 433, 362,
	434, 295, 297, 390, 389, 391, 200, 531, 0, 201,
	0, 483, 532, 572, 226, 227, 229, 0, 269, 273,
	281, 284, 292, 293, 302, 354, 405, 432, 428, 437,
	0, 506, 525, 537, 548, 554, 555, 557, 558, 559,
	560, 561, 564, 562, 393, 300, 479, 322, 360, 0,
	0, 411, 457, 232, 529, 480, 782, 770, 695, 786,
	697, 783, 784, 692, 693, 696, 785, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 0, 773, 681, 680, 0,
	688, 0, 714, 715, 717, 721, 722, 723, 734, 735,
	736, 744, 746, 747, 745, 748, 749, 750, 753, 754,
	755, 756, 751, 752, 757, 698, 702, 699, 700, 701,
	713, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 796, 797, 798, 799, 800, 801, 727, 731, 730,
	728, 729, 725, 726, 679, 192, 213, 355, 90, 439,
	278, 569, 539, 534, 199, 215, 787, 252, 788, 0,
	0, 792, 0, 0, 0, 794, 793, 0, 795, 761,
	760, 0, 0, 789, 790, 0, 791, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 528, 546, 552,
	465, 802, 803, 804, 805, 806, 807, 808, 809, 289,
	523, 553, 521, 565, 547, 424, 365, 0, 0, 368,
	271, 294, 309, 0, 538, 486, 219, 451, 280, 243,
	827, 0, 204, 238, 222, 249, 264, 267, 313, 378,
	386, 415, 420, 286, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 382, 256, 419, 383, 0, 363, 503,
	504, 305, 502, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 678,
	0, 0, 0, 260, 683, 0, 0, 0, 353, 257,
	0, 0, 416, 0, 198, 0, 471, 244, 364, 361,
	510, 272, 263, 259, 242, 306, 372, 414, 492, 408,
	690, 357, 0, 0, 481, 387, 0, 0, 0, 0,
	0, 686, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 240, 314, 197, 399, 482, 276, 0, 91,
	0, 0, 828, 812, 778, 779, 816, 829, 830, 831,
	832, 817, 0, 230, 818, 819, 237, 820, 0, 777,
	718, 720, 719, 737, 738, 739, 740, 741, 742, 743,
	716, 825, 833, 834, 0, 255, 310, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 660, 675, 0, 689, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 673,
	0, 0, 0, 0, 772, 0, 674, 0, 0, 682,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 247, 0, 438, 771,
	0, 0, 549, 0, 0, 769, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 446, 458,
	0, 0, 0, 822, 0, 456, 412, 527, 225, 274,
	443, 418, 454, 426, 277, 3421, 0, 455, 359, 512,
	436, 524, 550, 551, 253, 392, 536, 496, 544, 568,
	218, 250, 406, 489, 530, 478, 384, 508, 509, 318,
	477, 285, 196, 356, 556, 216, 464, 358, 234, 223,
	514, 533, 279, 441, 563, 205, 491, 522, 231, 468,
	0, 0, 570, 239, 488, 207, 519, 487, 380, 315,
	316, 206, 0, 442, 258, 283, 0, 0, 248, 401,
	823, 824, 246, 571, 724, 543, 212, 0, 542, 394,
	511, 520, 381, 370, 211, 518, 379, 369, 323, 732,
	733, 270, 296, 433, 362, 434, 295, 297, 390, 389,
	391, 200, 531, 0, 201, 0, 483, 532, 572, 226,
	227, 229, 0, 269, 273, 281, 284, 292, 293, 302,
	354, 405, 432, 428, 437, 0, 506, 525, 537, 548,
	554, 555, 557, 558, 559, 560, 561, 564, 562, 393,
	300, 479, 322, 360, 0, 0, 411, 457, 232, 529,
	480, 782, 770, 695, 786, 697, 783, 784, 692, 693,
	696, 785, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	0, 773, 681, 680, 0, 688, 0, 714, 715, 717,
	721, 722, 723, 734, 735, 736, 744, 746, 747, 745,
	748, 749, 750, 753, 754, 755, 756, 751, 752, 757,
	698, 702, 699, 700, 701, 713, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 796, 797, 798, 799,
	800, 801, 727, 731, 730, 728, 729, 725, 726, 679,
	192, 213, 355, 0, 439, 278, 569, 539, 534, 199,
	215, 787, 252, 788, 0, 0, 792, 0, 0, 0,
	794, 793, 0, 795, 761, 760, 0, 0, 789, 790,
	0, 791, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 528, 546, 552, 465, 802, 803, 804, 805,
	806, 807, 808, 809, 289, 523, 553, 521, 565, 547,
	424, 365, 0, 0, 368, 271, 294, 309, 0, 538,
	486, 219, 451, 280, 243, 827, 0, 204, 238, 222,
	249, 264, 267, 313, 378, 386, 415, 420, 286, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 382, 256,
	419, 383, 0, 363, 503, 504, 305, 502, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 678, 0, 0, 0, 260, 683,
	0, 0, 0, 353, 257, 0, 0, 416, 0, 198,
	0, 471, 244, 364, 361, 510, 272, 263, 259, 242,
	306, 372, 414, 492, 408, 690, 357, 0, 0, 481,
	387, 0, 0, 0, 0, 0, 686, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 240, 314, 197,
	399, 482, 276, 0, 91, 0, 1519, 828, 812, 778,
	779, 816, 829, 830, 831, 832, 817, 0, 230, 818,
	819, 237, 820, 0, 777, 718, 720, 719, 737, 738,
	739, 740, 741, 742, 743, 716, 825, 833, 834, 0,
	255, 310, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	660, 675, 0, 689, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 673, 0, 0, 0, 0, 772,
	0, 674, 0, 0, 682, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 247, 0, 438, 771, 0, 0, 549, 0, 0,
	769, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 446, 458, 0, 0, 0, 822, 0,
	456, 412, 527, 225, 274, 443, 418, 454, 426, 277,
	0, 0, 455, 359, 512, 436, 524, 550, 551, 253,
	392, 536, 496, 544, 568, 218, 250, 406, 489, 530,
	478, 384, 508, 509, 318, 477, 285, 196, 356, 556,
	216, 464, 358, 234, 223, 514, 533, 279, 441, 563,
	205, 491, 522, 231, 468, 0, 0, 570, 239, 488,
	207, 519, 487, 380, 315, 316, 206, 0, 442, 258,
	283, 0, 0, 248, 401, 823, 824, 246, 571, 724,
	543, 212, 0, 542, 394, 511, 520, 381, 370, 211,
	518, 379, 369, 323, 732, 733, 270, 296, 433, 362,
	434, 295, 297, 390, 389, 391, 200, 531, 0, 201,
	0, 483, 532, 572, 226, 227, 229, 0, 269, 273,
	281, 284, 292, 293, 302, 354, 405, 432, 428, 437,
	0, 506, 525, 537, 548, 554, 555, 557, 558, 559,
	560, 561, 564, 562, 393, 300, 479, 322, 360, 0,
	0, 411, 457, 232, 529, 480, 782, 770, 695, 786,
	697, 783, 784, 692, 693, 696, 785, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 0, 773, 681, 680, 0,
	688, 0, 714, 715, 717, 721, 722, 723, 734, 735,
	736, 744, 746, 747, 745, 748, 749, 750, 753, 754,
	755, 756, 751, 752, 757, 698, 702, 699, 700, 701,
	713, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 796, 797, 798, 799, 800, 801, 727, 731, 730,
	728, 729, 725, 726, 679, 192, 213, 355, 0, 439,
	278, 569, 539, 534, 199, 215, 787, 252, 788, 0,
	0, 792, 0, 0, 0, 794, 793, 0, 795, 761,
	760, 0, 0, 789, 790, 0, 791, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 528, 546, 552,
	465, 802, 803, 804, 805, 806, 807, 808, 809, 289,
	523, 553, 521, 565, 547, 424, 365, 0, 0, 368,
	271, 294, 309, 0, 538, 486, 219, 451, 280, 243,
	827, 0, 204, 238, 222, 249, 264, 267, 313, 378,
	386, 415, 420, 286, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 382, 256, 419, 383, 0, 363, 503,
	504, 305, 502, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 678,
	0, 0, 0, 260, 683, 0, 0, 0, 353, 257,
	0, 0, 416, 0, 198, 0, 471, 244, 364, 361,
	510, 272, 263, 259, 242, 306, 372, 414, 492, 408,
	690, 357, 0, 0, 481, 387, 0, 0, 0, 0,
	0, 686, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 240, 314, 197, 399, 482, 276, 0, 91,
	0, 0, 828, 812, 778, 779, 816, 829, 830, 831,
	832, 817, 0, 230, 818, 819, 237, 820, 0, 777,
	718, 720, 719, 737, 738, 739, 740, 741, 742, 743,
	716, 825, 833, 834, 0, 255, 310, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 660, 675, 0, 689, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 673,
	917, 0, 0, 0, 772, 0, 674, 0, 0, 682,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 247, 0, 438, 771,
	0, 0, 549, 0, 0, 769, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 446, 458,
	0, 0, 0, 822, 0, 456, 412, 527, 225, 274,
	443, 418, 454, 426, 277, 0, 0, 455, 359, 512,
	436, 524, 550, 551, 253, 392, 536, 496, 544, 568,
	218, 250, 406, 489, 530, 478, 384, 508, 509, 318,
	477, 285, 196, 356, 556, 216, 464, 358, 234, 223,
	514, 533, 279, 441, 563, 205, 491, 522, 231, 468,
	0, 0, 570, 239, 488, 207, 519, 487, 380, 315,
	316, 206, 0, 442, 258, 283, 0, 0, 248, 401,
	823, 824, 246, 571, 724, 543, 212, 0, 542, 394,
	511, 520, 381, 370, 211, 518, 379, 369, 323, 732,
	733, 270, 296, 433, 362, 434, 295, 297, 390, 389,
	391, 200, 531, 0, 201, 0, 483, 532, 572, 226,
	227, 229, 0, 269, 273, 281, 284, 292, 293, 302,
	354, 405, 432, 428, 437, 0, 506, 525, 537, 548,
	554, 555, 557, 558, 559, 560, 561, 564, 562, 393,
	300, 479, 322, 360, 0, 0, 411, 457, 232, 529,
	480, 782, 770, 695, 786, 697, 783, 784, 692, 693,
	696, 785, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	0, 773, 681, 680, 0, 688, 0, 714, 715, 717,
	721, 722, 723, 734, 735, 736, 744, 746, 747, 745,
	748, 749, 750, 753, 754, 755, 756, 751, 752, 757,
	698, 702, 699, 700, 701, 713, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 796, 797, 798, 799,
	800, 801, 727, 731, 730, 728, 729, 725, 726, 679,
	192, 213, 355, 0, 439, 278, 569, 539, 534, 199,
	215, 787, 252, 788, 0, 0, 792, 0, 0, 0,
	794, 793, 0, 795, 761, 760, 0, 0, 789, 790,
	0, 791, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 528, 546, 552, 465, 802, 803, 804, 805,
	806, 807, 808, 809, 289, 523, 553, 521, 565, 547,
	424, 365, 0, 0, 368, 271, 294, 309, 0, 538,
	486, 219, 451, 280, 243, 827, 0, 204, 238, 222,
	249, 264, 267, 313, 378, 386, 415, 420, 286, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 382, 256,
	419, 383, 0, 363, 503, 504, 305, 502, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 678, 0, 0, 0, 260, 683,
	0, 0, 0, 353, 257, 0, 0, 416, 0, 198,
	0, 471, 244, 364, 361, 510, 272, 263, 259, 242,
	306, 372, 414, 492, 408, 690, 357, 0, 0, 481,
	387, 0, 0, 0, 0, 0, 686, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 240, 314, 197,
	399, 482, 276, 0, 91, 0, 0, 828, 812, 778,
	779, 816, 829, 830, 831, 832, 817, 0, 230, 818,
	819, 237, 820, 0, 777, 718, 720, 719, 737, 738,
	739, 740, 741, 742, 743, 716, 825, 833, 834, 0,
	255, 310, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	660, 675, 0, 689, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 673, 0, 0, 0, 0, 772,
	0, 674, 0, 0, 682, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 247, 0, 438, 771, 0, 0, 549, 0, 0,
	769, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 446, 458, 0, 0, 0, 822, 0,
	456, 412, 527, 225, 274, 443, 418, 454, 426, 277,
	0, 0, 455, 359, 512, 436, 524, 550, 551, 253,
	392, 536, 496, 544, 568, 218, 250, 406, 489, 530,
	478, 384, 508, 509, 318, 477, 285, 196, 356, 556,
	216, 464, 358, 234, 223, 514, 533, 279, 441, 563,
	205, 491, 522, 231, 468, 0, 0, 570, 239, 488,
	207, 519, 487, 380, 315, 316, 206, 0, 442, 258,
	283, 0, 0, 248, 401, 823, 824, 246, 571, 724,
	543, 212, 0, 542, 394, 511, 520, 381, 370, 211,
	518, 379, 369, 323, 732, 733, 270, 296, 433, 362,
	434, 295, 297, 390, 389, 391, 200, 531, 0, 201,
	0, 483, 532, 572, 226, 227, 229, 0, 269, 273,
	281, 284, 292, 293, 302, 354, 405, 432, 428, 437,
	0, 506, 525, 537, 548, 554, 555, 557, 558, 559,
	560, 561, 564, 562, 393, 300, 479, 322, 360, 0,
	0, 411, 457, 232, 529, 480, 782, 770, 695, 786,
	697, 783, 784, 692, 693, 696, 785, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 0, 773, 681, 680, 0,
	688, 0, 714, 715, 717, 721, 722, 723, 734, 735,
	736, 744, 746, 747, 745, 748, 749, 750, 753, 754,
	755, 756, 751, 752, 757, 698, 702, 699, 700, 701,
	713, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 796, 797, 798, 799, 800, 801, 727, 731, 730,
	728, 729, 725, 726, 679, 192, 213, 355, 0, 439,
	278, 569, 539, 534, 199, 215, 787, 252, 788, 0,
	0, 792, 0, 0, 0, 794, 793, 0, 795, 761,
	760, 0, 0, 789, 790, 0, 791, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 528, 546, 552,
	465, 802, 803, 804, 805, 806, 807, 808, 809, 289,
	523, 553, 521, 565, 547, 424, 365, 0, 0, 368,
	271, 294, 309, 0, 538, 486, 219, 451, 280, 243,
	827, 0, 204, 238, 222, 249, 264, 267, 313, 378,
	386, 415, 420, 286, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 382, 256, 419, 383, 0, 363, 503,
	504, 305, 502, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 678,
	0, 0, 0, 260, 683, 0, 0, 0, 353, 257,
	0, 0, 416, 0, 198, 0, 471, 244, 364, 361,
	510, 272, 263, 259, 242, 306, 372, 414, 492, 408,
	690, 357, 0, 0, 481, 387, 0, 0, 0, 0,
	0, 686, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 240, 314, 197, 399, 482, 276, 0, 91,
	0, 0, 828, 812, 778, 779, 816, 829, 830, 831,
	832, 817, 0, 230, 818, 819, 237, 820, 0, 777,
	718, 720, 719, 737, 738, 739, 740, 741, 742, 743,
	716, 825, 833, 834, 0, 255, 310, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 675, 0, 689, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 673,
	0, 0, 0, 0, 772, 0, 674, 0, 0, 682,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 247, 0, 438, 771,
	0, 0, 549, 0, 0, 769, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 446, 458,
	0, 0, 0, 822, 0, 456, 412, 527, 225, 274,
	443, 418, 454, 426, 277, 0, 0, 455, 359, 512,
	436, 524, 550, 551, 253, 392, 536, 496, 544, 568,
	218, 250, 406, 489, 530, 478, 384, 508, 509, 318,
	477, 285, 196, 356, 556, 216, 464, 358, 234, 223,
	514, 533, 279, 441, 563, 205, 491, 522, 231, 468,
	0, 0, 570, 239, 488, 207, 519, 487, 380, 315,
	316, 206, 0, 442, 258, 283, 0, 0, 248, 401,
	823, 824, 246, 571, 724, 543, 212, 0, 542, 394,
	511, 520, 381, 370, 211, 518, 379, 369, 323, 732,
	733, 270, 296, 433, 362, 434, 295, 297, 390, 389,
	391, 200, 531, 0, 201, 0, 483, 532, 572, 226,
	227, 229, 0, 269, 273, 281, 284, 292, 293, 302,
	354, 405, 432, 428, 437, 0, 506, 525, 537, 548,
	554, 555, 557, 558, 559, 560, 561, 564, 562, 393,
	300, 479, 322, 360, 0, 0, 411, 457, 232, 529,
	480, 782, 770, 695, 786, 697, 783, 784, 692, 693,
	696, 785, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	0, 773, 681, 680, 0, 688, 0, 714, 715, 717,
	721, 722, 723, 734, 735, 736, 744, 746, 747, 745,
	748, 749, 750, 753, 754, 755, 756, 751, 752, 757,
	698, 702, 699, 700, 701, 713, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 796, 797, 798, 799,
	800, 801, 727, 731, 730, 728, 729, 725, 726, 679,
	192, 213, 355, 0, 439, 278, 569, 539, 534, 199,
	215, 787, 252, 788, 0, 0, 792, 0, 0, 0,
	794, 793, 0, 795, 761, 760, 0, 0, 789, 790,
	0, 791, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 528, 546, 552, 465, 802, 803, 804, 805,
	806, 807, 808, 809, 289, 523, 553, 521, 565, 547,
	424, 365, 0, 0, 368, 271, 294, 309, 0, 538,
	486, 219, 451, 280, 243, 827, 0, 204, 238, 222,
	249, 264, 267, 313, 378, 386, 415, 420, 286, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 382, 256,
	419, 383, 0, 363, 503, 504, 305, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 353, 257, 0, 0, 416, 0, 198,
	0, 471, 244, 364, 361, 510, 272, 263, 259, 242,
	306, 372, 414, 492, 408, 0, 357, 0, 0, 481,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 240, 314, 197,
	399, 482, 276, 0, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	255, 310, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1343, 1345,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 247, 0, 438, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 446, 458, 0, 0, 0, 245, 0,
	456, 412, 527, 225, 274, 443, 418, 454, 426, 277,
	0, 0, 455, 359, 512, 436, 524, 550, 551, 253,
	392, 536, 496, 544, 568, 218, 250, 406, 489, 530,
	478, 384, 508, 509, 318, 477, 285, 196, 356, 556,
	216, 464, 358, 234, 223, 514, 533, 279, 441, 563,
	205, 491, 522, 231, 468, 0, 0, 570, 239, 488,
	207, 519, 487, 380, 315, 316, 206, 0, 442, 258,
	283, 0, 0, 248, 401, 516, 517, 246, 571, 220,
	543, 212, 0, 542, 394, 511, 520, 381, 370, 211,
	518, 379, 369, 323, 342, 343, 270, 296, 433, 362,
	434, 295, 297, 390, 389, 391, 200, 531, 0, 201,
	0, 483, 532, 572, 226, 227, 229, 0, 269, 273,
	281, 284, 292, 293, 302, 354, 405, 432, 428, 437,
	0, 506, 525, 537, 548, 554, 555, 557, 558, 559,
	560, 561, 564, 562, 393, 300, 479, 322, 360, 0,
	0, 411, 457, 232, 529, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 371, 470, 526, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 241, 203, 377, 385, 505,
	301, 208, 209, 210, 498, 499, 500, 501, 540, 541,
	545, 447, 448, 449, 450, 282, 535, 298, 453, 452,
	320, 321, 366, 435, 0, 192, 213, 355, 0, 439,
	278, 569, 539, 534, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 528, 546, 552,
	465, 290, 291, 430, 431, 303, 304, 566, 567, 289,
	523, 553, 521, 565, 547, 424, 365, 0, 0, 368,
	271, 294, 309, 0, 538, 486, 219, 451, 280, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 313, 378,
	386, 415, 420, 286, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 382, 256, 419, 383, 0, 363, 503,
	504, 305, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 353, 257,
	0, 0, 416, 0, 198, 0, 471, 244, 364, 361,
	510, 272, 263, 259, 242, 306, 372, 414, 492, 408,
	0, 357, 0, 0, 481, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 240, 314, 197, 399, 482, 276, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	0, 0, 0, 0, 0, 255, 310, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 247, 0, 438, 0,
	0, 987, 549, 0, 0, 0, 0, 0, 984, 985,
	352, 945, 319, 193, 217, 978, 982, 398, 446, 458,
	0, 0, 0, 245, 0, 456, 412, 527, 225, 274,
	443, 418, 454, 426, 277, 0, 0, 455, 359, 512,
	436, 524, 550, 551, 253, 392, 536, 496, 544, 568,
	218, 250, 406, 489, 530, 478, 384, 508, 509, 318,
	477, 285, 196, 356, 556, 216, 464, 358, 234, 223,
	514, 533, 279, 441, 563, 205, 491, 522, 231, 468,
	0, 0, 570, 239, 488, 207, 519, 487, 380, 315,
	316, 206, 0, 442, 258, 283, 0, 0, 248, 401,
	516, 517, 246, 571, 220, 543, 212, 0, 542, 394,
	511, 520, 381, 370, 211, 518, 379, 369, 323, 342,
	343, 270, 296, 433, 362, 434, 295, 297, 390, 389,
	391, 200, 531, 0, 201, 0, 483, 532, 572, 226,
	227, 229, 0, 269, 273, 281, 284, 292, 293, 302,
	354, 405, 432, 428, 437, 0, 506, 525, 537, 548,
	554, 555, 557, 558, 559, 560, 561, 564, 562, 393,
	300, 479, 322, 360, 0, 0, 411, 457, 232, 529,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	371, 470, 526, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	241, 203, 377, 385, 505, 301, 208, 209, 210, 498,
	499, 500, 501, 540, 541, 545, 447, 448, 449, 450,
	282, 535, 298, 453, 452, 320, 321, 366, 435, 0,
	192, 213, 355, 0, 439, 278, 569, 539, 534, 199,
	215, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 528, 546, 552, 465, 290, 291, 430, 431,
	303, 304, 566, 567, 289, 523, 553, 521, 565, 547,
	424, 365, 0, 0, 368, 271, 294, 309, 0, 538,
	486, 219, 451, 280, 243, 0, 0, 204, 238, 222,
	249, 264, 267, 313, 378, 386, 415, 420, 286, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 382, 256,
	419, 383, 0, 363, 503, 504, 305, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 353, 257, 0, 0, 416, 0, 198,
	0, 471, 244, 364, 361, 510, 272, 263, 259, 242,
	306, 372, 414, 492, 408, 0, 357, 0, 0, 481,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 240, 314, 197,
	399, 482, 276, 0, 0, 0, 0, 1482, 812, 0,
	0, 1479, 0, 0, 0, 0, 1477, 0, 230, 1478,
	1476, 237, 1481, 0, 777, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	255, 310, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 247, 0, 438, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 446, 458, 0, 0, 0, 245, 0,
	456, 412, 527, 225, 274, 443, 418, 454, 426, 277,
	0, 0, 455, 359, 512, 436, 524, 550, 551, 253,
	392, 536, 496, 544, 568, 218, 250, 406, 489, 530,
	478, 384, 508, 509, 318, 477, 285, 196, 356, 556,
	216, 464, 358, 234, 223, 514, 533, 279, 441, 563,
	205, 491, 522, 231, 468, 0, 0, 570, 239, 488,
	207, 519, 487, 380, 315, 316, 206, 0, 442, 258,
	283, 0, 0, 248, 401, 516, 517, 246, 571, 220,
	543, 212, 0, 542, 394, 511, 520, 381, 370, 211,
	518, 379, 369, 323, 342, 343, 270, 296, 433, 362,
	434, 295, 297, 390, 389, 391, 200, 531, 0, 201,
	0, 483, 532, 572, 226, 227, 229, 0, 269, 273,
	281, 284, 292, 293, 302, 354, 405, 432, 428, 437,
	0, 506, 525, 537, 548, 554, 555, 557, 558, 559,
	560, 561, 564, 562, 393, 300, 479, 322, 360, 0,
	0, 411, 457, 232, 529, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 371, 470, 526, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 241, 203, 377, 385, 505,
	301, 208, 209, 210, 498, 499, 500, 501, 540, 541,
	545, 447, 448, 449, 450, 282, 535, 298, 453, 452,
	320, 321, 366, 435, 0, 192, 213, 355, 0, 439,
	278, 569, 539, 534, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 528, 546, 552,
	465, 290, 291, 430, 431, 303, 304, 566, 567, 289,
	523, 553, 521, 565, 547, 424, 365, 0, 0, 368,
	271, 294, 309, 0, 538, 486, 219, 451, 280, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 313, 378,
	386, 415, 420, 286, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 382, 256, 419, 0, 383, 363, 503,
	504, 305, 82, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 353,
	257, 0, 0, 416, 0, 198, 0, 471, 244, 364,
	361, 510, 272, 263, 259, 242, 306, 372, 414, 492,
	408, 0, 357, 0, 0, 481, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 240, 314, 197, 399, 482, 276, 0,
	91, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 255, 310, 262, 254,
	507, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 247, 0, 438,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 446,
	458, 0, 0, 0, 245, 0, 456, 412, 527, 225,
	274, 443, 418, 454, 426, 277, 0, 0, 455, 359,
	512, 436, 524, 550, 551, 253, 392, 536, 496, 544,
	568, 218, 250, 406, 489, 530, 478, 384, 508, 509,
	318, 477, 285, 196, 356, 556, 216, 464, 358, 234,
	223, 514, 533, 279, 441, 563, 205, 491, 522, 231,
	468, 0, 0, 570, 239, 488, 207, 519, 487, 380,
	315, 316, 206, 0, 442, 258, 283, 0, 0, 248,
	401, 516, 517, 246, 571, 220, 543, 212, 0, 542,
	394, 511, 520, 381, 370, 211, 518, 379, 369, 323,
	342, 343, 270, 296, 433, 362, 434, 295, 297, 390,
	389, 391, 200, 531, 0, 201, 0, 483, 532, 572,
	226, 227, 229, 0, 269, 273, 281, 284, 292, 293,
	302, 354, 405, 432, 428, 437, 0, 506, 525, 537,
	548, 554, 555, 557, 558, 559, 560, 561, 564, 562,
	393, 300, 479, 322, 360, 0, 0, 411, 457, 232,
	529, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	591, 371, 470, 526, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 241, 203, 377, 385, 505, 301, 208, 209, 210,
	498, 499, 500, 501, 540, 541, 545, 447, 448, 449,
	450, 282, 535, 298, 453, 452, 320, 321, 366, 435,
	0, 192, 213, 355, 90, 439, 278, 569, 539, 534,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 528, 546, 552, 465, 290, 291, 430,
	431, 303, 304, 566, 567, 289, 523, 553, 521, 565,
	547, 424, 365, 0, 0, 368, 271, 294, 309, 0,
	538, 486, 219, 451, 280, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 313, 378, 386, 415, 420, 286,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 382,
	256, 419, 1538, 0, 363, 503, 504, 305, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 1540, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 353, 257, 0, 0, 416, 0,
	198, 0, 471, 244, 364, 361, 510, 272, 263, 259,
	242, 306, 372, 414, 492, 408, 0, 357, 0, 0,
	481, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 240, 314,
	197, 399, 482, 276, 0, 0, 0, 0, 1542, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 0, 0, 0, 0,
	0, 255, 310, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 1316, 0, 1317,
	1318, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 247, 0, 438, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 446, 458, 0, 0, 0, 245,
	0, 456, 412, 527, 225, 274, 443, 418, 454, 426,
	277, 0, 0, 455, 359, 512, 436, 524, 550, 551,
	253, 392, 536, 496, 544, 568, 218, 250, 406, 489,
	530, 478, 384, 508, 509, 318, 477, 285, 196, 356,
	556, 216, 464, 358, 234, 223, 514, 533, 279, 441,
	563, 205, 491, 522, 231, 468, 0, 0, 570, 239,
	488, 207, 519, 487, 380, 315, 316, 206, 0, 442,
	258, 283, 0, 0, 248, 401, 516, 517, 246, 571,
	220, 543, 212, 0, 542, 394, 511, 520, 381, 370,
	211, 518, 379, 369, 323, 342, 343, 270, 296, 433,
	362, 434, 295, 297, 390, 389, 391, 200, 531, 0,
	201, 0, 483, 532, 572, 226, 227, 229, 0, 269,
	273, 281, 284, 292, 293, 302, 354, 405, 432, 428,
	437, 0, 506, 525, 537, 548, 554, 555, 557, 558,
	559, 560, 561, 564, 562, 393, 300, 479, 322, 360,
	0, 0, 411, 457, 232, 529, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 371, 470, 526, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 241, 203, 377, 385,
	505, 301, 208, 209, 210, 498, 499, 500, 501, 540,
	541, 545, 447, 448, 449, 450, 282, 535, 298, 453,
	452, 320, 321, 366, 435, 0, 192, 213, 355, 0,
	439, 278, 569, 539, 534, 199, 215, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 425, 427, 429, 440,
	445, 459, 460, 461, 462, 463, 466, 467, 472, 473,
	474, 475, 476, 484, 485, 490, 513, 515, 528, 546,
	552, 465, 290, 291, 430, 431, 303, 304, 566, 567,
	289, 523, 553, 521, 565, 547, 424, 365, 0, 0,
	368, 271, 294, 309, 0, 538, 486, 219, 451, 280,
	243, 0, 0, 204, 238, 222, 249, 264, 267, 313,
	378, 386, 415, 420, 286, 261, 236, 444, 233, 469,
	493, 494, 495, 497, 382, 256, 419, 0, 383, 363,
	503, 504, 305, 82, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 91, 0, 1519, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 90, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 91, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	2043, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1721, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 2041, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 945, 319,
	193, 217, 943, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	2043, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1721, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 1519, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 3331, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1876, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 2450,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	2435, 0, 0, 0, 0, 230, 0, 0, 237, 2436,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 1561, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 1560,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 3456, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1721, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 3331, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 91, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1542, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	1831, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 1822, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 1688, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 1686, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 1684, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 1682, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 1680, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 1676, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 1674, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 1672, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 1647, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 1546, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 91, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 1294, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 594, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 3464, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 383, 0, 363, 503, 504, 305, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 353, 257, 0, 0, 416,
	0, 198, 0, 471, 244, 364, 361, 510, 272, 263,
	259, 242, 306, 372, 414, 492, 408, 0, 357, 0,
	0, 481, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 240,
	314, 197, 399, 482, 276, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 255, 310, 262, 254, 507, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 247, 0, 438, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 446, 458, 0, 0, 0,
	245, 0, 456, 412, 527, 225, 274, 443, 418, 454,
	426, 277, 0, 0, 455, 359, 512, 436, 524, 550,
	551, 253, 392, 536, 496, 544, 568, 218, 250, 406,
	489, 530, 478, 384, 508, 509, 318, 477, 285, 196,
	356, 556, 216, 464, 358, 234, 223, 514, 533, 279,
	441, 563, 205, 491, 522, 231, 468, 0, 0, 570,
	239, 488, 207, 519, 487, 380, 315, 316, 206, 0,
	442, 258, 283, 0, 0, 248, 401, 516, 517, 246,
	571, 220, 543, 212, 0, 542, 394, 511, 520, 381,
	370, 211, 518, 379, 369, 323, 342, 343, 270, 296,
	433, 362, 434, 295, 297, 390, 389, 391, 200, 531,
	0, 201, 0, 483, 532, 572, 226, 227, 229, 0,
	269, 273, 281, 284, 292, 293, 302, 354, 405, 432,
	428, 437, 0, 506, 525, 537, 548, 554, 555, 557,
	558, 559, 560, 561, 564, 562, 393, 300, 479, 322,
	360, 0, 0, 411, 457, 232, 529, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 371, 470, 526,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 241, 203, 377,
	385, 505, 301, 208, 209, 210, 498, 499, 500, 501,
	540, 541, 545, 447, 448, 449, 450, 282, 535, 298,
	453, 452, 320, 321, 366, 435, 0, 192, 213, 355,
	0, 439, 278, 569, 539, 534, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 528,
	546, 552, 465, 290, 291, 430, 431, 303, 304, 566,
	567, 289, 523, 553, 521, 565, 547, 424, 365, 0,
	0, 368, 271, 294, 309, 0, 538, 486, 219, 451,
	280, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	313, 378, 386, 415, 420, 286, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 382, 256, 419, 383, 0,
	363, 503, 504, 305, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	353, 257, 0, 0, 416, 0, 198, 0, 471, 244,
	364, 361, 510, 272, 263, 259, 242, 306, 372, 414,
	492, 408, 0, 357, 0, 0, 481, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 240, 314, 197, 399, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 255, 310, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 247, 0,
	438, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	446, 458, 0, 0, 0, 245, 0, 456, 412, 527,
	225, 274, 443, 418, 454, 426, 277, 0, 0, 455,
	359, 512, 436, 524, 550, 551, 253, 392, 536, 496,
	544, 568, 218, 250, 406, 489, 530, 478, 384, 508,
	509, 318, 477, 285, 196, 356, 556, 216, 464, 358,
	234, 223, 514, 533, 279, 441, 563, 205, 491, 522,
	231, 468, 0, 0, 570, 239, 488, 207, 519, 487,
	380, 315, 316, 206, 0, 442, 258, 283, 0, 0,
	248, 401, 516, 517, 246, 571, 220, 543, 212, 0,
	542, 394, 511, 520, 381, 370, 211, 518, 379, 369,
	323, 342, 343, 270, 296, 433, 362, 434, 295, 297,
	390, 389, 391, 200, 531, 0, 201, 0, 483, 532,
	572, 226, 227, 229, 0, 269, 273, 281, 284, 292,
	293, 302, 354, 405, 432, 428, 437, 0, 506, 525,
	537, 548, 554, 555, 557, 558, 559, 560, 561, 564,
	562, 393, 300, 479, 322, 360, 0, 0, 411, 457,
	232, 529, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 371, 470, 526, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 241, 203, 377, 385, 505, 301, 208, 209,
	210, 498, 499, 500, 501, 540, 541, 545, 447, 448,
	449, 450, 282, 535, 298, 453, 452, 320, 321, 366,
	435, 0, 192, 213, 355, 0, 439, 278, 569, 539,
	534, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 528, 546, 552, 465, 290, 291,
	430, 431, 303, 304, 566, 567, 289, 523, 553, 521,
	565, 547, 424, 365, 0, 0, 368, 271, 294, 309,
	0, 538, 486, 219, 451, 280, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 313, 378, 386, 415, 420,
	286, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	382, 256, 419, 0, 0, 363, 503, 504, 305,
}

var yyPact = [...]int{
	-1000, -1000, 4962, -1000, -463, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2212,
	2367, -1000, -1000, -1000, -1000, 2434, -1000, 829, 1919, -1000,
	2253, 319, -1000, 46994, 584, -1000, 44374, 583, 3459, 29964,
	-1000, 238, -1000, 220, 45684, 226, -1000, -1000, -1000, -1000,
	-357, 18827, 2164, 99, 96, 46994, -1000, -1000, -1000, -1000,
	2420, 1917, -1000, 399, -1000, -1000, -1000, -1000, -1000, -1000,
	43719, -1000, 921, -1000, -1000, 2245, 2264, 2446, 721, 2208,
	-1000, 2338, 1917, -1000, 18827, 2409, 2316, 18172, 18172, 503,
	-1000, -1000, 256, -1000, -1000, 25379, 46994, 32584, 361, -1000,
	2253, -1000, -1000, -1000, 87, -1000, 370, 1836, -1000, 1825,
	-1000, 691, 502, 431, 514, 510, 429, 421, 420, 418,
	414, 413, 406, 405, 442, -1000, 742, 742, -123, -130,
	685, 519, 487, 487, 735, 558, 2197, 2193, -1000, -1000,
	742, 742, 742, 398, 742, 742, 742, 742, 331, 330,
	742, 742, 742, 742, 742, 742, 742, 742, 742, 742,
	742, 742, 742, 742, 742, 742, 742, 380, 2253, 309,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46994, 218, 46994, -1000, 644, 46994, 885, 885,
	132, 885, 885, 885, 885, 232, 755, 93, -1000, 227,
	290, 223, 295, 898, 195, -1000, -1000, 287, 898, 1558,
	-1000, 727, 294, 211, -1000, 885, 885, -1000, 12252, 141,
	12252, 12252, -1000, 2230, -1000, -1000, -1000, -1000, -1000, 1149,
	-1000, -1000, -1000, -1000, -10, 552, -1000, -1000, -1000, -1000,
	45684, 43064, 255, -1000, -1000, 74, -1000, -1000, 1598, 1174,
	18827, 1602, -1000, 1226, 702, -1000, -1000, -1000, -1000, -1000,
	618, -1000, 19482, 19482, 19482, 19482, -1000, -1000, 1842, 42409,
	1842, 1842, 19482, 1842, -1000, 19482, 1842, 1842, 1842, 18827,
	1842, 1842, 1842, 1842, -1000, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, -1000, -1000, -1000, -1000, 1842, 640, 1842,
	1842, 1842, 1842, 1842, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1842, 1842, 1842, 1842, 1842, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21447, 1349, 1347, 1346, -1000, 16207, 1842, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46994, -1000,
	1842, 257, 45684, 45684, 391, 2338, 1917, -1000, 2420, 2386,
	399, -1000, 3040, 2041, 1398, 1203, 1917, 1809, 46994, -1000,
	1853, -1000, -1000, -1000, -1000, 2109, 1241, 1524, -1000, -1000,
	-1000, -1000, 2250, 18827, -1000, -1000, 2430, -1000, 22758, 634,
	2429, 41754, -1000, 503, 503, 1823, 459, 27, -1000, -1000,
	-1000, -1000, 778, 29309, -1000, -1000, -1000, -1000, 1706, 46994,
	-1000, -1000, 5563, 1142, -1000, 1916, -1000, 1700, -1000, 1879,
	18827, 1931, 582, 1142, 575, 569, 566, -1000, -21, -1000,
	-1000, -1000, -1000, -1000, -1000, 742, 742, 742, -1000, 441,
	2402, 319, 3863, -1000, -1000, -1000, 41099, 1914, 1142, -1000,
	1909, -1000, 854, 587, 676, 676, 1142, -1000, -1000, 46339,
	1142, 852, 844, 1142, 1142, 45684, 45684, -1000, 40444, -1000,
	39789, 39134, 1136, 45684, 38479, 37824, 37169, 36514, 35859, -1000,
	2019, -1000, 1936, -1000, -1000, -1000, 46339, 1142, 1142, 46339,
	45684, 46339, 46994, 1142, -1000, -1000, 404, -1000, -1000, 1135,
	1127, 1114, 742, 742, 1110, 1518, 1494, 1490, 742, 742,
	1099, 1486, 31274, 1484, 334, 1093, 1088, 1087, 1141, 1475,
	188, 1473, 1019, 992, 1079, 45684, 1908, 46994, -1000, 280,
	770, 571, 777, 2253, 2163, 1822, 549, 581, 1142, 501,
	501, 45684, -1000, 12913, -1000, -1000, 1451, 18827, -1000, 899,
	898, 898, -1000, -1000, -1000, -1000, -1000, -1000, 885, 46994,
	899, -1000, -1000, -1000, 898, 885, 46994, 885, 885, 885,
	885, 898, 898, 898, 885, 46994, 46994, 46994, 46994, 46994,
	46994, 46994, 46994, 46994, 12252, 727, 885, -369, -1000, 1447,
	-1000, -1000, 2048, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12252,
	12252, -1000, -1000, -1000, -1000, -1000, 1820, -1000, 221, 56,
	225, -1000, 35204, 407, 776, -1000, 407, -1000, -1000, -1000,
	1814, 34549, -1000, -375, -376, -380, -385, -1000, -1000, -1000,
	-387, -389, -1000, -1000, -1000, 18827, 18827, 18827, 18827, -157,
	-1000, 922, 19482, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	154, 853, 19482, 19482, 19482, 19482, 19482, 19482, 19482, 19482,
	19482, 19482, 19482, 19482, 19482, 19482, 19482, -1000, -1000, 27344,
	7130, 7130, 702, 702, 702, 702, -1000, -87, 1811, 46339,
	-1000, -1000, -1000, 633, 18827, 18827, 702, -1000, 1142, 16207,
	20137, 18172, 18172, 18827, 784, 1174, 46339, 18827, -1000, 1203,
	-1000, -1000, -1000, 1071, -1000, 860, 2239, 2239, 2239, 2239,
	18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827,
	2239, 45684, 45684, 864, 18827, 18827, 18827, 18827, 18827, 18827,
	14896, 18827, 18827, 19482, 18827, 18827, 18827, 1203, 18827, 18827,
	18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827,
	18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827,
	18827, 18827, 18827, 18827, 18827, 1203, 18827, 1259, 18827, 18827,
	18172, 14235, 18172, 18172, 18172, 18172, 18172, -1000, -1000, -1000,
	-1000, -1000, 18827, 18827, 18827, 18827, 18827, 18827, 18827, 18827,
	1203, 18827, 18827, 18827, 18827, 18827, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1449, 1244, 1246, 18827,
	-1000, 1810, -1000, -168, 24724, 18827, 1443, 2428, 1964, 45684,
	-1000, -1000, -1000, 2338, -1000, 2338, 1449, 2133, 2087, 18172,
	-1000, -1000, 2133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1611, -1000, 46994, 1809, 2311, 45684, 2101, 1435, 437,
	-1000, 18827, 18827, 1808, -1000, 1220, 46994, -1000, -157, -1000,
	33894, -1000, -1000, 11591, 46994, 385, 46994, -1000, 24069, 33239,
	388, -1000, 27, 1783, -1000, 65, 53, 15551, 692, -1000,
	-1000, -1000, 685, 20792, 1582, 692, 153, -1000, -1000, -1000,
	1879, -1000, 1879, 1879, 1879, 1879, 437, 437, 437, 437,
	-1000, -1000, -1000, -1000, -1000, 1906, 1903, -1000, 1879, 1879,
	1879, 1879, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1902,
	1902, 1902, 1901, 1901, 1882, 1882, 475, -1000, 18827, 306,
	32584, 2279, 1078, 1103, 280, 522, 1959, 1142, 1142, 1142,
	522, -1000, 1193, 1190, 1163, -1000, -452, 1803, -1000, -1000,
	2401, -1000, -1000, 981, 877, 875, 855, 45684, 262, 368,
	-1000, 464, -1000, 32584, 1142, 838, 676, 1142, -1000, 1142,
	-1000, -1000, -1000, -1000, -1000, 1142, -1000, -1000, 1799, -1000,
	1719, 929, 874, 918, 863, 1799, -1000, -1000, -98, 1799,
	-1000, 1799, -1000, 1799, -1000, 1799, -1000, 1799, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 793, 228, -198,
	45684, 262, 542, -1000, 521, 27344, -1000, -1000, -1000, 27344,
	27344, -1000, -1000, -1000, -1000, 1433, 1420, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -440, 46994, -1000, 269,
	772, 346, 378, 364, 46994, 343, 2328, 2325, 2324, 2323,
	2318, 296, 329, 46994, 46994, 501, 2061, 46994, 2284, 46994,
	-1000, -1000, -1000, -1000, -1000, 1174, 46994, -1000, -1000, 885,
	885, -1000, -1000, 46994, 885, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 885, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46994,
	-1000, -1000, -1000, -1000, -10, 219, -1000, -1000, 45684, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -79, -1000,
	112, 60, 394, -1000, -1000, -1000, -1000, -1000, 2333, -1000,
	1174, 836, 808, -1000, 1842, -1000, -1000, 1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 154, 19482, 19482, 19482, 1924,
	536, 1941, 1335, 1348, 1557, 1557, 1031, 1031, 708, 708,
	708, 708, 708, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1402, -1000, 1842, 46339, 1682, 14235, 1740, 1998, 1203,
	3079, -1000, 1654, -1000, 1654, 1070, 800, -1000, 18827, 1203,
	3015, -1000, -1000, 1203, 1203, 1203, 18827, -1000, -1000, 18827,
	18827, 18827, 18827, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 18827, 1795, 1792, 2426, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1046, 1103,
	1103, 1103, 1103, 1103, 18827, 1888, -1000, -1000, -1000, 1294,
	2952, 982, 2919, 1103, 1103, -1000, 1103, 2889, 2882, 1203,
	1598, 1203, 1788, -1000, 2873, 1103, 2852, 2840, 2832, 2243,
	2827, 2821, 2808, 1103, 1103, 1103, 2237, 2792, 2788, 2766,
	2750, 2746, 2732, 2726, 2721, 2716, 1103, -159, 1103, 1203,
	-1000, -1000, -1000, -1000, -1000, 2691, 2161, 1203, 1785, 1842,
	630, -1000, -1000, 1654, 1203, 1203, 1654, 1654, 2685, 2664,
	2647, 2635, 2630, 2419, 1103, 1103, -1000, 1103, 2405, 2347,
	2155, 2142, 1203, -1000, 1246, 46994, -1000, -333, -1000, 28,
	684, 1842, -1000, 31274, 1203, -1000, 1641, -1000, 985, -1000,
	-1000, -1000, -1000, -1000, 28654, 1720, 2133, -1000, -1000, 1842,
	1651, -1000, -1000, 437, 126, 27999, 690, 690, 160, 1174,
	1174, 18827, -1000, -1000, -1000, -1000, -1000, -1000, 629, 2414,
	401, 1842, -1000, 1777, 2843, -1000, -1000, -1000, 2308, 22103,
	-1000, -1000, 1842, 1842, 46994, 1723, 1690, -1000, 628, -1000,
	1164, 1783, 27, 35, -1000, -1000, -1000, -1000, 1174, -1000,
	1161, 386, 621, -1000, 466, -1000, -1000, -1000, -1000, 2177,
	138, -1000, -1000, -1000, 261, 437, -1000, -1000, -1000, -1000,
	-1000, -1000, 1400, 1400, -1000, -1000, -1000, -1000, -1000, 1068,
	-1000, -1000, -1000, -1000, 1065, -1000, -1000, 1036, -1000, -1000,
	2221, 1957, 306, -1000, -1000, 742, 1383, -1000, -1000, 2183,
	742, 742, 45684, -1000, -1000, 1577, 2279, 269, 46994, 791,
	2057, -1000, 1959, 1959, 1959, 46994, -1000, -1000, -1000, -1000,
	-1000, -1000, -442, 64, 415, -1000, -1000, -1000, 395, 45684,
	1627, -1000, 265, -1000, 1570, -1000, 45684, -1000, 1620, 1892,
	1142, 1142, -1000, -1000, -1000, 45684, 1842, -1000, -1000, -1000,
	-1000, 572, 2241, 260, -1000, -1000, -177, -1000, -1000, 262,
	265, 46339, 1142, 692, -1000, -1000, -1000, -1000, -1000, -443,
	1615, 564, 259, 340, 46994, 46994, 46994, 46994, 46994, 597,
	-1000, -1000, 73, -1000, -1000, 246, -1000, -1000, -1000, -1000,
	246, -1000, -1000, -1000, -1000, 312, 516, -1000, 46994, 46994,
	665, -1000, -1000, -1000, 898, -1000, -1000, 898, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2226, 46994, 48, -407, -1000, -403, 18827, -1000, -1000, -1000,
	-1000, 1177, 530, 1941, 19482, 19482, 19482, -1000, -1000, -1000,
	1102, 1102, 27344, -1000, 18827, 18172, -1000, -1000, 18827, 18827,
	771, -1000, 18827, 939, -1000, 18827, -1000, -1000, -1000, 1246,
	1103, 1103, 1103, 1103, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1726, 18827, 18827, 18827, 1203, 348,
	-1000, -1000, -1000, -1000, -1000, 2425, -1000, 18827, -1000, 27344,
	18827, 18827, 18827, -1000, -1000, -1000, 18827, 18827, -1000, -1000,
	18827, 18827, -1000, 18827, 18827, 18827, -1000, 18827, 18827, 18827,
	18827, -1000, -1000, -1000, -1000, 18827, 18827, 18827, 18827, 18827,
	18827, 18827, 18827, 18827, 18827, -1000, -1000, 32584, 69, -159,
	1259, 69, 1259, -1000, 18172, 13574, -1000, -1000, -1000, -1000,
	-1000, 18827, 18827, 18827, 18827, 18827, 18827, -1000, -1000, -1000,
	18827, 18827, -1000, 18827, -1000, 18827, -1000, -1000, -1000, -1000,
	-1000, 684, -1000, 676, 676, 676, 45684, -1000, -1000, -1000,
	-1000, 1782, -1000, 2331, -1000, 2121, 2119, 2423, 2414, -1000,
	24069, 2133, -1000, -1000, 45684, -325, -1000, 2156, 2287, 690,
	690, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10930, 2338,
	18827, 2052, 46339, 144, -1000, 23414, 45684, 46339, 24069, 24069,
	24069, 24069, 24069, -1000, 2085, 2084, -1000, 2083, 2077, 2188,
	46994, -1000, 1449, 1608, -1000, 18827, 26034, 1689, 24069, -1000,
	-1000, 24069, 46994, 10269, -1000, -1000, 44, 32, -1000, -1000,
	-1000, -1000, 685, -1000, -1000, 1904, 2304, 2171, -1000, -1000,
	-1000, -1000, -1000, 1604, -1000, 1594, 1776, 1592, 1585, 228,
	-1000, 1893, 2214, 742, 742, -1000, 1033, -1000, 1142, 1375,
	1372, -1000, -1000, -1000, 561, -1000, 2268, 46994, 2038, 2024,
	2002, -1000, -451, 1018, 1891, 1790, 18827, 1887, 2398, 1715,
	45684, -1000, -1000, 46339, -1000, 324, -1000, 306, 45684, -1000,
	-1000, -1000, 368, 46994, -1000, 7892, -1000, -1000, -1000, 265,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 46994, 281, -1000,
	1886, 1133, -1000, -1000, 1944, -1000, -1000, -1000, -1000, 252,
	339, 1364, 244, 1360, 244, -1000, 46994, 632, 1957, 46994,
	-1000, -1000, -1000, 885, 885, -1000, -1000, 2211, -1000, 1142,
	1103, 19482, 19482, -1000, 702, 505, -139, 1879, 1879, -1000,
	1879, 1882, -1000, 1879, 210, 1879, 203, 1879, -1000, -1000,
	1203, 1203, 1246, -1000, 2138, 1352, -1000, 1174, 18827, 2295,
	-1000, -1000, -1000, -1000, -1000, -28, 2285, 2278, 1103, -1000,
	1876, 1875, 18827, 1103, 1203, 2128, 1103, 1103, 1103, 1103,
	-1000, 1174, 1246, 2262, 1246, 1103, 1103, 2257, 322, 1103,
	1581, 1581, 1581, 1581, 1581, 1246, 1246, 1246, 1246, 45684,
	-1000, -159, -1000, -1000, -201, -204, -1000, 1203, -159, 1724,
	1203, -1000, 2098, 2080, 2216, 2073, 1103, 2039, 1103, 1103,
	1103, 2065, -1000, 2330, 2330, 2330, 1460, 985, 46994, -1000,
	-1000, -1000, -1000, 2414, 2389, 1718, -1000, -1000, 126, 463,
	-1000, 2134, 2287, -1000, 2396, 2152, 2394, -1000, -1000, -1000,
	-1000, -1000, 1174, -1000, 2240, 1703, -1000, 769, 1631, -1000,
	-1000, 17517, 1462, 2116, 625, 1460, 1697, 2843, 1977, 2001,
	2689, -1000, -1000, -1000, -1000, 2049, -1000, 1989, -1000, -1000,
	1853, -1000, 1314, 385, 24069, 1659, 1659, -1000, 623, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 900, 6004, 2445, -1000,
	1355, -1000, 1148, 193, 1002, -1000, -1000, 742, 742, -1000,
	832, 815, -1000, 46994, 1874, -1000, 437, 1353, 437, 996,
	-1000, -1000, 994, -1000, -1000, -1000, -1000, 1784, 1978, -1000,
	-1000, -1000, -1000, 46994, -1000, -1000, 46994, 46994, 46994, 1862,
	2393, -1000, 18827, 1861, 768, 1805, 45684, 45684, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 474,
	742, -421, 315, 314, 742, 742, 742, -458, -1000, -1000,
	1457, 1455, -1000, -125, -1000, 18827, -1000, -1000, -1000, 1044,
	1044, 1349, 1347, 1346, -1000, 1853, -1000, -1000, -1000, 1567,
	-1000, -1000, -105, 45684, 45684, 45684, 45684, -1000, -1000, 972,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 702, 1203, 350, -112, 1203, -1000, -1000, 437,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18827, -1000, 18827, -1000, 1174, 18827, 2338, 1332, 18827, 18827,
	-1000, 987, 983, 1103, -1000, -1000, -1000, 18827, -1000, -1000,
	-1000, -1000, -1000, 18827, -1000, -1000, -1000, 18827, 202, 1102,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1203, 381, -1000, -1000, -1000, -1000, 2410, -1000, 1203, 18827,
	-1000, -1000, 18827, -1000, 18827, 18827, -1000, 18827, -1000, 18827,
	-1000, -1000, -1000, -1000, 18827, 1842, 2124, 1842, 1842, 26034,
	-1000, -1000, 2389, 2369, 2392, 2129, 2136, 2136, 2134, -1000,
	2391, 2388, -1000, 1326, 2382, 1310, 805, -1000, 46339, 18827,
	144, -1000, 396, 45684, 144, 45684, -1000, 2348, -1000, -1000,
	18827, 1858, -1000, 18827, -1000, -1000, -1000, -1000, 7130, 2414,
	1659, -1000, -1000, 714, -1000, 18827, -1000, -1000, -1000, 4415,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1291, 1289,
	-1000, -1000, 1856, 18827, -1000, -1000, -1000, 1463, 1450, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1853, -1000, -1000,
	-1000, -1000, 368, -449, 1645, 45684, 979, -1000, 1441, 1715,
	355, 144, 1287, 742, 742, 742, 975, 966, 31274, 1407,
	-1000, 45684, 433, -1000, 368, -1000, -132, -134, 1103, -1000,
	-1000, 2303, -1000, -1000, 13574, -1000, -1000, 1847, 1946, -1000,
	-1000, -1000, -1000, 2100, -92, -115, -1000, -1000, 1103, 1103,
	1080, 1203, -1000, 1103, 1103, 1442, 1336, -1000, 1103, 1246,
	2034, -1000, 202, 1203, 1993, -1000, -1000, 7130, -1000, -1000,
	2348, 2380, 69, -1000, -1000, 263, 69, 1174, 1994, 1103,
	1979, 1870, 1103, 1103, 26689, -1000, 2370, 2344, 31929, 31929,
	684, 2369, -167, 18827, 18827, 2130, 945, -1000, -1000, -1000,
	-1000, 1275, 1270, -1000, 1264, -1000, 2440, -1000, 1174, -1000,
	144, -1000, 622, 1631, -1000, 2338, 1174, 45684, 1174, 125,
	2348, -1000, 1103, -1000, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
	1842, 1842, 1842, 1842, -1000, -1000, 45684, 1278, -1000, -1000,
	2301, 1397, 63, -1000, 1279, 1715, -1000, -1000, 142, -1000,
	18827, -1000, 31274, 1242, 1224, -1000, -1000, -1000, -1000, -458,
	-1000, -1000, -1000, -1000, -1000, -1000, 399, 1714, -1000, 740,
	45684, 46994, -1000, 2093, -1000, -1000, -1000, 18827, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18827, -1000, 1203, 1975,
	-1000, -265, -1000, -422, 18827, -159, -1000, -1000, -159, -1000,
	18827, -1000, -1000, 18827, -1000, 18827, -1000, -1000, 1395, -1000,
	-1000, -1000, -1000, -1000, 1395, 1395, -1000, -167, -1000, 1694,
	-1000, 45684, 1174, 1598, -1000, 932, -1000, -1000, -1000, -1000,
	-1000, 46339, 1631, 45684, -1000, 1371, 1203, 1842, 2338, -1000,
	1359, -1000, 399, -1000, 1846, 1790, -1000, -1000, -1000, 16862,
	-1000, -1000, -1000, -1000, -1000, 245, -102, 13574, 9608, 1341,
	-1000, -99, 1103, 1246, -1000, -396, -1000, -1000, -1000, -1000,
	216, -1000, -1000, 1598, -1000, -1000, 1800, 1796, 1789, 30619,
	-1000, -1000, -1000, -1000, -167, -1000, -1000, 2288, -1000, -1000,
	1596, -1000, -1000, 26034, 45029, -1000, -85, 251, -102, 18827,
	1845, 1203, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-20, -1000, -1000, 611, -1000, -1000, -1000, 1944, -113, -1000,
	-1000, -1000, 258, -410, -188, -203, -1000, -1000, 19482, -1000,
	18827, -1000, 18827, -1000, 18827, -1000, -1000, -1000, 45684, 1842,
	-1000, 1202, -1000, 4812, -218, 1973, -1000, -89, -1000, -1000,
	-1000, 892, 1186, -1000, -1000, -1000, -1000, -1000, -1000, 1129,
	45684, -1000, 472, -1000, -1000, 12913, -105, -120, 799, -1000,
	-1000, -1000, -1000, -1000, 1285, 964, 1103, -1000, 45684, -1000,
	45029, -209, 692, 7130, -1000, 1969, 1967, 2418, -1000, -1000,
	-1000, -1000, -1000, -1000, -460, 1199, 276, -1000, -1000, -1000,
	258, -1000, 18827, -1000, 18827, -1000, 1203, -1000, -1000, 2263,
	125, -1000, 2439, -1000, 2436, 696, 696, -1000, 962, -460,
	-1000, -1000, 1103, 1103, -1000, -260, -1000, -1000, -1000, -1000,
	-1000, 465, 976, -1000, -1000, -1000, -1000, -1000, 7130, -1000,
	-1000, -1000, 248, 248, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3086, 3084, 39, 2, 37, 36, 3077, 172, 105,
	194, 38, 206, 104, 3076, 166, 3070, 3069, 3068, 3067,
	3066, 3063, 2467, 2461, 2460, 3062, 3059, 3055, 3053, 3051,
	3045, 3044, 3043, 3042, 3039, 167, 161, 187, 3038, 3036,
	3035, 116, 184, 91, 93, 190, 3033, 3032, 84, 3029,
	3027, 3026, 186, 183, 182, 866, 3022, 179, 113, 49,
	3017, 3016, 3013, 3011, 3009, 3008, 3006, 3001, 3000, 2999,
	2997, 2996, 2995, 2992, 2990, 2989, 2988, 205, 2987, 2986,
	24, 2984, 86, 2983, 2980, 2978, 2976, 2975, 8, 2972,
	2965, 15, 52, 2964, 2958, 54, 2957, 2955, 2954, 2953,
	2952, 19, 2948, 28, 2944, 31, 2943, 2942, 124, 2941,
	2938, 2936, 42, 2935, 2925, 2922, 2921, 2919, 2918, 2906,
	140, 2902, 2901, 2900, 301, 193, 2899, 2898, 295, 197,
	109, 2895, 2890, 137, 191, 2882, 120, 2879, 2878, 2875,
	150, 2872, 162, 2861, 2853, 73, 63, 2846, 68, 2840,
	2839, 13, 97, 64, 9, 6, 18, 2837, 2829, 65,
	100, 2828, 101, 2822, 2819, 99, 94, 2816, 103, 111,
	2813, 2811, 12, 7, 2808, 3, 5, 10, 72, 2807,
	2802, 115, 2800, 2797, 2795, 83, 2793, 2791, 5212, 2790,
	96, 131, 106, 78, 2787, 50, 51, 2782, 2781, 2780,
	2778, 2775, 55, 2768, 2764, 2761, 138, 221, 168, 2755,
	43, 45, 56, 136, 2753, 149, 80, 196, 164, 2751,
	2749, 139, 130, 2748, 2747, 69, 48, 46, 2745, 135,
	128, 119, 117, 133, 132, 2744, 2740, 61, 75, 2739,
	2738, 2737, 2733, 165, 2732, 2731, 76, 2729, 58, 2728,
	169, 2727, 21, 60, 2726, 47, 156, 2724, 77, 2722,
	2721, 71, 129, 74, 40, 2719, 153, 163, 125, 181,
	2717, 2716, 57, 2714, 2698, 2692, 192, 302, 2690, 2687,
	81, 177, 146, 148, 90, 2669, 308, 2662, 2653, 22,
	2252, 6114, 2652, 95, 160, 2647, 2628, 5469, 20, 59,
	25, 2627, 112, 2626, 2625, 2624, 2622, 195, 171, 107,
	159, 70, 2621, 2620, 2619, 17, 2609, 2608, 2607, 2602,
	2601, 2600, 87, 35, 34, 33, 199, 67, 44, 98,
	152, 151, 82, 2599, 2598, 2597, 122, 89, 2594, 158,
	154, 123, 126, 2593, 178, 141, 114, 2591, 157, 32,
	2590, 2588, 2562, 2559, 92, 2555, 2553, 2545, 2536, 155,
	143, 121, 79, 2534, 88, 118, 147, 144, 53, 2529,
	62, 2525, 2522, 30, 185, 29, 2521, 16, 108, 102,
	2518, 4427, 180, 2517, 23, 310, 145, 2511, 2505, 4,
	11, 14, 2504, 2503, 2502, 2497, 134, 2495, 2487, 2485,
	2477, 27, 66, 26, 1, 110, 85, 2476, 2474, 142,
	2473, 2465, 3469, 0, 127, 2433, 198,
}

//line sql.y:7986
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 410, 411, 411, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 258,
	381, 382, 382, 256, 256, 33, 72, 35, 35, 34,
	34, 37, 37, 36, 8, 8, 8, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 20,
	21, 12, 12, 22, 22, 106, 106, 23, 24, 24,
	24, 24, 414, 414, 183, 183, 181, 181, 182, 182,
	261, 261, 25, 265, 265, 267, 267, 267, 267, 257,
	257, 257, 26, 26, 266, 266, 268, 268, 268, 271,
	271, 271, 271, 310, 310, 310, 27, 27, 27, 27,
	27, 126, 126, 384, 384, 383, 377, 377, 376, 376,
	375, 380, 380, 379, 379, 378, 39, 40, 49, 49,
	49, 49, 50, 51, 385, 385, 350, 56, 56, 55,
	55, 55, 55, 55, 55, 57, 57, 53, 53, 52,
	52, 54, 54, 352, 352, 338, 338, 351, 351, 351,
	351, 351, 351, 351, 337, 337, 137, 137, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 400, 400, 400, 399, 399,
	236, 236, 236, 236, 236, 236, 236, 236, 147, 147,
	159, 159, 159, 159, 159, 145, 145, 146, 144, 144,
	144, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	158, 158, 154, 154, 154, 155, 155, 155, 156, 156,
	401, 401, 401, 401, 315, 315, 315, 315, 318, 318,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 317,
	317, 317, 317, 317, 317, 317, 319, 319, 319, 319,
	319, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 321, 321, 321,
	321, 321, 321, 321, 321, 336, 336, 322, 322, 330,
	330, 331, 331, 332, 332, 332, 333, 333, 333, 334,
	334, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	329, 329, 328, 328, 328, 339, 364, 364, 363, 363,
	361, 361, 361, 361, 361, 361, 361, 361, 348, 348,
	358, 358, 358, 358, 358, 347, 347, 343, 343, 343,
	344, 344, 345, 345, 342, 342, 346, 346, 360, 360,
	359, 359, 340, 340, 341, 341, 366, 402, 402, 402,
	402, 402, 403, 403, 367, 392, 394, 394, 394, 393,
	393, 390, 391, 389, 389, 389, 389, 389, 82, 82,
	82, 284, 284, 285, 285, 356, 356, 355, 355, 355,
	357, 357, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 279, 279, 279, 388, 388, 388, 388,
	388, 388, 387, 387, 387, 353, 353, 353, 353, 386,
	386, 58, 58, 216, 216, 405, 405, 406, 406, 406,
	46, 46, 46, 46, 46, 46, 45, 45, 45, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	47, 47, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	108, 108, 109, 109, 109, 109, 111, 111, 111, 369,
	369, 59, 59, 3, 3, 171, 173, 174, 174, 172,
	172, 172, 172, 172, 172, 61, 61, 60, 60, 176,
	175, 177, 177, 177, 1, 1, 2, 2, 4, 4,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 335, 335, 335, 368, 368, 370, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 114, 113,
	113, 112, 115, 115, 115, 115, 115, 115, 115, 115,
	372, 372, 372, 62, 62, 373, 323, 324, 325, 5,
	6, 349, 371, 122, 122, 29, 38, 38, 30, 30,
	30, 30, 31, 31, 63, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 278, 278, 287,
	287, 277, 277, 302, 302, 302, 280, 280, 280, 281,
	281, 398, 398, 398, 274, 274, 65, 65, 65, 303,
	303, 303, 303, 67, 67, 407, 407, 408, 408, 409,
	409, 409, 68, 69, 69, 305, 305, 306, 306, 70,
	71, 83, 83, 83, 83, 83, 83, 83, 84, 84,
	84, 84, 107, 107, 107, 15, 15, 15, 15, 79,
	79, 79, 14, 14, 17, 66, 66, 73, 395, 395,
	396, 397, 397, 397, 397, 74, 76, 32, 32, 32,
	32, 32, 32, 132, 132, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 127, 127, 127,
	121, 121, 415, 77, 78, 78, 125, 125, 125, 118,
	118, 118, 124, 124, 124, 16, 16, 18, 260, 260,
	19, 19, 129, 129, 131, 131, 131, 131, 131, 133,
	133, 133, 133, 133, 133, 133, 128, 128, 130, 130,
	130, 130, 295, 295, 295, 294, 294, 165, 165, 167,
	166, 166, 168, 168, 169, 169, 169, 169, 214, 214,
	191, 191, 253, 253, 254, 254, 252, 252, 259, 259,
	255, 255, 255, 255, 262, 262, 170, 170, 170, 170,
	178, 178, 179, 179, 180, 180, 304, 304, 300, 300,
	300, 299, 299, 184, 184, 184, 186, 185, 185, 185,
	185, 187, 187, 189, 189, 188, 188, 190, 195, 195,
	194, 194, 192, 192, 192, 192, 193, 193, 193, 193,
	196, 196, 142, 142, 142, 142, 142, 142, 142, 157,
	157, 157, 157, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 243, 243, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 151, 219, 219, 218, 218, 85,
	85, 85, 86, 86, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 143, 143, 90, 90, 89, 89,
	209, 209, 292, 292, 91, 92, 92, 95, 95, 94,
	93, 93, 99, 99, 96, 96, 98, 98, 97, 100,
	100, 101, 102, 102, 275, 275, 197, 197, 205, 205,
	205, 205, 198, 198, 198, 198, 198, 198, 198, 206,
	206, 206, 213, 207, 207, 203, 203, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 162, 162, 162, 162, 224, 224, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 150, 150, 163, 163, 163, 163,
	164, 164, 164, 164, 164, 164, 164, 312, 312, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	416, 416, 326, 326, 326, 326, 204, 204, 204, 204,
	204, 123, 123, 123, 123, 123, 309, 309, 309, 313,
	313, 313, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 314, 314, 222,
	222, 119, 119, 220, 220, 221, 223, 223, 215, 215,
	215, 215, 217, 217, 200, 200, 200, 225, 225, 226,
	226, 103, 104, 104, 105, 105, 227, 227, 229, 228,
	228, 230, 231, 231, 231, 232, 232, 233, 233, 233,
	48, 48, 48, 48, 48, 43, 43, 43, 43, 44,
	44, 44, 44, 134, 134, 134, 134, 136, 136, 135,
	135, 80, 80, 81, 81, 81, 140, 140, 141, 141,
	141, 138, 138, 139, 139, 250, 250, 234, 234, 234,
	241, 241, 241, 237, 237, 239, 239, 239, 240, 240,
	240, 238, 247, 247, 249, 249, 248, 248, 244, 244,
	245, 245, 246, 246, 246, 242, 242, 199, 199, 199,
	199, 199, 251, 251, 251, 251, 263, 263, 210, 210,
	212, 212, 211, 211, 161, 264, 264, 272, 269, 269,
	270, 270, 296, 296, 296, 273, 273, 286, 286, 282,
	282, 283, 283, 276, 276, 288, 288, 288, 75, 208,
	208, 365, 365, 362, 291, 291, 293, 293, 297, 297,
	301, 301, 298, 298, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 412, 413, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 0, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 1, 3, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 3, 3, 2, 2, 2, 1, 2, 2,
	0, 1, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 1, 1, 3, 3, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 4, 3, 1, 3, 1, 7, 6, 7, 7,
	8, 8, 0, 1, 5, 2, 1, 1, 1, 0,
	1, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 1, 2, 0, 1, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 1, 2,
	3, 7, 0, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	1, 6, 3, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 8, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -410, -77, -415, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-65, -67, -68, -69, -70, -71, -14, -17, -66, -32,
	-33, -72, -73, -74, -75, -76, -16, -18, -19, -9,
	-8, -13, 10, 11, -106, -34, 33, -39, -49, 225,
	-50, -40, 226, -51, 228, 227, 265, 229, 258, 75,
	313, 314, 316, 317, 318, 319, -107, 617, 263, 264,
	231, 37, 46, 34, 35, 38, 235, 271, 272, 234,
	-10, -35, 9, -412, 12, 449, 260, 259, 29, -12,
	511, 87, -78, -411, 665, -250, -234, 23, 34, 30,
	-233, -229, -125, -234, 21, 19, 8, -77, -77, -77,
	13, 14, -77, -350, -352, 87, 159, 87, -77, -56,
	-55, -53, -52, -54, -57, 32, -46, -47, -374, -45,
	-42, 230, 227, 275, 123, 124, 265, 266, 267, 229,
	249, 264, 268, 263, 284, -41, 82, 34, 511, 514,
	-357, 226, 232, 233, 228, 450, 126, 125, 76, -354,
	372, 544, 635, -57, 637, 101, 104, 636, 45, 239,
	638, 639, 640, 551, 641, 248, 642, 643, 644, 645,
	651, 592, 652, 653, 654, 127, 8, -77, -301, -297,
	91, -290, 508, 251, 542, 543, 300, 82, 42, 517,
	369, 372, 544, 479, 635, 313, 329, 323, 484, 485,
	486, 352, 344, 509, 545, 518, 303, 252, 288, 629,
	342, 135, 637, 307, 546, 266, 377, 378, 547, 379,
	101, 316, 416, 650, 306, 548, 648, 104, 636, 321,
	80, 478, 52, 632, 45, 261, 340, 234, 336, 638,
	289, 549, 520, 282, 126, 123, 657, 37, 332, 51,
	31, 647, 125, 50, 639, 150, 550, 640, 551, 381,
	359, 623, 49, 382, 267, 552, 85, 272, 513, 310,
	631, 383, 498, 333, 384, 299, 646, 231, 553, 612,
	604, 605, 385, 386, 624, 364, 360, 365, 500, 554,
	408, 483, 387, 608, 609, 664, 53, 555, 556, 625,
	124, 557, 79, 641, 81, 327, 328, 558, 297, 250,
	503, 504, 410, 356, 461, 468, 469, 111, 112, 464,
	113, 470, 114, 471, 472, 473, 462, 115, 108, 463,
	474, 475, 357, 358, 116, 476, 110, 109, 465, 467,
	117, 477, 248, 36, 388, 510, 301, 59, 305, 276,
	411, 47, 362, 661, 46, 619, 505, 559, 622, 355,
	351, 458, 54, 560, 561, 562, 563, 480, 642, 354,
	326, 350, 656, 4, 294, 481, 643, 63, 233, 367,
	366, 368, 283, 407, 347, 564, 565, 566, 255, 83,
	567, 337, 22, 568, 569, 389, 290, 570, 57, 571,
	572, 414, 264, 573, 55, 644, 40, 574, 269, 658,
	645, 575, 576, 577, 618, 578, 271, 579, 391, 580,
	606, 607, 390, 361, 363, 506, 278, 392, 236, 512,
	581, 311, 331, 268, 649, 582, 256, 494, 495, 496,
	497, 630, 502, 501, 270, 275, 263, 415, 257, 583,
	584, 585, 586, 587, 304, 603, 588, 589, 317, 651,
	459, 44, 590, 591, 592, 593, 594, 298, 293, 409,
	418, 62, 84, 374, 595, 596, 628, 325, 322, 291,
	597, 314, 56, 652, 653, 654, 285, 655, 487, 488,
	489, 490, 10, 662, 663, 482, 394, 127, 295, 296,
	48, 348, 277, 598, 308, 599, 338, 339, 353, 324,
	349, 615, 315, 613, 279, 395, 460, 265, 600, 417,
	292, 370, 375, 309, 516, 499, 284, 396, 627, 515,
	491, 492, 346, 343, 286, 493, 601, 617, 397, 240,
	280, 281, 602, 614, 398, 399, 302, 400, 401, 402,
	403, 404, 406, 312, 405, 616, 610, 611, 287, 514,
	320, 341, 376, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 457, 238, -77, 238, -188, -297, 238, -269, 378,
	-287, 380, 393, 388, 398, 386, -278, 389, 391, 278,
	-398, 408, 238, 395, 225, 381, 390, 399, 400, 302,
	406, 401, 312, 405, 287, 402, 403, 404, -381, 177,
	640, 655, 135, 345, 385, 383, 409, 619, 91, -303,
	91, 92, 93, -290, 315, -305, 320, -291, -381, -290,
	318, -77, -77, -307, -307, -127, 619, 621, -207, -142,
	143, -157, -160, -148, -152, -201, -202, -203, -204, -158,
	-217, -256, 166, 167, 174, 144, -213, -161, 27, 507,
	451, 450, 177, 32, -151, 220, 69, 70, 453, 146,
	58, 12, 426, 427, -159, 421, 428, 423, 478, 480,
	481, 482, 479, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 483, 455, 456, 118, 457, 108, 110,
	109, 458, 459, 460, 342, 505, 506, 500, 503, 504,
	502, 501, 357, 358, 461, 462, 463, 111, 112, 113,
	114, 115, 116, 117, 464, 467, 465, 466, 468, 469,
	470, 475, 476, 471, 472, 473, 474, 477, -87, -99,
	533, 532, -100, -149, -150, -163, -164, -291, -297, 243,
	420, 237, 172, 449, -153, -146, -215, 107, 92, 93,
	-8, -211, 419, 424, 425, 429, 422, 519, 521, 536,
	537, 539, 524, 529, 528, 531, 494, 495, 496, 497,
	498, 499, 604, 605, 606, 607, 608, 609, 610, 611,
	-381, -290, 91, -155, -154, -197, 94, 99, 102, 103,
	105, -404, 261, 338, 339, 119, -412, 633, 90, 95,
	96, 97, 98, 120, 121, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 45, 394, 394,
	-188, -77, -77, -77, -77, -227, -125, -229, -10, -8,
	-412, 9, -77, -8, -9, -13, -35, -37, 538, -36,
	-297, 100, -234, -250, 13, 162, 43, 51, -232, -233,
	-12, -8, -142, 20, 24, 25, -130, 168, -142, -297,
	-130, -276, 242, -77, -77, -265, -310, 315, -267, 409,
	619, 408, -257, -270, 91, -256, -269, 407, -351, 159,
	-337, -341, -291, 253, -367, 249, -188, -360, -359, -291,
	-412, -126, -286, 239, 247, 246, 136, -385, 139, 295,
	420, 237, -52, -53, -54, -269, 176, 639, -108, 270,
	274, 88, 88, -341, -340, -339, -386, 274, 253, -366,
	-358, 245, 254, -347, 246, 247, -342, 239, 137, -386,
	-342, 244, 254, 249, 253, 274, 274, 127, 274, 127,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 269,
	-348, 151, -348, 515, 515, -354, -386, 249, 239, -386,
	-386, 245, -288, -342, 241, 26, 241, 36, 36, -348,
	-348, -348, -269, 176, -348, -348, -348, -348, 282, 282,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, 238, -385, -134,
	405, 302, 82, -55, 284, -38, -188, -286, 239, 240,
	-385, 271, -188, 221, -188, -280, 159, 16, -280, -277,
	394, 392, 379, 384, -280, -280, -280, -280, 285, 377,
	-343, 239, 36, 250, 394, 285, 377, 285, 286, 285,
	286, 387, 397, 285, -302, 15, 162, 420, 382, 386,
	278, 238, 279, 240, 396, 286, -302, 90, -281, 159,
	285, 394, 281, -280, -280, -308, -412, -293, -291, -289,
	230, 24, 142, 26, 28, 145, 177, 130, 20, 146,
	38, 232, 345, 249, 176, 245, 450, 225, 73, 519,
	421, 423, 419, 426, 452, 453, 420, 380, 32, 14,
	521, 29, 259, 25, 39, 170, 227, 149, 522, 262,
	27, 260, 118, 121, 524, 23, 76, 254, 15, 247,
	41, 17, 525, 526, 18, 243, 242, 162, 239, 71,
	12, 220, 30, 158, 67, 527, 137, 528, 529, 530,
	531, 131, 69, 159, 21, 659, 424, 425, 34, 620,
	507, 273, 172, 74, 60, 621, 143, 422, 532, 533,
	119, 534, 122, 77, 626, 139, 19, 72, 43, 535,
	274, 536, 244, 660, 537, 412, 538, 160, 228, 449,
	70, 161, 633, 539, 634, 237, 393, 9, 454, 33,
	258, 246, 129, 68, 540, 238, 148, 455, 456, 241,
	132, 120, 8, 136, 35, 13, 75, 78, 427, 428,
	429, 58, 128, 511, 147, 16, 541, 413, 141, -381,
	622, -308, -308, 33, 92, -407, -408, -409, 511, 412,
	241, -291, -188, -83, 612, 229, -84, 618, 24, 236,
	-132, 394, -120, 177, 640, 623, 624, 625, 622, 391,
	630, 628, 626, 285, 627, 88, 139, 141, 142, 4,
	-142, 158, -198, 151, 152, 153, 154, 155, 156, 157,
	162, 143, 145, 159, -243, 140, 163, 164, 165, 166,
	167, 168, 169, 171, 170, 172, 173, 160, 161, 176,
	223, 224, -152, -152, -152, -152, -213, -219, -218, -412,
	-215, -381, -290, -297, -412, -412, -152, -275, -412, -412,
	-148, -412, -412, -412, -222, -142, -412, -412, -416, -412,
	-416, -416, -326, -412, -326, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, 221, -412, -412, -412, -412, -412, -326, -326, -326,
	-326, -326, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, 103, 99, 102, 94,
	-217, 105, 90, 90, 90, 90, -8, -9, -207, -412,
	-307, -395, -396, -191, -188, -412, 302, -291, -291, 271,
	-232, -12, -8, -227, -233, -229, -8, -77, -118, -131,
	64, 65, -133, 25, 39, 68, 66, 24, -413, 89,
	-413, -250, -413, 88, -37, -253, 87, 62, 44, 90,
	90, 88, 22, -228, -230, -142, 15, -295, 4, -294,
	26, -291, 90, 221, 15, -189, 30, -188, -276, -276,
	88, 91, 315, -266, -268, 410, 412, 151, -296, -291,
	90, 32, 89, 88, -188, -315, -318, -320, -319, -321,
	-316, -317, 342, 343, 177, 346, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 359, 33, 261, 338, 339,
	340, 341, 360, 361, 362, 363, 365, 366, 367, 368,
	323, 344, 509, 324, 325, 326, 327, 328, 329, 331,
	332, 335, 333, 334, 336, 337, -382, -381, 87, 89,
	88, -322, 87, -142, -134, 238, -381, 239, 239, 239,
	-77, 449, -348, -348, -348, 269, 20, -45, -42, -374,
	19, -41, -42, 230, 123, 124, 227, 87, -337, 87,
	-346, -382, -381, 87, 137, 244, 136, -345, -342, -345,
	-346, -381, -215, -381, 137, 137, -381, -381, -262, -291,
	-262, -262, 24, -262, 24, -262, 24, 96, -291, -262,
	24, -262, 24, -262, 24, -262, 24, -262, 24, 32,
	79, 80, 81, 32, 83, 84, 85, -215, -381, -381,
	-215, -337, -215, -188, -381, -269, 96, 96, 96, -348,
	-348, 96, 90, 90, 90, -348, -348, 96, 90, -299,
	-297, 90, 90, -387, 255, 299, 301, 96, 96, 96,
	96, 32, 90, -388, 32, 647, 646, 648, 649, 650,
	90, 96, 32, 96, 32, 96, -291, 87, -188, -140,
	289, 225, 227, 230, 77, 90, 305, 306, 303, 308,
	309, 151, 45, 88, 241, 238, -381, -282, 243, -282,
	-291, -298, -297, -289, 90, -142, -344, 15, 162, -302,
	-302, -280, -188, -344, -302, -280, -188, -280, -280, -280,
	-280, -302, -302, -302, -280, -297, -297, -188, -188, -188,
	-188, -188, -188, -188, -308, -281, -280, 622, 90, -274,
	15, 77, -308, -308, 88, 321, 413, 414, -306, 318,
	-79, -291, 90, -15, -11, -23, -22, -24, 151, -15,
	88, 511, -181, -188, 622, 622, 622, 622, 622, 622,
	-142, -142, -142, -142, 534, -205, 119, 143, 120, 121,
	-160, -206, -211, -213, 106, 162, 145, 159, -243, -148,
	-152, -148, -148, -148, -148, -148, -148, -148, -148, -148,
	-148, -148, -148, -148, -309, -291, 90, 177, -156, -155,
	105, -404, -156, 508, 88, -218, 221, -142, -142, -381,
	-142, -291, -128, -130, -128, -142, -220, -221, 147, -215,
	-142, -413, -413, 96, 105, 168, -124, 25, 39, -124,
	-124, -124, -124, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -124, -291, -291, -117, -116, 431, 432,
	433, 434, 436, 437, 438, 441, 442, 446, 447, 430,
	448, 435, 440, 443, 444, 445, 439, 341, -142, -142,
	-142, -142, -142, -142, -85, -142, 130, 131, 132, -207,
	-142, -148, -142, -142, -142, -413, -142, -142, -142, -208,
	-207, -380, -379, -378, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -413, -142, -162,
	-146, 96, -258, 105, 92, -142, -142, -129, -128, -293,
	-298, -289, -290, -128, -129, -129, -128, -128, -142, -142,
	-142, -142, -142, -142, -142, -142, -413, -142, -142, -142,
	-142, -142, -250, -413, -207, 88, -397, 412, 413, 620,
	-300, 274, -299, 26, -208, 90, 15, -260, 78, -291,
	-232, -232, 64, 65, 60, -128, -133, -413, -36, 26,
	-252, -291, 63, 90, -327, -269, 369, 370, 177, -142,
	-142, 88, -231, 28, 29, -188, -294, 168, -298, -188,
	-261, 274, -188, -166, -168, -169, -170, -191, -214, -412,
	-171, -8, 530, 527, 15, -181, -182, -190, -297, -267,
	-310, -266, 88, 411, 413, 414, 77, 122, -142, -328,
	176, -356, -355, -354, -337, -339, -340, -341, 89, -328,
	-333, 375, 374, -322, -322, -322, -322, -322, -327, -327,
	-327, -327, 87, 87, -322, -322, -322, -322, -330, 87,
	-330, -330, -331, -330, 87, -331, -332, 87, -332, -367,
	-142, -364, -363, -361, -362, 248, 101, 602, 558, 511,
	551, 592, 78, -359, -231, 96, -413, -140, -283, 243,
	-365, -362, -381, -381, -381, -283, 91, 90, 91, 90,
	91, 90, -109, -59, -1, 659, 660, 661, 88, 20,
	-338, -337, -58, 299, -370, -371, 274, -366, -360, -346,
	137, -345, -346, -346, -381, 88, 30, 127, 127, 127,
	127, 511, 227, 33, -284, 550, 143, 602, 558, -337,
	-58, 241, 241, -309, -309, -309, 90, 90, -279, 655,
	-181, -136, 291, 151, 280, 280, 238, 238, 293, -188,
	304, 307, 305, 306, 303, 308, 309, 24, 24, 24,
	24, 24, 292, 294, 296, 282, -188, -188, -282, 77,
	-183, -188, 27, -297, -188, -280, -280, -188, -280, -280,
	-188, -409, 322, -291, 356, 613, 614, 616, 615, -120,
	412, 88, 511, 23, -121, 23, -412, 119, 120, 121,
	-206, -148, -152, -148, 142, 262, -412, -215, -413, -293,
	26, 88, 78, -413, 88, 88, -413, -413, 88, 15,
	-223, -221, 149, -142, -413, 88, -413, -413, -413, -207,
	-142, -142, -142, -142, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -207, 88, 88, 15, -313, 26,
	-413, -413, -413, -413, -413, -222, -413, 15, -413, 78,
	88, 162, 88, -413, -413, -413, 88, 88, -413, -413,
	88, 88, -413, 88, 88, 88, -413, 88, 88, 88,
	88, -413, -413, -413, -413, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, -413, -92, 535, -413, -413,
	88, -413, 88, -413, -412, 221, -413, -413, -413, -413,
	-413, 88, 88, 88, 88, 88, 88, -413, -413, -413,
	88, 88, -413, 88, -413, 88, -413, -396, 619, 413,
	-195, -194, -192, 75, 242, 76, -412, -299, -413, -156,
	-258, -259, -258, -200, -291, 96, 105, -234, -165, -167,
	15, -133, -213, 89, 88, -327, -238, -244, -277, -291,
	90, 177, -329, 177, -329, 369, 370, -230, 221, -196,
	16, -199, 33, 58, -11, -412, -412, 33, 88, -184,
	-186, -185, -187, 67, 71, 73, 68, 69, 70, 74,
	-304, 26, -8, -166, -8, -412, -188, -181, -414, 15,
	78, -414, 88, 221, -268, -271, 415, 412, 418, -381,
	90, -108, 88, -354, -341, -235, -137, 41, -334, 376,
	-327, 518, -327, -336, 90, -336, 96, 96, 96, 89,
	-48, -43, -44, 34, 82, -361, -348, 90, 40, -348,
	-348, -291, 89, -231, -136, -188, 143, 77, -365, -365,
	-365, -297, -2, 658, 664, 137, 87, 379, 19, -252,
	88, 89, -216, 300, 89, -110, -291, 89, 87, -346,
	-346, -291, -412, 238, 32, 32, 602, 558, 550, -58,
	-216, -215, -381, -328, 657, 656, 89, 240, 298, -141,
	426, -138, 90, 91, -188, -188, -188, -188, -188, 230,
	227, 402, -405, 310, -405, 283, 241, -181, -188, 88,
	-82, 257, 252, -302, -302, 34, -188, 412, 631, 629,
	-142, 142, 262, -160, -152, -148, -311, 177, 342, 261,
	340, 336, 356, 347, 374, 338, 375, 333, 332, 331,
	-311, -309, -207, -130, -142, -142, 150, -142, 148, -142,
	-413, -413, -413, -413, -413, -227, -142, -142, -142, -413,
	177, 342, 15, -142, -309, -142, -142, -142, -142, -142,
	-378, -142, -207, -142, -207, -142, -142, -142, -142, -142,
	-379, -379, -379, -379, -379, -207, -207, -207, -207, -412,
	-291, -95, -94, -93, 585, 242, -92, -162, -95, -162,
	-129, -293, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -192, -342, -342, -342, -262, 88, -273, 23,
	15, 58, 58, -165, -196, -166, -133, -291, -241, 612,
	-247, 47, -245, -246, 48, -242, 49, 57, -329, -329,
	168, -232, -142, -263, 77, -264, -272, -215, -210, -212,
	-211, -412, -251, -413, -291, -262, -264, -168, -169, -169,
	-168, -169, 67, 67, 67, 72, 67, 72, 67, -185,
	-297, -413, -142, -300, 78, -166, -166, -190, -297, 168,
	412, 416, 417, -354, -403, 119, 143, 32, 77, 372,
	101, -401, 176, 547, 597, 602, 558, 551, 592, -402,
	244, 136, 137, 256, 26, 42, 89, 88, 89, 88,
	89, 89, 88, -285, -284, -44, -43, -348, -348, 96,
	-381, 90, 90, 240, 27, -188, 77, 77, 77, -111,
	662, 96, 87, -3, 82, -142, 87, 20, -337, -215,
	-372, -323, -373, -324, -325, -5, -6, -349, -114, 58,
	101, -62, 45, 239, 642, 643, 127, -412, 655, -364,
	-252, -368, -370, -188, -145, -412, -144, -146, -153, 166,
	167, 261, 338, 339, -216, -188, -135, 289, 297, 87,
	-139, 92, -384, 78, 280, 372, 280, 90, -406, 311,
	90, -406, -188, -82, -48, -188, -280, -280, 34, -381,
	-413, -160, -152, -123, 162, 511, -314, 517, -322, -322,
	-322, -332, -322, 328, -322, 328, -322, -413, -413, -413,
	88, -413, 23, -413, -142, 88, -119, 454, 88, 88,
	-413, 87, 87, -142, -413, -413, -413, 88, -413, -413,
	-413, -413, -413, 88, -413, -413, -413, 88, -312, 603,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-91, -292, -291, -92, 567, 567, -413, -92, -224, 88,
	-413, -413, 88, -413, 88, 88, -413, 88, -413, 88,
	-413, -413, -413, -413, 88, -193, 23, -193, -193, -413,
	-258, -188, -196, -225, 17, -238, 52, 348, -249, -248,
	56, 48, -246, 20, 50, 20, 31, -263, 88, 151,
	88, -413, -413, 88, 58, 221, -413, -196, -179, -178,
	77, 78, -180, 77, -178, 67, 67, -253, 88, -261,
	-166, -196, -196, 221, 119, -412, -147, -159, -145, 13,
	90, 90, -381, -400, 646, 647, 32, 96, -348, -348,
	137, 137, -188, 87, -327, 90, -327, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -188, -188, -188,
	-188, -369, 87, 20, -142, 87, 151, 89, -252, -252,
	276, 162, -348, 640, 282, 282, -348, -348, -348, -113,
	-112, 662, 89, -413, 88, -335, 511, 514, -142, -154,
	-154, -253, 89, -377, 511, -383, -291, -291, -291, -291,
	96, 98, -413, 509, 74, 512, -413, -327, -142, -142,
	-142, -232, 90, -142, -142, 96, 96, -413, -142, -207,
	-142, -413, -176, -175, -177, 623, 119, 32, -311, -413,
	-209, 274, -98, -97, -96, 15, -413, -142, -142, -142,
	-142, -142, -142, -142, -412, 67, 19, 17, -412, -412,
	-300, -225, -226, 18, 20, -239, 54, -237, 53, -237,
	-248, 20, 20, 90, 20, 90, 137, -272, -142, -212,
	58, -11, -291, -210, -291, -227, -142, 87, -142, -156,
	-196, -196, -142, -202, 478, 480, 481, 482, 479, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 483,
	457, 108, 110, 109, 458, 459, 460, 342, 505, 506,
	500, 503, 504, 502, 501, 357, 358, 461, 462, 463,
	111, 112, 113, 114, 115, 116, 117, 464, 467, 465,
	468, 469, 470, 475, 476, 471, 472, 473, 474, 477,
	494, 495, 496, 497, 498, 499, 604, 605, 606, 607,
	608, 609, 610, 611, 90, 90, 87, -142, 89, 89,
	-253, -368, -59, 89, -254, -252, 96, 89, 277, -211,
	-412, 90, -348, -348, -348, 96, 96, -299, -413, 88,
	-291, -402, -370, 515, 515, -413, 26, -376, -375, -293,
	87, 78, 63, 510, 513, -413, -413, 88, -413, -413,
	-413, 89, 89, -413, -413, -413, 88, -413, -175, -177,
	-413, 77, -156, -227, 20, -95, 299, 301, -95, -413,
	88, -413, -413, 88, -413, 88, -413, -413, -255, -413,
	-291, 244, 20, 20, -255, -255, -195, -226, -105, -104,
	-103, 541, -142, -207, -240, 55, 77, 122, 90, 90,
	90, 13, -210, 221, -232, -252, -173, 379, -227, -413,
	-252, 89, 26, 89, 664, 137, 89, -211, -122, -412,
	273, -299, 90, 90, -112, -115, -11, 88, 151, -252,
	-188, 63, -142, -207, -413, 77, 522, 623, -90, -89,
	-86, 634, 660, -207, -92, -92, -142, -142, -142, 88,
	-413, -413, -413, -105, 88, -102, -101, -291, 77, 122,
	-264, -291, 89, -413, -412, -232, 89, -236, -11, 87,
	-3, 273, -323, -373, -324, -325, -5, -6, -349, -80,
	511, -375, -353, -297, -293, 90, 96, 89, 511, -413,
	-413, -88, 145, 632, 600, -143, -154, -151, 220, -413,
	88, -413, 88, -413, 88, -291, 244, -103, 88, 26,
	-300, -174, -172, -291, 564, -393, -392, 507, -403, -399,
	119, 143, 101, -401, 602, 558, 128, 129, -80, -142,
	87, -413, -81, 288, 619, 221, -384, 512, -88, 633,
	578, 553, 578, 553, -142, -142, -142, -101, -412, -413,
	88, 23, -315, -61, 575, -390, -391, 77, -394, 385,
	574, 595, 119, 90, 89, -252, 249, -298, -377, 513,
	142, -413, 88, -413, 88, -413, -91, -172, 571, -328,
	-156, -391, 77, -390, 77, 14, 13, -4, 663, 89,
	290, -88, -142, -142, -413, -60, 27, -173, -389, 257,
	252, 255, 33, -389, 96, -4, -413, -413, 575, 251,
	32, 119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	872, -2, -2, 874, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 70,
	72, 73, 872, 872, 872, 0, 872, 0, 0, 872,
	-2, -2, 872, 1480, 0, 872, 0, 0, -2, 787,
	793, 0, 802, -2, 0, 0, 872, 872, 2035, 2035,
	867, 0, 0, 0, 0, 0, 872, 872, 872, 872,
	1346, 50, 872, 0, 85, 86, 822, 823, 824, 65,
	0, 2033, 873, 1, 3, 71, 75, 0, 0, 0,
	58, 1355, 0, 78, 0, 0, 876, 0, 0, 1463,
	872, 872, 0, 126, 127, 0, 0, 0, -2, 130,
	-2, 159, 160, 161, 0, 166, 600, 523, 575, 521,
	560, -2, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 398, 398, 0, 0,
	-2, 509, 509, 509, 1465, 0, 0, 0, 557, 460,
	398, 398, 398, 0, 398, 398, 398, 398, 0, 0,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 1373, 165, 1481,
	1478, 1479, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 0, 1457, 0, 713, 975, 0, 776, 776,
	0, 776, 776, 776, 776, 0, 0, 0, 725, 0,
	0, 0, 0, 773, 0, 741, 742, 0, 773, 0,
	748, 779, 0, 0, 754, 776, 776, 757, 2036, 0,
	2036, 2036, 1448, 0, 770, 768, 782, 783, 40, 786,
	789, 790, 791, 792, 795, 0, 806, 809, 1474, 1475,
	0, 811, 818, 835, 836, 0, 868, 869, 45, 1123,
	0, 997, 1002, 1013, 1028, 1029, 1030, 1031, 1032, 1034,
	1035, 1036, 0, 0, 0, 0, 1041, 1042, 0, 0,
	0, 0, 0, 1104, 1050, 0, 0, 0, 0, 1319,
	0, 0, 1280, 1280, 1138, 1280, 1282, 1282, 1682, 1818,
	1826, 1946, 1644, 1649, 1650, 1651, 1939, 1940, 1941, 1942,
	1981, 1982, 1986, 1742, 0, 0, 0, 2032, 1779, 1787,
	1788, 1812, 1911, 1967, 1661, 1807, 1876, 1739, 1761, 1762,
	1893, 1894, 1783, 1784, 1765, 1777, 1780, 1768, 1769, 1771,
	1773, 1778, 1785, 1791, 1770, 1790, 1789, 0, 1766, 1767,
	1772, 1782, 1786, 1774, 1775, 1776, 1781, 1792, 0, 0,
	0, 0, 0, 1219, 1220, 1221, 1222, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 1332, 1333, 43, 44,
	1122, 1444, 1282, 1282, 1282, 1282, 1282, 1064, 1065, 1066,
	1067, 1068, 1092, 1093, 1099, 1100, 1888, 1889, 1890, 1891,
	1723, 1976, 1731, 1732, 1871, 1872, 1744, 1745, 2007, 2008,
	-2, -2, -2, 231, 232, 233, 234, 235, 236, 237,
	238, 0, 1686, 1957, 1958, 227, 0, 0, 295, 296,
	292, 293, 294, 1106, 1107, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 2035, 0, 845,
	0, 0, 0, 0, 0, 1355, 0, 1347, 1346, 63,
	0, 872, -2, 0, 0, 0, 0, 47, 0, 52,
	932, 875, 77, 76, 1395, 0, 0, 0, 59, 1356,
	67, 69, 1357, 0, 877, 878, 0, 908, 912, 0,
	0, 0, 1464, 1463, 1463, 102, 0, 0, 103, 123,
	124, 125, 0, 0, 109, 110, 1450, 1451, 0, 0,
	177, 178, 0, 41, 425, 0, 173, 0, 418, 357,
	0, 1373, 0, 0, 0, 0, 0, 872, 0, 1458,
	154, 155, 162, 163, 164, 398, 398, 398, 572, 0,
	0, 165, 165, 530, 531, 532, 0, 0, -2, 423,
	0, 510, 0, 0, 412, 412, 416, 414, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 399, 0, 570, 571, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 1466, 1467, 0, 547, 548, 0,
	0, 0, 398, 398, 0, 0, 0, 0, 398, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 1386,
	0, 0, 0, -2, 0, 705, 0, 0, 0, 1459,
	1459, 0, 712, 0, 714, 715, 0, 0, 716, 0,
	773, 773, 771, 772, 718, 719, 720, 721, 776, 0,
	0, 407, 408, 409, 773, 776, 0, 776, 776, 776,
	776, 773, 773, 773, 776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 779, 776, 0, 749, 0,
	750, 751, 752, 755, 756, 758, 2037, 2038, 1476, 1477,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 2036,
	2036, 762, 766, 1449, 788, 794, 796, 797, 0, 0,
	807, 810, 829, 49, 1730, 817, 49, 819, 820, 821,
	847, 848, 853, 0, 0, 0, 0, 859, 860, 861,
	0, 0, 864, 865, 866, 0, 0, 0, 0, 0,
	995, 0, 0, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1014, 1015, 0,
	0, 0, 1037, 1038, 1039, 1040, 1043, 0, 1055, 0,
	1057, 1328, -2, 0, 0, 0, 1048, 1049, 0, 0,
	0, 0, 0, 0, 0, 1320, 0, 0, 1136, 0,
	1137, 1139, 1140, 0, 1141, 882, 882, 882, 882, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 0, 892, 892, 0, 0, 220, 221, 222,
	223, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 240, 241, 242,
	243, 244, 297, 245, 246, 247, 1122, 0, 0, 0,
	46, 837, 838, 0, 958, 1469, 0, 0, 888, 0,
	57, 66, 68, 1355, 61, 1355, 0, 894, 0, 0,
	-2, -2, 895, 901, 902, 903, 904, 905, 54, 2034,
	55, 0, 74, 0, 48, 0, 0, 0, 0, 371,
	1398, 0, 0, 1348, 1349, 1352, 0, 909, 1824, 913,
	0, 915, 916, 0, 0, 100, 0, 974, 0, 0,
	0, 111, 0, 113, 114, 0, 0, 0, 382, 1452,
	1453, 1454, -2, 405, 0, 382, 366, 305, 306, 307,
	357, 309, 357, 357, 357, 357, 371, 371, 371, 371,
	340, 341, 342, 343, 344, 0, 0, 326, 357, 357,
	357, 357, 347, 348, 349, 350, 351, 352, 353, 354,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 359,
	359, 359, 359, 359, 363, 363, 0, 42, 0, 386,
	0, 1352, 0, 0, 1386, 1461, 1471, 0, 0, 0,
	1461, 132, 0, 0, 0, 573, 611, 524, 561, 574,
	0, 527, 528, -2, 0, 0, 509, 0, 511, 0,
	406, 0, -2, 0, 416, 0, 412, 416, 413, 416,
	404, 417, 551, 552, 553, 0, 555, 556, 641, 944,
	0, 0, 0, 0, 0, 647, 648, 649, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 0, 0,
	0, 511, 0, 558, 0, 0, 462, 463, 464, 0,
	0, 467, 468, 469, 470, 0, 0, 473, 474, 475,
	961, 962, 476, 477, 502, 503, 504, 478, 479, 480,
	481, 482, 483, 484, 496, 497, 498, 499, 500, 501,
	485, 486, 487, 488, 489, 490, 493, 0, 147, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1459, 0, 0, 0, 0,
	891, 976, 1482, 1483, 777, 778, 0, 410, 411, 776,
	776, 722, 763, 0, 776, 726, 764, 727, 729, 728,
	730, 743, 744, 776, 733, 774, 775, 734, 735, 736,
	737, 738, 739, 740, 759, 745, 746, 747, 780, 0,
	784, 785, 760, 761, 0, 0, 800, 801, 0, 808,
	832, 830, 831, 833, 825, 826, 827, 828, 0, 834,
	0, 0, 850, 96, 855, 856, 857, 858, 870, 863,
	1124, 992, 993, 994, 0, 996, 999, 0, 1108, 1110,
	1001, 1003, 1119, 1120, 1121, 0, 0, 0, 0, 0,
	1007, 1011, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1033, 1296, 1297, 1298, 1052, 298,
	299, 0, 1053, 0, 0, 0, 0, 0, 0, 0,
	1123, 1054, 0, 906, 0, 0, 1326, 1323, 0, 0,
	0, 1281, 1283, 0, 0, 0, 0, 883, 884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1299, 0,
	0, 0, 0, 0, 1319, 0, 1059, 1060, 1061, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	1470, 0, 142, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 1224, 1225, 1226, 39, 0, 0, 0, 893, 1330,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 1442, 0, 0, 840, 841, 843, 0,
	978, 0, 959, 0, 0, 846, 0, 887, 0, 890,
	60, 62, 899, 900, 0, 917, 896, 56, 51, 0,
	0, 936, 1396, 371, 1418, 0, 380, 380, 377, 1358,
	1359, 0, 1351, 1353, 1354, 79, 914, 910, 0, 990,
	0, 0, 973, 0, 920, 922, 923, 924, 956, 0,
	927, 928, 0, 0, 0, 0, 0, 98, 975, 104,
	0, 112, 0, 0, 117, 118, 105, 106, 107, 108,
	0, 600, -2, 457, 179, 181, 182, 183, 174, -2,
	369, 367, 368, 308, 371, 371, 334, 335, 336, 337,
	338, 339, 0, 0, 327, 328, 329, 330, 319, 0,
	320, 321, 322, 361, 0, 323, 324, 0, 325, 424,
	0, 1360, 387, 388, 390, 398, 0, 393, 394, 0,
	398, 398, 0, 419, 420, 0, 1352, 1377, 0, 0,
	0, 1472, 1471, 1471, 1471, 0, 167, 168, 169, 170,
	171, 172, 636, 0, 0, 612, 634, 635, 165, 0,
	0, 175, 513, 512, 0, 668, 0, 422, 0, 0,
	416, 416, 401, 402, 554, 0, 0, 643, 644, 645,
	646, 0, 0, 0, 540, 451, 0, 541, 542, 511,
	513, 0, 0, 382, 465, 466, 471, 472, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 588, 589, 592, 594, 515, 598, 591, 593, 595,
	515, 599, 1374, 1375, 1376, 0, 0, 706, 0, 0,
	448, 94, 1460, 711, 773, 732, 765, 773, 724, 731,
	753, 798, 799, 804, 812, 813, 814, 815, 816, 854,
	0, 0, 0, 0, 862, 0, 0, 1000, 1109, 1111,
	1004, 0, 1008, 1012, 0, 0, 0, 1058, 1056, 1330,
	0, 0, 0, 1105, 0, 0, 1127, 1128, 0, 0,
	0, 1324, 0, 0, 1134, 0, 1284, 1285, 1142, 0,
	0, 0, 0, 0, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1346, 0, 0, 0, 0, 0,
	1163, 1164, 1165, 1166, 1167, 0, 1169, 0, 1170, 0,
	0, 0, 0, 1177, 1178, 1180, 0, 0, 1183, 1184,
	0, 0, 1185, 0, 0, 0, 1189, 0, 0, 0,
	0, 1198, 1199, 1200, 1201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 1213, 0, 1087, 0,
	0, 1087, 0, 1125, 892, 0, 1286, 1287, 1288, 1289,
	1290, 0, 0, 0, 0, 0, 0, 1246, 1247, 1249,
	0, 0, 1252, 0, 1254, 0, 1443, 839, 842, 844,
	930, 979, 980, 0, 0, 0, 0, 960, 1468, 885,
	886, 889, 938, 0, 1334, 0, 0, 917, 990, 918,
	0, 897, 53, 933, 0, 1400, 1399, 1412, 1425, 380,
	380, 374, 375, 381, 376, 378, 379, 1350, 0, 1355,
	0, 1436, 0, 0, 1428, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 966, 0, 0, 0,
	0, 957, 928, 0, 929, 0, -2, 0, 0, 92,
	93, 0, 0, 0, 115, 116, 0, 0, 122, 383,
	384, 156, 165, 459, 180, 432, 0, 0, 304, 370,
	331, 332, 333, 0, 355, 0, 0, 0, 0, 453,
	128, 1364, 1363, 398, 398, 389, 0, 392, 0, 0,
	0, 1473, 358, 421, 0, 146, 0, 0, 0, 0,
	0, 152, 606, 0, 0, 613, 0, 0, 0, 522,
	0, 533, 534, 0, 640, -2, 702, 386, 0, 400,
	403, 945, 0, 0, 535, 0, 538, 539, 452, 513,
	544, 545, 559, 546, 494, 495, 492, 0, 0, 1387,
	1388, 1393, 1391, 1392, 133, 580, 582, 581, 585, 0,
	0, 0, 517, 0, 517, 578, 0, 448, 1360, 0,
	710, 449, 450, 776, 776, 849, 97, 0, 852, 0,
	0, 0, 0, 1005, 1009, 1291, 1317, 357, 357, 1304,
	357, 363, 1307, 357, 1309, 357, 1312, 357, 1315, 1316,
	0, 0, 0, 907, 0, 0, 1133, 1327, 0, 0,
	1143, 1144, 1145, 1146, 1147, 1321, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 0, 0, 0, 0, 0, 0, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	1086, 0, 1088, 1089, 0, 0, 1215, 0, 0, 1227,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 986, 986, 986, 0, 0, 0, 1455,
	1456, 1335, 1336, 990, 1337, 919, 898, 937, 1418, 0,
	1411, 0, -2, 1420, 0, 0, 0, 1426, 372, 373,
	911, 80, 991, 83, 0, 1436, 1445, 0, 1427, 1438,
	1440, 0, 0, 0, 1432, 0, 990, 921, 952, 954,
	0, 949, 964, 965, 967, 0, 969, 0, 971, 972,
	932, 926, 0, 100, 0, 990, 990, 99, 0, 977,
	119, 120, 121, 458, 184, 189, 0, 0, 0, 194,
	0, 196, 0, 0, 0, 201, 202, 398, 398, 433,
	0, 301, 303, 0, 0, 187, 371, 0, 371, 0,
	362, 364, 0, 434, 454, 1361, 1362, 0, 0, 391,
	395, 396, 397, 0, 1462, 148, 0, 0, 0, 609,
	0, 637, 0, 0, 0, 0, 0, 0, 176, 514,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 0,
	398, 0, 0, 0, 398, 398, 398, 0, 694, 385,
	0, 0, 665, 662, 536, 0, 225, 226, 228, 0,
	0, 0, 0, 0, 543, 932, 1378, 1379, 1380, 0,
	1390, 1394, 136, 0, 0, 0, 0, 590, 596, 0,
	516, 597, 707, 708, 709, 95, 717, 723, 851, 871,
	998, 1006, 1010, 0, 0, 0, 0, 1318, 1302, 371,
	1305, 1306, 1308, 1310, 1311, 1313, 1314, 1046, 1047, 1051,
	0, 1130, 0, 1132, 1325, 0, 1355, 0, 0, 0,
	1161, 0, 0, 0, 1172, 1171, 1173, 0, 1175, 1176,
	1181, 1182, 1186, 0, 1188, 1190, 1191, 0, 0, 0,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	0, 1080, 1083, 1214, 1090, 1091, 1096, 1217, 0, 0,
	1126, 1229, 0, 1234, 0, 0, 1240, 0, 1244, 0,
	1250, 1251, 1253, 1255, 0, 0, 0, 0, 0, 958,
	939, 64, 1337, 1339, 0, 1405, 1403, 1403, 1413, 1414,
	0, 0, 1421, 0, 0, 0, 0, 84, 0, 0,
	0, 1441, 0, 0, 0, 0, 101, 1346, 946, 953,
	0, 0, 947, 0, 948, 968, 970, 925, 0, 990,
	990, 90, 91, 0, 190, 0, 192, 218, 219, 0,
	195, 197, 198, 199, 205, 206, 207, 200, 0, 0,
	300, 302, 0, 0, 345, 356, 346, 0, 0, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 932, 149, 150,
	151, 601, 0, 611, 0, 934, 0, 604, 0, 525,
	0, 0, 0, 398, 398, 398, 0, 0, 0, 0,
	679, 0, 0, 642, 0, 650, 0, 0, 0, 229,
	230, 0, 1389, 579, 0, 134, 135, 0, 0, 584,
	518, 519, 1044, 0, 0, 0, 1045, 1303, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 1168, 0, 0,
	0, 1194, 0, 0, 0, 631, 632, 0, 1258, 1085,
	1346, 0, 1087, 1097, 1098, 0, 1087, 1228, 0, 0,
	0, 0, 0, 0, 0, 987, 0, 0, 0, 0,
	978, 1339, 1344, 0, 0, 1408, 0, 1401, 1404, 1402,
	1415, 0, 0, 1422, 0, 1424, 0, 1446, 1447, 1439,
	0, 1431, 1434, 1430, 1433, 1355, 950, 0, 955, 0,
	1346, 89, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 0, 0, 360, 365,
	0, 0, 0, 602, 0, 935, 614, 605, 0, 692,
	0, 696, 0, 0, 0, 699, 700, 701, 678, 0,
	682, 426, 666, 663, 664, 537, 0, 137, 138, 0,
	0, 0, 1292, 0, 1295, 1129, 1131, 0, 1158, 1159,
	1160, 1300, 1301, 1174, 1187, 1192, 0, 1195, 0, 0,
	1196, 0, 633, 1076, 0, 0, 1094, 1095, 0, 1230,
	0, 1235, 1236, 0, 1241, 0, 1245, 1256, 0, 983,
	940, 941, 988, 989, 0, 0, 931, 1344, 82, 1345,
	1342, 0, 1340, 1338, 1397, 0, 1406, 1407, 1416, 1417,
	1423, 0, 1429, 0, 87, 0, 0, 0, 1355, 191,
	0, 210, 0, 610, 0, 613, 603, 690, 691, 0,
	703, 695, 697, 698, 680, -2, 1381, 0, 0, 0,
	586, 1293, 0, 0, 1197, 0, 629, 630, 1084, 1077,
	0, 1062, 1063, 1081, 1216, 1218, 0, 0, 0, 0,
	982, 984, 985, 81, 0, 1341, 1102, 0, 1409, 1410,
	1437, 1435, 951, 958, 0, 88, 439, 432, 1381, 0,
	0, 0, 683, 684, 685, 686, 687, 688, 689, 576,
	1383, 139, 140, 0, 506, 507, 508, 133, 0, 1135,
	1193, 1078, 0, 0, 0, 0, 1074, 1075, 0, 1231,
	0, 1237, 0, 1242, 0, 942, 943, 1343, 0, 0,
	615, 0, 617, 0, -2, 427, 440, 0, 185, 211,
	212, 0, 0, 215, 216, 217, 208, 209, 129, 0,
	0, 704, 0, 1384, 1385, 0, 136, 0, 0, 1069,
	1070, 1071, 1072, 1073, 0, 0, 0, 1103, 1082, 616,
	0, 0, 382, 0, 626, 428, 429, 0, 435, 436,
	437, 438, 213, 214, 638, 0, 0, 505, 583, 1294,
	0, 1232, 0, 1238, 0, 1243, 0, 618, 619, 627,
	0, 430, 0, 431, 0, 0, 0, 607, 0, 638,
	1382, 1079, 0, 0, 1101, 0, 628, 624, 441, 443,
	444, 0, 0, 442, 639, 608, 1233, 1239, 0, 445,
	446, 447, 620, 621, 622, 623,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 665,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:602
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:620
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:663
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:974
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:978
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1019
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1071
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1127
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1184
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1237
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1244
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1273
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1280
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1291
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1384
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1394
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1399
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1432
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1441
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Armscii8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = ASCIIStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Big5Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = UBinaryStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Cp1250Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1251Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1256Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1257Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp850Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp852Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp866Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp932Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Dec8Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = EucjpmsStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EuckrStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Gb18030Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb2312Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = GbkStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Geostd8Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = GreekStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = HebrewStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Hp8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Keybcs2Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Koi8rStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8uStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Latin1Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin5Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin7Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = MacceStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacromanStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = SjisStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Swe7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Tis620Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Ucs2Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = UjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Utf16Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16leStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf32Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf8Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8mb4Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1952
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2213
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2324
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2328
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2347
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2356
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2362
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2372
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2376
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2381
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2385
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2389
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = ""
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2417
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2421
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2425
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2429
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2433
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = yyDollar[2].str
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = "key"
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2500
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2510
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2514
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2520
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2524
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2530
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2534
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2540
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2546
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2550
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2554
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2558
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2562
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2577
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2583
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2589
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2593
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2597
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2602
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2612
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2628
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2632
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2640
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = ""
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2687
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2701
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2899
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2917
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2930
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2934
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2946
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3094
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3098
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3361
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3370
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3394
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3406
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3415
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3430
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3444
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3448
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3454
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3460
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3466
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3476
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3480
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3492
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3528
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3540
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3544
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3548
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3554
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3558
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3563
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3567
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3572
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3576
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3700
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3704
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3714
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3719
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3724
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3729
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3746
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3752
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3758
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3768
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3773
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3782
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3797
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3816
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3823
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3830
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3838
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3842
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3848
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3854
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3860
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3866
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3872
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3878
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3890
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3912
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3916
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = "extended "
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4188
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4208
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4222
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4226
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4236
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4313
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4319
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4333
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4337
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4376
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4381
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4385
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4389
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4393
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4397
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4401
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4405
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4410
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4414
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4418
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4422
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = yyDollar[1].str
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.str = yyDollar[1].str
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.str = yyDollar[1].str
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4450
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = ""
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4505
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4515
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4521
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4525
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4529
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4533
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4545
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4551
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4563
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4636
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4658
		{
			setAllowComments(yylex, true)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			yyVAL.strs = nil
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4682
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = SQLCacheStr
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4712
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4718
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4722
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4741
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4747
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4751
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4760
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4765
		{
			yyVAL.strs = nil
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4773
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4781
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = SQLCacheStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = DistinctStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = DistinctStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = StraightJoinHint
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4817
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4827
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4831
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4835
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4839
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4852
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4864
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4868
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4874
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4880
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4884
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4894
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4898
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4902
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4906
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4912
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4916
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4922
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4926
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4935
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4944
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4960
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4982
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4988
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4992
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5005
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5009
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5013
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5017
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5023
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5025
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5029
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5035
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5037
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.empty = struct{}{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.empty = struct{}{}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5066
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5070
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5074
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5080
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5086
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5094
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5098
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5108
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5138
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5153
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5163
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5167
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5171
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5175
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5180
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5184
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5188
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5192
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5303
		{
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5482
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5486
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5492
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5496
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5502
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5506
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5510
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5516
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5520
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5527
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5531
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5535
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5539
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5543
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5549
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5553
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5557
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5561
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5565
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5584
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5590
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5594
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5603
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5608
		{
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5617
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5623
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5627
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5639
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5645
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5649
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5655
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5659
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5665
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5669
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5681
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5687
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5691
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5697
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5703
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5707
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = ""
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5723
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5727
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5734
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5738
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5742
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5746
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5752
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5756
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5760
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5764
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5768
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5772
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5776
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5782
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5786
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5790
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5797
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5803
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5807
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6369
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6375
		{
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6377
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6381
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6385
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6389
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6393
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6397
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6401
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6405
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6409
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6413
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6417
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6423
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6427
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6431
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6435
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6439
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6443
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6447
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6451
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6455
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6510
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6514
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6518
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6522
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6526
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6540
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6550
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6554
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6560
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6576
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6598
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6602
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6618
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6624
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6628
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = string("")
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6652
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6656
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6662
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6677
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6681
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6685
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6689
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6728
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6743
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6749
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6753
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6762
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6771
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6777
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6783
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6787
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6793
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6798
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6802
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6806
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6811
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6815
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6821
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6825
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6829
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6838
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6842
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6846
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6850
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6857
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6861
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6865
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6869
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6875
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6879
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6883
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6887
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6892
		{
			yyVAL.str = ""
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6909
		{
			yyVAL.str = ""
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6923
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6928
		{
			yyVAL.str = ""
		}
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6932
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6937
		{
			yyVAL.str = "cascaded"
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6941
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6954
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6960
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6966
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6972
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6981
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6985
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6990
		{
			yyVAL.str = ""
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6994
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7000
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7004
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7010
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7014
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7018
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7023
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7027
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7031
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7036
		{
			yyVAL.str = ""
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7040
		{
			yyVAL.str = " header"
		}
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7045
		{
			yyVAL.str = ""
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7049
		{
			yyVAL.str = " manifest on"
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7053
		{
			yyVAL.str = " manifest off"
		}
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7058
		{
			yyVAL.str = ""
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7062
		{
			yyVAL.str = " overwrite on"
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7066
		{
			yyVAL.str = " overwrite off"
		}
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7072
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7077
		{
			yyVAL.str = ""
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7081
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7087
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7091
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7101
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = ""
		}
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7110
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7116
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7120
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7126
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7130
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7134
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7139
		{
			yyVAL.str = ""
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7143
		{
			yyVAL.str = " optionally"
		}
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7156
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7160
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7164
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7168
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7172
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7178
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7182
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7186
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7190
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7199
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7205
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7209
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7215
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7219
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7225
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7229
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7234
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7244
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7248
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7254
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7261
		{
			yyVAL.str = "charset"
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7279
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7300
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7305
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7308
		{
			yyVAL.empty = struct{}{}
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7310
		{
			yyVAL.empty = struct{}{}
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7312
		{
			yyVAL.empty = struct{}{}
		}
	case 1468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7316
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7325
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7332
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7336
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7342
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7346
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7353
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7359
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7363
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7369
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7373
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7380
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7965
		{
			decNesting(yylex)
		}
	case 2035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7970
		{
			skipToEnd(yylex)
		}
	case 2036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7975
		{
			skipToEnd(yylex)
		}
	case 2037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7979
		{
			skipToEnd(yylex)
		}
	case 2038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7983
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
