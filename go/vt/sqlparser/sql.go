// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const VALUE_ARG = 57439
const LIST_ARG = 57440
const COMMENT = 57441
const COMMENT_KEYWORD = 57442
const BITNUM = 57443
const BIT_LITERAL = 57444
const COMPRESSION = 57445
const JSON_PRETTY = 57446
const JSON_STORAGE_SIZE = 57447
const JSON_STORAGE_FREE = 57448
const JSON_CONTAINS = 57449
const JSON_CONTAINS_PATH = 57450
const JSON_EXTRACT = 57451
const JSON_KEYS = 57452
const JSON_OVERLAPS = 57453
const JSON_SEARCH = 57454
const JSON_VALUE = 57455
const EXTRACT = 57456
const NULL = 57457
const TRUE = 57458
const FALSE = 57459
const OFF = 57460
const DISCARD = 57461
const IMPORT = 57462
const ENABLE = 57463
const DISABLE = 57464
const TABLESPACE = 57465
const VIRTUAL = 57466
const STORED = 57467
const BOTH = 57468
const LEADING = 57469
const TRAILING = 57470
const EMPTY_FROM_CLAUSE = 57471
const LOWER_THAN_CHARSET = 57472
const CHARSET = 57473
const UNIQUE = 57474
const KEY = 57475
const EXPRESSION_PREC_SETTER = 57476
const OR = 57477
const XOR = 57478
const AND = 57479
const NOT = 57480
const BETWEEN = 57481
const CASE = 57482
const WHEN = 57483
const THEN = 57484
const ELSE = 57485
const END = 57486
const LE = 57487
const GE = 57488
const NE = 57489
const NULL_SAFE_EQUAL = 57490
const IS = 57491
const LIKE = 57492
const REGEXP = 57493
const RLIKE = 57494
const IN = 57495
const SHIFT_LEFT = 57496
const SHIFT_RIGHT = 57497
const DIV = 57498
const MOD = 57499
const UNARY = 57500
const COLLATE = 57501
const BINARY = 57502
const UNDERSCORE_ARMSCII8 = 57503
const UNDERSCORE_ASCII = 57504
const UNDERSCORE_BIG5 = 57505
const UNDERSCORE_BINARY = 57506
const UNDERSCORE_CP1250 = 57507
const UNDERSCORE_CP1251 = 57508
const UNDERSCORE_CP1256 = 57509
const UNDERSCORE_CP1257 = 57510
const UNDERSCORE_CP850 = 57511
const UNDERSCORE_CP852 = 57512
const UNDERSCORE_CP866 = 57513
const UNDERSCORE_CP932 = 57514
const UNDERSCORE_DEC8 = 57515
const UNDERSCORE_EUCJPMS = 57516
const UNDERSCORE_EUCKR = 57517
const UNDERSCORE_GB18030 = 57518
const UNDERSCORE_GB2312 = 57519
const UNDERSCORE_GBK = 57520
const UNDERSCORE_GEOSTD8 = 57521
const UNDERSCORE_GREEK = 57522
const UNDERSCORE_HEBREW = 57523
const UNDERSCORE_HP8 = 57524
const UNDERSCORE_KEYBCS2 = 57525
const UNDERSCORE_KOI8R = 57526
const UNDERSCORE_KOI8U = 57527
const UNDERSCORE_LATIN1 = 57528
const UNDERSCORE_LATIN2 = 57529
const UNDERSCORE_LATIN5 = 57530
const UNDERSCORE_LATIN7 = 57531
const UNDERSCORE_MACCE = 57532
const UNDERSCORE_MACROMAN = 57533
const UNDERSCORE_SJIS = 57534
const UNDERSCORE_SWE7 = 57535
const UNDERSCORE_TIS620 = 57536
const UNDERSCORE_UCS2 = 57537
const UNDERSCORE_UJIS = 57538
const UNDERSCORE_UTF16 = 57539
const UNDERSCORE_UTF16LE = 57540
const UNDERSCORE_UTF32 = 57541
const UNDERSCORE_UTF8 = 57542
const UNDERSCORE_UTF8MB4 = 57543
const UNDERSCORE_UTF8MB3 = 57544
const INTERVAL = 57545
const WINDOW_EXPR = 57546
const JSON_EXTRACT_OP = 57547
const JSON_UNQUOTE_EXTRACT_OP = 57548
const CREATE = 57549
const ALTER = 57550
const DROP = 57551
const RENAME = 57552
const ANALYZE = 57553
const ADD = 57554
const FLUSH = 57555
const CHANGE = 57556
const MODIFY = 57557
const DEALLOCATE = 57558
const REVERT = 57559
const SCHEMA = 57560
const TABLE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const SPATIAL = 57569
const FULLTEXT = 57570
const KEY_BLOCK_SIZE = 57571
const CHECK = 57572
const INDEXES = 57573
const ACTION = 57574
const CASCADE = 57575
const CONSTRAINT = 57576
const FOREIGN = 57577
const NO = 57578
const REFERENCES = 57579
const RESTRICT = 57580
const SHOW = 57581
const DESCRIBE = 57582
const EXPLAIN = 57583
const DATE = 57584
const ESCAPE = 57585
const REPAIR = 57586
const OPTIMIZE = 57587
const TRUNCATE = 57588
const COALESCE = 57589
const EXCHANGE = 57590
const REBUILD = 57591
const PARTITIONING = 57592
const REMOVE = 57593
const PREPARE = 57594
const EXECUTE = 57595
const MAXVALUE = 57596
const PARTITION = 57597
const REORGANIZE = 57598
const LESS = 57599
const THAN = 57600
const PROCEDURE = 57601
const TRIGGER = 57602
const VINDEX = 57603
const VINDEXES = 57604
const DIRECTORY = 57605
const NAME = 57606
const UPGRADE = 57607
const STATUS = 57608
const VARIABLES = 57609
const WARNINGS = 57610
const CASCADED = 57611
const DEFINER = 57612
const OPTION = 57613
const SQL = 57614
const UNDEFINED = 57615
const SEQUENCE = 57616
const MERGE = 57617
const TEMPORARY = 57618
const TEMPTABLE = 57619
const INVOKER = 57620
const SECURITY = 57621
const FIRST = 57622
const AFTER = 57623
const LAST = 57624
const VITESS_MIGRATION = 57625
const CANCEL = 57626
const RETRY = 57627
const COMPLETE = 57628
const CLEANUP = 57629
const THROTTLE = 57630
const UNTHROTTLE = 57631
const EXPIRE = 57632
const RATIO = 57633
const BEGIN = 57634
const START = 57635
const TRANSACTION = 57636
const COMMIT = 57637
const ROLLBACK = 57638
const SAVEPOINT = 57639
const RELEASE = 57640
const WORK = 57641
const BIT = 57642
const TINYINT = 57643
const SMALLINT = 57644
const MEDIUMINT = 57645
const INT = 57646
const INTEGER = 57647
const BIGINT = 57648
const INTNUM = 57649
const REAL = 57650
const DOUBLE = 57651
const FLOAT_TYPE = 57652
const DECIMAL_TYPE = 57653
const NUMERIC = 57654
const TIME = 57655
const TIMESTAMP = 57656
const DATETIME = 57657
const YEAR = 57658
const CHAR = 57659
const VARCHAR = 57660
const BOOL = 57661
const CHARACTER = 57662
const VARBINARY = 57663
const NCHAR = 57664
const TEXT = 57665
const TINYTEXT = 57666
const MEDIUMTEXT = 57667
const LONGTEXT = 57668
const BLOB = 57669
const TINYBLOB = 57670
const MEDIUMBLOB = 57671
const LONGBLOB = 57672
const JSON = 57673
const JSON_SCHEMA_VALID = 57674
const JSON_SCHEMA_VALIDATION_REPORT = 57675
const ENUM = 57676
const GEOMETRY = 57677
const POINT = 57678
const LINESTRING = 57679
const POLYGON = 57680
const GEOMCOLLECTION = 57681
const GEOMETRYCOLLECTION = 57682
const MULTIPOINT = 57683
const MULTILINESTRING = 57684
const MULTIPOLYGON = 57685
const ASCII = 57686
const UNICODE = 57687
const NULLX = 57688
const AUTO_INCREMENT = 57689
const APPROXNUM = 57690
const SIGNED = 57691
const UNSIGNED = 57692
const ZEROFILL = 57693
const CODE = 57694
const COLLATION = 57695
const COLUMNS = 57696
const DATABASES = 57697
const ENGINES = 57698
const EVENT = 57699
const EXTENDED = 57700
const FIELDS = 57701
const FULL = 57702
const FUNCTION = 57703
const GTID_EXECUTED = 57704
const KEYSPACES = 57705
const OPEN = 57706
const PLUGINS = 57707
const PRIVILEGES = 57708
const PROCESSLIST = 57709
const SCHEMAS = 57710
const TABLES = 57711
const TRIGGERS = 57712
const USER = 57713
const VGTID_EXECUTED = 57714
const VITESS_KEYSPACES = 57715
const VITESS_METADATA = 57716
const VITESS_MIGRATIONS = 57717
const VITESS_REPLICATION_STATUS = 57718
const VITESS_SHARDS = 57719
const VITESS_TABLETS = 57720
const VITESS_TARGET = 57721
const VSCHEMA = 57722
const VITESS_THROTTLED_APPS = 57723
const NAMES = 57724
const GLOBAL = 57725
const SESSION = 57726
const ISOLATION = 57727
const LEVEL = 57728
const READ = 57729
const WRITE = 57730
const ONLY = 57731
const REPEATABLE = 57732
const COMMITTED = 57733
const UNCOMMITTED = 57734
const SERIALIZABLE = 57735
const CURRENT_TIMESTAMP = 57736
const DATABASE = 57737
const CURRENT_DATE = 57738
const NOW = 57739
const CURRENT_TIME = 57740
const LOCALTIME = 57741
const LOCALTIMESTAMP = 57742
const CURRENT_USER = 57743
const UTC_DATE = 57744
const UTC_TIME = 57745
const UTC_TIMESTAMP = 57746
const DAY = 57747
const DAY_HOUR = 57748
const DAY_MICROSECOND = 57749
const DAY_MINUTE = 57750
const DAY_SECOND = 57751
const HOUR = 57752
const HOUR_MICROSECOND = 57753
const HOUR_MINUTE = 57754
const HOUR_SECOND = 57755
const MICROSECOND = 57756
const MINUTE = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const MONTH = 57760
const QUARTER = 57761
const SECOND = 57762
const SECOND_MICROSECOND = 57763
const YEAR_MONTH = 57764
const WEEK = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const SEPARATOR = 57771
const TIMESTAMPADD = 57772
const TIMESTAMPDIFF = 57773
const WEIGHT_STRING = 57774
const LTRIM = 57775
const RTRIM = 57776
const TRIM = 57777
const JSON_ARRAY = 57778
const JSON_OBJECT = 57779
const JSON_QUOTE = 57780
const JSON_DEPTH = 57781
const JSON_TYPE = 57782
const JSON_LENGTH = 57783
const JSON_VALID = 57784
const JSON_ARRAY_APPEND = 57785
const JSON_ARRAY_INSERT = 57786
const JSON_INSERT = 57787
const JSON_MERGE = 57788
const JSON_MERGE_PATCH = 57789
const JSON_MERGE_PRESERVE = 57790
const JSON_REMOVE = 57791
const JSON_REPLACE = 57792
const JSON_SET = 57793
const JSON_UNQUOTE = 57794
const COUNT = 57795
const AVG = 57796
const MAX = 57797
const MIN = 57798
const SUM = 57799
const GROUP_CONCAT = 57800
const BIT_AND = 57801
const BIT_OR = 57802
const BIT_XOR = 57803
const STD = 57804
const STDDEV = 57805
const STDDEV_POP = 57806
const STDDEV_SAMP = 57807
const VAR_POP = 57808
const VAR_SAMP = 57809
const VARIANCE = 57810
const REGEXP_INSTR = 57811
const REGEXP_LIKE = 57812
const REGEXP_REPLACE = 57813
const REGEXP_SUBSTR = 57814
const ExtractValue = 57815
const UpdateXML = 57816
const GET_LOCK = 57817
const RELEASE_LOCK = 57818
const RELEASE_ALL_LOCKS = 57819
const IS_FREE_LOCK = 57820
const IS_USED_LOCK = 57821
const LOCATE = 57822
const POSITION = 57823
const MATCH = 57824
const AGAINST = 57825
const BOOLEAN = 57826
const LANGUAGE = 57827
const WITH = 57828
const QUERY = 57829
const EXPANSION = 57830
const WITHOUT = 57831
const VALIDATION = 57832
const UNUSED = 57833
const ARRAY = 57834
const BYTE = 57835
const CUME_DIST = 57836
const DESCRIPTION = 57837
const DENSE_RANK = 57838
const EMPTY = 57839
const EXCEPT = 57840
const FIRST_VALUE = 57841
const GROUPING = 57842
const GROUPS = 57843
const JSON_TABLE = 57844
const LAG = 57845
const LAST_VALUE = 57846
const LATERAL = 57847
const LEAD = 57848
const NTH_VALUE = 57849
const NTILE = 57850
const OF = 57851
const OVER = 57852
const PERCENT_RANK = 57853
const RANK = 57854
const RECURSIVE = 57855
const ROW_NUMBER = 57856
const SYSTEM = 57857
const WINDOW = 57858
const ACTIVE = 57859
const ADMIN = 57860
const AUTOEXTEND_SIZE = 57861
const BUCKETS = 57862
const CLONE = 57863
const COLUMN_FORMAT = 57864
const COMPONENT = 57865
const DEFINITION = 57866
const ENFORCED = 57867
const ENGINE_ATTRIBUTE = 57868
const EXCLUDE = 57869
const FOLLOWING = 57870
const GET_MASTER_PUBLIC_KEY = 57871
const HISTOGRAM = 57872
const HISTORY = 57873
const INACTIVE = 57874
const INVISIBLE = 57875
const LOCKED = 57876
const MASTER_COMPRESSION_ALGORITHMS = 57877
const MASTER_PUBLIC_KEY_PATH = 57878
const MASTER_TLS_CIPHERSUITES = 57879
const MASTER_ZSTD_COMPRESSION_LEVEL = 57880
const NESTED = 57881
const NETWORK_NAMESPACE = 57882
const NOWAIT = 57883
const NULLS = 57884
const OJ = 57885
const OLD = 57886
const OPTIONAL = 57887
const ORDINALITY = 57888
const ORGANIZATION = 57889
const OTHERS = 57890
const PARTIAL = 57891
const PATH = 57892
const PERSIST = 57893
const PERSIST_ONLY = 57894
const PRECEDING = 57895
const PRIVILEGE_CHECKS_USER = 57896
const PROCESS = 57897
const RANDOM = 57898
const REFERENCE = 57899
const REQUIRE_ROW_FORMAT = 57900
const RESOURCE = 57901
const RESPECT = 57902
const RESTART = 57903
const RETAIN = 57904
const REUSE = 57905
const ROLE = 57906
const SECONDARY = 57907
const SECONDARY_ENGINE = 57908
const SECONDARY_ENGINE_ATTRIBUTE = 57909
const SECONDARY_LOAD = 57910
const SECONDARY_UNLOAD = 57911
const SIMPLE = 57912
const SKIP = 57913
const SRID = 57914
const THREAD_PRIORITY = 57915
const TIES = 57916
const UNBOUNDED = 57917
const VCPU = 57918
const VISIBLE = 57919
const RETURNING = 57920
const FORMAT_BYTES = 57921
const FORMAT_PICO_TIME = 57922
const PS_CURRENT_THREAD_ID = 57923
const PS_THREAD_ID = 57924
const GTID_SUBSET = 57925
const GTID_SUBTRACT = 57926
const WAIT_FOR_EXECUTED_GTID_SET = 57927
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57928
const FORMAT = 57929
const TREE = 57930
const VITESS = 57931
const TRADITIONAL = 57932
const LOCAL = 57933
const LOW_PRIORITY = 57934
const NO_WRITE_TO_BINLOG = 57935
const LOGS = 57936
const ERROR = 57937
const GENERAL = 57938
const HOSTS = 57939
const OPTIMIZER_COSTS = 57940
const USER_RESOURCES = 57941
const SLOW = 57942
const CHANNEL = 57943
const RELAY = 57944
const EXPORT = 57945
const CURRENT = 57946
const ROW = 57947
const ROWS = 57948
const AVG_ROW_LENGTH = 57949
const CONNECTION = 57950
const CHECKSUM = 57951
const DELAY_KEY_WRITE = 57952
const ENCRYPTION = 57953
const ENGINE = 57954
const INSERT_METHOD = 57955
const MAX_ROWS = 57956
const MIN_ROWS = 57957
const PACK_KEYS = 57958
const PASSWORD = 57959
const FIXED = 57960
const DYNAMIC = 57961
const COMPRESSED = 57962
const REDUNDANT = 57963
const COMPACT = 57964
const ROW_FORMAT = 57965
const STATS_AUTO_RECALC = 57966
const STATS_PERSISTENT = 57967
const STATS_SAMPLE_PAGES = 57968
const STORAGE = 57969
const MEMORY = 57970
const DISK = 57971
const PARTITIONS = 57972
const LINEAR = 57973
const RANGE = 57974
const LIST = 57975
const SUBPARTITION = 57976
const SUBPARTITIONS = 57977
const HASH = 57978

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 147,
	654, 147,
	-2, 155,
	-1, 50,
	134, 155,
	175, 155,
	337, 155,
	-2, 505,
	-1, 57,
	36, 748,
	237, 748,
	248, 748,
	283, 762,
	284, 762,
	-2, 750,
	-1, 62,
	239, 779,
	-2, 777,
	-1, 116,
	236, 1430,
	-2, 121,
	-1, 118,
	1, 148,
	654, 148,
	-2, 155,
	-1, 129,
	135, 391,
	242, 391,
	-2, 494,
	-1, 148,
	134, 155,
	175, 155,
	337, 155,
	-2, 514,
	-1, 766,
	87, 1447,
	-2, 1294,
	-1, 767,
	87, 1448,
	220, 1452,
	-2, 1295,
	-1, 800,
	220, 1451,
	-2, 39,
	-1, 880,
	60, 847,
	-2, 862,
	-1, 966,
	247, 40,
	252, 40,
	-2, 402,
	-1, 1051,
	1, 562,
	654, 562,
	-2, 155,
	-1, 1345,
	220, 1452,
	-2, 1295,
	-1, 1493,
	60, 848,
	-2, 867,
	-1, 1494,
	60, 849,
	-2, 868,
	-1, 1545,
	134, 155,
	175, 155,
	337, 155,
	-2, 441,
	-1, 1624,
	135, 391,
	242, 391,
	-2, 494,
	-1, 1633,
	247, 41,
	252, 41,
	-2, 403,
	-1, 1981,
	220, 1456,
	-2, 1450,
	-1, 1982,
	220, 1452,
	-2, 1448,
	-1, 2081,
	134, 155,
	175, 155,
	337, 155,
	-2, 442,
	-1, 2088,
	26, 176,
	-2, 178,
	-1, 2444,
	78, 95,
	88, 95,
	-2, 924,
	-1, 2512,
	629, 675,
	-2, 649,
	-1, 2678,
	50, 1389,
	-2, 1383,
	-1, 2975,
	8, 54,
	19, 54,
	21, 54,
	89, 54,
	-2, 896,
	-1, 3333,
	629, 675,
	-2, 663,
	-1, 3421,
	23, 1807,
	33, 1807,
	176, 1807,
	259, 1807,
	317, 1807,
	318, 1807,
	319, 1807,
	320, 1807,
	321, 1807,
	322, 1807,
	323, 1807,
	325, 1807,
	326, 1807,
	327, 1807,
	328, 1807,
	329, 1807,
	330, 1807,
	331, 1807,
	332, 1807,
	333, 1807,
	334, 1807,
	335, 1807,
	336, 1807,
	338, 1807,
	340, 1807,
	341, 1807,
	342, 1807,
	343, 1807,
	344, 1807,
	345, 1807,
	346, 1807,
	347, 1807,
	348, 1807,
	351, 1807,
	352, 1807,
	353, 1807,
	354, 1807,
	355, 1807,
	357, 1807,
	358, 1807,
	359, 1807,
	360, 1807,
	501, 1807,
	-2, 607,
}

const yyPrivate = 57344

const yyLast = 46495

var yyAct = [...]int{
	1501, 3492, 3082, 809, 1848, 3083, 3314, 3081, 3503, 674,
	802, 3398, 3461, 2078, 3462, 2907, 3052, 3419, 801, 2030,
	1548, 3364, 2830, 3387, 3298, 2733, 2740, 2010, 2790, 654,
	3246, 2795, 3296, 2792, 2791, 2789, 2794, 2793, 2691, 5,
	3039, 3111, 1114, 770, 2342, 2694, 39, 2376, 2781, 873,
	3286, 2810, 2637, 2148, 2012, 771, 656, 2695, 896, 2809,
	1508, 2940, 2692, 2415, 2748, 2946, 2572, 3116, 2034, 684,
	765, 764, 660, 2050, 2812, 2966, 2689, 2679, 2402, 2932,
	2509, 2116, 2477, 1477, 2556, 1602, 2111, 998, 1972, 2835,
	2478, 2438, 2479, 2136, 1116, 2179, 2066, 2427, 652, 2055,
	38, 40, 2054, 2408, 1495, 157, 1649, 897, 875, 928,
	2394, 1943, 1977, 1863, 2378, 1844, 2135, 1092, 653, 1802,
	2548, 2042, 2157, 877, 2196, 881, 2118, 2471, 143, 956,
	1969, 1631, 1537, 2446, 2057, 1063, 1517, 666, 1475, 584,
	94, 961, 1357, 1867, 899, 1821, 932, 98, 99, 639,
	1751, 1285, 1747, 2133, 1638, 935, 967, 868, 1730, 936,
	2107, 962, 963, 2035, 1536, 964, 661, 914, 916, 1522,
	974, 887, 1317, 1341, 1939, 1471, 1106, 1756, 161, 1978,
	101, 1876, 882, 883, 121, 119, 120, 1597, 1112, 126,
	1623, 127, 1047, 78, 885, 1361, 2002, 87, 934, 909,
	1365, 3323, 2502, 92, 3493, 3040, 2778, 643, 2150, 100,
	2150, 2151, 2152, 3349, 2532, 2531, 2194, 2500, 2800, 904,
	908, 587, 1715, 884, 3032, 3445, 79, 10, 122, 9,
	2995, 8, 89, 1000, 890, 93, 2564, 2565, 3086, 3350,
	1942, 128, 89, 3344, 3345, 648, 1017, 1018, 1019, 620,
	1022, 1023, 1024, 1025, 1003, 929, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 876, 924, 644, 2798, 923, 626, 89,
	2007, 2008, 3086, 1809, 1808, 2, 953, 1807, 874, 1806,
	954, 891, 1805, 1824, 1804, 1286, 977, 122, 898, 2804,
	1787, 978, 2374, 952, 951, 950, 646, 1796, 647, 2800,
	3440, 2675, 1302, 2641, 626, 1004, 1007, 1008, 184, 2404,
	2183, 3465, 2797, 1011, 3085, 1020, 3513, 105, 106, 107,
	945, 110, 3460, 1286, 116, 3483, 2522, 185, 940, 1502,
	582, 3345, 123, 2912, 145, 3449, 3447, 2911, 818, 819,
	820, 89, 818, 819, 820, 166, 2525, 620, 3299, 2343,
	869, 870, 871, 872, 2182, 122, 880, 2798, 3085, 1814,
	3448, 3446, 2854, 3242, 3241, 2181, 3045, 1002, 1001, 3046,
	922, 768, 769, 3474, 2127, 3252, 156, 3443, 3064, 3053,
	2804, 80, 144, 3388, 911, 912, 3399, 3395, 80, 617,
	2176, 82, 1296, 3251, 1853, 3063, 3424, 2239, 620, 2121,
	2801, 2874, 1612, 163, 2730, 2731, 164, 80, 80, 2455,
	2072, 2375, 2454, 620, 2729, 2456, 3328, 2539, 2540, 3429,
	2073, 2074, 132, 133, 155, 154, 183, 922, 768, 769,
	1296, 2418, 2563, 1538, 3427, 1539, 1299, 603, 1300, 1301,
	2038, 2236, 621, 3433, 3434, 1087, 1088, 1082, 867, 601,
	1109, 2750, 2751, 866, 3315, 1070, 2419, 3129, 3428, 89,
	1071, 3405, 2237, 1070, 2467, 3405, 89, 2503, 1071, 620,
	620, 2411, 2412, 1083, 1076, 2009, 1069, 1099, 1068, 1101,
	2091, 2090, 2832, 2943, 620, 89, 89, 2862, 2606, 598,
	2860, 2801, 1292, 1795, 634, 1284, 632, 638, 612, 2549,
	3466, 2836, 3274, 1479, 3275, 2510, 1046, 2158, 2825, 949,
	1021, 1056, 1057, 608, 1535, 2535, 2826, 1098, 1100, 3495,
	2215, 3467, 2216, 2197, 2217, 149, 130, 152, 137, 129,
	1292, 150, 151, 1103, 1731, 944, 1091, 167, 946, 1085,
	1086, 1089, 2120, 1059, 1052, 3034, 173, 138, 2551, 3033,
	621, 1090, 2218, 2834, 1797, 1798, 1799, 1108, 2749, 1084,
	1077, 141, 139, 134, 135, 136, 140, 947, 2833, 2202,
	2752, 1027, 1026, 131, 2208, 2205, 2207, 2206, 2209, 2210,
	2199, 2201, 142, 588, 1705, 590, 604, 2161, 623, 3226,
	622, 594, 3090, 592, 596, 605, 597, 3030, 591, 620,
	602, 621, 2051, 593, 606, 607, 610, 613, 614, 615,
	611, 609, 958, 600, 624, 1096, 621, 1736, 996, 1097,
	995, 994, 3441, 2200, 2203, 2036, 2037, 987, 1706, 1102,
	1707, 985, 184, 993, 957, 949, 992, 941, 958, 991,
	2640, 2038, 990, 2505, 943, 942, 2607, 915, 989, 984,
	1482, 1616, 997, 1095, 3514, 1054, 123, 1060, 145, 1332,
	1062, 2752, 933, 933, 158, 1006, 931, 1332, 970, 166,
	1278, 969, 621, 621, 39, 1005, 3472, 933, 925, 919,
	917, 969, 1335, 1336, 1337, 1338, 948, 621, 1080, 1748,
	2134, 910, 1349, 947, 1637, 1353, 2552, 3507, 2187, 2186,
	156, 1744, 1272, 2379, 2381, 1014, 144, 2771, 3322, 2501,
	3029, 2534, 976, 1610, 1066, 1104, 1072, 1073, 1074, 1075,
	1291, 1288, 1289, 1290, 1295, 1297, 1294, 163, 1293, 2237,
	164, 1609, 1343, 955, 1534, 925, 919, 917, 1287, 1110,
	1111, 1608, 153, 2520, 2568, 2537, 1625, 1626, 155, 154,
	183, 2504, 2251, 2555, 1745, 1606, 586, 815, 1291, 1288,
	1289, 1290, 1295, 1297, 1294, 2180, 1293, 815, 581, 2547,
	3311, 2944, 2546, 988, 2469, 2178, 1287, 986, 1333, 1334,
	2982, 757, 1050, 2962, 2451, 2414, 2351, 1856, 1267, 1526,
	1434, 1061, 2409, 2079, 2802, 2803, 1339, 1268, 1269, 2124,
	118, 1636, 621, 146, 815, 1332, 147, 2806, 3084, 1735,
	1329, 1877, 948, 975, 2728, 1717, 1716, 1718, 1719, 1720,
	83, 625, 3062, 2993, 2994, 1878, 2036, 2037, 1738, 893,
	1737, 1093, 1739, 1740, 3401, 1757, 159, 1107, 3401, 2125,
	1065, 3336, 618, 171, 2524, 635, 2123, 999, 1469, 149,
	1627, 152, 3084, 1624, 79, 150, 151, 619, 1281, 3025,
	1279, 167, 1280, 3400, 2956, 2198, 3432, 3400, 2380, 1363,
	173, 1364, 1463, 1503, 1505, 88, 113, 2238, 1367, 1741,
	2126, 1540, 88, 976, 179, 2802, 2803, 918, 2523, 1079,
	2122, 2558, 2592, 2896, 1282, 930, 2557, 937, 2806, 1067,
	1081, 88, 88, 1058, 1868, 1470, 2268, 2736, 1485, 1868,
	3431, 1055, 1489, 2493, 3505, 2558, 1486, 3506, 877, 3504,
	2557, 3475, 1483, 1302, 160, 165, 162, 168, 169, 170,
	172, 174, 175, 176, 177, 949, 1045, 976, 1300, 1301,
	178, 180, 181, 182, 918, 1301, 3125, 114, 1013, 3468,
	3000, 2999, 2737, 1875, 2165, 1646, 1732, 1826, 1733, 1645,
	2175, 1734, 1635, 1440, 1441, 1442, 1443, 1444, 2177, 1470,
	2173, 1827, 1330, 1331, 1825, 1487, 1488, 1094, 2739, 98,
	99, 1758, 1064, 1530, 975, 987, 2983, 1051, 158, 979,
	969, 1476, 2170, 2734, 981, 985, 1318, 2170, 982, 980,
	1049, 1547, 1324, 1325, 1327, 1326, 1328, 1329, 1502, 976,
	2750, 2751, 101, 1816, 1818, 1819, 889, 2735, 2851, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329,
	2174, 1613, 1614, 1615, 3366, 2172, 3304, 1817, 975, 1974,
	1643, 976, 3515, 1971, 969, 972, 973, 1973, 933, 3059,
	2741, 3060, 966, 970, 2243, 2244, 2245, 1299, 976, 1300,
	1301, 3509, 1484, 1473, 1629, 813, 153, 1678, 876, 1504,
	1681, 1507, 1683, 965, 1725, 1700, 874, 3234, 3367, 1622,
	3305, 1651, 3233, 1652, 1684, 1654, 1656, 3224, 1302, 1660,
	1662, 1664, 1666, 1668, 3075, 3074, 1641, 1048, 1690, 1691,
	3007, 1531, 1532, 3006, 1696, 1697, 1974, 1302, 1682, 2996,
	975, 2779, 948, 2767, 2475, 979, 969, 2749, 1640, 1729,
	981, 2474, 1605, 2130, 982, 980, 1302, 146, 3516, 2752,
	147, 1723, 1712, 1639, 1639, 1726, 1502, 2265, 1724, 1620,
	1619, 1618, 975, 1873, 1632, 983, 1753, 1874, 969, 972,
	973, 1762, 933, 1710, 2573, 1490, 966, 970, 1766, 975,
	159, 1012, 818, 819, 820, 1009, 1709, 171, 1686, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1759, 1760, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329, 1708,
	1764, 3479, 1502, 1917, 1698, 1722, 1711, 1771, 1772, 1773,
	1692, 1749, 1761, 1689, 2829, 1688, 1687, 1658, 179, 1765,
	2264, 1767, 1768, 1769, 1770, 2990, 626, 626, 1774, 1271,
	122, 1611, 1299, 1535, 1300, 1301, 952, 951, 950, 3469,
	1786, 2594, 2458, 626, 2146, 2145, 3331, 2575, 3330, 2738,
	3308, 1299, 3307, 1300, 1301, 3306, 1763, 1302, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 1302,
	1299, 1511, 1300, 1301, 178, 180, 181, 182, 2144, 2143,
	1785, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328,
	1329, 1784, 1909, 1898, 1899, 1900, 1901, 1911, 1902, 1903,
	1904, 1916, 1912, 1905, 1906, 1913, 1914, 1915, 1907, 1908,
	1910, 2142, 2141, 2585, 2584, 2583, 2577, 1512, 2581, 3229,
	2576, 3214, 2574, 2400, 3494, 1502, 1302, 2579, 1322, 1323,
	1324, 1325, 1327, 1326, 1328, 1329, 2578, 1851, 1851, 1852,
	3213, 3477, 1502, 3456, 1502, 3260, 1830, 95, 1302, 3124,
	2043, 2044, 1849, 1849, 2580, 2582, 1318, 3122, 96, 1314,
	3071, 1315, 1468, 1871, 1298, 1502, 1302, 1872, 1803, 1822,
	2852, 2400, 3394, 1302, 1467, 1316, 1330, 1331, 1313, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329,
	1302, 1299, 1466, 1300, 1301, 3004, 1469, 2400, 3374, 1933,
	2400, 3370, 1302, 1299, 1820, 1300, 1301, 2989, 1115, 2869,
	1115, 1115, 3259, 1502, 3218, 1343, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1304, 2742, 3357, 1502, 3217, 2746, 1967,
	1273, 1275, 1869, 3470, 1829, 2745, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2837,
	3255, 1823, 97, 1470, 1996, 1792, 1793, 3411, 1502, 767,
	1299, 2770, 1300, 1301, 2769, 1318, 2484, 2567, 2472, 2747,
	2305, 1503, 2003, 1302, 2743, 1502, 2258, 1979, 1465, 2744,
	1298, 1502, 1299, 2192, 1300, 1301, 2257, 1828, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329, 1302,
	1299, 1970, 1300, 1301, 2191, 2027, 95, 1299, 2033, 1300,
	1301, 1502, 189, 97, 3051, 189, 1855, 96, 631, 2015,
	1936, 2400, 3324, 637, 1299, 189, 1300, 1301, 1788, 1981,
	3043, 3321, 2511, 189, 1862, 1864, 1299, 1302, 1300, 1301,
	3237, 1502, 2400, 3225, 2489, 2020, 1754, 2021, 189, 1984,
	1985, 1879, 1880, 1881, 1882, 3043, 1502, 3409, 1502, 2400,
	3041, 2447, 2088, 1318, 1721, 1893, 2170, 1502, 2416, 1979,
	1929, 1713, 1502, 637, 189, 637, 1703, 98, 99, 1699,
	1940, 1302, 1695, 3407, 1502, 1980, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1327, 1326, 1328, 1329, 98, 99, 1694,
	2026, 2960, 1502, 2045, 1693, 2131, 1302, 1299, 1513, 1300,
	1301, 2049, 1302, 2052, 104, 1983, 1803, 1105, 1986, 1987,
	2416, 1981, 3319, 2053, 2448, 103, 1302, 102, 2097, 2098,
	2099, 2100, 2423, 1299, 2450, 1300, 1301, 1302, 2087, 2092,
	2424, 2093, 2094, 2095, 2096, 890, 2316, 1502, 2004, 2760,
	2759, 2082, 2064, 2014, 1940, 2955, 2083, 2103, 2104, 2105,
	2106, 1298, 1480, 1481, 2957, 3283, 1502, 1302, 2756, 2757,
	2690, 1299, 2025, 1300, 1301, 2756, 2755, 2048, 2028, 2424,
	1502, 2955, 2159, 2113, 1302, 2237, 2533, 2424, 2086, 3362,
	3281, 1502, 2955, 2046, 2119, 1502, 2977, 924, 1524, 2070,
	923, 2069, 2068, 1318, 1601, 2514, 2507, 2508, 2085, 2084,
	3278, 1502, 3335, 1542, 2400, 1299, 2424, 1300, 1301, 2400,
	2399, 3264, 1502, 2916, 2129, 2311, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1327, 1326, 1328, 1329, 2723, 2156, 2758,
	1299, 2171, 1300, 1301, 2114, 2663, 1299, 2237, 1300, 1301,
	2071, 2931, 1502, 2447, 2109, 2110, 930, 2261, 1502, 2261,
	1299, 2128, 1300, 1301, 2132, 2140, 2316, 2164, 2924, 1502,
	2167, 1299, 2168, 1300, 1301, 1650, 1650, 1302, 1650, 2114,
	1650, 1650, 1302, 1659, 1650, 1650, 1650, 1650, 1650, 2162,
	2163, 2184, 2166, 977, 2292, 2396, 1854, 1502, 978, 2170,
	930, 1299, 2188, 1300, 1301, 2185, 2189, 2190, 1639, 103,
	97, 2291, 1803, 1601, 1600, 2170, 2448, 2153, 1299, 2204,
	1300, 1301, 2041, 104, 1546, 1545, 2237, 2219, 2220, 1506,
	2005, 2224, 1854, 1800, 103, 1727, 102, 1743, 1533, 879,
	2227, 960, 959, 89, 3437, 97, 3377, 2230, 2195, 3248,
	1509, 1750, 3215, 3136, 3008, 3024, 2254, 2248, 3021, 3002,
	2259, 2921, 1502, 2262, 2879, 2263, 2919, 1502, 2261, 2878,
	2270, 1603, 2112, 2233, 2272, 2273, 2274, 1302, 1298, 2827,
	2784, 1822, 2780, 2515, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 1115, 2228, 2229, 1302, 2221, 2255,
	2231, 2108, 2782, 1302, 1502, 3009, 3010, 3011, 1302, 2232,
	2102, 1299, 2101, 1300, 1301, 1728, 1299, 89, 1300, 1301,
	2296, 2297, 2298, 2299, 2300, 2295, 2302, 2253, 1634, 1630,
	2304, 1599, 2307, 2308, 115, 2309, 2481, 1050, 1302, 2831,
	2314, 3249, 2315, 2480, 2127, 2247, 2318, 2249, 2967, 2968,
	2322, 1981, 2235, 2018, 2327, 2328, 2329, 2330, 3489, 3487,
	3463, 2885, 1502, 1823, 3343, 3269, 2970, 2341, 1790, 2344,
	2345, 2246, 2776, 1674, 2775, 2774, 1510, 2347, 2349, 2690,
	3012, 2867, 1502, 2494, 2352, 2353, 2354, 2355, 2356, 1302,
	2222, 2481, 2371, 1502, 2973, 2363, 2364, 2972, 2365, 1302,
	2709, 2368, 2370, 2027, 2712, 2372, 2708, 1980, 1670, 2713,
	2267, 1299, 1302, 1300, 1301, 2384, 1302, 3339, 3250, 2032,
	1851, 2385, 2369, 1502, 1675, 1676, 1677, 3013, 3014, 3015,
	1791, 1299, 2024, 1300, 1301, 1849, 1302, 1299, 2961, 1300,
	1301, 189, 1299, 189, 1300, 1301, 189, 2303, 1302, 2668,
	2667, 3303, 2275, 3115, 1302, 1671, 1672, 1673, 1115, 1115,
	1302, 2714, 3117, 2433, 2434, 2710, 1515, 2301, 2383, 2290,
	2711, 2951, 1299, 2926, 1300, 1301, 637, 2677, 637, 637,
	894, 2948, 2256, 2348, 1502, 1318, 1302, 2250, 895, 2947,
	2420, 1742, 865, 2754, 39, 1302, 2331, 1502, 637, 637,
	2323, 1502, 2401, 2440, 2465, 2386, 2485, 2388, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329, 1016,
	1015, 1502, 2845, 1299, 1845, 1300, 1301, 95, 1302, 1345,
	2480, 2397, 1514, 1299, 1302, 1300, 1301, 2561, 96, 3222,
	1476, 2410, 2680, 2682, 2373, 1861, 1299, 2444, 1300, 1301,
	1299, 2683, 1300, 1301, 1302, 3106, 1270, 3105, 95, 2521,
	2439, 123, 2468, 2470, 2953, 97, 2393, 2398, 3501, 96,
	1299, 3026, 1300, 1301, 2506, 1302, 1894, 1895, 2413, 2922,
	2772, 1877, 1299, 2445, 1300, 1301, 3416, 2461, 1299, 97,
	1300, 1301, 2043, 2044, 1299, 1878, 1300, 1301, 3320, 2449,
	2225, 3244, 2530, 2753, 2452, 3104, 2437, 2029, 2483, 2214,
	2459, 2119, 2894, 2486, 2487, 2213, 1302, 2492, 2890, 2212,
	1299, 2211, 1300, 1301, 1302, 2462, 1115, 902, 903, 1299,
	2473, 1300, 1301, 2666, 2933, 3291, 1302, 2241, 2876, 3112,
	102, 2665, 3290, 1302, 2482, 3272, 3123, 3121, 1302, 3120,
	104, 3113, 1302, 2490, 2495, 2496, 2497, 2491, 3022, 2528,
	2476, 103, 1299, 102, 1300, 1301, 2527, 1302, 1299, 1345,
	1300, 1301, 1302, 2952, 2019, 2950, 2596, 2597, 2598, 2599,
	2600, 2570, 1622, 2541, 2542, 2543, 2544, 2545, 1299, 2785,
	1300, 1301, 2154, 1617, 901, 2605, 103, 2516, 2517, 104,
	2875, 2031, 2941, 104, 2416, 1803, 2554, 2526, 2872, 1299,
	103, 1300, 1301, 3094, 103, 1524, 102, 2396, 1115, 2608,
	2367, 2562, 3491, 3490, 2586, 97, 189, 2366, 2293, 2016,
	637, 637, 2362, 1527, 2550, 1519, 2361, 3490, 930, 3491,
	2601, 2553, 108, 109, 3309, 2559, 189, 2988, 2560, 2569,
	1299, 2360, 1300, 1301, 892, 3, 2359, 91, 1299, 1,
	1300, 1301, 2992, 3426, 599, 2006, 637, 1474, 3464, 189,
	1299, 2571, 1300, 1301, 2587, 2589, 3422, 1299, 3423, 1300,
	1301, 637, 1299, 1714, 1300, 1301, 1299, 189, 1300, 1301,
	2642, 1704, 3054, 937, 2647, 1941, 3245, 2788, 2160, 3020,
	2644, 1299, 2117, 1300, 1301, 968, 1299, 148, 1300, 1301,
	2080, 2081, 3390, 112, 926, 111, 971, 1970, 1078, 1970,
	930, 2610, 2699, 2155, 637, 3044, 937, 2466, 2616, 2089,
	1552, 1550, 1551, 1549, 1554, 1553, 2588, 1345, 2853, 2717,
	2718, 2294, 2895, 637, 637, 1794, 637, 633, 637, 637,
	2436, 637, 637, 637, 637, 637, 637, 2647, 2670, 627,
	186, 1541, 2702, 2646, 1345, 881, 1520, 1345, 637, 1345,
	189, 2908, 2722, 930, 2687, 2696, 1010, 2643, 1845, 2645,
	589, 2761, 1845, 1845, 2193, 1489, 2440, 595, 2671, 2662,
	189, 2693, 2658, 1350, 1789, 2618, 2693, 2620, 2664, 2453,
	921, 913, 2672, 637, 2669, 189, 2017, 2387, 920, 2684,
	2685, 2698, 2945, 2631, 2632, 2633, 2634, 2676, 2678, 637,
	2403, 189, 882, 883, 2681, 2704, 2705, 2703, 2707, 2701,
	2706, 2674, 3302, 2715, 3114, 2808, 1302, 189, 2724, 3375,
	1302, 2725, 2719, 2720, 189, 2463, 1753, 2726, 98, 99,
	2659, 2660, 2661, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 637, 1516, 2915, 2266, 2732, 2847, 2765, 2766,
	2764, 2763, 2762, 2626, 2627, 2628, 2629, 2630, 2773, 1866,
	1340, 2058, 3089, 2787, 1815, 658, 2234, 2864, 2865, 2866,
	657, 2868, 2870, 2815, 2816, 1302, 2807, 655, 2849, 2389,
	1302, 2417, 1305, 803, 2811, 2877, 2377, 2822, 2119, 1302,
	2881, 2882, 2883, 2884, 2886, 2887, 2888, 2786, 2823, 2889,
	2358, 2891, 2892, 2893, 2357, 1302, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2839, 2841, 2840, 2842,
	2838, 1528, 2428, 2426, 2913, 2425, 2223, 2917, 1115, 2918,
	2920, 2065, 2923, 2925, 2969, 2927, 2928, 2929, 2930, 2855,
	2856, 2965, 2857, 2936, 2858, 2859, 2848, 2861, 3418, 2863,
	1299, 2060, 1300, 1301, 1299, 2056, 1300, 1301, 2395, 2346,
	756, 755, 2910, 667, 2340, 659, 1302, 651, 754, 2914,
	753, 2985, 2814, 2339, 3402, 2843, 2844, 2536, 2958, 2959,
	2828, 2538, 2963, 1302, 2429, 2432, 2433, 2434, 2430, 2338,
	2431, 2435, 2464, 1302, 2967, 2968, 2824, 1283, 1492, 645,
	2975, 2976, 939, 2850, 3326, 2240, 637, 637, 1302, 1299,
	2873, 1300, 1301, 2939, 1299, 1491, 1300, 1301, 1896, 1897,
	2934, 2935, 3333, 1299, 189, 1300, 1301, 2796, 2938, 3038,
	2777, 2512, 2937, 2942, 2147, 65, 2949, 43, 3297, 1299,
	3363, 1300, 1301, 752, 1302, 749, 2964, 3091, 2954, 1302,
	2337, 3092, 3093, 1302, 2638, 2639, 3346, 2974, 3347, 748,
	3348, 1924, 2971, 640, 1302, 3439, 1274, 2336, 2980, 2981,
	1302, 90, 637, 34, 1302, 33, 2978, 2335, 32, 1302,
	31, 30, 1345, 25, 3027, 3028, 2986, 2815, 2816, 24,
	3042, 2987, 2334, 637, 23, 2979, 2390, 22, 1302, 1345,
	1299, 21, 1300, 1301, 3003, 27, 3005, 2405, 3048, 3049,
	20, 1302, 19, 18, 2997, 2998, 3001, 1299, 1302, 1300,
	1301, 2799, 3459, 3500, 637, 637, 117, 1299, 2333, 1300,
	1301, 3061, 52, 2332, 3065, 3016, 49, 2326, 3017, 3018,
	3019, 1302, 1299, 47, 1300, 1301, 125, 124, 2325, 2429,
	2432, 2433, 2434, 2430, 2324, 2431, 2435, 50, 2321, 46,
	1053, 3076, 44, 2320, 3050, 29, 3031, 1302, 28, 17,
	3035, 3036, 3037, 16, 1982, 15, 3080, 14, 1299, 13,
	1300, 1301, 2319, 1299, 1302, 1300, 1301, 1299, 3088, 1300,
	1301, 12, 11, 7, 6, 2317, 3095, 37, 1299, 2488,
	1300, 1301, 2313, 649, 1299, 3066, 1300, 1301, 1299, 36,
	1300, 1301, 3070, 1299, 35, 1300, 1301, 189, 1277, 26,
	4, 2499, 637, 2149, 0, 2312, 2031, 0, 0, 0,
	0, 0, 1299, 2513, 1300, 1301, 0, 0, 0, 0,
	0, 0, 2518, 3087, 3109, 1299, 189, 1300, 1301, 637,
	0, 2310, 1299, 1302, 1300, 1301, 0, 0, 1302, 189,
	0, 1851, 3138, 637, 0, 0, 1982, 189, 2306, 189,
	0, 189, 189, 0, 0, 1299, 1849, 1300, 1301, 3130,
	0, 3110, 0, 39, 0, 0, 637, 3132, 0, 0,
	0, 3119, 3118, 2696, 3134, 3128, 0, 2696, 3126, 0,
	0, 1299, 0, 1300, 1301, 0, 900, 0, 2693, 906,
	906, 0, 0, 0, 0, 0, 0, 0, 1299, 3236,
	1300, 1301, 3139, 3140, 3223, 3142, 0, 0, 3243, 0,
	1845, 0, 0, 0, 0, 0, 0, 2271, 0, 0,
	0, 637, 2260, 0, 0, 0, 3078, 0, 3253, 3254,
	0, 3256, 0, 3257, 3258, 0, 3221, 3219, 3261, 3262,
	3263, 3220, 3265, 3268, 3266, 0, 3227, 3267, 637, 0,
	1851, 3270, 3235, 0, 637, 3240, 3247, 1845, 3277, 3279,
	3280, 3282, 3284, 3285, 3287, 1849, 3239, 1299, 0, 1300,
	1301, 0, 1299, 0, 1300, 1301, 0, 0, 0, 0,
	3230, 3231, 3232, 184, 0, 1500, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 2636, 0, 0, 0, 3271,
	1497, 637, 3317, 1115, 3273, 0, 637, 123, 3276, 0,
	637, 637, 3295, 0, 0, 0, 3313, 3294, 3292, 3293,
	166, 0, 0, 0, 0, 2022, 2023, 1499, 0, 1498,
	0, 0, 0, 0, 1650, 3310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2696, 1500, 1496, 189, 3316,
	0, 0, 2673, 3312, 0, 189, 0, 0, 0, 0,
	0, 1497, 0, 189, 189, 0, 1115, 189, 0, 189,
	0, 0, 0, 2700, 1650, 0, 189, 0, 163, 0,
	0, 164, 0, 189, 0, 0, 1493, 1494, 1499, 0,
	1498, 0, 0, 0, 0, 3318, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3342, 3337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3332, 0,
	0, 0, 3325, 0, 3334, 3329, 0, 3358, 39, 3301,
	0, 0, 0, 3359, 3360, 0, 0, 0, 0, 930,
	0, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 1345, 3371, 1982, 0, 3352, 0,
	0, 3353, 0, 0, 0, 0, 0, 0, 3361, 0,
	0, 0, 0, 3338, 0, 0, 0, 0, 0, 0,
	0, 3396, 3397, 0, 0, 0, 0, 0, 3368, 0,
	0, 0, 167, 0, 0, 3406, 3408, 3410, 3404, 3403,
	3376, 173, 3381, 0, 39, 3386, 3389, 3383, 3382, 3380,
	3385, 3384, 3378, 0, 0, 3373, 0, 0, 3247, 3391,
	3438, 0, 2693, 0, 0, 0, 0, 3414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3417,
	3435, 3425, 3430, 0, 0, 0, 0, 0, 0, 3404,
	3403, 3444, 0, 0, 0, 0, 0, 3442, 0, 3455,
	0, 0, 0, 0, 0, 0, 0, 2909, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 3453, 0, 0,
	3341, 3458, 0, 0, 0, 0, 0, 0, 3351, 0,
	0, 3476, 3478, 3480, 0, 0, 0, 3471, 0, 3473,
	0, 0, 0, 1851, 3485, 189, 0, 0, 0, 0,
	3481, 0, 3484, 189, 3482, 3488, 3486, 0, 1849, 158,
	0, 0, 3499, 0, 637, 3404, 3403, 3496, 0, 0,
	0, 0, 3502, 0, 0, 637, 3510, 0, 3511, 3512,
	3508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 3517, 189,
	3519, 3520, 0, 189, 3267, 3518, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 1303, 0, 2031, 2031, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 189, 123, 0, 145, 0, 0, 0,
	189, 0, 0, 1358, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 637, 0, 3055, 3056, 3057, 3058, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 144, 0, 1345, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 171, 189,
	189, 189, 189, 189, 0, 163, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 189, 0, 1625, 1626, 155, 154, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	0, 0, 3131, 0, 3133, 178, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 1627, 152,
	0, 1624, 0, 150, 151, 0, 0, 0, 0, 167,
	0, 0, 0, 637, 0, 0, 0, 0, 173, 0,
	0, 637, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 3238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 189, 0, 0, 0,
	637, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 1345, 123,
	0, 637, 637, 1345, 189, 189, 189, 189, 189, 0,
	0, 0, 166, 0, 0, 3288, 189, 0, 0, 3288,
	3288, 189, 0, 0, 189, 0, 189, 0, 0, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 2031, 0,
	0, 0, 0, 0, 0, 2460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 164, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	1345, 0, 0, 183, 0, 637, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 2031, 0, 0,
	0, 0, 189, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 3365, 0, 173, 0, 637, 0, 0, 159, 0,
	0, 0, 0, 3369, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 1115, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 3412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 160, 165, 162, 168,
	169, 170, 172, 174, 175, 176, 177, 0, 0, 0,
	0, 0, 178, 180, 181, 182, 0, 3365, 0, 0,
	0, 158, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1811, 1812, 1813, 0, 0, 0, 2031,
	0, 189, 0, 0, 189, 189, 189, 0, 0, 0,
	0, 0, 0, 0, 637, 637, 2909, 0, 3420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1858, 0, 0, 0, 1860, 0, 906, 906,
	1865, 0, 0, 0, 1870, 814, 0, 0, 81, 0,
	0, 637, 637, 637, 637, 0, 0, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 0, 3457, 0,
	0, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1569, 1930,
	1931, 1932, 0, 1934, 1935, 0, 1937, 1938, 0, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 0, 1968, 0, 1975, 1976, 906, 0, 906,
	906, 906, 906, 906, 0, 878, 0, 81, 0, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 0, 1997, 1998,
	1999, 2000, 2001, 159, 0, 0, 878, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 906, 0, 0, 0,
	637, 0, 637, 0, 0, 0, 1569, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 2039, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 0, 0, 637, 0, 0, 178, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 637, 637, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 1583, 1586, 1587, 1588, 1589, 1590, 1591, 0,
	1592, 1593, 1594, 1595, 1596, 1571, 1572, 1573, 1574, 1555,
	1556, 1584, 0, 1558, 0, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 0, 0, 1568, 1575, 1576, 1577,
	1578, 0, 1579, 1580, 1581, 1582, 0, 0, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 189,
	1583, 1586, 1587, 1588, 1589, 1590, 1591, 0, 1592, 1593,
	1594, 1595, 1596, 1571, 1572, 1573, 1574, 1555, 1556, 1584,
	0, 1558, 0, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 0, 0, 1568, 1575, 1576, 1577, 1578, 0,
	1579, 1580, 1581, 1582, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 637, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 2269, 0, 0, 637, 637, 0, 0, 0,
	0, 0, 0, 2276, 2277, 2278, 2279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 637, 0, 616, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 636, 0, 1585, 0, 0, 637, 0, 0,
	0, 0, 1113, 0, 1113, 1113, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 1342, 1347, 1348, 0, 1351,
	0, 1352, 1354, 1355, 1356, 1518, 1359, 1360, 1362, 1362,
	0, 1362, 1366, 1366, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 0,
	0, 0, 0, 1433, 0, 1435, 1436, 1437, 1438, 1439,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 1366,
	1366, 1366, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3160, 3162, 3161, 3179, 3180, 3181, 3182, 3183,
	3184, 3185, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1478, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 878, 0, 2566, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 906, 0, 0, 2590, 2591,
	0, 0, 2593, 0, 0, 2595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	0, 1974, 0, 0, 817, 2602, 2603, 2604, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 2609, 0, 0,
	2611, 0, 0, 0, 2612, 2613, 2614, 2615, 0, 0,
	1944, 2617, 0, 0, 2619, 0, 0, 2621, 2622, 2623,
	2624, 0, 0, 0, 0, 2625, 1944, 1944, 1944, 1944,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 906, 0, 0, 0, 0, 0,
	0, 2648, 2649, 2650, 2651, 2652, 2653, 0, 0, 0,
	2654, 2655, 0, 2656, 0, 2657, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 0, 0,
	2688, 0, 0, 0, 0, 0, 0, 0, 0, 3166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3174, 3175, 0, 2721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 41, 42, 82, 0, 0, 0, 1113, 0,
	0, 0, 0, 636, 1266, 636, 636, 0, 0, 0,
	0, 86, 0, 0, 0, 45, 71, 72, 0, 69,
	73, 0, 0, 0, 0, 636, 636, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 772, 2783, 685, 776,
	687, 773, 774, 0, 683, 686, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 704, 705, 3159, 3163, 3164, 3165, 3176, 3177,
	3178, 3186, 3188, 737, 3187, 3189, 3190, 3191, 3194, 3195,
	3196, 3197, 3192, 3193, 3198, 3143, 3147, 3144, 3145, 3146,
	3158, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
	3157, 3199, 3200, 3201, 3202, 3203, 3204, 3167, 3171, 3170,
	3168, 3169, 3172, 3173, 0, 0, 0, 0, 2871, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 778, 0,
	0, 782, 2880, 0, 0, 784, 783, 0, 785, 751,
	750, 0, 0, 779, 780, 0, 781, 0, 0, 0,
	0, 0, 1113, 1113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 51, 54, 53,
	56, 0, 68, 0, 0, 77, 74, 0, 0, 0,
	0, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 85,
	84, 0, 0, 66, 67, 55, 0, 0, 0, 0,
	0, 75, 76, 0, 0, 0, 0, 636, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 636, 61, 62, 63, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 3023, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3047, 0, 0,
	0, 636, 0, 1633, 0, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 1344, 1644, 0, 0, 1647, 1648,
	636, 636, 0, 636, 0, 636, 636, 0, 636, 636,
	636, 636, 636, 636, 0, 758, 0, 0, 0, 0,
	0, 1344, 1679, 1680, 1344, 636, 1344, 0, 1685, 0,
	0, 3067, 0, 3068, 0, 0, 3069, 0, 0, 3072,
	3073, 0, 0, 0, 0, 0, 0, 0, 0, 3077,
	0, 0, 0, 83, 0, 0, 0, 2059, 3079, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 585, 0, 1746, 0, 0, 636, 0, 0, 0,
	3096, 585, 0, 3097, 0, 3098, 3099, 0, 3100, 585,
	3101, 816, 0, 0, 0, 3102, 817, 0, 0, 0,
	0, 1850, 0, 0, 888, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 636,
	3127, 907, 907, 0, 0, 0, 0, 938, 0, 0,
	585, 3135, 0, 0, 3137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 816, 3141, 0,
	0, 804, 817, 818, 819, 820, 805, 808, 0, 0,
	938, 806, 807, 0, 0, 0, 3216, 0, 0, 0,
	0, 0, 0, 0, 0, 813, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	0, 0, 2817, 2818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 3300, 0, 0, 0,
	0, 0, 0, 636, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2242, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	636, 0, 0, 0, 0, 0, 1344, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 2820, 2821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3354, 0, 0, 3355, 0, 3356, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 776, 0, 773, 774, 0, 0, 0, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 2350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 0, 0,
	636, 3436, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 3450, 0, 3451, 0, 3452, 2421, 2422, 0, 0,
	0, 0, 0, 0, 0, 2441, 0, 2442, 2443, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 585,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 2137, 2138, 2139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3497, 0, 3498, 0, 636, 0, 0, 0, 0,
	0, 636, 1642, 0, 0, 1642, 0, 1642, 0, 0,
	0, 89, 0, 2169, 816, 0, 0, 0, 804, 817,
	818, 819, 820, 805, 808, 0, 0, 0, 806, 807,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 813, 821, 822, 0, 0, 2519, 636, 0,
	0, 0, 0, 636, 0, 0, 0, 636, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2817,
	2818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 2819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2635,
	0, 1344, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 2820, 2821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 2697, 0, 81, 0, 0,
	2059, 2059, 2059, 2059, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2441, 878, 0,
	0, 0, 2059, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1346, 0, 1346, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2805, 0,
	0, 636, 0, 0, 0, 0, 1701, 0, 2813, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 2457, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	1776, 585, 585, 585, 585, 585, 585, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 1642, 1642, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 2529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	907, 907, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 1344, 0, 0, 636, 636,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 907,
	1752, 907, 907, 907, 907, 907, 0, 0, 3103, 0,
	3107, 3108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2697, 0, 81, 0, 2697, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 2768, 0, 0, 0, 0, 0, 907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 636, 0, 0, 1344, 0, 0,
	0, 0, 636, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 1752, 585, 0, 585, 0, 585, 2067, 0,
	0, 0, 0, 0, 0, 0, 3228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 2697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 585, 3327, 0, 0, 0, 0, 0, 2991, 585,
	585, 0, 0, 585, 0, 2226, 0, 0, 0, 0,
	81, 0, 585, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 636, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3372, 0, 0, 0, 0, 81, 0, 636, 636,
	636, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 636, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 585, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 636, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 636, 0, 0, 2498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 585, 585, 585, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 585, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 907, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 1346, 0, 0, 0, 0, 1346,
	585, 585, 585, 585, 585, 0, 0, 0, 0, 0,
	0, 0, 2716, 0, 636, 0, 0, 585, 0, 0,
	1701, 0, 585, 0, 0, 585, 2727, 1752, 0, 0,
	0, 636, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	585, 585, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 1701, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 3392, 626, 0, 0, 0, 0, 3393, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 2728,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 2686,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 2047,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	1249, 1234, 495, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 398, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 412, 1167, 196, 1215, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1258, 354, 1201, 0, 475, 383, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 500, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 384, 244, 0, 1232, 1242, 1175,
	540, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 394, 440, 452, 1237, 1149,
	1158, 242, 1156, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1198, 1217, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1129,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1144, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1233, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1222, 1264, 407, 451,
	230, 521, 474, 1139, 1143, 1137, 1204, 1138, 1193, 1194,
	1140, 1255, 1256, 1257, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244,
	1245, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1197, 190, 211, 352, 1260, 433, 275, 558, 531,
	526, 197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169,
	1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216,
	1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	361, 1196, 1202, 364, 268, 291, 306, 1211, 530, 480,
	217, 445, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1192, 1220, 359, 496, 497, 302, 379, 0, 0, 0,
	0, 0, 495, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 668,
	0, 0, 0, 257, 673, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	680, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 676, 677, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 816, 800, 768, 769, 804, 817, 818, 819,
	820, 805, 808, 0, 0, 228, 806, 807, 235, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	813, 821, 822, 0, 252, 307, 259, 251, 500, 0,
	0, 1926, 1927, 1928, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 761, 0, 0,
	540, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 810, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 811, 812, 243, 560, 714, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 722, 723, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 715, 719, 718, 716, 717, 720,
	721, 669, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 515, 544, 0,
	361, 0, 0, 364, 268, 291, 306, 0, 530, 480,
	217, 445, 277, 240, 815, 0, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	379, 0, 359, 496, 497, 302, 495, 0, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 668, 0, 0, 0, 257, 673, 0,
	0, 0, 350, 254, 0, 0, 412, 0, 196, 0,
	465, 241, 360, 357, 503, 269, 260, 256, 239, 303,
	368, 410, 485, 404, 680, 354, 0, 0, 475, 383,
	0, 0, 0, 0, 0, 676, 677, 0, 0, 0,
	0, 0, 0, 2075, 0, 309, 237, 311, 195, 395,
	476, 273, 0, 89, 0, 0, 816, 800, 768, 769,
	804, 817, 818, 819, 820, 805, 808, 0, 0, 228,
	806, 807, 235, 708, 710, 709, 727, 728, 729, 730,
	731, 732, 733, 706, 813, 821, 822, 2076, 252, 307,
	259, 251, 500, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 650, 665,
	0, 679, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 663, 0, 0, 0, 0, 762, 0, 664,
	0, 0, 672, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 384, 244,
	0, 761, 0, 0, 540, 0, 0, 759, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 394,
	440, 452, 0, 0, 0, 810, 0, 450, 408, 519,
	223, 271, 437, 414, 448, 421, 274, 0, 0, 449,
	355, 505, 431, 516, 541, 542, 250, 388, 528, 489,
	536, 557, 216, 247, 402, 482, 522, 472, 380, 501,
	502, 315, 471, 282, 194, 353, 547, 214, 458, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 811, 812, 243, 560,
	714, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 722, 723, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 772, 760, 685,
	776, 687, 773, 774, 682, 683, 686, 775, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 763, 671, 670,
	0, 678, 0, 704, 705, 707, 711, 712, 713, 724,
	725, 726, 734, 736, 737, 735, 738, 739, 740, 743,
	744, 745, 746, 741, 742, 747, 688, 692, 689, 690,
	691, 703, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 786, 787, 788, 789, 790, 791, 715, 719,
	718, 716, 717, 720, 721, 669, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 777, 249, 778,
	0, 0, 782, 0, 0, 0, 784, 783, 0, 785,
	751, 750, 0, 0, 779, 780, 0, 781, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 792, 793, 794, 795, 796, 797, 798, 799,
	286, 515, 544, 0, 361, 0, 0, 364, 268, 291,
	306, 0, 530, 480, 217, 445, 277, 240, 815, 0,
	202, 236, 220, 246, 261, 264, 310, 374, 382, 411,
	416, 283, 258, 234, 438, 231, 463, 486, 487, 488,
	490, 378, 253, 415, 0, 379, 359, 496, 497, 302,
	80, 495, 0, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 668, 0,
	0, 0, 257, 673, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 680,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	676, 677, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 89, 0,
	0, 816, 800, 768, 769, 804, 817, 818, 819, 820,
	805, 808, 0, 0, 228, 806, 807, 235, 708, 710,
	709, 727, 728, 729, 730, 731, 732, 733, 706, 813,
	821, 822, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 650, 665, 0, 679, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 663, 0, 0,
	0, 0, 762, 0, 664, 0, 0, 672, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 761, 0, 0, 540,
	0, 0, 759, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	810, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 811, 812, 243, 560, 714, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	722, 723, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 772, 760, 685, 776, 687, 773, 774, 682,
	683, 686, 775, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 763, 671, 670, 0, 678, 0, 704, 705,
	707, 711, 712, 713, 724, 725, 726, 734, 736, 737,
	735, 738, 739, 740, 743, 744, 745, 746, 741, 742,
	747, 688, 692, 689, 690, 691, 703, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 786, 787, 788,
	789, 790, 791, 715, 719, 718, 716, 717, 720, 721,
	669, 190, 211, 352, 88, 433, 275, 558, 531, 526,
	197, 213, 777, 249, 778, 0, 0, 782, 0, 0,
	0, 784, 783, 0, 785, 751, 750, 0, 0, 779,
	780, 0, 781, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 792, 793, 794,
	795, 796, 797, 798, 799, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 815, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 668, 0, 0, 0, 257, 673, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 680, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 676, 677, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 89, 0, 0, 816, 800, 768, 769, 804,
	817, 818, 819, 820, 805, 808, 0, 0, 228, 806,
	807, 235, 708, 710, 709, 727, 728, 729, 730, 731,
	732, 733, 706, 813, 821, 822, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 650, 665, 0,
	679, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 663, 0, 0, 0, 0, 762, 0, 664, 0,
	0, 672, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	761, 0, 0, 540, 0, 0, 759, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 810, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 3379, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 811, 812, 243, 560, 714,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 722, 723, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 772, 760, 685, 776,
	687, 773, 774, 682, 683, 686, 775, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 763, 671, 670, 0,
	678, 0, 704, 705, 707, 711, 712, 713, 724, 725,
	726, 734, 736, 737, 735, 738, 739, 740, 743, 744,
	745, 746, 741, 742, 747, 688, 692, 689, 690, 691,
	703, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 786, 787, 788, 789, 790, 791, 715, 719, 718,
	716, 717, 720, 721, 669, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 777, 249, 778, 0,
	0, 782, 0, 0, 0, 784, 783, 0, 785, 751,
	750, 0, 0, 779, 780, 0, 781, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 792, 793, 794, 795, 796, 797, 798, 799, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 815, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 668, 0, 0, 0,
	257, 673, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 680, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 676, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 1502, 816,
	800, 768, 769, 804, 817, 818, 819, 820, 805, 808,
	0, 0, 228, 806, 807, 235, 708, 710, 709, 727,
	728, 729, 730, 731, 732, 733, 706, 813, 821, 822,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 650, 665, 0, 679, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 663, 0, 0, 0, 0,
	762, 0, 664, 0, 0, 672, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 761, 0, 0, 540, 0, 0,
	759, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 810, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 811,
	812, 243, 560, 714, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 722, 723,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	772, 760, 685, 776, 687, 773, 774, 682, 683, 686,
	775, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	763, 671, 670, 0, 678, 0, 704, 705, 707, 711,
	712, 713, 724, 725, 726, 734, 736, 737, 735, 738,
	739, 740, 743, 744, 745, 746, 741, 742, 747, 688,
	692, 689, 690, 691, 703, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 786, 787, 788, 789, 790,
	791, 715, 719, 718, 716, 717, 720, 721, 669, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	777, 249, 778, 0, 0, 782, 0, 0, 0, 784,
	783, 0, 785, 751, 750, 0, 0, 779, 780, 0,
	781, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 792, 793, 794, 795, 796,
	797, 798, 799, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 815, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	668, 0, 0, 0, 257, 673, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 680, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 676, 677, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	89, 0, 0, 816, 800, 768, 769, 804, 817, 818,
	819, 820, 805, 808, 0, 0, 228, 806, 807, 235,
	708, 710, 709, 727, 728, 729, 730, 731, 732, 733,
	706, 813, 821, 822, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 650, 665, 0, 679, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 663,
	905, 0, 0, 0, 762, 0, 664, 0, 0, 672,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 761, 0,
	0, 540, 0, 0, 759, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 810, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 811, 812, 243, 560, 714, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 722, 723, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 772, 760, 685, 776, 687, 773,
	774, 682, 683, 686, 775, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 763, 671, 670, 0, 678, 0,
	704, 705, 707, 711, 712, 713, 724, 725, 726, 734,
	736, 737, 735, 738, 739, 740, 743, 744, 745, 746,
	741, 742, 747, 688, 692, 689, 690, 691, 703, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 786,
	787, 788, 789, 790, 791, 715, 719, 718, 716, 717,
	720, 721, 669, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 777, 249, 778, 0, 0, 782,
	0, 0, 0, 784, 783, 0, 785, 751, 750, 0,
	0, 779, 780, 0, 781, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 792,
	793, 794, 795, 796, 797, 798, 799, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 815, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 680, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 816, 800, 768,
	769, 804, 817, 818, 819, 820, 805, 808, 0, 0,
	228, 806, 807, 235, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 813, 821, 822, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 0, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 761, 0, 0, 540, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 810, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 811, 812, 243,
	560, 714, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 722, 723, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 772, 760,
	685, 776, 687, 773, 774, 682, 683, 686, 775, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 763, 671,
	670, 0, 678, 0, 704, 705, 707, 711, 712, 713,
	724, 725, 726, 734, 736, 737, 735, 738, 739, 740,
	743, 744, 745, 746, 741, 742, 747, 688, 692, 689,
	690, 691, 703, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 786, 787, 788, 789, 790, 791, 715,
	719, 718, 716, 717, 720, 721, 669, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 777, 249,
	778, 0, 0, 782, 0, 0, 0, 784, 783, 0,
	785, 751, 750, 0, 0, 779, 780, 0, 781, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 792, 793, 794, 795, 796, 797, 798,
	799, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 815,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 668, 0,
	0, 0, 257, 673, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 680,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	676, 677, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 89, 0,
	0, 816, 800, 768, 769, 804, 817, 818, 819, 820,
	805, 808, 0, 0, 228, 806, 807, 235, 708, 710,
	709, 727, 728, 729, 730, 731, 732, 733, 706, 813,
	821, 822, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 679, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 663, 0, 0,
	0, 0, 762, 0, 664, 0, 0, 672, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 761, 0, 0, 540,
	0, 0, 759, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	810, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 811, 812, 243, 560, 714, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	722, 723, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 772, 760, 685, 776, 687, 773, 774, 682,
	683, 686, 775, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 763, 671, 670, 0, 678, 0, 704, 705,
	707, 711, 712, 713, 724, 725, 726, 734, 736, 737,
	735, 738, 739, 740, 743, 744, 745, 746, 741, 742,
	747, 688, 692, 689, 690, 691, 703, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 786, 787, 788,
	789, 790, 791, 715, 719, 718, 716, 717, 720, 721,
	669, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 777, 249, 778, 0, 0, 782, 0, 0,
	0, 784, 783, 0, 785, 751, 750, 0, 0, 779,
	780, 0, 781, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 792, 793, 794,
	795, 796, 797, 798, 799, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 815, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 975, 540, 0, 0, 0, 0, 0, 972,
	973, 349, 933, 316, 191, 215, 966, 970, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1465,
	800, 0, 0, 1462, 0, 0, 0, 0, 1460, 1464,
	0, 0, 228, 1461, 1459, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 80, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 89, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 88, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 361, 0, 0, 364, 268, 291, 306, 0,
	530, 480, 217, 445, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 374, 382, 411, 416, 283,
	258, 234, 438, 231, 463, 486, 487, 488, 490, 378,
	253, 415, 1521, 0, 359, 496, 497, 302, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 1523, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 412, 0,
	196, 0, 465, 241, 360, 357, 503, 269, 260, 256,
	239, 303, 368, 410, 485, 404, 0, 354, 0, 0,
	475, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 395, 476, 273, 0, 0, 0, 0, 1525, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 500, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 1299, 0, 1300, 1301,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	384, 244, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 394, 440, 452, 0, 0, 0, 242, 0, 450,
	408, 519, 223, 271, 437, 414, 448, 421, 274, 0,
	0, 449, 355, 505, 431, 516, 541, 542, 250, 388,
	528, 489, 536, 557, 216, 247, 402, 482, 522, 472,
	380, 501, 502, 315, 471, 282, 194, 353, 547, 214,
	458, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 0, 379, 359, 496,
	497, 302, 80, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	89, 0, 1502, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 88, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 2061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 2013, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 1702, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 2011, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 933, 316, 191, 215, 931, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 2013, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1702,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 1502, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 3289, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 1846, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 2406, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 2391, 0, 0, 0, 2392, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1544, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1543,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 3413,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 1702, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 3289, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 1525, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 1801, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1669, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 1667, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1665, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 1663, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 1661,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1657, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 1655, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1653, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 1628, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 1529, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 1276, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 641, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 379,
	0, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 583, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 3421, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 379, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	0, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	0, 359, 496, 497, 302,
}

var yyPact = [...]int{
	-1000, -1000, 5372, -1000, -451, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2135, 2295,
	-1000, -1000, -1000, -1000, 2329, -1000, 799, 1847, -1000, 2129,
	310, -1000, 45841, 542, -1000, 43265, 530, 223, 28453, -1000,
	195, -1000, 188, 44553, 193, 42621, -1000, -1000, -302, 18147,
	2047, 77, 72, 45841, -1000, -1000, -1000, -1000, 2291, 1830,
	-1000, 382, -1000, -1000, -1000, -1000, -1000, -1000, 41977, -1000,
	924, -1000, -1000, 2159, 2104, 2341, 678, 2037, -1000, 2219,
	1830, -1000, 18147, 2274, 2203, 17503, 17503, 461, -1000, -1000,
	346, -1000, -1000, 23945, 45841, 31029, 410, -1000, 2129, -1000,
	-1000, -1000, 115, -1000, 376, 1754, -1000, 1753, -1000, 811,
	883, 387, 515, 511, 386, 380, 377, 374, 371, 359,
	358, 356, 395, -1000, 707, 707, -129, -130, 3115, 438,
	448, 448, 932, 476, 2084, 2083, -1000, -1000, 707, 707,
	707, 345, 707, 707, 707, 707, 302, 301, 707, 707,
	707, 707, 707, 707, 707, 707, 707, 707, 707, 707,
	707, 707, 707, 707, 707, 710, 2129, 272, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 45841, 284, 45841, -1000, 581, 45841, 834, 834, 102,
	834, 834, 834, 834, 201, 662, 71, -1000, 200, 266,
	172, 263, 826, 251, -1000, -1000, 259, 826, 1527, -1000,
	689, 181, -1000, 834, 834, -1000, 11682, 187, 11682, 11682,
	-1000, 2123, -1000, -1000, -1000, -1000, -1000, 1137, -1000, -1000,
	-1000, -1000, -1000, 473, -1000, -1000, -1000, -1000, 44553, 41333,
	389, 754, -1000, -1000, -1000, 119, -1000, -1000, 1573, 1265,
	18147, 1266, -1000, 1217, 640, -1000, -1000, -1000, -1000, -1000,
	566, -1000, 18791, 18791, 18791, 18791, -1000, -1000, 1756, 40689,
	1756, 1756, 18791, 1756, -1000, 18791, 1756, 1756, 1756, 18147,
	1756, 1756, 1756, 1756, -1000, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, -1000, -1000, -1000, -1000, 1756, 580, 1756,
	1756, 1756, 1756, 1756, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1756, 1756, 1756, 1756, 1756, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20079,
	1302, 1284, 1272, -1000, 15571, 1756, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 45841, -1000, 1756, 213,
	44553, 44553, 391, 2219, 1830, -1000, 2291, 2242, 382, -1000,
	3162, 1815, 1483, 1236, 1830, 1741, 45841, -1000, 1763, -1000,
	-1000, -1000, -1000, 1914, 1227, 1518, -1000, -1000, -1000, -1000,
	2044, 18147, -1000, -1000, 2320, -1000, 21368, 579, 2318, 40045,
	-1000, 461, 461, 1750, 433, 41, -1000, -1000, -1000, -1000,
	741, 27809, -1000, -1000, -1000, -1000, 1736, 45841, -1000, -1000,
	4393, 1136, -1000, 1844, -1000, 1725, -1000, 1784, 18147, 1855,
	529, 1136, 514, 504, 486, -1000, -29, -1000, -1000, -1000,
	-1000, -1000, -1000, 707, 707, 707, -1000, 394, 2273, 310,
	3562, -1000, -1000, -1000, 39401, 1842, 1136, -1000, 1841, -1000,
	836, 569, 586, 586, 1136, -1000, -1000, 45197, 1136, 833,
	829, 1136, 1136, 44553, 44553, -1000, 38757, -1000, 38113, 37469,
	1121, 44553, 36825, 36181, 35537, 34893, 34249, -1000, 1976, -1000,
	1941, -1000, -1000, -1000, 45197, 1136, 1136, 45197, 44553, 45197,
	45841, 1136, -1000, -1000, 360, -1000, -1000, 1120, 1119, 1117,
	707, 707, 1114, 1514, 1509, 1492, 707, 707, 1108, 1489,
	29741, 1486, 341, 1103, 1080, 1067, 1110, 1481, 190, 1474,
	1109, 1052, 1049, 44553, 1828, 45841, -1000, 257, 742, 537,
	739, 2129, 2046, 1749, 472, 528, 1136, 458, 458, 44553,
	-1000, 13632, -1000, -1000, 1456, 18147, -1000, 830, 826, 826,
	-1000, -1000, -1000, -1000, -1000, -1000, 834, 45841, 830, -1000,
	-1000, -1000, 826, 834, 45841, 834, 834, 834, 834, 826,
	826, 826, 834, 45841, 45841, 45841, 45841, 45841, 45841, 45841,
	45841, 45841, 11682, 689, 834, -311, -1000, 1438, -1000, 1953,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11682, 11682, -1000, -1000,
	-1000, -1000, 189, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -41, 1745, 33605, -1000, -317, -319, -322, -324,
	-1000, -1000, -1000, -327, -328, -1000, -1000, -1000, 18147, 18147,
	18147, 18147, -157, -1000, 905, 18791, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 192, 823, 18791, 18791, 18791, 18791, 18791,
	18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	-1000, -1000, 25877, 5761, 5761, 640, 640, 640, 640, -1000,
	-96, 1744, 45197, -1000, -1000, -1000, 577, 18147, 18147, 640,
	-1000, 1136, 15571, 32961, 17503, 17503, 18147, 773, 1265, 45197,
	18147, -1000, 1236, -1000, -1000, -1000, 1057, -1000, 796, 2156,
	2156, 2156, 2156, 18147, 18147, 18147, 18147, 18147, 18147, 18147,
	18147, 18147, 18147, 2156, 44553, 44553, 870, 18147, 18147, 18147,
	18147, 18147, 18147, 14282, 18147, 18147, 18147, 18147, 1236, 18147,
	18147, 18791, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147,
	18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147,
	18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 1236, 18147,
	957, 18147, 18147, 17503, 12982, 17503, 17503, 17503, 17503, 17503,
	-1000, -1000, -1000, -1000, -1000, 18147, 18147, 18147, 18147, 18147,
	18147, 18147, 18147, 1236, 18147, 18147, 18147, 18147, 18147, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1606,
	1324, 1276, 18147, -1000, 1742, -1000, -124, 23301, 18147, 1429,
	2314, 1875, 44553, -1000, -1000, -1000, 2219, -1000, 2219, 1606,
	3101, 1972, 17503, -1000, -1000, 3101, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1422, -1000, 45841, 1741, 2181, 44553,
	1956, 1418, 475, -1000, 18147, 18147, 1734, -1000, 1322, 45841,
	-1000, -157, -1000, 32317, -1000, -1000, 11032, 45841, 340, 45841,
	-1000, 22657, 31673, 289, 41, -1000, 1662, -1000, 17, 25,
	14926, 628, -1000, -1000, -1000, 3115, 19435, 1549, 628, 124,
	-1000, -1000, -1000, 1784, -1000, 1784, 1784, 1784, 1784, 475,
	475, 475, 475, -1000, -1000, -1000, -1000, -1000, 1825, 1823,
	-1000, 1784, 1784, 1784, 1784, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1814, 1814, 1814, 1785, 1785, 440, -1000, 18147,
	306, 31029, 2164, 1037, 929, 257, 459, 1866, 1136, 1136,
	1136, 459, -1000, 1221, 1188, 1154, -1000, -438, 1729, -1000,
	-1000, 2272, -1000, -1000, 915, 879, 869, 757, 44553, 220,
	325, -1000, 426, -1000, 31029, 1136, 828, 586, 1136, -1000,
	1136, -1000, -1000, -1000, -1000, -1000, 1136, -1000, -1000, 1727,
	-1000, 1711, 919, 854, 914, 844, 1727, -1000, -1000, -103,
	1727, -1000, 1727, -1000, 1727, -1000, 1727, -1000, 1727, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 752, 233,
	-230, 44553, 220, 470, -1000, 469, 25877, -1000, -1000, -1000,
	25877, 25877, -1000, -1000, -1000, -1000, 1414, 1393, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -428, 45841, -1000,
	244, 725, 312, 355, 343, 45841, 283, 2197, 2195, 2191,
	2185, 240, 282, 45841, 45841, 458, 1913, 45841, 2173, 45841,
	-1000, -1000, -1000, -1000, -1000, 1265, 45841, -1000, -1000, 834,
	834, -1000, -1000, 45841, 834, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 834, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45841,
	-1000, -1000, -1000, -1000, 44553, -1000, -1000, -1000, -1000, -1000,
	157, 47, 384, -1000, -1000, -1000, -1000, -1000, 2214, -1000,
	1265, 808, 814, -1000, 1756, -1000, -1000, 946, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 192, 18791, 18791, 18791, 1946,
	502, 1424, 1026, 1118, 1163, 1163, 845, 845, 648, 648,
	648, 648, 648, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1388, -1000, 1756, 45197, 1708, 12982, 2056, 1398, 1236,
	2974, -1000, 1669, -1000, 1669, 1132, 768, -1000, 18147, 1236,
	2969, -1000, -1000, 1236, 1236, 1236, 18147, -1000, -1000, 18147,
	18147, 18147, 18147, 929, 929, 929, 929, 929, 929, 929,
	929, 929, 929, 18147, 1723, 1706, 2313, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1899, 929,
	929, 929, 929, 929, 18147, 2032, -1000, -1000, -1000, 1392,
	2900, 929, 929, -1000, 929, 2883, 1564, 2857, 2834, 1236,
	1573, 1236, 1678, -1000, 2827, 929, 2814, 2795, 2790, 2012,
	2786, 2780, 2769, 929, 929, 929, 2008, 2765, 2760, 2724,
	2709, 2699, 2682, 2621, 2605, 2596, 929, -168, 929, 1236,
	-1000, -1000, -1000, -1000, -1000, 2591, 1995, 1236, 1671, 1756,
	576, -1000, -1000, 1669, 1236, 1236, 1669, 1669, 2536, 2532,
	2268, 2263, 2248, 2244, 929, 929, -1000, 929, 2239, 2232,
	1934, 1904, 1236, -1000, 1276, 45841, -1000, -306, -1000, 16,
	638, 1756, -1000, 29741, 1236, -1000, 5119, -1000, 1024, -1000,
	-1000, -1000, -1000, -1000, 27165, 1780, 3101, -1000, -1000, 1756,
	1631, -1000, -1000, 475, 94, 26521, 626, 626, 120, 1265,
	1265, 18147, -1000, -1000, -1000, -1000, -1000, -1000, 575, 2288,
	408, 1756, -1000, 1599, 2802, -1000, -1000, -1000, 2180, 20724,
	-1000, 1756, 1756, 45841, 1738, 1546, -1000, 574, -1000, 1142,
	1662, 41, 15, -1000, -1000, -1000, -1000, 1265, -1000, 1152,
	350, 3847, -1000, 425, -1000, -1000, -1000, -1000, 2063, 106,
	-1000, -1000, -1000, 274, 475, -1000, -1000, -1000, -1000, -1000,
	-1000, 1378, 1378, -1000, -1000, -1000, -1000, -1000, 1035, -1000,
	-1000, -1000, 1028, -1000, -1000, 2171, 1909, 306, -1000, -1000,
	707, 1376, -1000, -1000, 2066, 707, 707, 44553, -1000, -1000,
	1455, 2164, 244, 45841, 781, 1906, -1000, 1866, 1866, 1866,
	45841, -1000, -1000, -1000, -1000, -1000, -1000, -430, 66, 390,
	-1000, -1000, -1000, 634, 44553, 1618, -1000, 217, -1000, 1443,
	-1000, 44553, -1000, 1616, 1796, 1136, 1136, -1000, -1000, -1000,
	44553, 1756, -1000, -1000, -1000, -1000, 517, 2127, 304, -1000,
	-1000, -186, -1000, -1000, 220, 217, 45197, 1136, 628, -1000,
	-1000, -1000, -1000, -1000, -431, 1597, 483, 229, 337, 45841,
	45841, 45841, 45841, 45841, 553, -1000, -1000, -1000, -1000, 202,
	-1000, -1000, -1000, 202, -1000, -1000, -1000, -1000, 277, 467,
	-1000, 45841, 45841, 675, -1000, -1000, -1000, 826, -1000, -1000,
	826, -1000, -1000, -1000, -1000, -1000, 2103, 45841, 38, -384,
	-1000, -381, 18147, -1000, -1000, -1000, -1000, 1326, 494, 1424,
	18791, 18791, 18791, -1000, -1000, -1000, 988, 988, 25877, -1000,
	18147, 17503, -1000, -1000, 18147, 18147, 753, -1000, 18147, 1094,
	-1000, 18147, -1000, -1000, -1000, 1276, 929, 929, 929, 929,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1790, 18147, 18147, 18147, 1236, 322, -1000, -1000, -1000, -1000,
	-1000, 2304, -1000, 18147, -1000, 25877, 18147, -1000, -1000, -1000,
	18147, 18147, 18147, 18147, -1000, -1000, 18147, 18147, -1000, 18147,
	18147, 18147, -1000, 18147, 18147, 18147, 18147, -1000, -1000, -1000,
	-1000, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147, 18147,
	18147, -1000, -1000, 31029, 73, -168, 957, 73, 957, -1000,
	17503, 12332, -1000, -1000, -1000, -1000, -1000, 18147, 18147, 18147,
	18147, 18147, 18147, -1000, -1000, -1000, 18147, 18147, -1000, 18147,
	-1000, 18147, -1000, -1000, -1000, -1000, -1000, 638, -1000, 586,
	586, 586, 44553, -1000, -1000, -1000, -1000, 1657, -1000, 2218,
	-1000, 1992, 1991, 2302, 2288, -1000, 22657, 3101, -1000, -1000,
	44553, -293, -1000, 2030, 2094, 626, 626, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10382, 2219, 18147, 1902, 45197, 145,
	-1000, 22013, 44553, 45197, 22657, 22657, 22657, 22657, 22657, -1000,
	1939, 1933, -1000, 1998, 1937, 1994, 45841, -1000, 1591, 1236,
	2242, 20724, 382, 18147, 24589, 1659, 22657, -1000, -1000, 22657,
	45841, 9732, -1000, -1000, 20, 6, -1000, -1000, -1000, -1000,
	3115, -1000, -1000, 885, 2177, 2051, -1000, -1000, -1000, -1000,
	-1000, 1587, -1000, 1580, 1651, 1561, 233, -1000, 1854, 2096,
	707, 707, -1000, 1027, -1000, 1136, 1374, 1371, -1000, -1000,
	-1000, 479, -1000, 2153, 45841, 1898, 1897, 1895, -1000, -445,
	1025, 1795, 1820, 18147, 1793, 2269, 1626, 44553, -1000, -1000,
	45197, -1000, 264, -1000, 306, 44553, -1000, -1000, -1000, 325,
	45841, -1000, 6334, -1000, -1000, -1000, 217, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 45841, 231, -1000, 1792, 1122, -1000,
	-1000, 1861, -1000, -1000, -1000, -1000, 214, 285, 203, 1359,
	203, -1000, 45841, 651, 1909, 45841, -1000, -1000, -1000, 834,
	834, -1000, -1000, 2088, -1000, 1136, 929, 18791, 18791, -1000,
	640, 867, -137, 1784, 1784, -1000, 1784, 1785, -1000, 1784,
	178, 1784, 175, 1784, -1000, -1000, 1236, 1236, 1276, -1000,
	1893, 1386, -1000, 1265, 18147, 2220, -1000, -1000, -1000, -1000,
	-1000, -35, 2212, 2150, 929, -1000, 1782, 1777, 18147, 929,
	1236, 929, 1873, 929, 929, 929, -1000, 1265, 1276, 2130,
	1276, 929, 929, 2124, 308, 929, 1558, 1558, 1558, 1558,
	1558, 1276, 1276, 1276, 1276, 44553, -1000, -168, -1000, -1000,
	-212, -216, -1000, 1236, -168, 1635, 1236, -1000, 1778, 1773,
	2091, 1680, 929, 1985, 929, 929, 929, 1663, -1000, 2211,
	2211, 2211, 1478, 1024, 45841, -1000, -1000, -1000, -1000, 2288,
	2285, 1628, -1000, -1000, 94, 441, -1000, 2033, 2094, -1000,
	2255, 2021, 2253, -1000, -1000, -1000, -1000, -1000, 1265, -1000,
	2133, 1593, -1000, 724, 1576, -1000, -1000, 16859, 1513, 1980,
	573, 1478, 1604, 2802, 1871, 1889, 2637, -1000, -1000, -1000,
	-1000, 1930, -1000, 1927, -1000, -1000, 1763, -1000, -1000, 1324,
	1236, 1608, 340, 22657, 1552, 1552, -1000, 570, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 878, 5817, 2334, -1000, 1317,
	-1000, 1135, 198, 1023, -1000, -1000, 707, 707, -1000, 825,
	824, -1000, 45841, 1772, -1000, 475, 1305, 475, 1017, -1000,
	1014, -1000, -1000, -1000, -1000, 1822, 1948, -1000, -1000, -1000,
	-1000, 45841, -1000, -1000, 45841, 45841, 45841, 1771, 2238, -1000,
	18147, 1768, 719, 2082, 44553, 44553, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 446, 707, -405,
	279, 275, 707, 707, 707, -446, -1000, -1000, 1471, 1467,
	-1000, -127, -1000, 18147, -1000, -1000, -1000, 1076, 1076, 1302,
	1284, 1272, -1000, 1763, -1000, -1000, -1000, 1425, -1000, -1000,
	-114, 44553, 44553, 44553, 44553, -1000, 963, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 640,
	1236, 331, -116, 1236, -1000, -1000, 475, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18147, -1000, 18147,
	-1000, 1265, 18147, 2219, 1270, 18147, 18147, -1000, 1009, 1008,
	929, -1000, -1000, -1000, -1000, 18147, -1000, -1000, -1000, -1000,
	18147, -1000, -1000, -1000, 18147, 250, 988, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1236, 330, -1000,
	-1000, -1000, -1000, 2298, -1000, 1236, 18147, -1000, -1000, 18147,
	-1000, 18147, 18147, -1000, 18147, -1000, 18147, -1000, -1000, -1000,
	-1000, 18147, 1756, 2138, 1756, 1756, 24589, -1000, -1000, 2285,
	2221, 2231, 1999, 2009, 2009, 2033, -1000, 2229, 2227, -1000,
	1267, 2226, 1259, 820, -1000, 45197, 18147, 145, -1000, 409,
	44553, 145, 44553, -1000, 2277, -1000, -1000, 18147, 1766, -1000,
	18147, -1000, -1000, -1000, -1000, -1000, -1000, 5761, 2288, 1552,
	-1000, -1000, 657, -1000, 18147, -1000, -1000, -1000, 5015, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1250, 1231, -1000,
	-1000, 1765, 18147, -1000, -1000, -1000, 1338, 1325, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1763, -1000, -1000, -1000,
	-1000, 325, -440, 2050, 44553, 1001, -1000, 1454, 1626, 324,
	145, 1229, 707, 707, 707, 996, 991, 29741, 1452, -1000,
	44553, 417, -1000, 325, -1000, -133, -134, 929, -1000, -1000,
	2175, -1000, -1000, 12332, -1000, -1000, 1762, 1863, -1000, -1000,
	-1000, -1000, 1955, -99, -120, -1000, -1000, 929, 929, 1362,
	1236, -1000, 929, 929, 1323, 1256, -1000, 929, 1276, 1633,
	-1000, 250, 1236, 1888, -1000, -1000, 5761, -1000, -1000, 2277,
	2225, 73, -1000, -1000, 215, 73, 1265, 1622, 929, 1602,
	1577, 929, 929, 25233, -1000, 2222, 2215, 30385, 30385, 638,
	2221, -175, 18147, 18147, 1996, 969, -1000, -1000, -1000, -1000,
	1165, 1162, -1000, 1160, -1000, 2331, -1000, 1265, -1000, 145,
	-1000, 560, 1576, -1000, 2219, 1265, 44553, 1265, 93, 2277,
	-1000, 929, -1000, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, -1000, -1000, 44553, 1533, -1000, -1000, 2172,
	1442, 65, -1000, 1433, -1000, -1000, 155, -1000, 18147, -1000,
	29741, 1158, 1156, -1000, -1000, -1000, -1000, -446, -1000, -1000,
	-1000, -1000, -1000, -1000, 382, 1624, -1000, 701, 44553, 45841,
	-1000, 1954, -1000, -1000, -1000, 18147, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18147, -1000, 1236, 1887, -1000, -271,
	-1000, -410, 18147, -168, -1000, -1000, -168, -1000, 18147, -1000,
	-1000, 18147, -1000, 18147, -1000, -1000, 1337, -1000, -1000, -1000,
	-1000, -1000, 1337, 1337, -1000, -175, -1000, 1601, -1000, 44553,
	1265, 1573, -1000, 967, -1000, -1000, -1000, -1000, -1000, 45197,
	1576, 44553, -1000, 1312, 1236, 1756, 2219, -1000, 1309, -1000,
	382, -1000, 1759, 1820, -1000, -1000, -1000, 16215, -1000, -1000,
	-1000, -1000, -1000, 173, -110, 12332, 9082, 1283, -1000, -106,
	929, 1276, -1000, -368, -1000, -1000, -1000, -1000, 252, -1000,
	-1000, 1573, -1000, -1000, 1495, 1469, 1369, 29097, -1000, -1000,
	-1000, -1000, -175, -1000, -1000, 2160, -1000, -1000, 1567, -1000,
	-1000, 24589, 43909, -1000, -93, 326, -110, 18147, 1757, 1236,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24, -1000,
	-1000, -1000, -1000, -1000, 1861, -117, -1000, -1000, -1000, 256,
	-397, -199, -200, -1000, -1000, 18791, -1000, 18147, -1000, 18147,
	-1000, 18147, -1000, -1000, -1000, 44553, 1756, -1000, 1255, -1000,
	4285, -235, 1883, -1000, -56, -1000, -1000, -1000, 841, 1149,
	-1000, -1000, -1000, -1000, -1000, -1000, 1344, 44553, -1000, 439,
	-1000, -1000, -114, -122, 790, -1000, -1000, -1000, -1000, -1000,
	1253, 1113, 929, -1000, 44553, -1000, 43909, -228, 628, 5761,
	-1000, 1882, 1881, 2309, -1000, -1000, -1000, -1000, -1000, -1000,
	-448, 1235, 241, -1000, -1000, 256, -1000, 18147, -1000, 18147,
	-1000, 1236, -1000, -1000, 2141, 93, -1000, 2326, -1000, 2323,
	674, 674, -1000, 975, -448, -1000, -1000, 929, 929, -1000,
	-241, -1000, -1000, -1000, -1000, -1000, 415, 1020, -1000, -1000,
	-1000, -1000, -1000, 5761, -1000, -1000, -1000, 206, 206, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2943, 2941, 48, 1, 37, 36, 2940, 43, 100,
	193, 39, 197, 101, 2939, 2938, 2934, 2929, 2917, 2914,
	2913, 231, 229, 227, 2912, 2911, 2899, 2897, 2895, 2893,
	2889, 2888, 2885, 2882, 223, 171, 194, 2880, 2879, 2877,
	128, 190, 90, 92, 191, 2867, 2866, 82, 2863, 2856,
	2852, 186, 185, 184, 810, 2846, 178, 122, 53, 2843,
	2842, 2841, 2833, 2832, 2830, 2825, 2821, 2817, 2814, 2809,
	2803, 2801, 2800, 2798, 2795, 2793, 285, 2791, 2786, 23,
	2785, 84, 2783, 2781, 2780, 2779, 11, 2778, 2776, 15,
	44, 2775, 2774, 52, 2772, 2771, 2767, 2765, 2763, 21,
	2760, 24, 2758, 32, 2757, 2755, 129, 2754, 2751, 2750,
	40, 2749, 2747, 2742, 2739, 2738, 2735, 2730, 151, 2725,
	2724, 2723, 181, 209, 2722, 2719, 179, 112, 113, 2718,
	2717, 104, 192, 2716, 124, 2712, 2701, 2700, 158, 2697,
	2923, 2694, 2692, 74, 70, 2691, 118, 2690, 2688, 9,
	29, 71, 10, 18, 4, 2687, 2685, 69, 98, 2683,
	130, 2681, 2680, 110, 91, 2678, 102, 99, 2675, 2671,
	17, 6, 2668, 2, 7, 5, 75, 2661, 2654, 119,
	2651, 2646, 2645, 97, 2643, 2642, 83, 2641, 96, 134,
	114, 79, 2606, 47, 63, 2603, 2602, 2601, 2599, 2597,
	56, 2590, 2585, 2584, 145, 175, 174, 2582, 45, 55,
	57, 137, 2581, 72, 80, 173, 2580, 2579, 143, 142,
	2565, 2564, 61, 41, 49, 2563, 108, 136, 121, 58,
	107, 140, 2545, 2539, 67, 78, 2534, 2532, 2531, 2524,
	172, 2520, 2518, 77, 2517, 65, 2512, 196, 2511, 19,
	60, 50, 166, 2508, 88, 2507, 2506, 73, 106, 76,
	38, 2501, 163, 2500, 62, 168, 132, 164, 2499, 2498,
	2494, 2493, 199, 319, 2487, 2484, 135, 176, 152, 153,
	95, 2481, 338, 2480, 2476, 94, 1459, 791, 2471, 42,
	169, 2466, 2461, 5775, 150, 54, 27, 2460, 117, 2459,
	2450, 2447, 2445, 207, 188, 115, 167, 66, 2442, 2441,
	2438, 20, 2435, 2434, 2433, 2432, 2431, 2430, 85, 35,
	34, 33, 200, 68, 13, 103, 160, 86, 2429, 2427,
	2425, 127, 109, 2423, 162, 161, 141, 170, 2418, 177,
	154, 131, 2416, 87, 31, 2415, 2414, 2413, 2412, 105,
	2411, 2410, 2407, 2405, 159, 155, 126, 93, 2402, 81,
	116, 156, 146, 59, 2399, 51, 2398, 2397, 28, 189,
	30, 2396, 16, 111, 240, 2395, 4776, 187, 2392, 22,
	330, 165, 2391, 2383, 8, 12, 14, 2378, 2376, 2368,
	2367, 138, 2365, 2364, 2363, 2362, 26, 64, 25, 3,
	120, 89, 2359, 2357, 4285, 0, 133, 2355, 195,
}

//line sql.y:7838
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 402, 403, 403, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 254, 376,
	377, 377, 252, 252, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 406, 406, 181, 181, 179, 179, 180, 180, 257,
	257, 24, 25, 25, 267, 267, 266, 266, 266, 268,
	268, 268, 268, 306, 306, 306, 26, 26, 26, 26,
	26, 124, 124, 379, 379, 378, 372, 372, 371, 371,
	370, 375, 375, 374, 374, 373, 38, 39, 48, 48,
	48, 48, 49, 50, 380, 380, 345, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 347, 347, 333, 333, 346, 346, 346,
	346, 346, 346, 346, 332, 332, 135, 135, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 395, 395, 395, 394, 394,
	233, 233, 233, 233, 233, 233, 233, 233, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	156, 156, 152, 152, 152, 153, 153, 153, 154, 154,
	396, 396, 396, 396, 311, 311, 311, 311, 314, 314,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 313,
	313, 313, 313, 313, 315, 315, 315, 315, 315, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 317, 317, 317, 317, 317,
	317, 317, 317, 331, 331, 318, 318, 326, 326, 327,
	327, 327, 328, 328, 328, 329, 329, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 325, 325, 324, 324,
	324, 334, 359, 359, 358, 358, 356, 356, 356, 356,
	356, 356, 356, 356, 343, 343, 353, 353, 353, 353,
	353, 342, 342, 338, 338, 338, 339, 339, 340, 340,
	337, 337, 341, 341, 355, 355, 354, 354, 335, 335,
	336, 336, 361, 397, 397, 397, 397, 397, 398, 398,
	362, 387, 389, 389, 389, 388, 388, 385, 386, 384,
	384, 384, 384, 384, 81, 81, 81, 280, 280, 281,
	281, 351, 351, 350, 350, 350, 352, 352, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 275,
	275, 275, 383, 383, 383, 383, 383, 383, 382, 382,
	382, 348, 348, 348, 381, 381, 57, 57, 214, 214,
	400, 400, 401, 401, 401, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 46, 46, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 106, 106, 107, 107, 107, 107, 109, 109,
	109, 364, 364, 58, 58, 3, 3, 169, 171, 172,
	172, 170, 170, 170, 170, 170, 170, 60, 60, 59,
	59, 174, 173, 175, 175, 175, 1, 1, 2, 2,
	4, 4, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 330, 330, 330, 363, 363, 365,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	112, 111, 111, 110, 113, 113, 113, 113, 113, 113,
	113, 113, 367, 367, 367, 61, 61, 368, 319, 320,
	321, 5, 6, 344, 366, 120, 120, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 274, 274,
	283, 283, 273, 273, 298, 298, 298, 276, 276, 276,
	277, 277, 393, 393, 393, 270, 270, 64, 64, 64,
	299, 299, 299, 299, 66, 66, 67, 68, 68, 301,
	301, 302, 302, 69, 70, 82, 82, 82, 82, 82,
	82, 105, 105, 105, 15, 15, 15, 15, 78, 78,
	78, 14, 14, 65, 65, 72, 390, 390, 391, 392,
	392, 392, 392, 73, 75, 31, 31, 31, 31, 31,
	31, 130, 130, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 125, 125, 125, 119, 119,
	407, 76, 77, 77, 123, 123, 123, 116, 116, 116,
	122, 122, 122, 16, 16, 17, 256, 256, 18, 18,
	127, 127, 129, 129, 129, 129, 129, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 128, 128, 128, 128,
	291, 291, 291, 290, 290, 163, 163, 165, 164, 164,
	166, 166, 167, 167, 167, 167, 212, 212, 189, 189,
	250, 250, 249, 249, 255, 255, 251, 251, 251, 251,
	258, 258, 168, 168, 168, 168, 176, 176, 177, 177,
	178, 178, 300, 300, 296, 296, 296, 295, 295, 182,
	182, 182, 184, 183, 183, 183, 183, 185, 185, 187,
	187, 186, 186, 188, 193, 193, 192, 192, 190, 190,
	190, 190, 191, 191, 191, 191, 194, 194, 140, 140,
	140, 140, 140, 140, 140, 155, 155, 155, 155, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	240, 240, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	149, 216, 216, 215, 215, 83, 83, 83, 84, 84,
	85, 85, 85, 85, 85, 86, 86, 86, 86, 86,
	141, 141, 88, 88, 87, 87, 207, 207, 288, 288,
	89, 90, 90, 93, 93, 92, 91, 91, 97, 97,
	94, 94, 96, 96, 95, 98, 98, 99, 100, 100,
	271, 271, 195, 195, 203, 203, 203, 203, 196, 196,
	196, 196, 196, 196, 196, 204, 204, 204, 211, 205,
	205, 201, 201, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 160,
	160, 160, 160, 221, 221, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	148, 148, 161, 161, 161, 161, 162, 162, 162, 162,
	162, 162, 162, 308, 308, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 408, 408, 322, 322,
	322, 322, 202, 202, 202, 202, 202, 121, 121, 121,
	121, 121, 305, 305, 305, 309, 309, 309, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 310, 310, 219, 219, 117, 117, 217,
	217, 218, 220, 220, 213, 213, 213, 213, 198, 198,
	198, 222, 222, 223, 223, 101, 102, 102, 103, 103,
	224, 224, 226, 225, 225, 227, 228, 228, 228, 229,
	229, 230, 230, 230, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 43, 132, 132, 132,
	132, 134, 134, 133, 133, 79, 79, 80, 80, 80,
	138, 138, 139, 139, 139, 136, 136, 137, 137, 247,
	247, 231, 231, 231, 238, 238, 238, 234, 234, 236,
	236, 236, 237, 237, 237, 235, 244, 244, 246, 246,
	245, 245, 241, 241, 242, 242, 243, 243, 243, 239,
	239, 197, 197, 197, 197, 197, 248, 248, 248, 248,
	259, 259, 208, 208, 210, 210, 209, 209, 159, 260,
	260, 264, 261, 261, 265, 265, 265, 265, 253, 253,
	253, 262, 262, 263, 263, 292, 292, 292, 269, 269,
	282, 282, 278, 278, 279, 279, 272, 272, 284, 284,
	284, 74, 206, 206, 360, 360, 357, 287, 287, 289,
	289, 293, 293, 297, 297, 294, 294, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 404, 405, 303,
	304, 304, 304,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	4, 4, 3, 4, 6, 8, 6, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 2, 1, 3, 0, 1,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -402, -76, -407, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 224, -49,
	-39, 225, -50, 227, 226, 263, 228, 256, 75, 309,
	310, 312, 313, 314, 315, -105, 261, 262, 230, 37,
	46, 34, 35, 38, 234, 269, 270, 233, -10, -34,
	9, -404, 12, 441, 258, 257, 29, -12, 503, 87,
	-77, -403, 654, -247, -231, 23, 34, 30, -230, -226,
	-123, -231, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -345, -347, 87, 158, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -369, -44, -41, 229,
	226, 273, 122, 123, 263, 264, 265, 228, 247, 262,
	266, 261, 282, -40, 82, 34, 503, 506, -352, 225,
	231, 232, 227, 442, 125, 124, 76, -349, 364, 536,
	624, -56, 626, 103, 106, 625, 45, 237, 627, 628,
	629, 543, 630, 246, 631, 632, 633, 634, 640, 584,
	641, 642, 643, 126, 8, -76, -297, -293, 91, -286,
	500, 249, 534, 535, 298, 82, 42, 509, 361, 364,
	536, 471, 624, 309, 323, 317, 476, 477, 478, 344,
	336, 501, 537, 510, 301, 250, 286, 618, 334, 134,
	626, 304, 538, 264, 369, 370, 539, 371, 103, 312,
	408, 639, 303, 540, 637, 106, 625, 80, 470, 52,
	621, 45, 259, 332, 233, 328, 627, 287, 541, 512,
	280, 125, 122, 646, 37, 326, 51, 31, 636, 124,
	50, 628, 149, 542, 629, 543, 373, 351, 612, 49,
	374, 265, 544, 85, 270, 505, 307, 620, 375, 490,
	327, 376, 297, 635, 230, 545, 604, 596, 597, 377,
	378, 613, 356, 352, 357, 492, 546, 400, 475, 379,
	600, 601, 653, 53, 547, 548, 614, 123, 549, 79,
	630, 81, 321, 322, 550, 295, 248, 495, 496, 402,
	348, 453, 460, 461, 110, 111, 456, 112, 462, 113,
	463, 464, 465, 454, 114, 107, 455, 466, 467, 349,
	350, 115, 468, 109, 108, 457, 459, 116, 469, 246,
	36, 380, 502, 299, 59, 274, 403, 47, 354, 650,
	46, 608, 497, 551, 611, 347, 343, 450, 54, 552,
	553, 554, 555, 472, 631, 346, 320, 342, 645, 4,
	292, 473, 632, 63, 232, 359, 358, 360, 281, 399,
	339, 556, 557, 558, 253, 83, 559, 329, 22, 560,
	561, 381, 288, 562, 57, 563, 564, 406, 262, 565,
	55, 633, 40, 566, 267, 647, 634, 567, 568, 569,
	570, 269, 571, 383, 572, 598, 599, 382, 353, 355,
	498, 276, 384, 504, 573, 308, 325, 266, 638, 574,
	254, 486, 487, 488, 489, 619, 494, 493, 268, 273,
	261, 407, 255, 575, 576, 577, 578, 579, 302, 595,
	580, 581, 313, 640, 451, 44, 582, 583, 584, 585,
	586, 296, 291, 401, 410, 62, 84, 366, 587, 588,
	617, 319, 289, 589, 310, 56, 641, 642, 643, 283,
	644, 479, 480, 481, 482, 10, 651, 652, 474, 386,
	126, 293, 294, 48, 340, 275, 590, 305, 591, 330,
	331, 345, 318, 341, 311, 605, 277, 387, 452, 263,
	592, 409, 290, 362, 367, 306, 508, 491, 282, 388,
	616, 507, 483, 484, 338, 335, 284, 485, 593, 389,
	238, 278, 279, 594, 606, 390, 391, 300, 392, 393,
	394, 395, 396, 398, 397, 602, 603, 285, 506, 316,
	333, 368, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	449, 236, -76, 236, -186, -293, 236, -262, 370, -283,
	372, 385, 380, 390, 378, -274, 381, 383, 276, -393,
	400, 236, 387, 224, 373, 382, 391, 392, 300, 398,
	393, 397, 285, 394, 395, 396, -376, 176, 629, 644,
	134, 337, 377, 375, 401, 608, 91, -299, 91, 92,
	93, -286, 311, -301, 316, -287, -376, -286, 314, -186,
	-82, 604, 228, -303, -303, -125, 608, 610, -205, -140,
	142, -155, -158, -146, -150, -199, -200, -201, -202, -156,
	-213, -252, 165, 166, 173, 143, -211, -159, 27, 499,
	443, 442, 176, 32, -149, 219, 69, 70, 445, 145,
	58, 12, 418, 419, -157, 413, 420, 415, 470, 472,
	473, 474, 471, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 475, 447, 448, 117, 449, 107, 109,
	108, 450, 451, 452, 334, 492, 495, 496, 494, 493,
	497, 498, 349, 350, 453, 454, 455, 110, 111, 112,
	113, 114, 115, 116, 456, 459, 457, 458, 460, 461,
	462, 467, 468, 463, 464, 465, 466, 469, -85, -97,
	525, 524, -98, -147, -148, -161, -162, -287, -293, 241,
	412, 235, 171, 441, -151, -144, -376, -286, 92, 93,
	-8, -209, 411, 416, 417, 421, 414, 511, 513, 528,
	529, 531, 516, 521, 520, 523, 486, 487, 488, 489,
	490, 491, 596, 597, 598, 599, 600, 601, 602, 603,
	91, -153, -152, -195, 94, 99, 104, 105, 100, -399,
	259, 330, 331, 118, -404, 622, 90, 95, 96, 97,
	98, 119, 120, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 45, 386, 386, -186, -76,
	-76, -76, -76, -224, -123, -226, -10, -8, -404, 9,
	-76, -8, -9, -13, -34, -36, 530, -35, -293, 102,
	-231, -247, 13, 161, 43, 51, -229, -230, -12, -8,
	-140, 20, 24, 25, -128, 167, -140, -293, -128, -272,
	240, -76, -76, -261, -306, 311, -265, 401, 608, 400,
	-253, -263, 91, -252, -262, 399, -346, 158, -332, -336,
	-287, 251, -362, 247, -186, -355, -354, -287, -404, -124,
	-282, 237, 245, 244, 135, -380, 138, 293, 412, 235,
	-51, -52, -53, -262, 175, 628, -106, 268, 272, 88,
	88, -336, -335, -334, -381, 272, 251, -361, -353, 243,
	252, -342, 244, 245, -337, 237, 136, -381, -337, 242,
	252, 247, 251, 272, 272, 126, 272, 126, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 267, -343, 150,
	-343, 507, 507, -349, -381, 247, 237, -381, -381, 243,
	-284, -337, 239, 26, 239, 36, 36, -343, -343, -343,
	-262, 175, -343, -343, -343, -343, 280, 280, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, 236, -380, -132, 397, 300,
	82, -54, 282, -37, -186, -282, 237, 238, -380, 269,
	-186, 220, -186, -276, 158, 16, -276, -273, 386, 384,
	371, 376, -276, -276, -276, -276, 283, 369, -338, 237,
	36, 248, 386, 283, 369, 283, 284, 283, 284, 379,
	389, 283, -298, 15, 161, 412, 374, 378, 276, 236,
	277, 238, 388, 284, -298, 90, -277, 158, 386, 279,
	-276, -276, -304, -404, -289, -287, -285, 229, 24, 141,
	26, 28, 144, 176, 129, 20, 145, 38, 231, 337,
	247, 175, 243, 442, 224, 73, 511, 413, 415, 411,
	418, 444, 445, 412, 372, 32, 14, 513, 29, 257,
	25, 39, 169, 226, 148, 514, 260, 27, 258, 117,
	120, 516, 23, 76, 252, 15, 245, 41, 17, 517,
	518, 18, 241, 240, 161, 237, 71, 12, 219, 30,
	157, 67, 519, 136, 520, 521, 522, 523, 130, 69,
	158, 21, 648, 416, 417, 34, 609, 499, 271, 171,
	74, 60, 610, 142, 414, 524, 525, 118, 526, 121,
	77, 615, 138, 19, 72, 43, 527, 272, 528, 242,
	649, 529, 404, 530, 159, 227, 441, 70, 160, 622,
	531, 623, 235, 385, 9, 446, 33, 256, 244, 128,
	68, 532, 236, 147, 447, 448, 239, 131, 119, 8,
	135, 35, 13, 75, 78, 419, 420, 421, 58, 127,
	503, 146, 16, 533, 405, 140, -376, 611, -304, -304,
	33, 92, 239, -287, -78, -287, 90, -15, -11, -22,
	-21, -23, 150, -130, 386, -118, 176, 629, 612, 613,
	614, 611, 383, 619, 617, 615, 283, 616, 88, 138,
	140, 141, 4, -140, 157, -196, 150, 151, 152, 153,
	154, 155, 156, 161, 142, 144, 158, -240, 139, 162,
	163, 164, 165, 166, 167, 168, 170, 169, 171, 172,
	159, 160, 175, 222, 223, -150, -150, -150, -150, -211,
	-216, -215, -404, -213, -376, -286, -293, -404, -404, -150,
	-271, -404, -404, -150, -404, -404, -404, -219, -140, -404,
	-404, -408, -404, -408, -408, -322, -404, -322, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, 220, -404, -404, -404, -404, -404,
	-322, -322, -322, -322, -322, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, 105,
	99, 104, 94, -213, 100, 90, 90, 90, 90, -8,
	-9, -205, -404, -303, -390, -391, -189, -186, -404, 300,
	-287, -287, 269, -229, -12, -8, -224, -230, -226, -8,
	-76, -116, -129, 64, 65, -131, 25, 39, 68, 66,
	24, -405, 89, -405, -247, -405, 88, -36, -250, 87,
	62, 44, 90, 90, 88, 22, -225, -227, -140, 15,
	-291, 4, -290, 26, -287, 90, 220, 15, -187, 30,
	-186, -272, -272, 88, 311, 91, -267, -266, 402, 404,
	150, -292, -287, 90, 32, 89, 88, -186, -311, -314,
	-316, -315, -317, -312, -313, 334, 335, 176, 338, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 351, 33,
	259, 330, 331, 332, 333, 352, 353, 354, 355, 357,
	358, 359, 360, 317, 336, 501, 318, 319, 320, 321,
	322, 323, 325, 326, 327, 328, 329, -377, -376, 87,
	89, 88, -318, 87, -140, -132, 236, -376, 237, 237,
	237, -76, 441, -343, -343, -343, 267, 20, -44, -41,
	-369, 19, -40, -41, 229, 122, 123, 226, 87, -332,
	87, -341, -377, -376, 87, 136, 242, 135, -340, -337,
	-340, -341, -376, -213, -376, 136, 136, -376, -376, -258,
	-287, -258, -258, 24, -258, 24, -258, 24, 96, -287,
	-258, 24, -258, 24, -258, 24, -258, 24, -258, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -213, -376,
	-376, -213, -332, -213, -186, -376, -262, 96, 96, 96,
	-343, -343, 96, 90, 90, 90, -343, -343, 96, 90,
	-295, -293, 90, 90, -382, 253, 297, 299, 96, 96,
	96, 96, 32, 90, -383, 32, 636, 635, 637, 638,
	639, 90, 96, 32, 96, 32, 96, -287, 87, -186,
	-138, 287, 224, 226, 229, 77, 90, 303, 301, 305,
	306, 150, 45, 88, 239, 236, -376, -278, 241, -278,
	-287, -294, -293, -285, 90, -140, -339, 15, 161, -298,
	-298, -276, -186, -339, -298, -276, -186, -276, -276, -276,
	-276, -298, -298, -298, -276, -293, -293, -186, -186, -186,
	-186, -186, -186, -186, -304, -277, -276, 611, 90, -270,
	15, 77, -304, -304, -302, 314, 348, 605, 606, 607,
	88, 503, -179, -186, 611, 611, 611, 611, 611, 611,
	-140, -140, -140, -140, 526, -203, 118, 142, 119, 120,
	-158, -204, -209, -211, 101, 161, 144, 158, -240, -146,
	-150, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -305, -287, 90, 176, -154, -153,
	100, -399, -154, 500, 88, -215, 220, -140, -140, -376,
	-140, -287, -126, -128, -126, -140, -217, -218, 146, -213,
	-140, -405, -405, 96, 100, 167, -122, 25, 39, -122,
	-122, -122, -122, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -122, -287, -287, -115, -114, 423, 424,
	425, 426, 428, 429, 430, 433, 434, 438, 439, 422,
	440, 427, 432, 435, 436, 437, 431, 333, -140, -140,
	-140, -140, -140, -140, -83, -140, 129, 130, 131, -205,
	-140, -140, -140, -405, -140, -140, -146, -140, -140, -206,
	-205, -375, -374, -373, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -405, -140, -160,
	-144, 96, -254, 100, 92, -140, -140, -127, -126, -289,
	-294, -285, -286, -126, -127, -127, -126, -126, -140, -140,
	-140, -140, -140, -140, -140, -140, -405, -140, -140, -140,
	-140, -140, -247, -405, -205, 88, -392, 404, 405, 609,
	-296, 272, -295, 26, -206, 90, 15, -256, 78, -287,
	-229, -229, 64, 65, 60, -126, -131, -405, -35, 26,
	-249, -287, 63, 90, -323, -262, 361, 362, 176, -140,
	-140, 88, -228, 28, 29, -186, -290, 167, -294, -186,
	-257, 272, -186, -164, -166, -167, -168, -189, -212, -404,
	-169, 522, 519, 15, -179, -180, -188, -293, -265, -306,
	-267, 88, 403, 405, 406, 77, 121, -140, -324, 175,
	-351, -350, -349, -332, -334, -335, -336, 89, -324, -328,
	367, 366, -318, -318, -318, -318, -318, -323, -323, -323,
	-323, 87, 87, -318, -318, -318, -318, -326, 87, -326,
	-326, -327, 87, -327, -362, -140, -359, -358, -356, -357,
	246, 103, 594, 550, 503, 543, 584, 78, -354, -228,
	96, -405, -138, -279, 241, -360, -357, -376, -376, -376,
	-279, 91, 90, 91, 90, 91, 90, -107, -58, -1,
	648, 649, 650, 88, 20, -333, -332, -57, 297, -365,
	-366, 272, -361, -355, -341, 136, -340, -341, -341, -376,
	88, 30, 126, 126, 126, 126, 503, 226, 33, -280,
	542, 142, 594, 550, -332, -57, 239, 239, -305, -305,
	-305, 90, 90, -275, 644, -179, -134, 289, 150, 278,
	278, 236, 236, 291, -186, 302, 304, 303, 301, 305,
	306, 24, 24, 24, 24, 290, 292, 294, 280, -186,
	-186, -278, 77, -181, -186, 27, -293, -186, -276, -276,
	-186, -276, -276, -186, -287, -118, 404, 88, 503, 23,
	-119, 23, -404, 118, 119, 120, -204, -146, -150, -146,
	141, 260, -404, -213, -405, -289, 26, 88, 78, -405,
	88, 88, -405, -405, 88, 15, -220, -218, 148, -140,
	-405, 88, -405, -405, -405, -205, -140, -140, -140, -140,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-205, 88, 88, 15, -309, 26, -405, -405, -405, -405,
	-405, -219, -405, 15, -405, 78, 88, -405, -405, -405,
	88, 161, 88, 88, -405, -405, 88, 88, -405, 88,
	88, 88, -405, 88, 88, 88, 88, -405, -405, -405,
	-405, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, -405, -90, 527, -405, -405, 88, -405, 88, -405,
	-404, 220, -405, -405, -405, -405, -405, 88, 88, 88,
	88, 88, 88, -405, -405, -405, 88, 88, -405, 88,
	-405, 88, -405, -391, 608, 405, -193, -192, -190, 75,
	240, 76, -404, -295, -405, -154, -254, -255, -254, -198,
	-287, 96, 100, -231, -163, -165, 15, -131, -211, 89,
	88, -323, -235, -241, -273, -287, 90, 176, -325, 176,
	-325, 361, 362, -227, 220, -194, 16, -197, 33, 58,
	-11, -404, -404, 33, 88, -182, -184, -183, -185, 67,
	71, 73, 68, 69, 70, 74, -300, 26, -164, -9,
	-8, -404, -404, -404, -186, -179, -406, 15, 78, -406,
	88, 220, -266, -268, 407, 404, 410, -376, 90, -106,
	88, -349, -336, -232, -135, 41, -329, 368, -323, 510,
	-323, -331, 90, -331, 96, 96, 89, -47, -42, -43,
	34, 82, -356, -343, 90, 40, -343, -343, -287, 89,
	-228, -134, -186, 142, 77, -360, -360, -360, -293, -2,
	647, 653, 136, 87, 371, 19, -249, 88, 89, -214,
	298, 89, -108, -287, 89, 87, -341, -341, -287, -404,
	236, 32, 32, 594, 550, 542, -57, -214, -213, -376,
	-324, 646, 645, 89, 238, 296, -139, 418, -136, 90,
	91, -186, -186, -186, -186, -186, 229, 226, -400, 307,
	-400, 281, 239, -179, -186, 88, -81, 255, 250, -298,
	-298, 34, -186, 404, 620, 618, -140, 141, 260, -158,
	-150, -146, -307, 176, 334, 259, 332, 328, 348, 339,
	366, 330, 367, 327, 326, 325, -307, -305, -205, -128,
	-140, -140, 149, -140, 147, -140, -405, -405, -405, -405,
	-405, -224, -140, -140, -140, -405, 176, 334, 15, -140,
	-305, -140, -140, -140, -140, -140, -373, -140, -205, -140,
	-205, -140, -140, -140, -140, -140, -374, -374, -374, -374,
	-374, -205, -205, -205, -205, -404, -287, -93, -92, -91,
	577, 240, -90, -160, -93, -160, -127, -289, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -190, -337,
	-337, -337, -258, 88, -269, 23, 15, 58, 58, -163,
	-194, -164, -131, -287, -238, 604, -244, 47, -242, -243,
	48, -239, 49, 57, -325, -325, 167, -229, -140, -259,
	77, -260, -264, -213, -208, -210, -209, -404, -248, -405,
	-287, -258, -260, -166, -167, -167, -166, -167, 67, 67,
	67, 72, 67, 72, 67, -183, -293, -405, -405, -9,
	-9, -140, -296, 78, -164, -164, -188, -293, 167, 404,
	408, 409, -349, -398, 118, 142, 32, 77, 364, 103,
	-396, 175, 539, 589, 594, 550, 543, 584, -397, 242,
	135, 136, 254, 26, 42, 89, 88, 89, 88, 89,
	88, -281, -280, -43, -42, -343, -343, 96, -376, 90,
	90, 238, 27, -186, 77, 77, 77, -109, 651, 96,
	87, -3, 82, -140, 87, 20, -332, -213, -367, -319,
	-368, -320, -321, -5, -6, -344, -112, 58, 103, -61,
	45, 237, 631, 632, 126, -404, 644, -359, -249, -363,
	-365, -186, -143, -404, -142, -144, -151, 165, 166, 259,
	330, 331, -214, -186, -133, 287, 295, 87, -137, 92,
	-379, 78, 278, 364, 278, -401, 308, 90, -401, -186,
	-81, -47, -186, -276, -276, 34, -376, -405, -158, -150,
	-121, 161, 503, -310, 509, -318, -318, -318, -327, -318,
	322, -318, 322, -318, -405, -405, -405, 88, -405, 23,
	-405, -140, 88, -117, 446, 88, 88, -405, 87, 87,
	-140, -405, -405, -405, -405, 88, -405, -405, -405, -405,
	88, -405, -405, -405, 88, -308, 595, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -89, -288, -287,
	-90, 559, 559, -405, -90, -221, 88, -405, -405, 88,
	-405, 88, 88, -405, 88, -405, 88, -405, -405, -405,
	-405, 88, -191, 23, -191, -191, -405, -254, -186, -194,
	-222, 17, -235, 52, 340, -246, -245, 56, 48, -243,
	20, 50, 20, 31, -259, 88, 150, 88, -405, -405,
	88, 58, 220, -405, -194, -177, -176, 77, 78, -178,
	77, -176, 67, 67, -250, -405, -405, 88, -257, -164,
	-194, -194, 220, 118, -404, -145, -157, -143, 13, 90,
	90, -376, -395, 635, 636, 32, 96, -343, -343, 136,
	136, -186, 87, -323, 90, -323, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -186, -186, -186, -186,
	-364, 87, 20, -140, 87, 150, 89, -249, -249, 274,
	161, -343, 629, 280, 280, -343, -343, -343, -111, -110,
	651, 89, -405, 88, -330, 503, 506, -140, -152, -152,
	-250, 89, -372, 503, -378, -287, -287, -287, -287, 96,
	98, -405, 501, 74, 504, -405, -323, -140, -140, -140,
	-229, 90, -140, -140, 96, 96, -405, -140, -205, -140,
	-405, -174, -173, -175, 612, 118, 32, -307, -405, -207,
	272, -96, -95, -94, 15, -405, -140, -140, -140, -140,
	-140, -140, -140, -404, 67, 19, 17, -404, -404, -296,
	-222, -223, 18, 20, -236, 54, -234, 53, -234, -245,
	20, 20, 90, 20, 90, 136, -264, -140, -210, 58,
	-11, -287, -208, -287, -224, -140, 87, -140, -154, -194,
	-194, -140, -200, 470, 472, 473, 474, 471, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 475, 449,
	107, 109, 108, 450, 451, 452, 334, 492, 495, 496,
	494, 493, 497, 498, 349, 350, 453, 454, 455, 110,
	111, 112, 113, 114, 115, 116, 456, 459, 457, 460,
	461, 462, 467, 468, 463, 464, 465, 466, 469, 486,
	487, 488, 489, 490, 491, 596, 597, 598, 599, 600,
	601, 602, 603, 90, 90, 87, -140, 89, 89, -250,
	-363, -58, 89, -249, 96, 89, 275, -209, -404, 90,
	-343, -343, -343, 96, 96, -295, -405, 88, -287, -397,
	-365, 507, 507, -405, 26, -371, -370, -289, 87, 78,
	63, 502, 505, -405, -405, 88, -405, -405, -405, 89,
	89, -405, -405, -405, 88, -405, -173, -175, -405, 77,
	-154, -224, 20, -93, 297, 299, -93, -405, 88, -405,
	-405, 88, -405, 88, -405, -405, -251, -405, -287, 242,
	20, 20, -251, -251, -193, -223, -103, -102, -101, 533,
	-140, -205, -237, 55, 77, 121, 90, 90, 90, 13,
	-208, 220, -229, -249, -171, 371, -224, -405, -249, 89,
	26, 89, 653, 136, 89, -209, -120, -404, 271, -295,
	90, 90, -110, -113, -11, 88, 150, -249, -186, 63,
	-140, -205, -405, 77, 514, 612, -88, -87, -84, 623,
	649, -205, -90, -90, -140, -140, -140, 88, -405, -405,
	-405, -103, 88, -100, -99, -287, 77, 121, -260, -287,
	89, -405, -404, -229, 89, -233, -11, 87, -3, 271,
	-319, -368, -320, -321, -5, -6, -344, -79, 503, -370,
	-348, -289, 90, 96, 89, 503, -405, -405, -86, 144,
	621, 592, -141, -152, -149, 219, -405, 88, -405, 88,
	-405, 88, -287, 242, -101, 88, 26, -296, -172, -170,
	-287, 556, -388, -387, 499, -398, -394, 118, 142, 103,
	-396, 594, 550, 127, 128, -79, -140, 87, -405, -80,
	286, 608, -379, 504, -86, 622, 570, 545, 570, 545,
	-140, -140, -140, -99, -404, -405, 88, 23, -311, -60,
	567, -385, -386, 77, -389, 377, 566, 587, 118, 90,
	89, -249, 247, -372, 505, 141, -405, 88, -405, 88,
	-405, -89, -170, 563, -324, -154, -386, 77, -385, 77,
	14, 13, -4, 652, 89, 288, -86, -140, -140, -405,
	-59, 27, -171, -384, 255, 250, 253, 33, -384, 96,
	-4, -405, -405, 567, 249, 32, 118, -154, -174, -173,
	-173,
}

var yyDef = [...]int{
	840, -2, -2, 842, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 840, 840, 840, 0, 840, 0, 0, 840, -2,
	-2, 840, 1453, 0, 840, 0, 0, -2, 768, 774,
	0, 776, -2, 0, 0, 785, 1999, 1999, 835, 0,
	0, 0, 0, 0, 840, 840, 840, 840, 1310, 49,
	840, 0, 84, 85, 791, 792, 793, 64, 0, 1997,
	841, 1, 3, 70, 74, 0, 0, 0, 57, 1319,
	0, 77, 0, 0, 844, 0, 0, 1436, 840, 840,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 582, 508, 560, 506, 545, -2,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 384, 384, 0, 0, -2, 494,
	494, 494, 1438, 0, 0, 0, 542, 446, 384, 384,
	384, 0, 384, 384, 384, 384, 0, 0, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 1337, 155, 1454, 1451, 1452,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 0, 1430, 0, 695, 941, 0, 757, 757, 0,
	757, 757, 757, 757, 0, 0, 0, 707, 0, 0,
	0, 0, 754, 0, 723, 724, 0, 754, 0, 730,
	760, 0, 735, 757, 757, 738, 2000, 0, 2000, 2000,
	1421, 0, 751, 749, 763, 764, 39, 767, 770, 771,
	772, 773, 775, 0, 780, 783, 1447, 1448, 0, 798,
	48, 1702, 790, 803, 804, 0, 836, 837, 44, 1089,
	0, 963, 968, 979, 994, 995, 996, 997, 998, 1000,
	1001, 1002, 0, 0, 0, 0, 1007, 1008, 0, 0,
	0, 0, 0, 1070, 1016, 0, 0, 0, 0, 1285,
	0, 0, 1246, 1246, 1104, 1246, 1248, 1248, 1654, 1789,
	1797, 1914, 1617, 1622, 1623, 1624, 1907, 1908, 1909, 1910,
	1948, 1949, 1953, 1714, 0, 0, 0, 1996, 1751, 1759,
	1760, 1783, 1880, 1934, 1634, 1711, 1733, 1734, 1862, 1863,
	1778, 1846, 1755, 1756, 1737, 1749, 1752, 1740, 1741, 1743,
	1745, 1750, 1757, 1763, 1742, 1762, 1761, 0, 1738, 1739,
	1744, 1754, 1758, 1746, 1747, 1748, 1753, 1764, 0, 0,
	0, 0, 0, 1185, 1186, 1187, 1188, 0, 0, 0,
	0, 0, 0, 0, 280, 281, -2, -2, 42, 43,
	1088, 1408, 1248, 1248, 1248, 1248, 1248, 1030, 1031, 1032,
	1033, 1034, 1058, 1059, 1065, 1066, 1857, 1858, 1859, 1860,
	1695, 1943, 1703, 1704, 1841, 1842, 1716, 1717, 1971, 1972,
	-2, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	1658, 1925, 1926, 217, 0, 0, 285, 286, 282, 283,
	284, 1072, 1073, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 1999, 0, 813, 0, 0,
	0, 0, 0, 1319, 0, 1311, 1310, 62, 0, 840,
	-2, 0, 0, 0, 0, 46, 0, 51, 900, 843,
	76, 75, 1359, 0, 0, 0, 58, 1320, 66, 68,
	1321, 0, 845, 846, 0, 876, 880, 0, 0, 0,
	1437, 1436, 1436, 101, 0, 0, 1412, 113, 114, 115,
	0, 0, 1418, 1419, 1423, 1424, 0, 0, 167, 168,
	0, 40, 411, 0, 163, 0, 404, 345, 0, 1337,
	0, 0, 0, 0, 0, 840, 0, 1431, 144, 145,
	152, 153, 154, 384, 384, 384, 557, 0, 0, 155,
	155, 515, 516, 517, 0, 0, -2, 409, 0, 495,
	0, 0, 398, 398, 402, 400, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 0, 385,
	0, 555, 556, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 1439, 1440, 0, 532, 533, 0, 0, 0,
	384, 384, 0, 0, 0, 0, 384, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 1350, 0, 0,
	0, -2, 0, 687, 0, 0, 0, 1432, 1432, 0,
	694, 0, 696, 697, 0, 0, 698, 0, 754, 754,
	752, 753, 700, 701, 702, 703, 757, 0, 0, 393,
	394, 395, 754, 757, 0, 757, 757, 757, 757, 754,
	754, 754, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 760, 757, 0, 731, 0, 732, 733,
	736, 737, 739, 2001, 2002, 1449, 1450, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 2000, 2000, 743, 747,
	1422, 769, 781, 784, 801, 799, 800, 802, 794, 795,
	796, 797, 0, 815, 816, 821, 0, 0, 0, 0,
	827, 828, 829, 0, 0, 832, 833, 834, 0, 0,
	0, 0, 0, 961, 0, 0, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	980, 981, 0, 0, 0, 1003, 1004, 1005, 1006, 1009,
	0, 1021, 0, 1023, 1294, -2, 0, 0, 0, 1014,
	1015, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 1102, 0, 1103, 1105, 1106, 0, 1107, 850, 850,
	850, 850, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1442, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 860, 860, 0, 0,
	210, 211, 212, 213, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	230, 231, 232, 233, 234, 287, 235, 236, 237, 1088,
	0, 0, 0, 45, 805, 806, 0, 924, 1442, 0,
	0, 856, 0, 56, 65, 67, 1319, 60, 1319, 0,
	862, 0, 0, -2, -2, 863, 869, 870, 871, 872,
	873, 53, 1998, 54, 0, 73, 0, 47, 0, 0,
	0, 0, 357, 1362, 0, 0, 1312, 1313, 1316, 0,
	877, 1795, 881, 0, 883, 884, 0, 0, 99, 0,
	940, 0, 0, 0, 0, 1420, 103, 104, 0, 0,
	0, 368, 1425, 1426, 1427, -2, 391, 0, 368, 352,
	295, 296, 297, 345, 299, 345, 345, 345, 345, 357,
	357, 357, 357, 328, 329, 330, 331, 332, 0, 0,
	314, 345, 345, 345, 345, 335, 336, 337, 338, 339,
	340, 341, 342, 300, 301, 302, 303, 304, 305, 306,
	307, 308, 347, 347, 347, 349, 349, 0, 41, 0,
	372, 0, 1316, 0, 0, 1350, 1434, 1444, 0, 0,
	0, 1434, 122, 0, 0, 0, 558, 593, 509, 546,
	559, 0, 512, 513, -2, 0, 0, 494, 0, 496,
	0, 392, 0, -2, 0, 402, 0, 398, 402, 399,
	402, 390, 403, 536, 537, 538, 0, 540, 541, 623,
	910, 0, 0, 0, 0, 0, 629, 630, 631, 0,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 496, 0, 543, 0, 0, 448, 449, 450,
	0, 0, 453, 454, 455, 456, 0, 0, 459, 460,
	461, 927, 928, 462, 463, 488, 489, 490, 464, 465,
	466, 467, 468, 469, 470, 482, 483, 484, 485, 486,
	487, 471, 472, 473, 474, 475, 476, 479, 0, 137,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	859, 942, 1455, 1456, 758, 759, 0, 396, 397, 757,
	757, 704, 744, 0, 757, 708, 745, 709, 711, 710,
	712, 725, 726, 757, 715, 755, 756, 716, 717, 718,
	719, 720, 721, 722, 740, 727, 728, 729, 761, 0,
	765, 766, 741, 742, 0, 782, 786, 787, 788, 789,
	0, 0, 818, 95, 823, 824, 825, 826, 838, 831,
	1090, 958, 959, 960, 0, 962, 965, 0, 1074, 1076,
	967, 969, 1085, 1086, 1087, 0, 0, 0, 0, 0,
	973, 977, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 999, 1262, 1263, 1264, 1018, 288,
	289, 0, 1019, 0, 0, 0, 0, 0, 0, 0,
	1089, 1020, 0, 874, 0, 0, 1292, 1289, 0, 0,
	0, 1247, 1249, 0, 0, 0, 0, 851, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1265, 0,
	0, 0, 0, 0, 1285, 0, 1025, 1026, 1027, 0,
	0, 0, 0, 1142, 0, 0, 0, 0, 0, 0,
	1443, 0, 132, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 1190, 1191, 1192, 38, 0, 0, 0, 861, 1296,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 808, 809, 811, 0,
	944, 0, 925, 0, 0, 814, 0, 855, 0, 858,
	59, 61, 867, 868, 0, 885, 864, 55, 50, 0,
	0, 902, 1360, 357, 1382, 0, 366, 366, 363, 1322,
	1323, 0, 1315, 1317, 1318, 78, 882, 878, 0, 956,
	0, 0, 939, 0, 888, 890, 891, 892, 922, 0,
	895, 0, 0, 0, 0, 0, 97, 941, 1413, 0,
	102, 0, 0, 107, 108, 1414, 1415, 1416, 1417, 0,
	582, -2, 443, 169, 171, 172, 173, 164, -2, 355,
	353, 354, 298, 357, 357, 322, 323, 324, 325, 326,
	327, 0, 0, 315, 316, 317, 318, 309, 0, 310,
	311, 312, 0, 313, 410, 0, 1324, 373, 374, 376,
	384, 0, 379, 380, 0, 384, 384, 0, 405, 406,
	0, 1316, 1341, 0, 0, 0, 1445, 1444, 1444, 1444,
	0, 157, 158, 159, 160, 161, 162, 618, 0, 0,
	594, 616, 617, 155, 0, 0, 165, 498, 497, 0,
	650, 0, 408, 0, 0, 402, 402, 387, 388, 539,
	0, 0, 625, 626, 627, 628, 0, 0, 0, 525,
	437, 0, 526, 527, 496, 498, 0, 0, 368, 451,
	452, 457, 458, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 573, 574, 576, 500,
	580, 575, 577, 500, 581, 1338, 1339, 1340, 0, 0,
	688, 0, 0, 434, 93, 1433, 693, 754, 714, 746,
	754, 706, 713, 734, 778, 822, 0, 0, 0, 0,
	830, 0, 0, 966, 1075, 1077, 970, 0, 974, 978,
	0, 0, 0, 1024, 1022, 1296, 0, 0, 0, 1071,
	0, 0, 1093, 1094, 0, 0, 0, 1290, 0, 0,
	1100, 0, 1250, 1251, 1108, 0, 0, 0, 0, 0,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1310, 0, 0, 0, 0, 0, 1129, 1130, 1131, 1132,
	1133, 0, 1135, 0, 1136, 0, 0, 1140, 1141, 1143,
	0, 0, 0, 0, 1149, 1150, 0, 0, 1151, 0,
	0, 0, 1155, 0, 0, 0, 0, 1164, 1165, 1166,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 1179, 0, 1053, 0, 0, 1053, 0, 1091,
	860, 0, 1252, 1253, 1254, 1255, 1256, 0, 0, 0,
	0, 0, 0, 1212, 1213, 1215, 0, 0, 1218, 0,
	1220, 0, 1407, 807, 810, 812, 898, 945, 946, 0,
	0, 0, 0, 926, 1441, 853, 854, 857, 904, 0,
	1298, 0, 0, 885, 956, 886, 0, 865, 52, 901,
	0, 1364, 1363, 1376, 1389, 366, 366, 360, 361, 367,
	362, 364, 365, 1314, 0, 1319, 0, 1400, 0, 0,
	1392, 0, 0, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 932, 0, 0, 0, 0, 923, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 91, 92, 0,
	0, 0, 105, 106, 0, 0, 112, 369, 370, 146,
	155, 445, 170, 418, 0, 0, 294, 356, 319, 320,
	321, 0, 343, 0, 0, 0, 439, 118, 1328, 1327,
	384, 384, 375, 0, 378, 0, 0, 0, 1446, 346,
	407, 0, 136, 0, 0, 0, 0, 0, 142, 588,
	0, 0, 595, 0, 0, 0, 507, 0, 518, 519,
	0, 622, -2, 684, 372, 0, 386, 389, 911, 0,
	0, 520, 0, 523, 524, 438, 498, 529, 530, 544,
	531, 480, 481, 478, 0, 0, 1351, 1352, 1357, 1355,
	1356, 123, 565, 567, 566, 570, 0, 0, 502, 0,
	502, 563, 0, 434, 1324, 0, 692, 435, 436, 757,
	757, 817, 96, 0, 820, 0, 0, 0, 0, 971,
	975, 1257, 1283, 345, 345, 1270, 345, 349, 1273, 345,
	1275, 345, 1278, 345, 1281, 1282, 0, 0, 0, 875,
	0, 0, 1099, 1293, 0, 0, 1109, 1110, 1111, 1112,
	1113, 1287, 0, 0, 0, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 1052, 0, 1054, 1055,
	0, 0, 1181, 0, 0, 1193, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 947, 952,
	952, 952, 0, 0, 0, 1428, 1429, 1299, 1300, 956,
	1301, 887, 866, 903, 1382, 0, 1375, 0, -2, 1384,
	0, 0, 0, 1390, 358, 359, 879, 79, 957, 82,
	0, 1400, 1409, 0, 1391, 1402, 1404, 0, 0, 0,
	1396, 0, 956, 889, 918, 920, 0, 915, 930, 931,
	933, 0, 935, 0, 937, 938, 900, 894, 896, 0,
	0, 0, 99, 0, 956, 956, 98, 0, 943, 109,
	110, 111, 444, 174, 179, 0, 0, 0, 184, 0,
	186, 0, 0, 0, 191, 192, 384, 384, 419, 0,
	291, 293, 0, 0, 177, 357, 0, 357, 0, 350,
	0, 420, 440, 1325, 1326, 0, 0, 377, 381, 382,
	383, 0, 1435, 138, 0, 0, 0, 591, 0, 619,
	0, 0, 0, 0, 0, 0, 166, 499, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 0, 384, 0,
	0, 0, 384, 384, 384, 0, 676, 371, 0, 0,
	647, 644, 521, 0, 215, 216, 218, 0, 0, 0,
	0, 0, 528, 900, 1342, 1343, 1344, 0, 1354, 1358,
	126, 0, 0, 0, 0, 578, 0, 501, 579, 689,
	690, 691, 94, 699, 705, 819, 839, 964, 972, 976,
	0, 0, 0, 0, 1284, 1268, 357, 1271, 1272, 1274,
	1276, 1277, 1279, 1280, 1012, 1013, 1017, 0, 1096, 0,
	1098, 1291, 0, 1319, 0, 0, 0, 1127, 0, 0,
	0, 1138, 1137, 1139, 1144, 0, 1146, 1147, 1148, 1152,
	0, 1154, 1156, 1157, 0, 0, 0, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 0, 1046, 1049,
	1180, 1056, 1057, 1062, 1183, 0, 0, 1092, 1195, 0,
	1200, 0, 0, 1206, 0, 1210, 0, 1216, 1217, 1219,
	1221, 0, 0, 0, 0, 0, 924, 905, 63, 1301,
	1303, 0, 1369, 1367, 1367, 1377, 1378, 0, 0, 1385,
	0, 0, 0, 0, 83, 0, 0, 0, 1405, 0,
	0, 0, 0, 100, 1310, 912, 919, 0, 0, 913,
	0, 914, 934, 936, 893, -2, 897, 0, 956, 956,
	89, 90, 0, 180, 0, 182, 208, 209, 0, 185,
	187, 188, 189, 195, 196, 197, 190, 0, 0, 290,
	292, 0, 0, 333, 344, 334, 0, 0, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 900, 139, 140, 141,
	583, 0, 593, 0, 0, 0, 586, 0, 510, 0,
	0, 0, 384, 384, 384, 0, 0, 0, 0, 661,
	0, 0, 624, 0, 632, 0, 0, 0, 219, 220,
	0, 1353, 564, 0, 124, 125, 0, 0, 569, 503,
	504, 1010, 0, 0, 0, 1011, 1269, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 1134, 0, 0, 0,
	1160, 0, 0, 0, 613, 614, 0, 1224, 1051, 1310,
	0, 1053, 1063, 1064, 0, 1053, 1194, 0, 0, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 944,
	1303, 1308, 0, 0, 1372, 0, 1365, 1368, 1366, 1379,
	0, 0, 1386, 0, 1388, 0, 1410, 1411, 1403, 0,
	1395, 1398, 1394, 1397, 1319, 916, 0, 921, 0, 1310,
	88, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 348, 351, 0,
	0, 0, 584, 0, 596, 587, 0, 674, 0, 678,
	0, 0, 0, 681, 682, 683, 660, 0, 664, 412,
	648, 645, 646, 522, 0, 127, 128, 0, 0, 0,
	1258, 0, 1261, 1095, 1097, 0, 1124, 1125, 1126, 1266,
	1267, 1145, 1153, 1158, 0, 1161, 0, 0, 1162, 0,
	615, 1042, 0, 0, 1060, 1061, 0, 1196, 0, 1201,
	1202, 0, 1207, 0, 1211, 1222, 0, 949, 906, 907,
	954, 955, 0, 0, 899, 1308, 81, 1309, 1306, 0,
	1304, 1302, 1361, 0, 1370, 1371, 1380, 1381, 1387, 0,
	1393, 0, 86, 0, 0, 0, 1319, 181, 0, 200,
	0, 592, 0, 595, 585, 672, 673, 0, 685, 677,
	679, 680, 662, -2, 1345, 0, 0, 0, 571, 1259,
	0, 0, 1163, 0, 611, 612, 1050, 1043, 0, 1028,
	1029, 1047, 1182, 1184, 0, 0, 0, 0, 948, 950,
	951, 80, 0, 1305, 1068, 0, 1373, 1374, 1401, 1399,
	917, 924, 0, 87, 425, 418, 1345, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 561, 1347, 129,
	130, 491, 492, 493, 123, 0, 1101, 1159, 1044, 0,
	0, 0, 0, 1040, 1041, 0, 1197, 0, 1203, 0,
	1208, 0, 908, 909, 1307, 0, 0, 597, 0, 599,
	0, -2, 413, 426, 0, 175, 201, 202, 0, 0,
	205, 206, 207, 198, 199, 119, 0, 0, 686, 0,
	1348, 1349, 126, 0, 0, 1035, 1036, 1037, 1038, 1039,
	0, 0, 0, 1069, 1048, 598, 0, 0, 368, 0,
	608, 414, 415, 0, 421, 422, 423, 424, 203, 204,
	620, 0, 0, 568, 1260, 0, 1198, 0, 1204, 0,
	1209, 0, 600, 601, 609, 0, 416, 0, 417, 0,
	0, 0, 589, 0, 620, 1346, 1045, 0, 0, 1067,
	0, 610, 606, 427, 429, 430, 0, 0, 428, 621,
	590, 1199, 1205, 0, 431, 432, 433, 602, 603, 604,
	605,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 143, 3, 3, 3, 170, 162, 3,
	87, 89, 167, 165, 88, 166, 220, 168, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 654,
	151, 150, 152, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 172, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 173,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 140, 141, 142, 144, 145, 146,
	147, 148, 149, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 163, 164, 169, 171, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:651
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:657
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:678
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:682
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:688
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:700
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:704
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:723
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:930
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:934
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:968
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1001
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1023
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1033
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1037
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1041
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1047
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1051
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1055
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1059
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1065
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1069
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1073
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1085
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1092
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1101
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1105
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1112
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1121
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1136
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1141
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1147
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1167
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1173
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1189
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1196
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1203
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1208
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1213
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1218
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1225
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1232
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1243
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1254
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1260
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1264
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1268
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1296
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1306
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1310
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1316
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1326
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1330
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1336
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1346
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1351
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1384
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1393
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1501
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1505
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1509
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1515
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1519
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1555
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1561
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Armscii8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = ASCIIStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Big5Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = UBinaryStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = Cp1250Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Cp1251Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Cp1256Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Cp1257Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Cp850Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Cp852Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Cp866Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Cp932Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Dec8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = EucjpmsStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = EuckrStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Gb18030Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Gb2312Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = GbkStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Geostd8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = GreekStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = HebrewStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Hp8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Keybcs2Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Koi8rStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Koi8uStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Latin1Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Latin2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Latin5Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Latin7Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = MacceStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = MacromanStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = SjisStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Swe7Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Tis620Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Ucs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = UjisStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Utf16Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Utf16leStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Utf32Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Utf8Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Utf8mb4Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Utf8Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1865
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1869
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1873
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1879
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1897
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1904
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1908
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1912
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1916
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2153
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2162
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2170
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2252
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2256
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2275
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2284
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2290
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2300
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2304
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2309
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2313
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2317
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2321
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2325
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2329
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2345
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2349
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2353
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2357
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2361
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = "key"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2428
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2438
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2442
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2448
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2452
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2458
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2462
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2468
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2474
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2478
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2482
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2486
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2490
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2505
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2511
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2517
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2521
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2525
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2530
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2534
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2540
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2546
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2552
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2556
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2560
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2564
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2568
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2587
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2596
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2600
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2609
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2615
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2629
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2823
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2841
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2845
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2854
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2862
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 510:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2870
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2876
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3018
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3264
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3273
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3281
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3290
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3297
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3309
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3318
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3333
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3347
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3351
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3357
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3363
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3369
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3379
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3383
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3389
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3395
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3401
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3407
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3431
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3437
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3443
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3447
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3451
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3457
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3461
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3466
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3470
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3475
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3479
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3521
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3525
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3529
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3533
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3537
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3541
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3545
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3549
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3553
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3557
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3561
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3565
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3569
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3582
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3588
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3607
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3612
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3632
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3638
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3649
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3655
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3661
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3671
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3676
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3680
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3685
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3690
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3695
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3700
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3706
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3719
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3726
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3733
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3751
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3757
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3763
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3769
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3775
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3781
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3793
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3815
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3819
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = "extended "
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4103
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4121
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4125
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4135
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4141
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4246
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4250
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4254
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4258
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4262
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4266
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = yyDollar[1].str
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = yyDollar[1].str
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4343
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4353
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4359
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4363
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4367
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4371
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4496
		{
			setAllowComments(yylex, true)
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4506
		{
			yyVAL.strs = nil
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = SQLCacheStr
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4542
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4546
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4560
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4579
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4598
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4603
		{
			yyVAL.strs = nil
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = SQLCacheStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = DistinctStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = DistinctStr
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = StraightJoinHint
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4655
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4665
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4669
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4673
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4677
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4682
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4702
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4706
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4712
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4718
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4736
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4740
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4744
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4750
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4754
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4760
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4764
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4773
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4779
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4789
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4799
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4803
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4817
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4834
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4838
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4842
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4846
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4852
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4858
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4864
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4869
		{
			yyVAL.empty = struct{}{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.empty = struct{}{}
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4895
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4899
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4903
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4909
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4915
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4919
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4923
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4927
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4933
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4937
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4947
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4976
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4982
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4992
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4996
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5000
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5004
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5009
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5013
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5017
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5021
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5315
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5321
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5331
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5335
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5339
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5345
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5349
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5356
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5360
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5364
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5368
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5372
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5378
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5382
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5386
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5390
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5394
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5419
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5423
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5432
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5437
		{
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5446
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5452
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5456
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5468
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5474
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5478
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5484
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5488
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5494
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5498
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5510
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5516
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5520
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5526
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5532
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5552
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5556
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5563
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5567
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5571
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5575
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5581
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5585
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5589
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5593
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5597
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5601
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5605
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5611
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5615
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5619
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5626
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5632
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6198
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6206
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6210
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6214
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6218
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6222
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6226
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6230
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6234
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6238
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6242
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6246
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6252
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6256
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6260
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6264
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6268
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6272
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6276
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6280
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6284
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6339
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6343
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6347
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6351
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6355
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6379
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6383
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6389
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6393
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6397
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6405
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6427
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6431
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6435
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6439
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6471
		{
			yyVAL.str = string("")
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6475
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6481
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6485
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6491
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6506
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6510
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6514
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6518
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6547
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6562
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6568
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6581
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6590
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6596
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6602
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6606
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6612
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6617
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6621
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6625
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6634
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6640
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6644
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6648
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6657
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6661
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6665
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6669
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6676
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6680
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6684
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6688
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6694
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6698
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6702
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6706
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6711
		{
			yyVAL.str = ""
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6719
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6723
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6728
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6747
		{
			yyVAL.str = ""
		}
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6751
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6756
		{
			yyVAL.str = "cascaded"
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6773
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6779
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6785
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6791
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6800
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6809
		{
			yyVAL.str = ""
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6819
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6823
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6829
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6833
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6837
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6842
		{
			yyVAL.str = ""
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6846
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6850
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = ""
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = " header"
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = ""
		}
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = " manifest on"
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = " manifest off"
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = ""
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6881
		{
			yyVAL.str = " overwrite on"
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = " overwrite off"
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = ""
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6906
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6910
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6920
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6925
		{
			yyVAL.str = ""
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6939
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6945
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6949
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6958
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = " optionally"
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6975
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6979
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6983
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6987
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6991
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6997
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7001
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7005
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7009
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7018
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7024
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7028
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7034
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7038
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7044
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7048
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7063
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7067
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7073
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7079
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7083
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7089
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7093
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7097
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7101
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7107
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7111
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7115
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7122
		{
			yyVAL.str = "charset"
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7132
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7169
		{
			yyVAL.empty = struct{}{}
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7171
		{
			yyVAL.empty = struct{}{}
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.empty = struct{}{}
		}
	case 1441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7177
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7186
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7193
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7197
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7203
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7207
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7214
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7220
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7224
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7230
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7241
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7808
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7817
		{
			decNesting(yylex)
		}
	case 1999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7822
		{
			skipToEnd(yylex)
		}
	case 2000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7827
		{
			skipToEnd(yylex)
		}
	case 2001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7831
		{
			skipToEnd(yylex)
		}
	case 2002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7835
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
