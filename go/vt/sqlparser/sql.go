// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const BINARY = 57505
const UNDERSCORE_ARMSCII8 = 57506
const UNDERSCORE_ASCII = 57507
const UNDERSCORE_BIG5 = 57508
const UNDERSCORE_BINARY = 57509
const UNDERSCORE_CP1250 = 57510
const UNDERSCORE_CP1251 = 57511
const UNDERSCORE_CP1256 = 57512
const UNDERSCORE_CP1257 = 57513
const UNDERSCORE_CP850 = 57514
const UNDERSCORE_CP852 = 57515
const UNDERSCORE_CP866 = 57516
const UNDERSCORE_CP932 = 57517
const UNDERSCORE_DEC8 = 57518
const UNDERSCORE_EUCJPMS = 57519
const UNDERSCORE_EUCKR = 57520
const UNDERSCORE_GB18030 = 57521
const UNDERSCORE_GB2312 = 57522
const UNDERSCORE_GBK = 57523
const UNDERSCORE_GEOSTD8 = 57524
const UNDERSCORE_GREEK = 57525
const UNDERSCORE_HEBREW = 57526
const UNDERSCORE_HP8 = 57527
const UNDERSCORE_KEYBCS2 = 57528
const UNDERSCORE_KOI8R = 57529
const UNDERSCORE_KOI8U = 57530
const UNDERSCORE_LATIN1 = 57531
const UNDERSCORE_LATIN2 = 57532
const UNDERSCORE_LATIN5 = 57533
const UNDERSCORE_LATIN7 = 57534
const UNDERSCORE_MACCE = 57535
const UNDERSCORE_MACROMAN = 57536
const UNDERSCORE_SJIS = 57537
const UNDERSCORE_SWE7 = 57538
const UNDERSCORE_TIS620 = 57539
const UNDERSCORE_UCS2 = 57540
const UNDERSCORE_UJIS = 57541
const UNDERSCORE_UTF16 = 57542
const UNDERSCORE_UTF16LE = 57543
const UNDERSCORE_UTF32 = 57544
const UNDERSCORE_UTF8 = 57545
const UNDERSCORE_UTF8MB4 = 57546
const UNDERSCORE_UTF8MB3 = 57547
const INTERVAL = 57548
const WINDOW_EXPR = 57549
const JSON_EXTRACT_OP = 57550
const JSON_UNQUOTE_EXTRACT_OP = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const FLUSH = 57558
const CHANGE = 57559
const MODIFY = 57560
const DEALLOCATE = 57561
const REVERT = 57562
const QUERIES = 57563
const SCHEMA = 57564
const TABLE = 57565
const INDEX = 57566
const VIEW = 57567
const TO = 57568
const IGNORE = 57569
const IF = 57570
const PRIMARY = 57571
const COLUMN = 57572
const SPATIAL = 57573
const FULLTEXT = 57574
const KEY_BLOCK_SIZE = 57575
const CHECK = 57576
const INDEXES = 57577
const ACTION = 57578
const CASCADE = 57579
const CONSTRAINT = 57580
const FOREIGN = 57581
const NO = 57582
const REFERENCES = 57583
const RESTRICT = 57584
const SHOW = 57585
const DESCRIBE = 57586
const EXPLAIN = 57587
const DATE = 57588
const ESCAPE = 57589
const REPAIR = 57590
const OPTIMIZE = 57591
const TRUNCATE = 57592
const COALESCE = 57593
const EXCHANGE = 57594
const REBUILD = 57595
const PARTITIONING = 57596
const REMOVE = 57597
const PREPARE = 57598
const EXECUTE = 57599
const MAXVALUE = 57600
const PARTITION = 57601
const REORGANIZE = 57602
const LESS = 57603
const THAN = 57604
const PROCEDURE = 57605
const TRIGGER = 57606
const VINDEX = 57607
const VINDEXES = 57608
const DIRECTORY = 57609
const NAME = 57610
const UPGRADE = 57611
const STATUS = 57612
const VARIABLES = 57613
const WARNINGS = 57614
const CASCADED = 57615
const DEFINER = 57616
const OPTION = 57617
const SQL = 57618
const UNDEFINED = 57619
const SEQUENCE = 57620
const MERGE = 57621
const TEMPORARY = 57622
const TEMPTABLE = 57623
const INVOKER = 57624
const SECURITY = 57625
const FIRST = 57626
const AFTER = 57627
const LAST = 57628
const VITESS_MIGRATION = 57629
const CANCEL = 57630
const RETRY = 57631
const LAUNCH = 57632
const COMPLETE = 57633
const CLEANUP = 57634
const THROTTLE = 57635
const UNTHROTTLE = 57636
const FORCE_CUTOVER = 57637
const EXPIRE = 57638
const RATIO = 57639
const VITESS_THROTTLER = 57640
const BEGIN = 57641
const START = 57642
const TRANSACTION = 57643
const COMMIT = 57644
const ROLLBACK = 57645
const SAVEPOINT = 57646
const RELEASE = 57647
const WORK = 57648
const CONSISTENT = 57649
const SNAPSHOT = 57650
const BIT = 57651
const TINYINT = 57652
const SMALLINT = 57653
const MEDIUMINT = 57654
const INT = 57655
const INTEGER = 57656
const BIGINT = 57657
const INTNUM = 57658
const REAL = 57659
const DOUBLE = 57660
const FLOAT_TYPE = 57661
const FLOAT4_TYPE = 57662
const FLOAT8_TYPE = 57663
const DECIMAL_TYPE = 57664
const NUMERIC = 57665
const TIME = 57666
const TIMESTAMP = 57667
const DATETIME = 57668
const YEAR = 57669
const CHAR = 57670
const VARCHAR = 57671
const BOOL = 57672
const CHARACTER = 57673
const VARBINARY = 57674
const NCHAR = 57675
const TEXT = 57676
const TINYTEXT = 57677
const MEDIUMTEXT = 57678
const LONGTEXT = 57679
const BLOB = 57680
const TINYBLOB = 57681
const MEDIUMBLOB = 57682
const LONGBLOB = 57683
const JSON = 57684
const JSON_SCHEMA_VALID = 57685
const JSON_SCHEMA_VALIDATION_REPORT = 57686
const ENUM = 57687
const GEOMETRY = 57688
const POINT = 57689
const LINESTRING = 57690
const POLYGON = 57691
const GEOMCOLLECTION = 57692
const GEOMETRYCOLLECTION = 57693
const MULTIPOINT = 57694
const MULTILINESTRING = 57695
const MULTIPOLYGON = 57696
const ASCII = 57697
const UNICODE = 57698
const NULLX = 57699
const AUTO_INCREMENT = 57700
const APPROXNUM = 57701
const SIGNED = 57702
const UNSIGNED = 57703
const ZEROFILL = 57704
const PURGE = 57705
const BEFORE = 57706
const CODE = 57707
const COLLATION = 57708
const COLUMNS = 57709
const DATABASES = 57710
const ENGINES = 57711
const EVENT = 57712
const EXTENDED = 57713
const FIELDS = 57714
const FULL = 57715
const FUNCTION = 57716
const GTID_EXECUTED = 57717
const KEYSPACES = 57718
const OPEN = 57719
const PLUGINS = 57720
const PRIVILEGES = 57721
const PROCESSLIST = 57722
const SCHEMAS = 57723
const TABLES = 57724
const TRIGGERS = 57725
const USER = 57726
const VGTID_EXECUTED = 57727
const VITESS_KEYSPACES = 57728
const VITESS_METADATA = 57729
const VITESS_MIGRATIONS = 57730
const VITESS_REPLICATION_STATUS = 57731
const VITESS_SHARDS = 57732
const VITESS_TABLETS = 57733
const VITESS_TARGET = 57734
const VSCHEMA = 57735
const VITESS_THROTTLED_APPS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const ADDDATE = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_DATE = 57752
const CURDATE = 57753
const DATE_ADD = 57754
const DATE_SUB = 57755
const NOW = 57756
const SUBDATE = 57757
const CURTIME = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const CURRENT_USER = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const SYSDATE = 57766
const DAY = 57767
const DAY_HOUR = 57768
const DAY_MICROSECOND = 57769
const DAY_MINUTE = 57770
const DAY_SECOND = 57771
const HOUR = 57772
const HOUR_MICROSECOND = 57773
const HOUR_MINUTE = 57774
const HOUR_SECOND = 57775
const MICROSECOND = 57776
const MINUTE = 57777
const MINUTE_MICROSECOND = 57778
const MINUTE_SECOND = 57779
const MONTH = 57780
const QUARTER = 57781
const SECOND = 57782
const SECOND_MICROSECOND = 57783
const YEAR_MONTH = 57784
const WEEK = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_HOUR = 57788
const SQL_TSI_MINUTE = 57789
const SQL_TSI_MONTH = 57790
const SQL_TSI_QUARTER = 57791
const SQL_TSI_SECOND = 57792
const SQL_TSI_MICROSECOND = 57793
const SQL_TSI_YEAR = 57794
const REPLACE = 57795
const CONVERT = 57796
const CAST = 57797
const SUBSTR = 57798
const SUBSTRING = 57799
const MID = 57800
const SEPARATOR = 57801
const TIMESTAMPADD = 57802
const TIMESTAMPDIFF = 57803
const WEIGHT_STRING = 57804
const LTRIM = 57805
const RTRIM = 57806
const TRIM = 57807
const JSON_ARRAY = 57808
const JSON_OBJECT = 57809
const JSON_QUOTE = 57810
const JSON_DEPTH = 57811
const JSON_TYPE = 57812
const JSON_LENGTH = 57813
const JSON_VALID = 57814
const JSON_ARRAY_APPEND = 57815
const JSON_ARRAY_INSERT = 57816
const JSON_INSERT = 57817
const JSON_MERGE = 57818
const JSON_MERGE_PATCH = 57819
const JSON_MERGE_PRESERVE = 57820
const JSON_REMOVE = 57821
const JSON_REPLACE = 57822
const JSON_SET = 57823
const JSON_UNQUOTE = 57824
const COUNT = 57825
const AVG = 57826
const MAX = 57827
const MIN = 57828
const SUM = 57829
const GROUP_CONCAT = 57830
const BIT_AND = 57831
const BIT_OR = 57832
const BIT_XOR = 57833
const STD = 57834
const STDDEV = 57835
const STDDEV_POP = 57836
const STDDEV_SAMP = 57837
const VAR_POP = 57838
const VAR_SAMP = 57839
const VARIANCE = 57840
const ANY_VALUE = 57841
const REGEXP_INSTR = 57842
const REGEXP_LIKE = 57843
const REGEXP_REPLACE = 57844
const REGEXP_SUBSTR = 57845
const ExtractValue = 57846
const UpdateXML = 57847
const GET_LOCK = 57848
const RELEASE_LOCK = 57849
const RELEASE_ALL_LOCKS = 57850
const IS_FREE_LOCK = 57851
const IS_USED_LOCK = 57852
const LOCATE = 57853
const POSITION = 57854
const ST_GeometryCollectionFromText = 57855
const ST_GeometryFromText = 57856
const ST_LineStringFromText = 57857
const ST_MultiLineStringFromText = 57858
const ST_MultiPointFromText = 57859
const ST_MultiPolygonFromText = 57860
const ST_PointFromText = 57861
const ST_PolygonFromText = 57862
const ST_GeometryCollectionFromWKB = 57863
const ST_GeometryFromWKB = 57864
const ST_LineStringFromWKB = 57865
const ST_MultiLineStringFromWKB = 57866
const ST_MultiPointFromWKB = 57867
const ST_MultiPolygonFromWKB = 57868
const ST_PointFromWKB = 57869
const ST_PolygonFromWKB = 57870
const ST_AsBinary = 57871
const ST_AsText = 57872
const ST_Dimension = 57873
const ST_Envelope = 57874
const ST_IsSimple = 57875
const ST_IsEmpty = 57876
const ST_GeometryType = 57877
const ST_X = 57878
const ST_Y = 57879
const ST_Latitude = 57880
const ST_Longitude = 57881
const ST_EndPoint = 57882
const ST_IsClosed = 57883
const ST_Length = 57884
const ST_NumPoints = 57885
const ST_StartPoint = 57886
const ST_PointN = 57887
const ST_Area = 57888
const ST_Centroid = 57889
const ST_ExteriorRing = 57890
const ST_InteriorRingN = 57891
const ST_NumInteriorRings = 57892
const ST_NumGeometries = 57893
const ST_GeometryN = 57894
const ST_LongFromGeoHash = 57895
const ST_PointFromGeoHash = 57896
const ST_LatFromGeoHash = 57897
const ST_GeoHash = 57898
const ST_AsGeoJSON = 57899
const ST_GeomFromGeoJSON = 57900
const MATCH = 57901
const AGAINST = 57902
const BOOLEAN = 57903
const LANGUAGE = 57904
const WITH = 57905
const QUERY = 57906
const EXPANSION = 57907
const WITHOUT = 57908
const VALIDATION = 57909
const UNUSED = 57910
const ARRAY = 57911
const BYTE = 57912
const CUME_DIST = 57913
const DESCRIPTION = 57914
const DENSE_RANK = 57915
const EMPTY = 57916
const EXCEPT = 57917
const FIRST_VALUE = 57918
const GROUPING = 57919
const GROUPS = 57920
const JSON_TABLE = 57921
const LAG = 57922
const LAST_VALUE = 57923
const LATERAL = 57924
const LEAD = 57925
const NTH_VALUE = 57926
const NTILE = 57927
const OF = 57928
const OVER = 57929
const PERCENT_RANK = 57930
const RANK = 57931
const RECURSIVE = 57932
const ROW_NUMBER = 57933
const SYSTEM = 57934
const WINDOW = 57935
const ACTIVE = 57936
const ADMIN = 57937
const AUTOEXTEND_SIZE = 57938
const BUCKETS = 57939
const CLONE = 57940
const COLUMN_FORMAT = 57941
const COMPONENT = 57942
const DEFINITION = 57943
const ENFORCED = 57944
const ENGINE_ATTRIBUTE = 57945
const EXCLUDE = 57946
const FOLLOWING = 57947
const GET_MASTER_PUBLIC_KEY = 57948
const HISTOGRAM = 57949
const HISTORY = 57950
const INACTIVE = 57951
const INVISIBLE = 57952
const LOCKED = 57953
const MASTER_COMPRESSION_ALGORITHMS = 57954
const MASTER_PUBLIC_KEY_PATH = 57955
const MASTER_TLS_CIPHERSUITES = 57956
const MASTER_ZSTD_COMPRESSION_LEVEL = 57957
const NESTED = 57958
const NETWORK_NAMESPACE = 57959
const NOWAIT = 57960
const NULLS = 57961
const OJ = 57962
const OLD = 57963
const OPTIONAL = 57964
const ORDINALITY = 57965
const ORGANIZATION = 57966
const OTHERS = 57967
const PARTIAL = 57968
const PATH = 57969
const PERSIST = 57970
const PERSIST_ONLY = 57971
const PRECEDING = 57972
const PRIVILEGE_CHECKS_USER = 57973
const PROCESS = 57974
const RANDOM = 57975
const REFERENCE = 57976
const REQUIRE_ROW_FORMAT = 57977
const RESOURCE = 57978
const RESPECT = 57979
const RESTART = 57980
const RETAIN = 57981
const REUSE = 57982
const ROLE = 57983
const SECONDARY = 57984
const SECONDARY_ENGINE = 57985
const SECONDARY_ENGINE_ATTRIBUTE = 57986
const SECONDARY_LOAD = 57987
const SECONDARY_UNLOAD = 57988
const SIMPLE = 57989
const SKIP = 57990
const SRID = 57991
const THREAD_PRIORITY = 57992
const TIES = 57993
const UNBOUNDED = 57994
const VCPU = 57995
const VISIBLE = 57996
const RETURNING = 57997
const FORMAT_BYTES = 57998
const FORMAT_PICO_TIME = 57999
const PS_CURRENT_THREAD_ID = 58000
const PS_THREAD_ID = 58001
const GTID_SUBSET = 58002
const GTID_SUBTRACT = 58003
const WAIT_FOR_EXECUTED_GTID_SET = 58004
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58005
const FORMAT = 58006
const TREE = 58007
const VITESS = 58008
const TRADITIONAL = 58009
const VTEXPLAIN = 58010
const VEXPLAIN = 58011
const PLAN = 58012
const LOCAL = 58013
const LOW_PRIORITY = 58014
const NO_WRITE_TO_BINLOG = 58015
const LOGS = 58016
const ERROR = 58017
const GENERAL = 58018
const HOSTS = 58019
const OPTIMIZER_COSTS = 58020
const USER_RESOURCES = 58021
const SLOW = 58022
const CHANNEL = 58023
const RELAY = 58024
const EXPORT = 58025
const CURRENT = 58026
const ROW = 58027
const ROWS = 58028
const AVG_ROW_LENGTH = 58029
const CONNECTION = 58030
const CHECKSUM = 58031
const DELAY_KEY_WRITE = 58032
const ENCRYPTION = 58033
const ENGINE = 58034
const INSERT_METHOD = 58035
const MAX_ROWS = 58036
const MIN_ROWS = 58037
const PACK_KEYS = 58038
const PASSWORD = 58039
const FIXED = 58040
const DYNAMIC = 58041
const COMPRESSED = 58042
const REDUNDANT = 58043
const COMPACT = 58044
const ROW_FORMAT = 58045
const STATS_AUTO_RECALC = 58046
const STATS_PERSISTENT = 58047
const STATS_SAMPLE_PAGES = 58048
const STORAGE = 58049
const MEMORY = 58050
const DISK = 58051
const PARTITIONS = 58052
const LINEAR = 58053
const RANGE = 58054
const LIST = 58055
const SUBPARTITION = 58056
const SUBPARTITIONS = 58057
const HASH = 58058

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	734, 159,
	-2, 167,
	-1, 53,
	136, 167,
	178, 167,
	348, 167,
	-2, 523,
	-1, 61,
	36, 777,
	241, 777,
	252, 777,
	287, 791,
	288, 791,
	-2, 779,
	-1, 66,
	243, 815,
	-2, 813,
	-1, 122,
	240, 1594,
	-2, 133,
	-1, 124,
	1, 160,
	734, 160,
	-2, 167,
	-1, 135,
	137, 408,
	246, 408,
	-2, 512,
	-1, 154,
	136, 167,
	178, 167,
	348, 167,
	-2, 532,
	-1, 735,
	164, 41,
	-2, 45,
	-1, 942,
	87, 1611,
	-2, 1460,
	-1, 943,
	87, 1612,
	223, 1616,
	-2, 1461,
	-1, 944,
	223, 1615,
	-2, 42,
	-1, 1027,
	60, 887,
	-2, 902,
	-1, 1115,
	251, 43,
	256, 43,
	-2, 419,
	-1, 1200,
	1, 580,
	734, 580,
	-2, 167,
	-1, 1503,
	223, 1616,
	-2, 1461,
	-1, 1713,
	60, 888,
	-2, 907,
	-1, 1714,
	60, 889,
	-2, 908,
	-1, 1769,
	136, 167,
	178, 167,
	348, 167,
	-2, 458,
	-1, 1850,
	137, 408,
	246, 408,
	-2, 512,
	-1, 1859,
	251, 44,
	256, 44,
	-2, 420,
	-1, 2299,
	223, 1620,
	-2, 1614,
	-1, 2300,
	223, 1616,
	-2, 1612,
	-1, 2402,
	136, 167,
	178, 167,
	348, 167,
	-2, 459,
	-1, 2409,
	26, 188,
	-2, 190,
	-1, 2864,
	78, 98,
	88, 98,
	-2, 966,
	-1, 2933,
	709, 700,
	-2, 674,
	-1, 3142,
	50, 1562,
	-2, 1556,
	-1, 3960,
	709, 700,
	-2, 688,
	-1, 4047,
	90, 632,
	95, 632,
	105, 632,
	180, 632,
	181, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	-2, 1985,
}

const yyPrivate = 57344

const yyLast = 55405

var yyAct = [...]int{
	958, 3621, 4026, 87, 3620, 4122, 3941, 3622, 3294, 4135,
	946, 4090, 4089, 1268, 953, 1979, 945, 4014, 2092, 3571,
	4045, 2399, 3925, 3194, 3201, 3243, 1266, 3155, 3424, 2328,
	3849, 3252, 2104, 3257, 1772, 3254, 3923, 3253, 3251, 911,
	3256, 3255, 42, 3558, 3272, 2760, 3991, 2035, 3095, 2330,
	5, 3209, 2473, 739, 3271, 3159, 3156, 3469, 3463, 3659,
	2997, 907, 2354, 2824, 3143, 2370, 1728, 2436, 767, 906,
	3274, 3455, 733, 2373, 734, 1828, 2898, 3301, 2979, 2930,
	3489, 2461, 2441, 2899, 2504, 2900, 1025, 2387, 87, 1045,
	163, 1077, 1022, 2849, 1875, 2816, 1147, 2375, 3153, 2830,
	1715, 2800, 2374, 41, 2295, 2251, 2088, 1025, 2250, 2283,
	43, 2127, 2971, 2043, 2460, 149, 2482, 1857, 2362, 2443,
	2891, 1110, 1087, 2521, 1761, 1024, 1105, 1028, 2866, 1741,
	2377, 1694, 104, 1123, 1516, 105, 2348, 2132, 100, 2063,
	1442, 1427, 1864, 1975, 749, 1081, 1047, 3158, 1084, 1116,
	2458, 1113, 1085, 1956, 2432, 736, 1111, 1112, 1760, 2433,
	1034, 1062, 2837, 1064, 1746, 3654, 2201, 2296, 1044, 1499,
	2159, 3913, 2798, 2355, 1475, 1031, 744, 2140, 85, 1256,
	2034, 107, 1987, 1823, 132, 127, 167, 125, 99, 1020,
	126, 1029, 1849, 133, 1196, 743, 908, 1057, 1030, 93,
	1032, 98, 4123, 1264, 1520, 1242, 3559, 3240, 1525, 737,
	84, 2475, 2476, 2477, 3976, 2475, 2953, 2952, 2519, 106,
	2921, 726, 3551, 1052, 1056, 4072, 1019, 3514, 2987, 2988,
	3971, 3972, 2325, 2326, 2050, 671, 2049, 1941, 1037, 128,
	3977, 1078, 2048, 2047, 1690, 1152, 134, 2046, 1149, 2045,
	2018, 1212, 668, 2796, 669, 2569, 4066, 3139, 4093, 1459,
	3099, 1166, 1167, 1168, 4145, 1171, 1172, 1173, 1174, 4088,
	1127, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1126, 1038,
	1072, 1213, 1160, 1071, 727, 4128, 1023, 95, 2826, 3625,
	2, 4113, 1102, 3950, 1021, 1732, 1046, 1153, 1156, 1157,
	1101, 128, 1100, 95, 2923, 1099, 2508, 3262, 1730, 729,
	4127, 3429, 3428, 2351, 1438, 711, 3625, 705, 95, 711,
	3259, 3972, 2066, 1094, 2350, 1733, 912, 1089, 3262, 190,
	4076, 1169, 4074, 2946, 3926, 111, 112, 113, 1731, 116,
	1018, 2761, 122, 2055, 3320, 191, 1722, 3845, 663, 95,
	2507, 3844, 1151, 129, 1150, 4075, 4103, 4073, 3855, 1103,
	724, 725, 4070, 3260, 705, 2943, 172, 190, 3583, 128,
	1013, 1014, 1015, 1016, 1429, 3572, 3624, 1027, 962, 963,
	964, 4015, 4023, 3564, 3260, 1456, 3565, 1457, 1458, 3266,
	2501, 129, 3854, 962, 963, 964, 1070, 1074, 910, 2097,
	4050, 3341, 1838, 3624, 172, 1059, 1060, 702, 2576, 2880,
	3266, 3191, 3192, 86, 86, 2797, 1070, 1074, 910, 1762,
	2875, 1763, 169, 2874, 3190, 170, 2876, 2986, 4027, 2394,
	2395, 86, 3582, 2027, 2028, 2573, 1093, 2840, 2393, 1095,
	705, 705, 2970, 1232, 1249, 1011, 1251, 1261, 189, 1237,
	1238, 1220, 1010, 1220, 3942, 687, 1221, 2887, 1221, 3466,
	169, 705, 2841, 170, 1219, 1233, 1218, 2506, 685, 1983,
	4055, 1226, 3298, 2574, 86, 3955, 1098, 88, 1205, 1206,
	3672, 2412, 2411, 2358, 1248, 1250, 189, 705, 4053, 2833,
	2834, 95, 95, 705, 2327, 3296, 3033, 4059, 4060, 705,
	3328, 4094, 3326, 3263, 4031, 2567, 3211, 3212, 682, 95,
	1208, 2026, 719, 4054, 2030, 1195, 717, 697, 723, 4031,
	3302, 2972, 4095, 1931, 3263, 1698, 1758, 2931, 1439, 706,
	2358, 3897, 692, 3898, 1096, 2452, 2483, 1428, 1098, 2956,
	1090, 1170, 3289, 695, 1957, 2522, 4125, 1092, 1091, 1253,
	3290, 2528, 95, 1476, 1239, 1235, 1236, 1260, 2446, 1258,
	1234, 1241, 173, 1259, 1240, 3299, 1227, 1932, 2570, 1933,
	2571, 179, 1201, 2974, 2524, 3317, 706, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1485, 1484, 1486, 1487, 3297, 3829,
	3553, 1246, 3552, 2960, 2961, 1247, 1096, 2545, 2548, 2546,
	173, 2547, 1176, 1175, 2526, 1252, 2529, 1984, 2486, 179,
	3629, 672, 3549, 674, 688, 3210, 708, 2371, 707, 678,
	1107, 676, 680, 689, 681, 1106, 675, 3213, 686, 1107,
	1245, 677, 690, 691, 694, 698, 699, 700, 696, 693,
	1701, 684, 709, 1063, 4067, 1490, 2525, 2924, 1145, 1144,
	1143, 1142, 706, 706, 1141, 1140, 1139, 1138, 1133, 2527,
	3098, 1842, 3034, 1097, 1146, 2535, 2531, 2533, 2534, 2532,
	2536, 2537, 2538, 706, 3213, 1082, 2356, 2357, 1082, 4146,
	1119, 1155, 1080, 4100, 1082, 1118, 1976, 1118, 2459, 1058,
	2975, 1154, 1265, 2512, 1265, 1265, 164, 2511, 1972, 706,
	2941, 1430, 1163, 3233, 2955, 706, 1973, 2445, 4068, 1836,
	1835, 706, 1834, 1832, 1211, 662, 3938, 1073, 1067, 1065,
	1491, 1492, 3503, 2356, 2357, 1097, 2969, 3548, 3485, 2968,
	2871, 2991, 2836, 2773, 164, 2100, 1750, 1073, 1067, 1065,
	1652, 1210, 1025, 1500, 1505, 1506, 3107, 1509, 1511, 1512,
	1513, 1514, 1515, 1759, 1518, 1519, 1521, 1521, 3467, 1521,
	1521, 1526, 1526, 1526, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1497, 1254, 3949, 1104,
	1651, 2889, 1653, 1654, 1655, 1656, 1657, 1421, 1422, 2922,
	3512, 3513, 959, 1510, 1526, 1526, 1526, 1526, 1526, 1526,
	1943, 1942, 1944, 1945, 1946, 1420, 710, 3412, 959, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 959, 165, 89, 3581, 703, 1443, 1501,
	2958, 177, 2505, 1199, 2925, 1493, 1494, 1495, 1496, 3623,
	1691, 4029, 704, 1136, 1216, 1507, 1222, 1223, 1224, 1225,
	2945, 1522, 1217, 1523, 1524, 2575, 4029, 1490, 1230, 1863,
	1527, 1528, 165, 3264, 3265, 1443, 3623, 1437, 1134, 177,
	1262, 1263, 185, 4028, 94, 94, 3268, 1207, 1688, 3106,
	2574, 1204, 3318, 1066, 3264, 3265, 4058, 1721, 4028, 2801,
	2803, 2978, 94, 1697, 2944, 2503, 1125, 3268, 2831, 670,
	2599, 124, 1025, 1066, 2998, 2400, 1025, 1125, 1490, 1487,
	185, 1162, 1025, 3189, 1722, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 2141, 2449, 1243, 1470,
	4057, 184, 186, 187, 188, 94, 1453, 1961, 1988, 1041,
	2142, 1705, 1689, 2588, 3197, 1709, 119, 1962, 1257, 3963,
	1148, 1024, 1215, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 3544, 3479, 3019, 2450, 1862, 184,
	186, 187, 188, 1453, 2448, 1480, 1481, 1482, 1483, 1485,
	1484, 1486, 1487, 2523, 4139, 2039, 1969, 1764, 3000, 3198,
	1098, 1194, 1137, 2599, 1707, 2133, 2914, 1708, 104, 1124,
	2500, 105, 1658, 1659, 1660, 1661, 1662, 1663, 2451, 1689,
	1124, 4104, 2133, 3200, 2609, 1128, 1118, 1135, 2447, 120,
	1130, 1695, 1458, 1125, 1131, 1129, 1457, 1458, 3668, 1682,
	3519, 3195, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485,
	1484, 1486, 1487, 3518, 2490, 1449, 2981, 107, 1441, 3211,
	3212, 2980, 1872, 1871, 1861, 1198, 3196, 2981, 2802, 3010,
	3009, 3008, 2980, 1229, 3002, 2498, 3006, 2495, 3001, 1703,
	2999, 2139, 1136, 1134, 1231, 3004, 1244, 2168, 4096, 1839,
	1840, 1841, 1449, 3504, 3003, 1855, 1989, 1958, 2495, 1959,
	3202, 2502, 1960, 1706, 1200, 1036, 1214, 4141, 1724, 4147,
	1722, 1704, 3005, 3007, 1981, 1848, 2499, 2138, 1877, 1926,
	1878, 1692, 1880, 1882, 1727, 3993, 1886, 1888, 1890, 1892,
	1894, 1867, 1023, 1021, 3837, 1459, 1124, 2497, 1161, 1908,
	3836, 3931, 1158, 1265, 4085, 1865, 1865, 1755, 1756, 2124,
	2068, 2057, 2059, 2060, 1793, 1866, 1916, 1917, 2580, 2581,
	2582, 3827, 1922, 1923, 2069, 1488, 1489, 2067, 3210, 3595,
	3994, 1197, 1965, 1831, 1963, 1964, 2058, 1966, 1967, 1968,
	3213, 1125, 1459, 1846, 3594, 2160, 3932, 1097, 3526, 1858,
	2162, 1845, 1844, 3525, 2167, 2163, 4148, 3515, 2164, 2165,
	2166, 3241, 3229, 2161, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 1869, 3578, 4137, 3579, 1710, 4138, 1951,
	4136, 1482, 1483, 1485, 1484, 1486, 1487, 1912, 962, 963,
	964, 1125, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1461,
	1904, 1977, 2896, 1907, 1949, 1909, 2895, 2116, 2105, 2106,
	2107, 2108, 2118, 2109, 2110, 2111, 2123, 2119, 2112, 2113,
	2120, 2121, 2122, 2114, 2115, 2117, 4109, 1722, 1125, 1938,
	2894, 1456, 2455, 1457, 1458, 1459, 1101, 128, 1100, 1952,
	3021, 1099, 1936, 1950, 1124, 1837, 1935, 1934, 1924, 2288,
	1118, 1121, 1122, 2285, 1082, 1459, 1918, 3199, 1115, 1119,
	1781, 1994, 2287, 1915, 1914, 1913, 2644, 1459, 1948, 1884,
	1265, 1265, 1702, 2288, 1990, 1991, 957, 3293, 1456, 1114,
	1457, 1458, 1424, 2016, 87, 3509, 711, 87, 1995, 2878,
	711, 2363, 2364, 1937, 1124, 2002, 2003, 2004, 711, 1128,
	1118, 2471, 2470, 1758, 1130, 4097, 2015, 3958, 1131, 1129,
	1448, 1445, 1446, 1447, 1452, 1454, 1451, 1735, 1450, 4107,
	1722, 110, 101, 42, 2469, 2468, 42, 3957, 1444, 1132,
	3935, 1124, 109, 102, 108, 2467, 2466, 1118, 1121, 1122,
	1722, 1082, 3934, 103, 1794, 1115, 1119, 1448, 1445, 1446,
	1447, 1452, 1454, 1451, 3933, 1450, 2095, 2095, 2093, 2093,
	3832, 2096, 3816, 1736, 3815, 1444, 2822, 4124, 1992, 1459,
	3667, 1456, 2646, 1457, 1458, 1996, 1459, 1998, 1999, 2000,
	2001, 3665, 1455, 1722, 2005, 1459, 3591, 2061, 1722, 1459,
	1687, 1456, 1686, 1457, 1458, 1685, 2017, 4084, 1722, 1455,
	1722, 1688, 1722, 1456, 3523, 1457, 1458, 1807, 1810, 1811,
	1812, 1813, 1814, 1815, 3508, 1816, 1817, 1819, 1820, 1818,
	1821, 1822, 1795, 1796, 1797, 1798, 1779, 1780, 1808, 3303,
	1782, 2179, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 2822, 4022, 1792, 1799, 1800, 1801, 1802, 3300, 1803,
	1804, 1805, 1806, 4037, 1722, 2822, 4001, 2822, 3997, 85,
	4035, 1722, 85, 3984, 1722, 1689, 2065, 2040, 3232, 4033,
	1722, 3562, 3948, 2023, 2024, 3840, 1722, 2822, 3828, 2071,
	3231, 2073, 2074, 2075, 2076, 2077, 2078, 2080, 2082, 2083,
	2084, 2085, 2086, 2087, 3562, 1722, 1722, 2070, 3203, 2822,
	3560, 3951, 3207, 2495, 1722, 1456, 2905, 1457, 1458, 3206,
	3483, 1722, 1456, 2892, 1457, 1458, 2299, 1684, 2298, 2558,
	2099, 1456, 2557, 1457, 1458, 1456, 1459, 1457, 1458, 2297,
	2126, 2128, 2728, 1722, 2072, 101, 3222, 3221, 3219, 3220,
	3217, 3218, 103, 3208, 2517, 3335, 102, 1501, 3204, 1476,
	2516, 2990, 2353, 3205, 3217, 3216, 2284, 3864, 2143, 2144,
	2145, 2146, 2846, 1722, 2193, 2134, 1476, 2286, 2178, 1472,
	103, 1473, 2157, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1485, 1484, 1486, 1487, 2333, 1474, 1488, 1489, 1471, 2019,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1484, 1486,
	1487, 1722, 3863, 2574, 2954, 3820, 2379, 1459, 1476, 2302,
	2303, 1722, 1827, 2935, 2299, 1985, 2368, 1478, 1479, 1480,
	1481, 1482, 1483, 1485, 1484, 1486, 1487, 2297, 104, 1722,
	2648, 105, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485,
	1484, 1486, 1487, 1947, 2409, 2381, 2928, 2929, 3819, 104,
	1939, 2191, 105, 2867, 1929, 1476, 1925, 2587, 2064, 1809,
	1921, 2202, 1456, 1459, 1457, 1458, 2344, 2822, 2821, 2601,
	1722, 2301, 1459, 1920, 2304, 2305, 1459, 1919, 1087, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1485, 1484, 1486, 1487,
	2867, 3910, 1722, 2838, 2818, 1737, 2418, 2419, 2420, 2421,
	2098, 1722, 3570, 2413, 1459, 2414, 2415, 2416, 2417, 103,
	2403, 1087, 2404, 1037, 2332, 1255, 2868, 1827, 1826, 2838,
	2385, 2424, 2425, 2426, 2427, 2338, 2870, 2339, 2320, 1459,
	2343, 2275, 2276, 2277, 2278, 2279, 2932, 2346, 1770, 1769,
	2438, 110, 2407, 1456, 2910, 1457, 1458, 3908, 1722, 109,
	2408, 2484, 109, 2868, 108, 1459, 3905, 1722, 2444, 3154,
	3887, 1722, 2366, 2574, 3184, 2846, 2605, 2601, 2391, 2390,
	3478, 2389, 3478, 1455, 2574, 2496, 2845, 2406, 2405, 3480,
	3989, 1072, 3962, 190, 1071, 2822, 2322, 1459, 3454, 1722,
	2846, 3478, 2202, 3433, 3219, 3127, 2481, 2454, 2392, 1456,
	1459, 1457, 1458, 2597, 2601, 1459, 2728, 129, 1456, 151,
	1457, 1458, 1456, 2596, 1457, 1458, 2633, 2632, 1455, 2439,
	172, 1459, 1722, 2495, 2478, 2435, 2428, 2430, 2431, 2489,
	2453, 2846, 2492, 2495, 2493, 2457, 1459, 1127, 2465, 2604,
	1456, 2361, 1457, 1458, 1459, 1726, 2323, 1865, 2098, 2509,
	1459, 162, 2041, 2025, 2439, 1126, 2491, 150, 2487, 2488,
	1971, 1459, 1757, 3244, 1109, 1456, 1108, 1457, 1458, 2513,
	2902, 3447, 1722, 2514, 2515, 2510, 169, 1026, 95, 170,
	4063, 4004, 3851, 1476, 3444, 1722, 1729, 1723, 1725, 3442,
	1722, 1456, 3817, 1457, 1458, 3679, 3543, 3540, 138, 139,
	161, 160, 189, 3521, 1199, 3859, 2579, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1485, 1484, 1486, 1487, 2520, 3295,
	3404, 1722, 3346, 1456, 3345, 1457, 1458, 1459, 3402, 1722,
	1511, 1829, 1511, 3852, 3398, 1722, 1456, 2437, 1457, 1458,
	3291, 1456, 3527, 1457, 1458, 3395, 1722, 3246, 2591, 3242,
	1459, 2936, 2434, 2429, 1459, 95, 2423, 1456, 2422, 1457,
	1458, 1954, 1459, 1860, 2299, 1856, 2298, 2551, 1900, 1459,
	1825, 121, 1456, 2452, 1457, 1458, 2901, 2594, 3490, 3491,
	1456, 3531, 1457, 1458, 1459, 2336, 1456, 2021, 1457, 1458,
	4119, 4117, 1459, 3528, 3529, 3530, 4091, 1456, 3970, 1457,
	1458, 3892, 3493, 155, 136, 158, 143, 135, 3238, 156,
	157, 3393, 1722, 1734, 3237, 3236, 173, 2566, 1459, 1901,
	1902, 1903, 3154, 1896, 2902, 179, 144, 1459, 3532, 3533,
	3534, 1459, 2572, 2915, 3391, 1722, 2552, 1459, 3389, 1722,
	147, 145, 140, 141, 142, 146, 3387, 1722, 3496, 2022,
	1459, 3176, 137, 3385, 1722, 1459, 3177, 2583, 3966, 3495,
	3173, 148, 2065, 1456, 667, 1457, 1458, 3172, 3383, 1722,
	1897, 1898, 1899, 3174, 2584, 1459, 2586, 1722, 3175, 3178,
	1459, 2855, 2856, 3853, 2352, 2589, 1456, 2590, 1457, 1458,
	1456, 2342, 1457, 1458, 3649, 3484, 3648, 3132, 1456, 3131,
	1457, 1458, 3381, 1722, 1039, 1456, 3471, 1457, 1458, 3144,
	3146, 3379, 1722, 3658, 3470, 3377, 1722, 1459, 3147, 2608,
	1456, 3498, 1457, 1458, 3930, 1459, 3660, 3141, 1456, 2585,
	1457, 1458, 2560, 2561, 3375, 1722, 3474, 2563, 728, 3373,
	1722, 1459, 1970, 1042, 3647, 2592, 2564, 1009, 2772, 3215,
	164, 1043, 1459, 1040, 1456, 2885, 1457, 1458, 1459, 3371,
	1722, 1165, 2906, 1456, 3449, 1457, 1458, 1456, 1164, 1457,
	1458, 2642, 101, 1456, 1459, 1457, 1458, 3311, 2901, 103,
	2804, 2141, 1459, 102, 2984, 101, 1456, 1459, 1457, 1458,
	1423, 1456, 1739, 1457, 1458, 2142, 102, 2942, 1025, 2095,
	1459, 2093, 4098, 2807, 129, 3476, 103, 2363, 2364, 3369,
	1722, 1456, 4133, 1457, 1458, 1459, 1456, 3234, 1457, 1458,
	2555, 2843, 2844, 4042, 1459, 3367, 1722, 110, 3947, 3847,
	2379, 2805, 1459, 1025, 2863, 2615, 3365, 1722, 109, 3214,
	108, 2859, 3351, 1722, 2347, 2544, 159, 1050, 1051, 103,
	2543, 2542, 2630, 1456, 2064, 1457, 1458, 2808, 1738, 2810,
	42, 1456, 3130, 1457, 1458, 1459, 2823, 3946, 2842, 2860,
	3129, 3445, 2862, 2541, 2540, 2539, 3456, 1456, 2578, 1457,
	1458, 108, 3918, 3917, 3333, 1722, 3895, 3666, 1456, 3664,
	1457, 1458, 3663, 3656, 1456, 2819, 1457, 1458, 3541, 2793,
	1722, 3475, 3473, 2861, 1695, 2795, 3247, 2832, 2791, 1722,
	1456, 2479, 1457, 1458, 1843, 1459, 2766, 1722, 1456, 1049,
	1457, 1458, 109, 1456, 1459, 1457, 1458, 2888, 2890, 1459,
	3655, 3464, 2815, 1689, 110, 2838, 1456, 3633, 1457, 1458,
	4121, 2835, 2820, 2881, 2818, 109, 110, 2940, 2865, 2743,
	1722, 1456, 3035, 1457, 1458, 152, 2634, 109, 153, 108,
	1456, 2334, 1457, 1458, 1751, 2869, 1743, 2872, 1456, 4120,
	1457, 1458, 1459, 3936, 2444, 3507, 2882, 3, 2879, 2136,
	4121, 4120, 114, 115, 2137, 2951, 1459, 97, 165, 1,
	1459, 1017, 2904, 2038, 2893, 177, 10, 2907, 2908, 2735,
	1722, 1456, 2036, 1457, 1458, 9, 1459, 2037, 2726, 1722,
	8, 1426, 2903, 2724, 1722, 1425, 3511, 1459, 4052, 683,
	2197, 1459, 2324, 1693, 4092, 2911, 4048, 2916, 2917, 2918,
	4049, 2912, 1459, 1940, 1930, 3573, 185, 2249, 3848, 3250,
	2948, 2485, 1459, 3539, 1848, 2442, 1117, 1459, 154, 2401,
	2402, 1456, 1459, 1457, 1458, 4017, 2711, 1722, 2937, 2938,
	1456, 118, 1457, 1458, 1075, 1456, 2927, 1457, 1458, 117,
	2709, 1722, 2994, 2995, 2707, 1722, 2947, 1120, 1459, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	2705, 1722, 1459, 1228, 2480, 184, 186, 187, 188, 3563,
	2281, 2703, 1722, 1459, 2886, 2973, 3824, 3011, 1456, 2410,
	1457, 1458, 2992, 1459, 1776, 2976, 2701, 1722, 1774, 1775,
	1773, 1778, 1456, 1777, 1457, 1458, 1456, 3545, 1457, 1458,
	2314, 2699, 1722, 3319, 2635, 1459, 2697, 1722, 3411, 2029,
	718, 1459, 1456, 2858, 1457, 1458, 712, 1723, 2321, 192,
	1765, 1744, 3425, 1456, 3012, 1457, 1458, 1456, 2949, 1457,
	1458, 1159, 3410, 3015, 673, 3223, 2518, 679, 1456, 1508,
	1457, 1458, 2020, 1459, 3128, 2873, 2695, 1722, 1456, 1069,
	1457, 1458, 2345, 1456, 1061, 1457, 1458, 3406, 1456, 2335,
	1457, 1458, 2809, 1068, 3825, 3162, 3468, 2996, 2897, 3140,
	3142, 2825, 3145, 3037, 3138, 3013, 3929, 3657, 4002, 1459,
	2883, 1740, 3093, 3432, 1456, 2982, 1457, 1458, 2983, 2693,
	1722, 1720, 1716, 2607, 1459, 2691, 1722, 2131, 1456, 1498,
	1457, 1458, 2378, 1459, 3628, 2056, 1717, 1459, 741, 1456,
	740, 1457, 1458, 738, 1459, 2811, 2636, 2839, 2993, 1456,
	3111, 1457, 1458, 1462, 947, 2595, 2799, 2689, 1722, 3100,
	1752, 2340, 2341, 1719, 3102, 1718, 2850, 2848, 2847, 2379,
	3028, 1456, 2553, 1457, 1458, 2386, 2284, 1456, 2284, 1457,
	1458, 1459, 3492, 3488, 3073, 4044, 2380, 2286, 2456, 2286,
	2376, 2817, 3161, 3343, 87, 3014, 898, 2379, 2379, 2379,
	2379, 2379, 897, 3083, 3084, 3085, 3086, 3087, 2381, 1456,
	750, 1457, 1458, 3111, 742, 732, 896, 2379, 895, 3277,
	2379, 2687, 1722, 3166, 3101, 3278, 3103, 3110, 2685, 1722,
	2957, 3292, 2959, 1028, 2884, 1981, 2381, 2381, 2381, 2381,
	2381, 3288, 3135, 1440, 3183, 1456, 1459, 1457, 1458, 3126,
	1712, 3122, 1459, 1088, 3316, 3953, 2381, 1459, 2577, 2381,
	1456, 3133, 1457, 1458, 3340, 2683, 1722, 1711, 3960, 1456,
	3136, 1457, 1458, 1456, 1459, 1457, 1458, 3148, 3149, 3258,
	1456, 3557, 1457, 1458, 3267, 3123, 3124, 3125, 3239, 3165,
	3185, 2933, 2472, 3186, 3275, 3168, 3169, 1029, 3171, 3167,
	104, 3179, 3170, 105, 1030, 69, 46, 3924, 3187, 3990,
	890, 887, 3630, 1459, 3631, 3632, 3096, 1456, 3097, 1457,
	1458, 3193, 3973, 3974, 1459, 886, 3075, 3975, 3077, 3134,
	2681, 1722, 3224, 2186, 3226, 3225, 2679, 1722, 1436, 1433,
	4065, 2677, 1722, 2031, 3088, 3089, 3090, 3091, 3227, 3228,
	96, 1459, 36, 35, 34, 3279, 3151, 33, 2672, 1722,
	32, 26, 3276, 3280, 1459, 25, 24, 2444, 3269, 23,
	3248, 22, 2851, 2854, 2855, 2856, 2852, 3286, 2853, 2857,
	29, 19, 1456, 21, 1457, 1458, 20, 3157, 1456, 18,
	1457, 1458, 3157, 1456, 3261, 1457, 1458, 2668, 1722, 4087,
	4132, 3304, 1720, 1716, 3307, 3306, 123, 55, 2666, 1722,
	1456, 52, 1457, 1458, 50, 3314, 131, 1717, 130, 53,
	3324, 49, 1202, 3270, 3321, 3322, 47, 3323, 31, 30,
	3325, 17, 3327, 16, 3329, 2659, 1722, 15, 14, 13,
	12, 1476, 1713, 1714, 1719, 11, 1718, 7, 3342, 1456,
	6, 1457, 1458, 39, 38, 1511, 37, 2593, 28, 1511,
	1456, 2598, 1457, 1458, 27, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1485, 1484, 1486, 1487, 40, 4, 3249, 2920,
	2474, 0, 0, 0, 2602, 0, 2603, 1456, 0, 1457,
	1458, 3427, 2611, 0, 0, 0, 2613, 2614, 3431, 0,
	1456, 0, 1457, 1458, 0, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 0, 2631, 0, 0, 2851,
	2854, 2855, 2856, 2852, 0, 2853, 2857, 0, 3160, 3490,
	3491, 0, 0, 0, 0, 2379, 0, 0, 0, 2637,
	2638, 2639, 2640, 2641, 0, 2643, 3457, 3458, 3505, 2645,
	3460, 3315, 3465, 2650, 2651, 730, 2652, 3472, 0, 2655,
	0, 2656, 2658, 2660, 2661, 2662, 2663, 2664, 2665, 2667,
	2669, 2670, 2671, 2673, 2381, 2675, 2676, 2678, 2680, 2682,
	2684, 2686, 2688, 2690, 2692, 2694, 2696, 2698, 2700, 2702,
	2704, 2706, 2708, 2710, 2712, 2713, 2714, 3497, 2716, 3499,
	2718, 3494, 2720, 2721, 3477, 2723, 2725, 2727, 3500, 3279,
	3434, 2730, 3436, 3437, 3438, 2734, 3276, 3280, 3506, 2739,
	2740, 2741, 2742, 0, 3309, 3310, 1459, 0, 0, 3522,
	1459, 3524, 2753, 2754, 2755, 2756, 2757, 2758, 1459, 0,
	2762, 2763, 3567, 3568, 2124, 1459, 3462, 0, 2765, 0,
	0, 0, 1459, 2771, 3516, 3517, 1459, 0, 0, 2774,
	2775, 2776, 2777, 2778, 1048, 0, 0, 1054, 1054, 0,
	2785, 2786, 0, 2787, 0, 0, 2790, 2792, 2345, 3487,
	2794, 0, 0, 0, 0, 0, 1459, 0, 0, 0,
	2806, 1459, 0, 0, 0, 0, 0, 0, 3501, 3502,
	0, 0, 1459, 0, 3569, 0, 0, 3550, 0, 1459,
	3339, 3554, 3555, 3556, 2657, 1722, 1459, 0, 0, 0,
	0, 0, 3337, 0, 0, 0, 0, 0, 0, 2789,
	1459, 0, 0, 3546, 3547, 3585, 2788, 0, 0, 0,
	2784, 0, 2116, 2105, 2106, 2107, 2108, 2118, 2109, 2110,
	2111, 2123, 2119, 2112, 2113, 2120, 2121, 2122, 2114, 2115,
	2117, 0, 1456, 0, 1457, 1458, 1456, 1459, 1457, 1458,
	2783, 0, 0, 0, 1456, 2782, 1457, 1458, 1459, 0,
	0, 1456, 0, 1457, 1458, 0, 2781, 0, 1456, 1459,
	1457, 1458, 1456, 2780, 1457, 1458, 0, 1459, 0, 0,
	2779, 0, 0, 1459, 0, 0, 3646, 0, 3650, 3651,
	0, 0, 1459, 0, 2770, 0, 0, 3636, 0, 3637,
	3638, 3639, 1456, 3626, 1457, 1458, 0, 1456, 1459, 1457,
	1458, 3161, 0, 87, 0, 3161, 0, 0, 1456, 3652,
	1457, 1458, 0, 0, 0, 1456, 0, 1457, 1458, 0,
	1459, 2769, 1456, 0, 1457, 1458, 0, 0, 0, 3590,
	0, 0, 2768, 2095, 0, 2093, 1456, 3681, 1457, 1458,
	1459, 3653, 42, 2767, 0, 0, 3662, 3661, 0, 1459,
	3673, 2764, 0, 0, 0, 3669, 3671, 2759, 0, 0,
	0, 0, 0, 0, 0, 0, 2752, 0, 0, 0,
	3831, 0, 0, 1456, 0, 1457, 1458, 0, 0, 0,
	0, 3685, 2751, 0, 1456, 0, 1457, 1458, 0, 0,
	0, 0, 0, 0, 0, 1456, 0, 1457, 1458, 0,
	0, 0, 0, 1456, 2750, 1457, 1458, 0, 0, 1456,
	0, 1457, 1458, 0, 3823, 3822, 0, 0, 1456, 3850,
	1457, 1458, 3821, 0, 2749, 0, 3838, 3843, 0, 0,
	0, 0, 3842, 2748, 1456, 0, 1457, 1458, 0, 0,
	0, 0, 3889, 3023, 3024, 3025, 3026, 3027, 3890, 0,
	0, 0, 3675, 0, 0, 0, 1456, 0, 1457, 1458,
	2095, 0, 2093, 3032, 3893, 0, 0, 0, 3833, 3834,
	3835, 3617, 0, 0, 0, 0, 1456, 0, 1457, 1458,
	0, 0, 3682, 3683, 0, 1456, 0, 1457, 1458, 0,
	0, 0, 0, 3161, 0, 3157, 0, 3677, 0, 3896,
	3826, 0, 0, 3899, 0, 0, 0, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1647, 1648,
	1649, 1650, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 3940, 3160, 3894, 3922,
	3937, 3160, 3919, 3920, 1459, 3921, 0, 0, 0, 0,
	3954, 1459, 0, 0, 0, 1459, 0, 0, 0, 1459,
	0, 0, 0, 1459, 0, 0, 3939, 0, 87, 0,
	0, 3163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1459, 0, 3181,
	0, 0, 3943, 0, 0, 0, 0, 1459, 0, 0,
	0, 0, 0, 3956, 3959, 0, 3830, 42, 0, 0,
	0, 0, 0, 0, 0, 3961, 1459, 0, 0, 0,
	0, 3928, 0, 0, 0, 0, 0, 0, 2747, 0,
	0, 0, 0, 0, 0, 2746, 0, 0, 0, 2745,
	0, 0, 0, 2744, 0, 0, 0, 2738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1460, 0, 0,
	0, 0, 3979, 3999, 0, 3980, 0, 0, 87, 0,
	0, 2737, 0, 0, 3945, 0, 0, 0, 0, 3988,
	1456, 2736, 1457, 1458, 3995, 0, 0, 1456, 1517, 1457,
	1458, 1456, 0, 1457, 1458, 1456, 4005, 1457, 1458, 1456,
	2733, 1457, 1458, 0, 0, 0, 4030, 42, 3964, 3850,
	4019, 0, 4008, 4016, 4013, 4003, 4010, 3313, 4009, 4007,
	0, 4012, 4011, 1456, 0, 1457, 1458, 0, 0, 3160,
	0, 0, 4040, 1456, 0, 1457, 1458, 0, 0, 3330,
	3331, 4061, 3332, 0, 3334, 3336, 4051, 4056, 4043, 0,
	4071, 4069, 1456, 0, 1457, 1458, 0, 0, 4030, 3344,
	0, 1459, 0, 4082, 3348, 3349, 3350, 3352, 3353, 3354,
	3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364,
	3366, 3368, 3370, 3372, 3374, 3376, 3378, 3380, 3382, 3384,
	3386, 3388, 3390, 3392, 3394, 3396, 3397, 3399, 3400, 3401,
	3403, 4086, 1981, 3405, 4101, 3407, 3408, 3409, 4081, 4102,
	3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422,
	3423, 4116, 2095, 4118, 2093, 4112, 4115, 4126, 4114, 3430,
	4105, 4111, 4000, 3435, 1459, 4030, 0, 3439, 3440, 0,
	3441, 3443, 4134, 3446, 3448, 2732, 3450, 3451, 3452, 3453,
	4142, 4140, 3968, 3157, 3459, 0, 0, 0, 0, 1459,
	3978, 0, 0, 0, 1459, 0, 0, 0, 1459, 0,
	0, 4151, 4152, 0, 4150, 0, 0, 0, 3890, 0,
	2095, 0, 2093, 0, 4149, 1459, 3952, 0, 0, 3481,
	3482, 0, 0, 3486, 1459, 0, 0, 1456, 1459, 1457,
	1458, 0, 1459, 0, 0, 0, 0, 4077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1459, 2731, 0,
	4099, 0, 0, 0, 1459, 0, 0, 0, 1459, 0,
	0, 0, 0, 0, 1459, 0, 0, 0, 1459, 0,
	0, 0, 1459, 2729, 0, 0, 0, 0, 2722, 0,
	0, 0, 2719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	1456, 0, 1457, 1458, 0, 1742, 0, 0, 2715, 0,
	0, 0, 2674, 0, 0, 0, 2654, 0, 0, 0,
	0, 86, 44, 45, 88, 1456, 0, 1457, 1458, 3561,
	1456, 2653, 1457, 1458, 1456, 0, 1457, 1458, 2649, 0,
	0, 92, 2647, 1830, 0, 48, 76, 77, 2612, 74,
	78, 1456, 2606, 1457, 1458, 0, 2600, 0, 75, 0,
	1456, 0, 1457, 1458, 1456, 0, 1457, 1458, 1456, 0,
	1457, 1458, 0, 0, 3580, 0, 0, 3584, 0, 0,
	943, 0, 0, 1456, 0, 1457, 1458, 62, 0, 0,
	1456, 0, 1457, 1458, 1456, 0, 1457, 1458, 0, 95,
	1456, 0, 1457, 1458, 1456, 3596, 1457, 1458, 1456, 0,
	1457, 1458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	0, 0, 0, 716, 0, 83, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3619,
	0, 1986, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 3627, 0, 0, 0, 0, 0, 0, 0,
	3634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 195, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	54, 57, 56, 59, 0, 73, 0, 0, 82, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 91, 90, 665, 0, 71, 72, 58,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 1012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3839, 0, 0, 0, 0,
	0, 0, 0, 0, 3846, 0, 0, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 1083, 0, 0,
	0, 0, 0, 0, 3856, 3857, 3858, 0, 3860, 0,
	3861, 3862, 0, 0, 0, 3865, 3866, 3867, 3868, 3869,
	3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879,
	3880, 3881, 3882, 3883, 3884, 3885, 3886, 0, 3888, 3891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 3900, 3901, 3902, 3903, 3904, 3906,
	3907, 3909, 3911, 3912, 3914, 0, 0, 0, 0, 0,
	0, 2051, 2052, 2053, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2101, 2102, 0, 0, 0, 0, 2125, 1054, 1054,
	2129, 2130, 0, 0, 0, 2135, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 0, 0,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	0, 2158, 0, 0, 0, 2180, 2181, 2182, 2183, 2184,
	2185, 2187, 0, 2192, 0, 2194, 2195, 2196, 0, 2198,
	2199, 2200, 0, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 94, 0, 0, 0, 0, 2280, 0, 2282,
	0, 2289, 2290, 2291, 2292, 2293, 2294, 1054, 0, 1054,
	1054, 1054, 1054, 1054, 0, 0, 0, 0, 0, 0,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 0, 2315,
	2316, 2317, 2318, 2319, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 3969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 3985, 0, 0, 0, 0, 0, 3986, 3987, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2926, 2359, 2360, 0, 0, 70, 3998,
	0, 0, 0, 0, 0, 0, 129, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	2398, 0, 0, 0, 0, 4024, 4025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4032,
	4034, 4036, 0, 195, 0, 195, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 4064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 170, 0,
	0, 2440, 722, 0, 722, 722, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 161,
	160, 189, 4083, 0, 722, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 4106, 4108, 4110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4131,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 1209, 0, 0, 0, 0, 0, 4143, 4144, 0,
	960, 0, 2288, 0, 0, 961, 0, 0, 0, 0,
	0, 0, 155, 1853, 158, 2094, 1850, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1810, 1811, 1812, 1813, 1814,
	1815, 1432, 1816, 1817, 1819, 1820, 1818, 1821, 1822, 1795,
	1796, 1797, 1798, 1779, 1780, 1808, 0, 1782, 0, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 0, 0,
	1792, 1799, 1800, 1801, 1802, 0, 1803, 1804, 1805, 1806,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2610,
	0, 195, 0, 0, 0, 722, 722, 0, 0, 2616,
	2617, 2618, 2619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 195, 0,
	0, 0, 1517, 0, 0, 159, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 722, 722, 0, 722, 0, 722, 722,
	0, 722, 722, 722, 722, 722, 722, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 1503, 722, 1503,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 1754, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 722,
	0, 195, 195, 1771, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 1742, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 722, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1910, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 1982, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 1997, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	3016, 3017, 3018, 0, 0, 3020, 0, 0, 3022, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 3029, 3030,
	3031, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	3036, 0, 0, 3038, 3039, 3040, 0, 0, 0, 3041,
	3042, 0, 0, 3043, 0, 3044, 0, 0, 0, 0,
	0, 0, 3045, 0, 3046, 0, 0, 0, 3047, 0,
	3048, 0, 0, 3049, 0, 3050, 0, 3051, 0, 3052,
	0, 3053, 0, 3054, 0, 3055, 0, 3056, 0, 3057,
	0, 3058, 0, 3059, 0, 3060, 0, 3061, 2044, 3062,
	0, 3063, 0, 3064, 0, 3065, 0, 3066, 0, 0,
	0, 3067, 0, 3068, 0, 3069, 0, 0, 3070, 0,
	3071, 0, 3072, 0, 2252, 3074, 0, 0, 3076, 0,
	0, 3078, 3079, 3080, 3081, 0, 0, 0, 0, 3082,
	2252, 2252, 2252, 2252, 2252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3092, 0, 0, 0, 0,
	0, 0, 0, 3105, 0, 0, 3109, 0, 1054, 0,
	0, 0, 0, 2300, 0, 3112, 3113, 3114, 3115, 3116,
	3117, 0, 0, 0, 3118, 3119, 0, 3120, 0, 3121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 3182,
	0, 0, 0, 0, 195, 0, 0, 0, 722, 0,
	0, 2300, 195, 0, 195, 0, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2365, 0, 0, 0, 0, 0, 0, 0, 2369, 0,
	2372, 0, 0, 2044, 0, 0, 0, 3338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 3347, 0, 722, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 961, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 2094, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 195, 0, 0, 195, 0, 195, 0,
	0, 0, 0, 0, 721, 1419, 721, 721, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 1502, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 2530, 1503,
	0, 2300, 0, 0, 0, 0, 0, 0, 2549, 2550,
	0, 0, 2554, 0, 0, 0, 0, 0, 3542, 0,
	0, 0, 0, 0, 2559, 0, 0, 0, 0, 0,
	0, 2562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3566, 0, 0, 0, 0, 0, 2565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3586,
	0, 3587, 0, 3588, 0, 3589, 0, 0, 3592, 3593,
	0, 0, 0, 0, 0, 0, 0, 3597, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 3598, 0, 3599, 0, 3600, 0, 3601, 0, 3602,
	0, 3603, 0, 3604, 0, 3605, 0, 3606, 0, 3607,
	0, 3608, 0, 3609, 0, 3610, 0, 3611, 0, 3612,
	0, 3613, 0, 0, 3614, 0, 0, 0, 3615, 0,
	3616, 0, 0, 0, 0, 0, 3618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3635,
	0, 0, 0, 0, 0, 0, 0, 0, 3640, 0,
	3641, 3642, 0, 3643, 195, 3644, 0, 0, 0, 0,
	3645, 0, 195, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 3670, 722, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 3678, 0, 0, 3680,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	195, 3684, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 3818, 1859, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 1502,
	1870, 0, 0, 1873, 1874, 721, 721, 0, 721, 0,
	721, 721, 0, 721, 721, 721, 721, 721, 721, 0,
	0, 0, 0, 0, 0, 0, 1502, 1905, 1906, 1502,
	721, 1502, 0, 1911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 722, 1974, 0,
	0, 721, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 0, 0, 195, 195, 195, 195, 195,
	195, 3927, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 195, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2913, 0, 0, 722, 1035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1055, 1055, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2962, 2963, 2964, 2965, 2966, 2967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 2977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 721, 0, 0, 0, 0, 0, 0,
	0, 2985, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3967, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 129, 0, 151, 0, 0, 0, 0,
	0, 0, 899, 721, 722, 0, 172, 0, 0, 0,
	0, 3981, 0, 1502, 3982, 0, 3983, 0, 0, 0,
	0, 0, 2103, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 722, 0, 162, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 170, 0, 722, 0, 0,
	720, 1503, 0, 0, 722, 722, 1503, 195, 195, 195,
	195, 195, 0, 0, 1851, 1852, 161, 160, 189, 195,
	0, 0, 0, 0, 0, 195, 0, 195, 0, 0,
	195, 195, 195, 0, 0, 0, 0, 0, 0, 0,
	4062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1079, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4078,
	0, 4079, 0, 4080, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 1503, 0, 0, 721, 0, 722, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 155,
	1853, 158, 0, 1850, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 195, 0, 0, 195,
	0, 179, 0, 4129, 721, 4130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3235, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3287, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	721, 0, 3305, 0, 0, 3308, 0, 2462, 2463, 2464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 0, 721, 1868, 0, 0, 1868, 0, 1868,
	0, 0, 0, 0, 0, 2494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 721, 0, 0, 0, 721,
	721, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 3461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 722, 722, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 721, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	3520, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3535, 0, 0, 3536, 3537, 3538, 0, 0, 0, 0,
	0, 1502, 0, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 0, 0, 0, 0,
	0, 184, 186, 187, 188, 0, 0, 0, 1504, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 1267, 1267, 0, 1503,
	0, 0, 0, 0, 722, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	722, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 722, 722, 0, 0, 0, 0, 0, 1504, 0,
	0, 1504, 0, 1504, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 2877, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 721, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 2007,
	666, 666, 666, 666, 666, 666, 666, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 1868, 1868, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 1700, 0,
	0, 0, 0, 0, 1502, 2950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 1876, 0, 1876, 0,
	1876, 1876, 0, 1885, 1876, 1876, 1876, 1876, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 721,
	1079, 0, 0, 0, 0, 0, 0, 1503, 0, 722,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 2300, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 722, 0, 0, 0, 3965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	722, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 1055, 0,
	0, 0, 0, 1504, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 722, 0, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 1502, 0, 0, 721, 721, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1055, 1980, 1055, 1055,
	1055, 1055, 1055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 3230,
	0, 960, 1267, 1267, 0, 948, 961, 962, 963, 964,
	949, 1927, 0, 950, 951, 2032, 952, 0, 0, 0,
	0, 721, 0, 0, 1502, 0, 0, 1055, 0, 721,
	957, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 1980, 666, 0, 666, 0,
	666, 2388, 0, 2089, 0, 0, 0, 0, 0, 3281,
	3282, 3312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3284, 3285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 2337, 0, 666, 666, 0, 0,
	666, 0, 2556, 0, 0, 3510, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 2349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 1267, 0, 666, 913, 0, 0, 721,
	721, 0, 917, 0, 0, 0, 914, 915, 0, 0,
	0, 916, 918, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 721,
	721, 721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 1504, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1079, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 0, 0, 2089, 0, 0, 0, 2089,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 721, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 721, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 666, 0, 0, 0, 0, 0, 0,
	2919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	666, 666, 666, 666, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 1055, 0, 0, 0,
	0, 0, 0, 0, 0, 2812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2827, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 721, 0, 0, 0, 2909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 721, 0, 0, 0,
	0, 0, 2349, 0, 0, 0, 0, 0, 0, 2934,
	0, 0, 0, 0, 0, 0, 0, 721, 2939, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 721, 0, 0, 0,
	1504, 666, 666, 666, 666, 666, 0, 0, 0, 0,
	0, 0, 0, 3180, 0, 721, 0, 721, 0, 1927,
	2089, 666, 0, 0, 666, 3188, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 3164, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1079, 0, 0, 0, 0, 0, 0, 0, 2349,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 3706,
	3708, 3707, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 666, 666, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3712, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 3720, 3721, 0, 0, 3796, 3795, 3794, 0, 0,
	3792, 3793, 3791, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2349,
	2349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3797, 913, 0, 768, 769,
	3798, 3799, 917, 3800, 771, 772, 914, 915, 0, 766,
	770, 916, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 3574, 3575,
	3576, 3577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3703, 3704,
	3705, 3709, 3710, 3711, 3722, 3769, 3770, 3778, 3780, 869,
	3779, 3781, 3782, 3783, 3786, 3787, 3788, 3789, 3784, 3785,
	3790, 3686, 3690, 3687, 3688, 3689, 3701, 3691, 3692, 3693,
	3694, 3695, 3696, 3697, 3698, 3699, 3700, 3702, 3801, 3802,
	3803, 3804, 3805, 3806, 3715, 3719, 3718, 3716, 3717, 3713,
	3714, 3741, 3740, 3742, 3743, 3744, 3745, 3746, 3747, 3749,
	3748, 3750, 3751, 3752, 3753, 3754, 3755, 3723, 3724, 3727,
	3728, 3726, 3725, 3729, 3738, 3739, 3730, 3731, 3732, 3733,
	3734, 3735, 3737, 3736, 3756, 3757, 3758, 3759, 3760, 3762,
	3761, 3765, 3766, 3764, 3763, 3768, 3767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 919,
	0, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3674, 0, 3676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3807, 3808, 3809, 3810, 3811, 3812,
	3813, 3814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3841, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3915,
	0, 0, 0, 3915, 3915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 3426, 0, 4046, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	4020, 944, 0, 0, 0, 0, 4021, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	3189, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	3150, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	2367, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 95, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 1402, 1388,
	522, 0, 1330, 1405, 1299, 1318, 1415, 1321, 1324, 1367,
	1277, 1345, 413, 1315, 1270, 1303, 1272, 1310, 1273, 1301,
	1332, 269, 1298, 1390, 1349, 1404, 363, 266, 1279, 1304,
	427, 1320, 203, 1369, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1411, 367,
	1355, 0, 493, 398, 0, 0, 0, 1334, 1394, 1343,
	1381, 1329, 1368, 1287, 1354, 1406, 1316, 1364, 1407, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1312, 1361,
	1401, 1313, 1363, 264, 320, 271, 263, 574, 1412, 1393,
	1276, 1342, 1400, 1337, 0, 0, 228, 1403, 1336, 0,
	1366, 0, 1418, 1271, 1357, 0, 1274, 1278, 1414, 1398,
	1307, 274, 0, 0, 0, 0, 0, 0, 0, 1333,
	1344, 1378, 1382, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 1353, 0, 0, 0, 1283, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1286, 0, 1306,
	1379, 0, 1269, 296, 1280, 399, 256, 0, 450, 1386,
	1397, 1328, 618, 1399, 1326, 1325, 1373, 1284, 1392, 1319,
	362, 1282, 329, 197, 224, 0, 1317, 409, 458, 470,
	1391, 1302, 1311, 252, 1309, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1352, 1371, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1281, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1297, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1387, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1376, 1417, 422,
	469, 239, 598, 492, 199, 1291, 1296, 1289, 0, 253,
	254, 1358, 569, 1292, 1290, 1347, 1348, 1293, 1408, 1409,
	1410, 1395, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1380, 1285, 0, 1294, 1295, 395, 1389, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1351, 196, 220, 365,
	1413, 451, 287, 639, 608, 603, 205, 222, 1288, 261,
	1300, 1308, 0, 1314, 1322, 1323, 1335, 1338, 1339, 1340,
	1341, 1359, 1360, 1362, 1370, 1372, 1375, 1377, 1384, 1396,
	1416, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1350,
	1356, 378, 280, 304, 319, 1365, 607, 498, 226, 463,
	289, 250, 1383, 1385, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1346, 1374,
	373, 570, 571, 315, 393, 0, 0, 0, 0, 0,
	522, 0, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 751, 0, 0,
	0, 269, 756, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 763, 367,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 758,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 494, 285, 0, 95, 0, 0,
	960, 944, 735, 910, 948, 961, 962, 963, 964, 949,
	0, 237, 950, 951, 244, 952, 0, 909, 794, 796,
	795, 859, 860, 861, 862, 863, 864, 865, 792, 957,
	965, 966, 0, 264, 320, 271, 263, 574, 0, 0,
	2188, 2189, 2190, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 731, 748, 0, 762, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 746,
	0, 0, 0, 0, 904, 0, 747, 0, 0, 755,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 903,
	0, 0, 618, 0, 0, 901, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 954, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 955, 956, 255, 641, 800, 612, 219, 0, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	808, 809, 279, 306, 885, 884, 883, 305, 307, 881,
	882, 880, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 891, 913, 902, 768, 769, 892,
	893, 917, 894, 771, 772, 914, 915, 765, 766, 770,
	916, 918, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	905, 754, 753, 0, 760, 761, 0, 790, 791, 793,
	797, 798, 799, 810, 857, 858, 866, 868, 869, 867,
	870, 871, 872, 875, 876, 877, 878, 873, 874, 879,
	773, 777, 774, 775, 776, 788, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 789, 928, 929, 930,
	931, 932, 933, 803, 807, 806, 804, 805, 801, 802,
	829, 828, 830, 831, 832, 833, 834, 835, 837, 836,
	838, 839, 840, 841, 842, 843, 811, 812, 815, 816,
	814, 813, 817, 826, 827, 818, 819, 820, 821, 822,
	823, 825, 824, 844, 845, 846, 847, 848, 850, 849,
	853, 854, 852, 851, 856, 855, 752, 196, 220, 365,
	0, 451, 287, 639, 608, 603, 205, 222, 919, 261,
	920, 0, 0, 924, 0, 0, 0, 926, 925, 0,
	927, 889, 888, 0, 0, 921, 922, 0, 923, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 934, 935, 936, 937, 938, 939, 940,
	941, 299, 592, 622, 590, 634, 616, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 607, 498, 226, 463,
	289, 250, 959, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 522, 0, 764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 751, 0, 0, 0, 269, 756, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 483, 251,
	374, 371, 577, 281, 272, 268, 249, 316, 382, 425,
	512, 419, 763, 367, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 758, 759, 0, 0, 0, 0, 0,
	0, 2396, 0, 322, 247, 324, 202, 410, 494, 285,
	0, 95, 0, 0, 960, 944, 735, 910, 948, 961,
	962, 963, 964, 949, 0, 237, 950, 951, 244, 952,
	0, 909, 794, 796, 795, 859, 860, 861, 862, 863,
	864, 865, 792, 957, 965, 966, 2397, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 731, 748,
	0, 762, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 904, 0,
	747, 0, 0, 755, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 903, 0, 0, 618, 0, 0, 901,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 954, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 619, 620, 262, 403,
	605, 516, 613, 637, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 625, 223,
	476, 368, 241, 230, 581, 602, 298, 288, 453, 632,
	212, 511, 591, 238, 480, 0, 0, 640, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 955, 956, 255, 641, 800,
	612, 219, 0, 611, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 808, 809, 279, 306, 885, 884,
	883, 305, 307, 881, 882, 880, 206, 600, 0, 207,
	0, 495, 601, 642, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 891, 913,
	902, 768, 769, 892, 893, 917, 894, 771, 772, 914,
	915, 765, 766, 770, 916, 918, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 905, 754, 753, 0, 760, 761,
	0, 790, 791, 793, 797, 798, 799, 810, 857, 858,
	866, 868, 869, 867, 870, 871, 872, 875, 876, 877,
	878, 873, 874, 879, 773, 777, 774, 775, 776, 788,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	789, 928, 929, 930, 931, 932, 933, 803, 807, 806,
	804, 805, 801, 802, 829, 828, 830, 831, 832, 833,
	834, 835, 837, 836, 838, 839, 840, 841, 842, 843,
	811, 812, 815, 816, 814, 813, 817, 826, 827, 818,
	819, 820, 821, 822, 823, 825, 824, 844, 845, 846,
	847, 848, 850, 849, 853, 854, 852, 851, 856, 855,
	752, 196, 220, 365, 0, 451, 287, 639, 608, 603,
	205, 222, 919, 261, 920, 0, 0, 924, 0, 0,
	0, 926, 925, 0, 927, 889, 888, 0, 0, 921,
	922, 0, 923, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 934, 935, 936,
	937, 938, 939, 940, 941, 299, 592, 622, 590, 634,
	616, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	607, 498, 226, 463, 289, 250, 959, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 0, 393, 373, 570, 571, 315, 86, 522,
	0, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 751, 0, 0, 0,
	269, 756, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 763, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 95, 0, 0, 960,
	944, 735, 910, 948, 961, 962, 963, 964, 949, 0,
	237, 950, 951, 244, 952, 0, 909, 794, 796, 795,
	859, 860, 861, 862, 863, 864, 865, 792, 957, 965,
	966, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 731, 748, 0, 762, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 904, 0, 747, 0, 0, 755, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 903, 0,
	0, 618, 0, 0, 901, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 954, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	955, 956, 255, 641, 800, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 808,
	809, 279, 306, 885, 884, 883, 305, 307, 881, 882,
	880, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 891, 913, 902, 768, 769, 892, 893,
	917, 894, 771, 772, 914, 915, 765, 766, 770, 916,
	918, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 905,
	754, 753, 0, 760, 761, 0, 790, 791, 793, 797,
	798, 799, 810, 857, 858, 866, 868, 869, 867, 870,
	871, 872, 875, 876, 877, 878, 873, 874, 879, 773,
	777, 774, 775, 776, 788, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 789, 928, 929, 930, 931,
	932, 933, 803, 807, 806, 804, 805, 801, 802, 829,
	828, 830, 831, 832, 833, 834, 835, 837, 836, 838,
	839, 840, 841, 842, 843, 811, 812, 815, 816, 814,
	813, 817, 826, 827, 818, 819, 820, 821, 822, 823,
	825, 824, 844, 845, 846, 847, 848, 850, 849, 853,
	854, 852, 851, 856, 855, 752, 196, 220, 365, 94,
	451, 287, 639, 608, 603, 205, 222, 919, 261, 920,
	0, 0, 924, 0, 0, 0, 926, 925, 0, 927,
	889, 888, 0, 0, 921, 922, 0, 923, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 934, 935, 936, 937, 938, 939, 940, 941,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 959, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	751, 0, 0, 0, 269, 756, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 763, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 758, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 960, 944, 735, 910, 948, 961, 962,
	963, 964, 949, 0, 237, 950, 951, 244, 952, 0,
	909, 794, 796, 795, 859, 860, 861, 862, 863, 864,
	865, 792, 957, 965, 966, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 731, 748, 0,
	762, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 904, 0, 747,
	0, 0, 755, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 903, 0, 0, 618, 0, 0, 901, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 954, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 4006, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 955, 956, 255, 641, 800, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 808, 809, 279, 306, 885, 884, 883,
	305, 307, 881, 882, 880, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 891, 913, 902,
	768, 769, 892, 893, 917, 894, 771, 772, 914, 915,
	765, 766, 770, 916, 918, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 905, 754, 753, 0, 760, 761, 0,
	790, 791, 793, 797, 798, 799, 810, 857, 858, 866,
	868, 869, 867, 870, 871, 872, 875, 876, 877, 878,
	873, 874, 879, 773, 777, 774, 775, 776, 788, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 789,
	928, 929, 930, 931, 932, 933, 803, 807, 806, 804,
	805, 801, 802, 829, 828, 830, 831, 832, 833, 834,
	835, 837, 836, 838, 839, 840, 841, 842, 843, 811,
	812, 815, 816, 814, 813, 817, 826, 827, 818, 819,
	820, 821, 822, 823, 825, 824, 844, 845, 846, 847,
	848, 850, 849, 853, 854, 852, 851, 856, 855, 752,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 919, 261, 920, 0, 0, 924, 0, 0, 0,
	926, 925, 0, 927, 889, 888, 0, 0, 921, 922,
	0, 923, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 934, 935, 936, 937,
	938, 939, 940, 941, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 959, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 751, 0, 0, 0, 269, 756,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 763, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 1722, 960, 944, 735,
	910, 948, 961, 962, 963, 964, 949, 0, 237, 950,
	951, 244, 952, 0, 909, 794, 796, 795, 859, 860,
	861, 862, 863, 864, 865, 792, 957, 965, 966, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 731, 748, 0, 762, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 904, 0, 747, 0, 0, 755, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 903, 0, 0, 618,
	0, 0, 901, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	954, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 955, 956,
	255, 641, 800, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 808, 809, 279,
	306, 885, 884, 883, 305, 307, 881, 882, 880, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 891, 913, 902, 768, 769, 892, 893, 917, 894,
	771, 772, 914, 915, 765, 766, 770, 916, 918, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 905, 754, 753,
	0, 760, 761, 0, 790, 791, 793, 797, 798, 799,
	810, 857, 858, 866, 868, 869, 867, 870, 871, 872,
	875, 876, 877, 878, 873, 874, 879, 773, 777, 774,
	775, 776, 788, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 789, 928, 929, 930, 931, 932, 933,
	803, 807, 806, 804, 805, 801, 802, 829, 828, 830,
	831, 832, 833, 834, 835, 837, 836, 838, 839, 840,
	841, 842, 843, 811, 812, 815, 816, 814, 813, 817,
	826, 827, 818, 819, 820, 821, 822, 823, 825, 824,
	844, 845, 846, 847, 848, 850, 849, 853, 854, 852,
	851, 856, 855, 752, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 919, 261, 920, 0, 0,
	924, 0, 0, 0, 926, 925, 0, 927, 889, 888,
	0, 0, 921, 922, 0, 923, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	934, 935, 936, 937, 938, 939, 940, 941, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 959,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 960, 944, 735, 910, 948, 961, 962, 963, 964,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 965, 966, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 1053, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 751, 0, 0, 0, 269, 756, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 763, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 95, 0, 0, 960, 944, 735, 910, 948,
	961, 962, 963, 964, 949, 0, 237, 950, 951, 244,
	952, 0, 909, 794, 796, 795, 859, 860, 861, 862,
	863, 864, 865, 792, 957, 965, 966, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 731,
	748, 0, 762, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 904,
	0, 747, 0, 0, 755, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 903, 0, 0, 618, 0, 0,
	901, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 954, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 955, 956, 255, 641,
	800, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 808, 809, 279, 306, 885,
	884, 883, 305, 307, 881, 882, 880, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 891,
	913, 902, 768, 769, 892, 893, 917, 894, 771, 772,
	914, 915, 765, 766, 770, 916, 918, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 905, 754, 753, 0, 760,
	761, 0, 790, 791, 793, 797, 798, 799, 810, 857,
	858, 866, 868, 869, 867, 870, 871, 872, 875, 876,
	877, 878, 873, 874, 879, 773, 777, 774, 775, 776,
	788, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 789, 928, 929, 930, 931, 932, 933, 803, 807,
	806, 804, 805, 801, 802, 829, 828, 830, 831, 832,
	833, 834, 835, 837, 836, 838, 839, 840, 841, 842,
	843, 811, 812, 815, 816, 814, 813, 817, 826, 827,
	818, 819, 820, 821, 822, 823, 825, 824, 844, 845,
	846, 847, 848, 850, 849, 853, 854, 852, 851, 856,
	855, 752, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 919, 261, 920, 0, 0, 924, 0,
	0, 0, 926, 925, 0, 927, 889, 888, 0, 0,
	921, 922, 0, 923, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 934, 935,
	936, 937, 938, 939, 940, 941, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 959, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 751, 0, 0, 0,
	269, 756, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 763, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 95, 0, 0, 960,
	944, 735, 910, 948, 961, 962, 963, 964, 949, 0,
	237, 950, 951, 244, 952, 0, 909, 794, 796, 795,
	859, 860, 861, 862, 863, 864, 865, 792, 957, 965,
	966, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 731, 748, 0, 762, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 904, 0, 747, 0, 0, 755, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 3108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 903, 0,
	0, 618, 0, 0, 901, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 954, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	955, 956, 255, 641, 800, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 808,
	809, 279, 306, 885, 884, 883, 305, 307, 881, 882,
	880, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 891, 913, 902, 768, 769, 892, 893,
	917, 894, 771, 772, 914, 915, 765, 766, 770, 916,
	918, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 905,
	754, 753, 0, 760, 761, 0, 790, 791, 793, 797,
	798, 799, 810, 857, 858, 866, 868, 869, 867, 870,
	871, 872, 875, 876, 877, 878, 873, 874, 879, 773,
	777, 774, 775, 776, 788, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 789, 928, 929, 930, 931,
	932, 933, 803, 807, 806, 804, 805, 801, 802, 829,
	828, 830, 831, 832, 833, 834, 835, 837, 836, 838,
	839, 840, 841, 842, 843, 811, 812, 815, 816, 814,
	813, 817, 826, 827, 818, 819, 820, 821, 822, 823,
	825, 824, 844, 845, 846, 847, 848, 850, 849, 853,
	854, 852, 851, 856, 855, 752, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 919, 261, 920,
	0, 0, 924, 0, 0, 0, 926, 925, 0, 927,
	889, 888, 0, 0, 921, 922, 0, 923, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 934, 935, 936, 937, 938, 939, 940, 941,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 959, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	751, 0, 0, 0, 269, 756, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 763, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 758, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 960, 944, 735, 910, 948, 961, 962,
	963, 964, 949, 0, 237, 950, 951, 244, 952, 0,
	909, 794, 796, 795, 859, 860, 861, 862, 863, 864,
	865, 792, 957, 965, 966, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 731, 748, 0,
	762, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 904, 0, 747,
	0, 0, 755, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 3104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 903, 0, 0, 618, 0, 0, 901, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 954, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 955, 956, 255, 641, 800, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 808, 809, 279, 306, 885, 884, 883,
	305, 307, 881, 882, 880, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 891, 913, 902,
	768, 769, 892, 893, 917, 894, 771, 772, 914, 915,
	765, 766, 770, 916, 918, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 905, 754, 753, 0, 760, 761, 0,
	790, 791, 793, 797, 798, 799, 810, 857, 858, 866,
	868, 869, 867, 870, 871, 872, 875, 876, 877, 878,
	873, 874, 879, 773, 777, 774, 775, 776, 788, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 789,
	928, 929, 930, 931, 932, 933, 803, 807, 806, 804,
	805, 801, 802, 829, 828, 830, 831, 832, 833, 834,
	835, 837, 836, 838, 839, 840, 841, 842, 843, 811,
	812, 815, 816, 814, 813, 817, 826, 827, 818, 819,
	820, 821, 822, 823, 825, 824, 844, 845, 846, 847,
	848, 850, 849, 853, 854, 852, 851, 856, 855, 752,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 919, 261, 920, 0, 0, 924, 0, 0, 0,
	926, 925, 0, 927, 889, 888, 0, 0, 921, 922,
	0, 923, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 934, 935, 936, 937,
	938, 939, 940, 941, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 959, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 751, 0, 0, 0, 269, 756,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 763, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 0, 960, 944, 1074,
	910, 948, 961, 962, 963, 964, 949, 0, 237, 950,
	951, 244, 952, 0, 909, 794, 796, 795, 859, 860,
	861, 862, 863, 864, 865, 792, 957, 965, 966, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 762, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 904, 0, 747, 0, 0, 755, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 903, 0, 0, 618,
	0, 0, 901, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	954, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 955, 956,
	255, 641, 800, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 808, 809, 279,
	306, 885, 884, 883, 305, 307, 881, 882, 880, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 891, 913, 902, 768, 769, 892, 893, 917, 894,
	771, 772, 914, 915, 765, 766, 770, 916, 918, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 905, 754, 753,
	0, 760, 761, 0, 790, 791, 793, 797, 798, 799,
	810, 857, 858, 866, 868, 869, 867, 870, 871, 872,
	875, 876, 877, 878, 873, 874, 879, 773, 777, 774,
	775, 776, 788, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 789, 928, 929, 930, 931, 932, 933,
	803, 807, 806, 804, 805, 801, 802, 829, 828, 830,
	831, 832, 833, 834, 835, 837, 836, 838, 839, 840,
	841, 842, 843, 811, 812, 815, 816, 814, 813, 817,
	826, 827, 818, 819, 820, 821, 822, 823, 825, 824,
	844, 845, 846, 847, 848, 850, 849, 853, 854, 852,
	851, 856, 855, 752, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 919, 261, 920, 0, 0,
	924, 0, 0, 0, 926, 925, 0, 927, 889, 888,
	0, 0, 921, 922, 0, 923, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	934, 935, 936, 937, 938, 939, 940, 941, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 959,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 960, 944, 1074, 910, 948, 961, 962, 963, 964,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 965, 966, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 751, 0, 0, 0, 269, 756, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 763, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 95, 0, 0, 960, 944, 1074, 910, 948,
	961, 962, 963, 964, 949, 0, 237, 950, 951, 244,
	952, 0, 909, 794, 796, 795, 859, 860, 861, 862,
	863, 864, 865, 792, 957, 965, 966, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 762, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 904,
	0, 747, 0, 0, 755, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 2079, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 903, 0, 0, 618, 0, 0,
	901, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 954, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 955, 956, 255, 641,
	800, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 808, 809, 279, 306, 885,
	884, 883, 305, 307, 881, 882, 880, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 891,
	913, 902, 768, 769, 892, 893, 917, 894, 771, 772,
	914, 915, 765, 766, 770, 916, 918, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 905, 754, 753, 0, 760,
	761, 0, 790, 791, 793, 797, 798, 799, 810, 857,
	858, 866, 868, 869, 867, 870, 871, 872, 875, 876,
	877, 878, 873, 874, 879, 773, 777, 774, 775, 776,
	788, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 789, 928, 929, 930, 931, 932, 933, 803, 807,
	806, 804, 805, 801, 802, 829, 828, 830, 831, 832,
	833, 834, 835, 837, 836, 838, 839, 840, 841, 842,
	843, 811, 812, 815, 816, 814, 813, 817, 826, 827,
	818, 819, 820, 821, 822, 823, 825, 824, 844, 845,
	846, 847, 848, 850, 849, 853, 854, 852, 851, 856,
	855, 752, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 919, 261, 920, 0, 0, 924, 0,
	0, 0, 926, 925, 0, 927, 889, 888, 0, 0,
	921, 922, 0, 923, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 934, 935,
	936, 937, 938, 939, 940, 941, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 959, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	1124, 618, 0, 0, 0, 0, 0, 1121, 1122, 362,
	1082, 329, 197, 224, 1115, 1119, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 1684, 944, 0, 0, 1681, 0, 0,
	0, 0, 1679, 0, 237, 1680, 1678, 244, 1683, 0,
	909, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 0, 393, 373, 570, 571, 315, 86, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 483, 251, 374, 371, 577, 281, 272, 268,
	249, 316, 382, 425, 512, 419, 0, 367, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 494, 285, 0, 95, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 0, 0, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	619, 620, 262, 403, 605, 516, 613, 637, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 625, 223, 476, 368, 241, 230, 581, 602,
	298, 288, 453, 632, 212, 511, 591, 238, 480, 0,
	0, 640, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 641, 227, 612, 219, 0, 611, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 601, 642, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 661, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 609, 610, 614, 204, 459, 460, 461, 462, 291,
	604, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 94, 451,
	287, 639, 608, 603, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 2383, 0, 0, 2382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 300, 301, 441, 442, 313, 314, 635, 636, 299,
	592, 622, 590, 634, 616, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 607, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 1745, 0, 373, 570,
	571, 315, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 1747, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 483, 251, 374, 371,
	577, 281, 272, 268, 249, 316, 382, 425, 512, 419,
	0, 367, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 494, 285, 0, 0,
	0, 0, 1749, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	0, 0, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 1456, 0, 1457, 1458, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 619, 620, 262, 403, 605, 516,
	613, 637, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 625, 223, 476, 368,
	241, 230, 581, 602, 298, 288, 453, 632, 212, 511,
	591, 238, 480, 0, 0, 640, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 641, 227, 612, 219,
	0, 611, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	601, 642, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 661, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 609, 610, 614, 204, 459,
	460, 461, 462, 291, 604, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 639, 608, 603, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 300, 301, 441, 442, 313,
	314, 635, 636, 299, 592, 622, 590, 634, 616, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 607, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	0, 393, 373, 570, 571, 315, 86, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 1722, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 94, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 2383, 0, 0,
	2382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 2331, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 1928, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 2329, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	1082, 329, 197, 224, 1080, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 2331,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 1928, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 1722, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 3916, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 2090, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 2828, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 2813, 0, 0, 0, 0,
	237, 0, 0, 244, 2814, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1768, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 1767, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 713, 714,
	715, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 4039, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 1928, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 3916, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 2384, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1749, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 2042, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 2033,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1895, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1893, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1891, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 1889,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1887, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1883, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1881, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1879, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 1854, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 1753,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 0, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 1434, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 0, 0, 0, 264, 320,
	271, 263, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 664, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 0, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 0, 0, 422, 469, 239, 598, 492, 199,
	0, 0, 0, 0, 253, 254, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	395, 0, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 196, 220, 365, 0, 451, 287, 639, 608,
	603, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 607, 498, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 393, 0, 373, 570, 571, 315, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 0,
	0, 0, 264, 320, 271, 263, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 0, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 0, 0, 422, 469,
	239, 598, 492, 199, 0, 0, 0, 0, 253, 254,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 395, 0, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 196, 220, 365, 0,
	451, 287, 639, 608, 603, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 4047, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 607, 498, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 393, 0, 373,
	570, 571, 315, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 0, 0, 0, 264, 320, 271, 263,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 0, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	0, 0, 422, 469, 239, 598, 492, 199, 0, 0,
	0, 0, 253, 254, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 395, 0,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	196, 220, 365, 0, 451, 287, 639, 608, 603, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 607,
	498, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 393, 0, 373, 570, 571, 315, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 0, 0, 0,
	264, 320, 271, 263, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 596, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 579, 447, 593, 619,
	620, 262, 403, 605, 516, 613, 637, 225, 259, 417,
	501, 599, 490, 394, 575, 576, 328, 489, 294, 201,
	366, 625, 223, 476, 368, 241, 230, 581, 602, 298,
	288, 453, 632, 212, 511, 591, 238, 480, 0, 0,
	640, 246, 500, 214, 588, 499, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 583, 584,
	255, 641, 227, 612, 219, 0, 611, 405, 578, 589,
	391, 380, 218, 587, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	600, 0, 207, 0, 495, 601, 642, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	310, 491, 332, 370, 0, 0, 422, 469, 239, 598,
	492, 199, 0, 0, 0, 0, 253, 254, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 395, 0, 585, 586, 661, 381, 482, 595,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 572, 311, 215, 216, 217, 518, 519, 520, 521,
	609, 610, 614, 204, 459, 460, 461, 462, 291, 604,
	308, 465, 464, 330, 331, 376, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 196, 220, 365, 0, 451, 287,
	639, 608, 603, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	300, 301, 441, 442, 313, 314, 635, 636, 299, 592,
	622, 590, 634, 616, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 607, 498, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 481, 513, 514,
	515, 517, 392, 265, 430, 393, 0, 373, 570, 571,
	315, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 0,
	0, 373, 570, 571, 315,
}

var yyPact = [...]int{
	-1000, -1000, 4262, -1000, -533, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2299, 2369, -1000, -1000, -1000, -1000, 2519, -1000, 979,
	2034, -1000, 2322, 1925, -1000, 54671, 485, -1000, 51775, -436,
	840, 238, 35847, -1000, 208, -1000, 199, 53223, 207, -1000,
	-1000, -1000, -1000, -436, 21365, 2252, 63, 56, 54671, -1000,
	-1000, -1000, -1000, -355, 2476, 2018, -1000, 415, -1000, -1000,
	-1000, -1000, -1000, -1000, 51051, -1000, 1115, -1000, -1000, 2326,
	2312, 2241, 896, 2250, -1000, 2410, 2018, -1000, 21365, 2449,
	2373, 20641, 20641, 455, -1000, -1000, 335, -1000, -1000, 30779,
	54671, 38743, 309, -1000, 2322, -1000, -1000, -1000, 191, -1000,
	363, 1928, -1000, 1926, -1000, 1153, 1203, 392, 861, 836,
	391, 390, 389, 388, 385, 384, 383, 382, 403, -1000,
	918, 918, -220, -222, 369, 450, 448, 448, 1005, 469,
	2282, 2275, -1000, -1000, 918, 918, 918, 373, 918, 918,
	918, 918, 329, 328, 918, 918, 918, 918, 918, 918,
	918, 918, 918, 918, 918, 918, 918, 918, 918, 918,
	918, 871, 2322, 296, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54671, 247, 54671, -1000, 528, 484, -1000, -1000,
	-440, 1056, 1056, 77, 1056, 1056, 1056, 1056, 194, 942,
	54, -1000, 188, 278, 172, 284, 1033, 214, -1000, -1000,
	271, 1033, 1775, -1000, 908, 282, 174, -1000, 1056, 1056,
	-1000, 14100, 234, 14100, 14100, -1000, 2307, -1000, -1000, -1000,
	-1000, -1000, 1340, -1000, -1000, -1000, -1000, -33, 468, -1000,
	-1000, -1000, -1000, 53223, 50327, 300, -1000, -1000, 769, 1835,
	1535, 21365, 1190, 885, -1000, -1000, 1575, 850, -1000, -1000,
	-1000, -1000, -1000, 505, -1000, 23537, 23537, 23537, 23537, -1000,
	-1000, 1941, 49603, 1941, 1941, 23537, 1941, 23537, 1941, 1941,
	1941, 1941, 21365, 1941, 1941, 1941, 1941, -1000, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, -1000, -1000, -1000, -1000, 1941,
	527, 1941, 1941, 1941, 1941, 1941, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1941, 1941, 1941, 1941, 1941, 1941, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26433, 1455, 1452, 1450, -1000, 18469, 1941,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54671, -1000, 1941, 231, 53223, 53223, 377, 1326, -1000, -1000,
	2410, 2018, -1000, 2476, 2488, 415, -1000, 3028, 1463, 1662,
	1557, 2018, 1907, 54671, -1000, 1949, -1000, -1000, -1000, -317,
	-330, 2101, 1423, 1755, -1000, -1000, -1000, -1000, 2320, 21365,
	-1000, -1000, 2501, -1000, 27882, 523, 2499, 48879, -1000, 455,
	455, 1924, 445, 14, -1000, -1000, -1000, -1000, 955, 35123,
	-1000, -1000, -1000, -1000, -1000, 1800, 54671, -1000, -1000, 4858,
	1357, -1000, 2033, -1000, 1779, -1000, 1994, 21365, 1972, 483,
	1357, 481, 479, 478, -1000, -58, -1000, -1000, -1000, -1000,
	-1000, -1000, 918, 918, 918, -1000, 400, 2444, 1925, 7061,
	-1000, -1000, -1000, 48155, 2028, 1357, -1000, 2026, -1000, 1036,
	842, 878, 878, 1357, -1000, -1000, 53947, 1357, 1035, 1034,
	1357, 1357, 53223, 53223, -1000, 47431, -1000, 46707, 45983, 1323,
	53223, 45259, 44535, 43811, 43087, 42363, -1000, 2141, -1000, 2086,
	-1000, -1000, -1000, 53947, 1357, 1357, 53947, 53223, 53947, 54671,
	1357, -1000, -1000, 367, -1000, -1000, 1319, 1318, 1317, 918,
	918, 1310, 1737, 1733, 1720, 918, 918, 1302, 1716, 37295,
	1714, 276, 1301, 1300, 1296, 1347, 1710, 205, 1703, 1322,
	1297, 1293, 53223, 2024, 54671, -1000, 263, 980, 977, 954,
	2322, 2247, 1922, 465, 476, 1357, 451, 451, 53223, -1000,
	14830, 54671, 236, -1000, 1675, 21365, -1000, 1043, 1033, 1033,
	-1000, -1000, -1000, -1000, -1000, -1000, 1056, 54671, 1043, -1000,
	-1000, -1000, 1033, 1056, 54671, 1056, 1056, 1056, 1056, 1033,
	1033, 1033, 1056, 54671, 54671, 54671, 54671, 54671, 54671, 54671,
	54671, 54671, 14100, 908, 1056, -441, -1000, 1649, -1000, -1000,
	-1000, 2122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14100,
	14100, -1000, -1000, -1000, -1000, -1000, 1915, -1000, 197, 25,
	203, -1000, 41639, 475, 953, -1000, 475, -1000, -1000, -1000,
	1914, 40915, -1000, -442, -444, -448, -449, -1000, -1000, -1000,
	-455, -457, -1000, -1000, -1000, 21365, 21365, 21365, 21365, -250,
	-1000, 1142, 23537, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21365, 226, 1114, 23537, 23537, 23537, 23537, 23537, 23537, 23537,
	24985, 24261, 23537, 23537, 23537, 23537, 23537, 23537, -1000, -1000,
	32951, 6186, 6186, 850, 850, 850, 850, -1000, -168, 1910,
	53947, -1000, -1000, -1000, 522, 21365, 21365, 850, -1000, 1357,
	2950, 18469, 20641, 20641, 21365, 21365, 967, 1535, 53947, 21365,
	-1000, 1557, -1000, -1000, -1000, -1000, 1131, -1000, -1000, 1021,
	2306, 2306, 2306, 2306, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 2306, 21365, 853, 853, 915, 21365,
	21365, 21365, 21365, 21365, 21365, 17020, 21365, 21365, 23537, 21365,
	21365, 21365, 1557, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 1557, 21365, 1307, 21365, 21365, 21365, 21365, 21365,
	21365, 20641, 16290, 20641, 20641, 20641, 20641, 20641, -1000, -1000,
	-1000, -1000, -1000, -1000, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 1557, 21365, 21365, 21365, 21365, 21365, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1883, 1449,
	1461, 21365, -1000, 1908, -1000, -185, 30055, 21365, 1644, 2496,
	2057, 53223, -1000, -1000, -1000, -1000, 2410, -1000, 2410, 1883,
	2747, 2181, 20641, -1000, -1000, 2747, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1690, -1000, 54671, 1907, 2368, 53223,
	-1000, -294, -1000, -305, 2171, 1612, 361, -1000, 21365, 21365,
	1903, -1000, 1413, 54671, -1000, -250, -1000, 40191, -1000, -1000,
	13370, 54671, 351, 54671, -1000, 29331, 39467, 315, -1000, 14,
	1860, -1000, 32, 21, 17744, 847, -1000, -1000, -1000, 369,
	25709, 1811, 847, 114, -1000, -1000, -1000, 1994, -1000, 1994,
	1994, 1994, 1994, 361, 361, 361, 361, -1000, -1000, -1000,
	-1000, -1000, 2021, 2019, -1000, 1994, 1994, 1994, 1994, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2016, 2016, 2016, 2015,
	2015, 2000, 2000, 443, -1000, 21365, 467, 38743, 2329, 1286,
	2138, 263, 453, 2045, 1357, 1357, 1357, 453, -1000, 1395,
	1384, 1361, -1000, -517, 1886, -1000, -1000, 2441, -1000, -1000,
	1240, 1066, 1065, 889, 53223, 245, 342, -1000, 434, -1000,
	38743, 1357, 1026, 878, 1357, -1000, 1357, -1000, -1000, -1000,
	-1000, -1000, 1357, -1000, -1000, 1885, -1000, 1895, 1120, 1058,
	1099, 993, 1885, -1000, -1000, -180, 1885, -1000, 1885, -1000,
	1885, -1000, 1885, -1000, 1885, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 982, 333, -311, 53223, 245, 464,
	-1000, 460, 32951, -1000, -1000, -1000, 32951, 32951, -1000, -1000,
	-1000, -1000, 1610, 1604, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -506, 54671, -1000, 262, 951, 302, 374,
	321, 54671, 370, 2401, 2400, 2399, 2377, 2376, 2371, 313,
	324, 54671, 54671, 451, 2109, 54671, 2343, 54671, -1000, -1000,
	-1000, -1000, -1000, 1582, 1579, -1000, 1535, 54671, -1000, -1000,
	1056, 1056, -1000, -1000, 54671, 1056, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1056, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54671, -1000, -1000, -1000, -1000, -33, 190, -1000, -1000, 53223,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -104,
	-1000, 806, 28, 395, -1000, -1000, -1000, -1000, -1000, 2405,
	-1000, 1535, 1004, 999, -1000, 1941, -1000, -1000, 1149, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 226, 23537, 23537,
	23537, 1664, 799, 1892, 987, 1601, 927, 927, 1161, 23537,
	1161, 23537, 854, 854, 854, 854, 854, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1577, -1000, 1941, 53947, 1762,
	16290, 2779, 1875, 1557, 852, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4218, 1731, -1000, 1731, 1901,
	4214, 984, -1000, 21365, 1557, 4210, -1000, -1000, 1557, 1557,
	21365, -1000, -1000, 21365, 21365, 21365, 21365, 2138, 2138, 2138,
	2138, 2138, 2138, 2138, 2138, 2138, 2138, 21365, 2138, 1879,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1878, 2491,
	2770, 2138, 2138, 2138, 2138, 2138, 21365, 1401, -1000, -1000,
	-1000, 1444, 4204, 1617, 4200, 2138, 2138, -1000, 2138, 4193,
	4178, 1557, 1835, 3276, 2997, 2138, 2138, 2138, 2138, 2138,
	2970, 2959, 2138, 2138, 2920, 2138, 4174, 2138, 2903, 2898,
	2892, 2827, 2790, 2783, 2719, 2687, 2681, 2638, 2598, 2593,
	2578, 2563, 2552, 2536, 2532, 2518, 2138, 2138, 2138, 4170,
	2138, 4161, 2138, 4144, 2138, 2138, 4140, 2475, 2470, 1557,
	1868, -1000, 4135, 2138, 4110, 4037, 3892, 2461, 3873, 3863,
	3839, 2138, 2138, 2138, 2411, 3835, 3831, 3827, 3820, 3525,
	3516, 3496, 3474, 3458, 2138, 1461, 1461, 1461, 1461, 1461,
	3449, -253, 2138, 1557, -1000, -1000, -1000, -1000, -1000, 3443,
	2378, 3435, 3424, 3413, 3376, 1557, 1866, 1941, 520, -1000,
	-1000, 1731, 1557, 1557, 1731, 1731, 3362, 3355, 3348, 3337,
	3332, 3302, 2138, 2138, -1000, 2138, 3298, 3291, 2370, 2361,
	1557, -1000, 1461, 54671, -1000, -435, -1000, 7, 934, 1941,
	-1000, 37295, 1557, -1000, 5050, -1000, 1331, -1000, -1000, -1000,
	-1000, -1000, 34399, 1829, 2747, -1000, -1000, 1941, 1729, -1000,
	-1000, -1000, -1000, 361, 79, 33675, 839, 839, 127, 1535,
	1535, 21365, -1000, -1000, -1000, -1000, -1000, -1000, 519, 2469,
	414, 1941, -1000, 1893, 2955, -1000, -1000, -1000, 2365, 27158,
	-1000, -1000, 1941, 1941, 54671, 1825, 1788, -1000, 517, -1000,
	1362, 1860, 14, 13, -1000, -1000, -1000, -1000, 1535, -1000,
	1349, 354, 331, -1000, 437, -1000, -1000, -1000, -1000, 2264,
	88, -1000, -1000, -1000, 314, 361, -1000, -1000, -1000, -1000,
	-1000, -1000, 1573, 1573, -1000, -1000, -1000, -1000, -1000, 1284,
	-1000, -1000, -1000, -1000, 1260, -1000, -1000, 1256, -1000, -1000,
	2659, 2092, 467, -1000, -1000, 918, 1566, -1000, -1000, 2272,
	918, 918, 53223, -1000, -1000, 1805, 2329, 262, 54671, 972,
	2106, -1000, 2045, 2045, 2045, 54671, -1000, -1000, -1000, -1000,
	-1000, -1000, -507, 176, 570, -1000, -1000, -1000, 4924, 53223,
	1708, -1000, 235, -1000, 1797, -1000, 53223, -1000, 1674, 2014,
	1357, 1357, -1000, -1000, -1000, 53223, 1941, -1000, -1000, -1000,
	-1000, 470, 2315, 343, -1000, -1000, -276, -1000, -1000, 245,
	235, 53947, 1357, 847, -1000, -1000, -1000, -1000, -1000, -509,
	1665, 472, 249, 513, 54671, 54671, 54671, 54671, 54671, 54671,
	507, -1000, -1000, 45, -1000, -1000, 218, -1000, -1000, -1000,
	-1000, -1000, 218, -1000, -1000, -1000, -1000, -1000, 298, 457,
	-1000, 54671, 54671, 923, -1000, -1000, -1000, -1000, -1000, 1033,
	-1000, -1000, 1033, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2300, 54671, 20, -472, -1000, -469, 21365,
	-1000, -1000, -1000, -1000, 1558, 477, 1892, 23537, 23537, 2950,
	2950, 23537, -1000, -1000, -1000, 845, 845, 32951, -1000, 23537,
	21365, 20641, -1000, -1000, 21365, 21365, 21365, 935, -1000, 21365,
	1241, -1000, 21365, -1000, -1000, 1461, 2138, 2138, 2138, 2138,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1880, -1000, 21365, 21365, 21365, 1557, 327, -1000, -1000, -1000,
	-1000, -1000, 2487, -1000, 21365, -1000, 32951, 21365, 21365, 21365,
	-1000, -1000, -1000, 21365, 21365, -1000, -1000, 21365, -1000, 21365,
	-1000, -1000, -1000, -1000, -1000, -1000, 21365, -1000, 21365, -1000,
	-1000, -1000, 21365, -1000, 21365, -1000, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, -1000, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, 21365,
	-1000, 21365, 21365, 21365, -1000, 21365, 21365, 21365, 21365, -1000,
	-1000, -1000, -1000, 21365, 21365, 21365, 21365, 21365, 21365, 21365,
	21365, 21365, 21365, -1000, -1000, -1000, -1000, -1000, -1000, 21365,
	-1000, 38743, 16, -253, 1307, 16, 1307, 22813, 777, 534,
	22089, -1000, 20641, 15560, -1000, -1000, -1000, -1000, -1000, 21365,
	21365, 21365, 21365, 21365, 21365, -1000, -1000, -1000, 21365, 21365,
	-1000, 21365, -1000, 21365, -1000, -1000, -1000, -1000, -1000, 934,
	-1000, 878, 878, 878, 53223, -1000, -1000, -1000, -1000, 1857,
	-1000, 2397, -1000, 2191, 2189, 2479, 2469, -1000, 29331, 2747,
	-1000, -1000, 53223, -424, -1000, 2230, 2211, 839, 839, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12640, 2410, 21365, 2095,
	53947, 241, -1000, 28607, 53223, 53947, 29331, 29331, 29331, 29331,
	29331, -1000, 2150, 2143, -1000, 2156, 2134, 2162, 54671, -1000,
	1883, 1624, -1000, 21365, 31503, 1836, 29331, -1000, -1000, 29331,
	54671, 11910, -1000, -1000, 17, 0, -1000, -1000, -1000, -1000,
	369, -1000, -1000, 1032, 2363, 2257, -1000, -1000, -1000, -1000,
	-1000, 1616, -1000, 1602, 1856, 1600, 1598, 333, -1000, 1938,
	2294, 918, 918, -1000, 1216, -1000, 1357, 1540, 1528, -1000,
	-1000, -1000, 471, -1000, 2340, 54671, 2088, 2087, 2081, -1000,
	-524, 1215, 2012, 1931, 21365, 2010, 2436, 1847, 53223, -1000,
	-1000, 53947, -1000, 272, -1000, 467, 53223, -1000, -1000, -1000,
	342, 54671, -1000, 8431, -1000, -1000, -1000, 235, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 54671, 261, -1000, 2003, 1335,
	-1000, -1000, 1991, -1000, -1000, -1000, -1000, -1000, 223, 200,
	1508, 216, 1489, 216, -1000, 54671, 912, 2092, 54671, -1000,
	-1000, -1000, 1056, 1056, -1000, -1000, 2293, -1000, 1357, 2138,
	23537, 23537, -1000, 850, -1000, -1000, 422, -232, 1994, 1994,
	-1000, 1994, 2000, -1000, 1994, 181, 1994, 179, 1994, -1000,
	-1000, 1557, 1557, -1000, 1461, -1000, 2346, 1672, 3284, -1000,
	1535, 21365, 3272, -1000, -1000, -1000, -1000, -1000, -65, 3010,
	2755, 2138, -1000, 1987, 1985, 21365, 2138, 1557, 2304, 2138,
	2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138,
	2138, 2298, 2287, 2271, 2221, 2201, 2196, 2177, 2173, 2164,
	2130, 2115, 2108, 2100, 2096, 2073, 2007, 2138, 2138, 1996,
	2138, 1990, 1982, -1000, 1535, 1461, 2649, 1461, 2138, 2138,
	2624, 255, 2138, 1594, 1594, 1594, 1594, 1594, 1461, 1461,
	1461, 1461, 2138, 53223, -1000, -253, -1000, -1000, -314, -315,
	-1000, 1557, -253, 1855, 23537, 2138, 23537, 23537, 23537, 2138,
	1557, -1000, 1951, 1946, 2333, 1933, 2138, 2226, 2138, 2138,
	2138, 1850, -1000, 2403, 2403, 2403, 1565, 1331, 54671, -1000,
	-1000, -1000, -1000, 2469, 2464, 1852, -1000, -1000, 79, 417,
	-1000, 2208, 2211, -1000, 2432, 2236, 2431, -1000, -1000, -1000,
	-1000, -1000, 1535, -1000, 2324, 1832, -1000, 933, 1841, -1000,
	-1000, 19917, 1572, 2187, 515, 1565, 1853, 2955, 2051, 2075,
	3102, -1000, -1000, -1000, -1000, 2142, -1000, 2131, -1000, -1000,
	1949, -1000, 2183, 351, 29331, 1827, 1827, -1000, 509, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1084, 8431, 2512, -1000,
	1474, -1000, 1345, 195, 1211, -1000, -1000, 918, 918, -1000,
	1025, 1012, -1000, 54671, 1966, -1000, 361, 1464, 361, 1207,
	-1000, -1000, 1202, -1000, -1000, -1000, -1000, 2060, 2099, -1000,
	-1000, -1000, -1000, 54671, -1000, -1000, 54671, 54671, 54671, 1960,
	2428, -1000, 21365, 1959, 932, 2588, 53223, 53223, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 459,
	918, -487, 318, 316, 918, 918, 918, -525, -1000, -1000,
	1561, 1556, -1000, -187, -1000, 21365, -1000, -1000, -1000, -1000,
	-1000, 1242, 1242, 1455, 1452, 1450, -1000, 1949, -1000, -1000,
	-1000, 1763, -1000, -1000, -195, 53223, 53223, 53223, 53223, -1000,
	-1000, -1000, 1228, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 850, 1557, 368, -203, 1557,
	-1000, -1000, 361, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21365, -1000, 21365, -1000, 21365, 1535, 21365,
	2410, 1446, 21365, 21365, -1000, 1198, 1183, 2138, -1000, -1000,
	-1000, 21365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365, -1000, 21365,
	-1000, 21365, -1000, 21365, -1000, 21365, -1000, -1000, 21365, -1000,
	-1000, -1000, 21365, -1000, 21365, -1000, 21365, -1000, -1000, -1000,
	21365, 267, 845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1557, 344, -1000, -1000, -1000, -1000,
	2472, -1000, 1557, 21365, 2950, -1000, 2950, 2950, 2950, -1000,
	-1000, -1000, 21365, -1000, 21365, 21365, -1000, 21365, -1000, 21365,
	-1000, -1000, -1000, -1000, 21365, 1941, 2227, 1941, 1941, 31503,
	-1000, -1000, 2464, 2462, 2423, 2209, 2223, 2223, 2208, -1000,
	2422, 2419, -1000, 1441, 2417, 1430, 1010, -1000, 53947, 21365,
	241, -1000, 432, 53223, 241, 53223, -1000, 2453, -1000, -1000,
	21365, 1958, -1000, 21365, -1000, -1000, -1000, -1000, 6186, 2469,
	1827, -1000, -1000, 863, -1000, 21365, -1000, 9941, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1424, 1422, -1000, -1000,
	1955, 21365, -1000, -1000, -1000, 1709, 1666, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1949, -1000, -1000, -1000, -1000,
	342, -513, 2567, 53223, 1175, -1000, 1539, 1847, 320, 241,
	1420, 918, 918, 918, 1154, 1148, 37295, 1537, -1000, 53223,
	426, -1000, 342, -1000, -223, -227, 2138, -1000, -1000, 2353,
	-1000, -1000, 15560, -1000, -1000, 1945, 2005, -1000, -1000, -1000,
	-1000, 2170, -177, -214, -1000, -1000, 2138, 2138, 2138, 1967,
	1557, -1000, 2138, 2138, 1663, 1618, -1000, 2138, 2138, 2138,
	2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138,
	2138, 2138, 2138, 2138, 2138, 2138, 2138, 1461, 1822, -1000,
	267, 1557, 2074, -1000, -1000, 6186, -1000, -1000, 2453, 2416,
	16, -1000, -1000, 240, 16, 1535, 945, 1557, 1557, 945,
	1818, 2138, 1809, 1753, 2138, 2138, 32227, -1000, 2413, 2412,
	38019, 38019, 934, 2462, -266, 21365, 21365, 2219, 1174, -1000,
	-1000, -1000, -1000, 1414, 1402, -1000, 1390, -1000, 2510, -1000,
	1535, -1000, 241, -1000, 503, 1841, -1000, 2410, 1535, 53223,
	1535, 80, 2453, -1000, 2138, -1000, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, -1000, -1000, 53223, 2328, -1000,
	-1000, 2352, 1533, 165, -1000, 1562, 1847, -1000, -1000, 210,
	-1000, 21365, -1000, 37295, 1387, 1367, -1000, -1000, -1000, -1000,
	-525, -1000, -1000, -1000, -1000, -1000, -1000, 415, 1844, -1000,
	917, 53223, 54671, -1000, 2145, -1000, -1000, -1000, -1000, 21365,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21365, -1000, 1557,
	2071, -1000, -361, -1000, -489, 21365, -253, -1000, -1000, -253,
	-1000, -1000, -1000, -1000, -1000, 21365, -1000, -1000, 21365, -1000,
	21365, -1000, -1000, 1525, -1000, -1000, -1000, -1000, -1000, 1525,
	1525, -1000, -266, -1000, 1842, -1000, 53223, 1535, 1835, -1000,
	1158, -1000, -1000, -1000, -1000, -1000, 53947, 1841, 53223, -1000,
	1519, 1557, 1941, 2410, -1000, 1517, -1000, 415, -1000, 1944,
	1931, -1000, -1000, -1000, 19193, -1000, -1000, -1000, -1000, -1000,
	293, -189, 15560, 11180, 1503, -1000, -188, 2138, 1461, -1000,
	-461, -1000, -1000, -1000, -1000, 292, -1000, -1000, 1835, -1000,
	-1000, 1531, 1522, 1515, 36571, -1000, -1000, -1000, -1000, -266,
	-1000, -1000, 2347, -1000, -1000, 1834, -1000, -1000, 31503, 52499,
	-1000, -166, 379, -189, 21365, 1943, 1557, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, -1000, -1000, 495, -1000,
	-1000, -1000, 1991, -209, -1000, -1000, -1000, 307, -477, -280,
	-282, 23537, -1000, 21365, -1000, 21365, -1000, 21365, -1000, -1000,
	-1000, 53223, 1941, -1000, 1459, -1000, 1231, -375, 2069, -1000,
	-132, -1000, -1000, -1000, 1079, 1365, -1000, -1000, -1000, -1000,
	-1000, -1000, 2263, 53223, -1000, 442, -1000, -1000, 14830, -195,
	-216, 988, -1000, -1000, -1000, -1000, -1000, 2950, 1381, 1288,
	2138, -1000, 53223, -1000, 52499, -339, 847, 6186, -1000, 2064,
	2063, 2517, -1000, -1000, -1000, -1000, -1000, -1000, -530, 1428,
	264, -1000, -1000, -1000, 307, -327, -1000, 21365, -1000, 21365,
	-1000, 1557, -1000, -1000, 2335, 80, -1000, 2477, -1000, 2505,
	1071, 1071, -1000, 1121, -530, -1000, -1000, -1000, -1000, 2138,
	2138, -1000, -380, -1000, -1000, -1000, -1000, -1000, 436, 1187,
	-1000, -1000, -1000, -1000, -1000, 6186, -1000, -1000, -1000, 294,
	294, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3130, 3129, 25, 5, 41, 40, 3127, 3126, 3114,
	180, 3108, 3106, 3104, 3103, 3100, 3097, 2557, 2552, 2543,
	3095, 3090, 3089, 3088, 3087, 3083, 3081, 3079, 3078, 47,
	110, 39, 103, 210, 199, 3076, 175, 160, 200, 3072,
	3071, 3069, 115, 192, 83, 85, 193, 3068, 3066, 76,
	3064, 3061, 3057, 190, 187, 185, 1021, 3056, 186, 116,
	52, 3050, 3049, 3044, 3039, 3036, 3033, 3031, 3030, 3021,
	3019, 3016, 3015, 3011, 3010, 3007, 3004, 3003, 3002, 300,
	3000, 2993, 17, 2990, 78, 2989, 2988, 2983, 2977, 2975,
	2, 2973, 2972, 28, 45, 2968, 2966, 48, 2965, 2964,
	2962, 2961, 2960, 46, 2959, 22, 2957, 36, 2956, 2955,
	126, 2942, 2941, 2938, 43, 2931, 2929, 2918, 32, 170,
	2917, 2914, 140, 2908, 2905, 2904, 177, 219, 2903, 2214,
	167, 104, 111, 2900, 2893, 100, 194, 2891, 123, 2884,
	2882, 2881, 153, 2880, 3205, 2875, 2869, 61, 70, 155,
	2868, 2866, 209, 69, 10, 16, 18, 2865, 2864, 68,
	74, 2860, 109, 2852, 2846, 95, 73, 2841, 102, 97,
	2840, 2836, 20, 6, 2835, 1, 4, 7, 80, 2833,
	2832, 113, 2825, 2822, 2818, 93, 2817, 2816, 4466, 2810,
	87, 130, 101, 71, 2806, 172, 162, 2804, 2803, 2797,
	2795, 2793, 53, 2790, 2788, 2785, 139, 244, 166, 2784,
	147, 336, 55, 144, 2782, 196, 79, 195, 169, 2779,
	2777, 137, 134, 2773, 2763, 58, 165, 189, 2761, 92,
	129, 118, 168, 89, 138, 2760, 2758, 59, 63, 2757,
	2756, 2754, 2752, 174, 2751, 2750, 64, 2749, 57, 2746,
	188, 2745, 136, 66, 2744, 171, 176, 2743, 72, 2742,
	2739, 65, 94, 98, 27, 2734, 158, 163, 124, 173,
	2729, 2725, 56, 2724, 2722, 2719, 197, 298, 2717, 2716,
	291, 179, 143, 150, 84, 2715, 337, 2714, 2711, 13,
	4330, 7102, 2702, 26, 164, 2701, 2700, 6834, 15, 49,
	29, 2699, 205, 2696, 2693, 2690, 2689, 221, 203, 106,
	161, 60, 2688, 2684, 2683, 34, 2673, 2671, 2670, 2669,
	2668, 2664, 75, 38, 37, 35, 208, 62, 21, 99,
	159, 154, 67, 2659, 2654, 2649, 120, 91, 2644, 157,
	156, 121, 133, 2643, 182, 142, 117, 2627, 96, 33,
	2619, 2614, 2611, 2605, 90, 2600, 2599, 2598, 2596, 152,
	148, 119, 81, 2595, 82, 114, 149, 145, 54, 2593,
	44, 2591, 2589, 31, 184, 30, 2588, 19, 105, 108,
	2587, 5612, 183, 2585, 8, 333, 151, 2584, 2583, 9,
	12, 11, 2580, 2576, 2574, 2573, 131, 2572, 2569, 2568,
	2566, 24, 51, 23, 14, 112, 77, 2565, 2561, 141,
	2541, 2539, 2537, 0, 1007, 128, 2527, 204,
}

//line sql.y:8610
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 258, 381, 382, 382, 256, 256, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 29, 29, 29, 29, 30, 30, 30, 30,
	30, 15, 16, 34, 34, 17, 17, 108, 108, 18,
	19, 19, 19, 19, 415, 415, 183, 183, 181, 181,
	182, 182, 261, 261, 20, 265, 265, 267, 267, 267,
	267, 257, 257, 257, 21, 21, 266, 266, 268, 268,
	268, 271, 271, 271, 271, 310, 310, 310, 22, 22,
	22, 22, 22, 128, 128, 384, 384, 383, 377, 377,
	376, 376, 375, 380, 380, 379, 379, 378, 40, 41,
	50, 50, 50, 50, 51, 52, 385, 385, 350, 57,
	57, 56, 56, 56, 56, 56, 56, 58, 58, 54,
	54, 53, 53, 55, 55, 352, 352, 338, 338, 351,
	351, 351, 351, 351, 351, 351, 337, 337, 139, 139,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 400, 400, 400,
	399, 399, 236, 236, 236, 236, 236, 236, 236, 236,
	148, 148, 159, 159, 159, 159, 159, 159, 146, 146,
	147, 145, 145, 145, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 158, 158, 154, 154, 154, 155, 155,
	155, 156, 156, 401, 401, 401, 401, 315, 315, 315,
	315, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	321, 321, 321, 321, 321, 321, 321, 321, 336, 336,
	322, 322, 330, 330, 331, 331, 332, 332, 332, 333,
	333, 333, 334, 334, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 329, 329, 328, 328, 328, 339, 364,
	364, 363, 363, 361, 361, 361, 361, 361, 361, 361,
	361, 348, 348, 358, 358, 358, 358, 358, 347, 347,
	343, 343, 343, 344, 344, 345, 345, 342, 342, 346,
	346, 360, 360, 359, 359, 340, 340, 341, 341, 366,
	402, 402, 402, 402, 402, 403, 403, 367, 392, 394,
	394, 394, 393, 393, 390, 391, 389, 389, 389, 389,
	389, 84, 84, 84, 284, 284, 285, 285, 356, 356,
	355, 355, 355, 357, 357, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 279, 279, 279, 388,
	388, 388, 388, 388, 388, 387, 387, 387, 353, 353,
	353, 353, 386, 386, 59, 59, 216, 216, 405, 405,
	406, 406, 406, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 110, 110, 111,
	111, 111, 111, 113, 113, 113, 369, 369, 60, 60,
	3, 3, 171, 173, 174, 174, 172, 172, 172, 172,
	172, 172, 62, 62, 61, 61, 176, 175, 177, 177,
	177, 1, 1, 2, 2, 4, 4, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 335,
	335, 335, 368, 368, 370, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 116, 115, 115, 114, 117,
	117, 117, 117, 117, 117, 117, 117, 372, 372, 372,
	63, 63, 373, 323, 324, 325, 5, 6, 349, 371,
	124, 124, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 278, 278, 287,
	287, 277, 277, 302, 302, 302, 280, 280, 280, 281,
	281, 398, 398, 398, 274, 274, 66, 66, 66, 303,
	303, 303, 303, 69, 69, 407, 407, 408, 408, 409,
	409, 409, 70, 71, 71, 305, 305, 306, 306, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	109, 109, 109, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 395, 395, 396, 397,
	397, 397, 397, 76, 78, 27, 27, 27, 27, 27,
	27, 134, 134, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 129, 129, 129, 123, 123,
	416, 79, 80, 80, 127, 127, 127, 120, 120, 120,
	126, 126, 126, 12, 12, 13, 260, 260, 14, 14,
	131, 131, 133, 133, 133, 133, 133, 135, 135, 135,
	135, 135, 135, 135, 130, 130, 132, 132, 132, 132,
	295, 295, 295, 294, 294, 165, 165, 167, 166, 166,
	168, 168, 169, 169, 169, 169, 214, 214, 191, 191,
	253, 253, 254, 254, 252, 252, 259, 259, 255, 255,
	255, 255, 262, 262, 170, 170, 170, 170, 178, 178,
	179, 179, 180, 180, 304, 304, 300, 300, 300, 299,
	299, 184, 184, 184, 186, 185, 185, 185, 185, 187,
	187, 189, 189, 188, 188, 190, 195, 195, 194, 194,
	192, 192, 192, 192, 193, 193, 193, 193, 196, 196,
	144, 144, 144, 144, 144, 144, 144, 144, 157, 157,
	157, 157, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 243, 243, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 219, 219, 218, 218, 87,
	87, 87, 88, 88, 89, 89, 89, 89, 89, 90,
	90, 90, 90, 90, 90, 90, 92, 92, 91, 91,
	209, 209, 292, 292, 93, 94, 94, 97, 97, 96,
	95, 95, 101, 101, 98, 98, 100, 100, 99, 102,
	102, 103, 104, 104, 275, 275, 197, 197, 205, 205,
	205, 205, 198, 198, 198, 198, 198, 198, 198, 206,
	206, 206, 213, 207, 207, 203, 203, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 162,
	162, 162, 162, 224, 224, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	151, 151, 163, 163, 163, 163, 164, 164, 164, 164,
	164, 164, 164, 312, 312, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 417, 417, 326, 326, 326, 204, 204,
	204, 204, 204, 125, 125, 125, 125, 125, 309, 309,
	309, 313, 313, 313, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 314,
	314, 222, 222, 121, 121, 220, 220, 221, 223, 223,
	215, 215, 215, 215, 217, 217, 200, 200, 200, 225,
	225, 226, 226, 105, 106, 106, 107, 107, 227, 227,
	229, 228, 228, 230, 231, 231, 231, 232, 232, 233,
	233, 233, 49, 49, 49, 49, 49, 44, 44, 44,
	44, 45, 45, 45, 45, 136, 136, 136, 136, 138,
	138, 137, 137, 82, 82, 83, 83, 83, 142, 142,
	143, 143, 143, 140, 140, 141, 141, 250, 250, 250,
	250, 250, 250, 250, 234, 234, 234, 241, 241, 241,
	237, 237, 239, 239, 239, 240, 240, 240, 238, 247,
	247, 249, 249, 248, 248, 244, 244, 245, 245, 246,
	246, 246, 242, 242, 199, 199, 199, 199, 199, 251,
	251, 251, 251, 263, 263, 210, 210, 212, 212, 211,
	211, 161, 264, 264, 272, 269, 269, 270, 270, 296,
	296, 296, 273, 273, 286, 286, 282, 282, 283, 283,
	276, 276, 288, 288, 288, 77, 208, 208, 365, 365,
	362, 291, 291, 293, 293, 297, 297, 301, 301, 298,
	298, 8, 410, 410, 410, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 413, 414, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 3, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 5, 5, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 5, 6, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 4, 2, 4, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 2, 2, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 8, 4, 8, 8, 6, 5, 4, 4, 4,
	4, 4, 7, 4, 4, 6, 6, 6, 8, 6,
	6, 4, 4, 3, 4, 6, 6, 4, 4, 6,
	4, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 4, 4, 4, 6, 4, 6, 4, 4, 6,
	4, 6, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 4, 4, 6, 4, 6, 4, 8, 6, 4,
	4, 6, 4, 6, 8, 4, 6, 8, 4, 4,
	6, 8, 6, 4, 6, 6, 8, 10, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	4, 4, 6, 4, 6, 5, 9, 6, 9, 8,
	6, 8, 8, 8, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 5, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 3, 4,
	2, 3, 4, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -79, -416, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 10, 11, -108, -35, 33, -40,
	-50, 227, -51, -41, 228, -52, 230, 229, 267, 231,
	380, 260, 75, 316, 317, 319, 320, 321, 322, -109,
	686, 265, 266, 233, 37, 46, 34, 35, 38, 237,
	273, 274, 236, 133, -33, -36, 9, -413, 12, 470,
	262, 261, 29, -34, 580, 87, -80, -412, 734, -250,
	-234, 23, 34, 30, -233, -229, -127, -234, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -350, -352, 87,
	160, 87, -79, -57, -56, -54, -53, -55, -58, 32,
	-47, -48, -374, -46, -43, 232, 229, 277, 123, 124,
	267, 268, 269, 231, 251, 266, 270, 265, 286, -42,
	82, 34, 580, 583, -357, 228, 234, 235, 230, 471,
	126, 125, 76, -354, 375, 613, 704, -58, 706, 101,
	104, 705, 45, 241, 707, 708, 709, 620, 710, 250,
	711, 712, 713, 714, 720, 661, 721, 722, 723, 127,
	8, -79, -301, -297, 91, -290, 577, 253, 611, 424,
	612, 302, 82, 42, 516, 586, 372, 375, 613, 501,
	704, 381, 316, 332, 326, 506, 507, 508, 355, 347,
	578, 614, 587, 305, 254, 290, 698, 345, 136, 706,
	309, 615, 268, 382, 383, 616, 384, 101, 319, 421,
	719, 308, 617, 717, 104, 705, 324, 80, 500, 52,
	701, 45, 263, 429, 430, 343, 236, 339, 707, 291,
	618, 589, 284, 126, 123, 726, 37, 335, 51, 31,
	716, 125, 50, 708, 151, 619, 709, 620, 386, 362,
	692, 49, 387, 269, 621, 85, 274, 582, 313, 700,
	388, 521, 336, 389, 301, 715, 233, 622, 312, 681,
	673, 674, 390, 391, 693, 367, 363, 368, 523, 623,
	413, 505, 392, 677, 678, 733, 53, 624, 625, 694,
	124, 626, 79, 710, 81, 330, 331, 627, 299, 252,
	526, 527, 415, 359, 483, 490, 491, 111, 112, 486,
	113, 492, 114, 493, 494, 495, 484, 115, 108, 485,
	496, 497, 360, 361, 116, 498, 110, 109, 487, 489,
	117, 499, 250, 36, 393, 579, 303, 59, 307, 278,
	416, 47, 365, 730, 46, 688, 528, 628, 691, 358,
	354, 480, 54, 629, 630, 631, 632, 502, 711, 357,
	329, 353, 725, 4, 296, 475, 503, 712, 63, 235,
	370, 369, 371, 285, 412, 350, 633, 634, 635, 257,
	83, 636, 340, 22, 637, 638, 394, 292, 639, 57,
	640, 641, 419, 266, 642, 55, 713, 40, 643, 271,
	727, 714, 644, 645, 646, 687, 647, 273, 648, 396,
	649, 675, 676, 395, 364, 366, 529, 280, 397, 380,
	238, 581, 650, 314, 334, 270, 718, 651, 258, 517,
	518, 519, 520, 699, 525, 524, 272, 277, 265, 420,
	259, 652, 653, 654, 655, 656, 306, 672, 657, 658,
	320, 720, 481, 44, 659, 660, 661, 662, 663, 300,
	295, 414, 423, 62, 84, 377, 664, 665, 697, 328,
	325, 293, 461, 463, 464, 465, 466, 467, 462, 469,
	666, 317, 56, 721, 722, 723, 287, 724, 509, 510,
	511, 512, 10, 563, 546, 574, 547, 564, 548, 557,
	549, 565, 573, 575, 530, 538, 531, 539, 569, 552,
	566, 558, 551, 550, 572, 555, 559, 532, 540, 570,
	556, 533, 541, 534, 542, 535, 543, 568, 567, 560,
	571, 536, 544, 562, 537, 545, 561, 553, 554, 432,
	731, 732, 504, 399, 127, 297, 298, 48, 351, 279,
	667, 310, 668, 341, 342, 477, 478, 356, 327, 352,
	684, 318, 682, 281, 400, 482, 267, 669, 422, 294,
	373, 378, 311, 585, 522, 286, 401, 696, 584, 513,
	514, 349, 346, 288, 515, 670, 686, 402, 242, 282,
	283, 671, 683, 403, 404, 304, 405, 406, 407, 408,
	409, 411, 315, 410, 685, 679, 680, 289, 460, 583,
	323, 344, 379, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 479, 240, -79, 240, -188, -297, -129, 688, 690,
	179, -269, 383, -287, 385, 398, 393, 403, 391, -278,
	394, 396, 280, -398, 413, 240, 400, 227, 386, 395,
	404, 405, 304, 411, 406, 315, 410, 289, 407, 408,
	409, -381, 179, 709, 724, 136, 348, 390, 388, 414,
	688, 91, -303, 91, 92, 93, -290, 318, -305, 323,
	-291, -381, -290, 321, -79, -79, -307, -307, -129, -207,
	-144, 144, -157, -258, -160, 92, -149, -152, -201, -202,
	-203, -204, -158, -217, -256, 168, 169, 176, 145, -213,
	-161, 27, 576, 472, 471, 179, 32, 222, 69, 70,
	474, 475, 147, 58, 12, 437, 438, -159, 427, 428,
	439, 433, 434, 500, 502, 503, 504, 501, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 505, 516,
	477, 478, 118, 479, 108, 110, 109, 480, 481, 482,
	345, 528, 529, 523, 526, 527, 525, 524, 360, 361,
	483, 546, 547, 551, 550, 548, 549, 552, 555, 556,
	557, 558, 559, 560, 562, 561, 553, 554, 531, 530,
	532, 533, 534, 535, 536, 537, 539, 538, 540, 541,
	542, 543, 544, 545, 563, 564, 565, 566, 567, 569,
	568, 573, 572, 570, 571, 575, 574, 484, 485, 111,
	112, 113, 114, 115, 116, 117, 486, 489, 487, 488,
	490, 491, 492, 497, 498, 493, 494, 495, 496, 499,
	371, 369, 370, 366, 365, 364, -89, -101, 602, 601,
	-102, 424, 429, 430, 432, -150, -151, -163, -164, -291,
	-297, 245, 426, 239, 174, 470, -153, -147, -215, 107,
	93, -31, -211, 425, 435, 436, 440, 431, 441, 588,
	590, 605, 606, 608, 593, 598, 597, 600, 517, 518,
	519, 520, 521, 522, 673, 674, 675, 676, 677, 678,
	679, 680, -381, -290, 91, -155, -154, -197, 94, 99,
	102, 103, 105, -404, 263, 341, 342, 119, -413, 702,
	90, 95, 96, 97, 98, 120, 121, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 45,
	399, 399, -188, -79, -79, -79, -79, -410, 705, 581,
	-227, -127, -229, -33, -31, -413, 9, -79, -31, -32,
	-30, -36, -38, 607, -37, -297, 100, -234, -250, 13,
	62, 163, 43, 51, -232, -233, -34, -31, -144, 20,
	24, 25, -132, 170, -144, -297, -132, -276, 244, -79,
	-79, -265, -310, 318, -267, 414, 688, 413, -257, -270,
	91, -256, -269, 412, 92, -351, 160, -337, -341, -291,
	255, -367, 251, -188, -360, -359, -291, -413, -128, -286,
	241, 249, 248, 137, -385, 140, 297, 426, 239, -53,
	-54, -55, -269, 178, 708, -110, 272, 276, 88, 88,
	-341, -340, -339, -386, 276, 255, -366, -358, 247, 256,
	-347, 248, 249, -342, 241, 138, -386, -342, 246, 256,
	251, 255, 276, 276, 127, 276, 127, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 271, -348, 152, -348,
	584, 584, -354, -386, 251, 241, -386, -386, 247, -288,
	-342, 243, 26, 243, 36, 36, -348, -348, -348, -269,
	178, -348, -348, -348, -348, 284, 284, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, 240, -385, -136, 410, 304, 82,
	-56, 286, -39, -188, -286, 241, 242, -385, 273, -188,
	223, 240, 691, -280, 160, 16, -280, -277, 399, 397,
	384, 389, -280, -280, -280, -280, 287, 382, -343, 241,
	36, 252, 399, 287, 382, 287, 288, 287, 288, 392,
	402, 287, -302, 15, 163, 426, 387, 391, 280, 240,
	281, 242, 401, 288, -302, 90, -281, 160, 287, 399,
	393, 283, -280, -280, -308, -413, -293, -291, -289, 232,
	24, 143, 26, 28, 146, 179, 130, 20, 147, 38,
	234, 348, 251, 178, 247, 471, 227, 73, 588, 427,
	434, 425, 433, 437, 473, 474, 426, 385, 32, 14,
	590, 29, 261, 25, 39, 172, 229, 150, 591, 264,
	27, 262, 118, 121, 593, 23, 76, 256, 15, 249,
	41, 17, 594, 595, 18, 245, 244, 163, 241, 71,
	12, 222, 30, 159, 67, 596, 138, 133, 597, 598,
	599, 600, 131, 69, 160, 21, 728, 435, 436, 34,
	689, 576, 275, 174, 74, 60, 690, 144, 431, 601,
	602, 119, 603, 122, 77, 695, 140, 19, 72, 43,
	604, 276, 605, 246, 729, 606, 417, 607, 161, 230,
	470, 70, 162, 702, 608, 703, 239, 398, 9, 476,
	33, 260, 248, 129, 68, 441, 609, 240, 149, 243,
	132, 120, 8, 137, 35, 13, 75, 78, 438, 439,
	440, 58, 128, 580, 148, 16, 610, 418, 142, -381,
	691, -308, -308, 33, 92, -407, -408, -409, 580, 417,
	243, -291, -188, -85, 681, 231, -86, 687, 24, 238,
	-134, 399, -122, 179, 709, 692, 693, 694, 691, 396,
	699, 697, 695, 287, 696, 88, 140, 142, 143, 4,
	-144, 159, -198, 152, 153, 154, 155, 156, 157, 158,
	164, 163, 144, 146, 160, -243, 141, 165, 166, 167,
	168, 169, 170, 171, 173, 172, 174, 175, 161, 162,
	178, 225, 226, -152, -152, -152, -152, -213, -219, -218,
	-413, -215, -381, -290, -297, -413, -413, -152, -275, -413,
	-149, -413, -413, -413, -413, -413, -222, -144, -413, -413,
	-417, -413, -417, -417, -417, -326, -413, -326, -326, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, 223, -413, -413, -413, -413, -413, -326, -326,
	-326, -326, -326, -326, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, 103, 99,
	102, 94, -217, 105, 90, 90, 90, 90, -31, -32,
	-207, -413, -307, -395, -396, -191, -188, -413, 304, -291,
	-291, 273, 96, -232, -34, -31, -227, -233, -229, -31,
	-79, -120, -133, 64, 65, -135, 25, 39, 68, 66,
	24, -414, 89, -414, -250, -414, 88, -38, -253, 87,
	635, 665, 635, 665, 62, 44, 90, 90, 88, 22,
	-228, -230, -144, 15, -295, 4, -294, 26, -291, 90,
	223, 15, -189, 30, -188, -276, -276, 88, 91, 318,
	-266, -268, 415, 417, 152, -296, -291, 90, 32, 89,
	88, -188, -315, -318, -320, -319, -321, -316, -317, 345,
	346, 179, 349, 351, 352, 353, 354, 355, 356, 357,
	358, 359, 362, 33, 263, 341, 342, 343, 344, 363,
	364, 365, 366, 368, 369, 370, 371, 326, 347, 578,
	327, 328, 329, 330, 331, 332, 334, 335, 338, 336,
	337, 339, 340, -382, -381, 87, 89, 88, -322, 87,
	-144, -136, 240, -381, 241, 241, 241, -79, 470, -348,
	-348, -348, 271, 20, -46, -43, -374, 19, -42, -43,
	232, 123, 124, 229, 87, -337, 87, -346, -382, -381,
	87, 138, 246, 137, -345, -342, -345, -346, -381, -215,
	-381, 138, 138, -381, -381, -262, -291, -262, -262, 24,
	-262, 24, -262, 24, 96, -291, -262, 24, -262, 24,
	-262, 24, -262, 24, -262, 24, 32, 79, 80, 81,
	32, 83, 84, 85, -215, -381, -381, -215, -337, -215,
	-188, -381, -269, 96, 96, 96, -348, -348, 96, 90,
	90, 90, -348, -348, 96, 90, -299, -297, 90, 90,
	-387, 257, 301, 303, 96, 96, 96, 96, 32, 90,
	-388, 32, 716, 715, 717, 718, 719, 90, 96, 32,
	96, 32, 96, -291, 87, -188, -142, 291, 227, 229,
	232, 77, 90, 307, 308, 305, 310, 311, 312, 152,
	45, 88, 243, 240, -381, -282, 245, -282, -291, -298,
	-297, -289, -188, 243, 381, 90, -144, -344, 15, 163,
	-302, -302, -280, -188, -344, -302, -280, -188, -280, -280,
	-280, -280, -302, -302, -302, -280, -297, -297, -188, -188,
	-188, -188, -188, -188, -188, -308, -281, -280, 691, 90,
	-274, 15, 77, -308, -308, 88, 324, 418, 419, -306,
	321, -81, -291, 90, -10, -29, -18, -17, -19, 152,
	-10, 88, 580, -181, -188, 691, 691, 691, 691, 691,
	691, -144, -144, -144, -144, 603, -205, 119, 144, 120,
	121, -160, -144, -206, -211, -213, 106, 163, 146, 160,
	-243, -149, -152, -149, -149, -149, -149, -149, -149, 222,
	-149, 222, -149, -149, -149, -149, -149, -149, -309, -291,
	90, 179, -156, -155, 105, -404, -156, 577, 88, -218,
	223, -144, -144, -381, -118, 443, 444, 445, 446, 448,
	449, 450, 453, 454, 458, 459, 442, 460, 447, 452,
	455, 456, 457, 451, 344, -144, -130, -132, -130, -144,
	-144, -220, -221, 148, -215, -144, -414, -414, 96, 170,
	-126, 25, 39, -126, -126, -126, -126, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -126, -144, -119,
	442, 460, 447, 452, 455, 456, 457, 451, 344, 461,
	462, 463, 464, 465, 466, 467, 468, 469, -119, -118,
	-144, -144, -144, -144, -144, -144, -87, -144, 130, 131,
	132, -207, -144, -149, -144, -144, -144, -414, -144, -144,
	-144, -208, -207, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -380,
	-379, -378, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -207, -207, -207, -207, -207,
	-144, -414, -144, -162, -147, 96, -258, 105, 92, -144,
	-144, -144, -144, -144, -144, -131, -130, -293, -298, -289,
	-290, -130, -131, -131, -130, -130, -144, -144, -144, -144,
	-144, -144, -144, -144, -414, -144, -144, -144, -144, -144,
	-250, -414, -207, 88, -397, 417, 418, 689, -300, 276,
	-299, 26, -208, 90, 15, -260, 78, -291, -232, -232,
	64, 65, 60, -130, -135, -414, -37, 26, -252, -291,
	628, 628, 63, 90, -327, -269, 372, 373, 179, -144,
	-144, 88, -231, 28, 29, -188, -294, 170, -298, -188,
	-261, 276, -188, -166, -168, -169, -170, -191, -214, -413,
	-171, -31, 599, 596, 15, -181, -182, -190, -297, -267,
	-310, -266, 88, 416, 418, 419, 77, 122, -144, -328,
	178, -356, -355, -354, -337, -339, -340, -341, 89, -328,
	-333, 378, 377, -322, -322, -322, -322, -322, -327, -327,
	-327, -327, 87, 87, -322, -322, -322, -322, -330, 87,
	-330, -330, -331, -330, 87, -331, -332, 87, -332, -367,
	-144, -364, -363, -361, -362, 250, 101, 671, 627, 580,
	620, 661, 78, -359, -231, 96, -414, -142, -283, 245,
	-365, -362, -381, -381, -381, -283, 91, 90, 91, 90,
	91, 90, -111, -60, -1, 728, 729, 730, 88, 20,
	-338, -337, -59, 301, -370, -371, 276, -366, -360, -346,
	138, -345, -346, -346, -381, 88, 30, 127, 127, 127,
	127, 580, 229, 33, -284, 619, 144, 671, 627, -337,
	-59, 243, 243, -309, -309, -309, 90, 90, -279, 724,
	-181, -138, 293, 152, 282, 282, 240, 295, 240, 295,
	-188, 306, 309, 307, 308, 305, 310, 311, 312, 24,
	24, 24, 24, 24, 24, 294, 296, 298, 284, -188,
	-188, -282, 77, -183, -188, 27, -297, 90, 90, -188,
	-280, -280, -188, -280, -280, -188, -409, 325, -291, 359,
	682, 684, -122, 417, 88, 580, 23, -123, 23, -413,
	119, 120, 121, -206, -149, -152, -149, 143, 264, -149,
	-149, -413, -215, -414, -293, 26, 88, 78, -414, 168,
	88, 88, -414, -414, 88, 15, 88, -223, -221, 150,
	-144, -414, 88, -414, -414, -207, -144, -144, -144, -144,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-207, -414, 88, 88, 15, -313, 26, -414, -414, -414,
	-414, -414, -222, -414, 15, -414, 78, 88, 163, 88,
	-414, -414, -414, 88, 88, -414, -414, 88, -414, 88,
	-414, -414, -414, -414, -414, -414, 88, -414, 88, -414,
	-414, -414, 88, -414, 88, -414, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, -414, -414, 88, -414, 88, -414, 88,
	-414, -414, 88, -414, 88, -414, 88, -414, 88, 88,
	-414, 88, 88, 88, -414, 88, 88, 88, 88, -414,
	-414, -414, -414, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -414, -414, -414, -414, -414, -414, 88,
	-94, 604, -414, -414, 88, -414, 88, 88, 88, 88,
	88, -414, -413, 223, -414, -414, -414, -414, -414, 88,
	88, 88, 88, 88, 88, -414, -414, -414, 88, 88,
	-414, 88, -414, 88, -414, -396, 688, 418, -195, -194,
	-192, 75, 244, 76, -413, -299, -414, -156, -258, -259,
	-258, -200, -291, 96, 105, -234, -165, -167, 15, -135,
	-213, 89, 88, -327, -238, -244, -277, -291, 90, 179,
	-329, 179, -329, 372, 373, -230, 223, -196, 16, -199,
	33, 58, -29, -413, -413, 33, 88, -184, -186, -185,
	-187, 67, 71, 73, 68, 69, 70, 74, -304, 26,
	-31, -166, -31, -413, -188, -181, -415, 15, 78, -415,
	88, 223, -268, -271, 420, 417, 423, -381, 90, -110,
	88, -354, -341, -235, -139, 41, -334, 379, -327, 587,
	-327, -336, 90, -336, 96, 96, 96, 89, -49, -44,
	-45, 34, 82, -361, -348, 90, 40, -348, -348, -291,
	89, -231, -138, -188, 144, 77, -365, -365, -365, -297,
	-2, 727, 733, 138, 87, 384, 19, -252, 88, 89,
	-216, 302, 89, -112, -291, 89, 87, -346, -346, -291,
	-413, 240, 32, 32, 671, 627, 619, -59, -216, -215,
	-381, -328, 726, 725, 89, 242, 300, -143, 437, -140,
	90, 91, -188, -188, -188, -188, -188, -188, 232, 229,
	407, -405, 313, -405, 285, 243, -181, -188, 88, -84,
	259, 254, -302, -302, 34, -188, 417, 700, 698, -144,
	143, 264, -160, -152, -118, -118, -149, -311, 179, 345,
	263, 343, 339, 359, 350, 377, 341, 378, 336, 335,
	334, -311, -309, -149, -207, -132, -144, -144, -144, 151,
	-144, 149, -144, -414, -414, -414, -414, -414, -227, -144,
	-144, -144, -414, 179, 345, 15, -144, -309, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -378, -144, -207, -144, -207, -144, -144,
	-144, -144, -144, -379, -379, -379, -379, -379, -207, -207,
	-207, -207, -144, -413, -291, -97, -96, -95, 654, 244,
	-94, -162, -97, -162, 222, -144, 222, 222, 222, -144,
	-131, -293, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -192, -342, -342, -342, -262, 88, -273, 23,
	15, 58, 58, -165, -196, -166, -135, -291, -241, 681,
	-247, 47, -245, -246, 48, -242, 49, 57, -329, -329,
	170, -232, -144, -263, 77, -264, -272, -215, -210, -212,
	-211, -413, -251, -414, -291, -262, -264, -168, -169, -169,
	-168, -169, 67, 67, 67, 72, 67, 72, 67, -185,
	-297, -414, -144, -300, 78, -166, -166, -190, -297, 170,
	417, 421, 422, -354, -403, 119, 144, 32, 77, 375,
	101, -401, 178, 616, 666, 671, 627, 620, 661, -402,
	246, 137, 138, 258, 26, 42, 89, 88, 89, 88,
	89, 89, 88, -285, -284, -45, -44, -348, -348, 96,
	-381, 90, 90, 242, 27, -188, 77, 77, 77, -113,
	731, 96, 87, -3, 82, -144, 87, 20, -337, -215,
	-372, -323, -373, -324, -325, -5, -6, -349, -116, 58,
	101, -63, 45, 241, 711, 712, 127, -413, 724, -364,
	-252, -368, -370, -188, -148, -413, -159, -146, -145, -147,
	-153, 168, 169, 263, 341, 342, -216, -188, -137, 291,
	299, 87, -141, 92, -384, 78, 282, 375, 282, 375,
	90, -406, 314, 90, -406, -188, -84, -49, -188, -280,
	-280, 34, -381, -414, -160, -152, -125, 163, 580, -314,
	586, -322, -322, -322, -332, -322, 331, -322, 331, -322,
	-414, -414, -414, 88, -414, 23, -414, 88, -144, 88,
	-121, 476, 88, 88, -414, 87, 87, -144, -414, -414,
	-414, 88, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, -414, 88, -414,
	-414, -414, 88, -414, 88, -414, 88, -414, -414, -414,
	88, -312, 672, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -93, -292, -291, -94, 636, 636,
	-414, -94, -224, 88, -149, -414, -149, -149, -149, -414,
	-414, -414, 88, -414, 88, 88, -414, 88, -414, 88,
	-414, -414, -414, -414, 88, -193, 23, -193, -193, -414,
	-258, -188, -196, -225, 17, -238, 52, 351, -249, -248,
	56, 48, -246, 20, 50, 20, 31, -263, 88, 152,
	88, -414, -414, 88, 58, 223, -414, -196, -179, -178,
	77, 78, -180, 77, -178, 67, 67, -253, 88, -261,
	-166, -196, -196, 223, 119, -413, -148, 13, 90, 90,
	-381, -400, 715, 716, 32, 96, -348, -348, 138, 138,
	-188, 87, -327, 90, -327, 96, 96, 32, 83, 84,
	85, 32, 79, 80, 81, -188, -188, -188, -188, -369,
	87, 20, -144, 87, 152, 89, -252, -252, 278, 163,
	-348, 709, 284, 284, -348, -348, -348, -115, -114, 731,
	89, -414, 88, -335, 580, 583, -144, -154, -154, -253,
	89, -377, 580, -383, -291, -291, -291, -291, 96, 98,
	-414, 578, 74, 581, -414, -327, -144, -144, -144, -144,
	-232, 90, -144, -144, 96, 96, -414, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -207, -144, -414,
	-176, -175, -177, 692, 119, 32, -311, -414, -209, 276,
	-100, -99, -98, 15, -414, -144, -118, -118, -118, -118,
	-144, -144, -144, -144, -144, -144, -413, 67, 19, 17,
	-413, -413, -300, -225, -226, 18, 20, -239, 54, -237,
	53, -237, -248, 20, 20, 90, 20, 90, 138, -272,
	-144, -212, 58, -29, -291, -210, -291, -227, -144, 87,
	-144, -156, -196, -196, -144, -202, 500, 502, 503, 504,
	501, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 505, 516, 477, 478, 479, 108, 110, 109, 480,
	481, 482, 345, 528, 529, 523, 526, 527, 525, 524,
	360, 361, 483, 546, 547, 551, 550, 548, 549, 552,
	555, 556, 557, 558, 559, 560, 562, 561, 553, 554,
	531, 530, 532, 533, 534, 535, 536, 537, 539, 538,
	540, 541, 542, 543, 544, 545, 563, 564, 565, 566,
	567, 569, 568, 573, 572, 570, 571, 575, 574, 484,
	485, 111, 112, 113, 114, 115, 116, 117, 486, 489,
	487, 490, 491, 492, 497, 498, 493, 494, 495, 496,
	499, 371, 369, 370, 366, 365, 364, 424, 429, 430,
	432, 517, 518, 519, 520, 521, 522, 673, 674, 675,
	676, 677, 678, 679, 680, 90, 90, 87, -144, 89,
	89, -253, -368, -60, 89, -254, -252, 96, 89, 279,
	-211, -413, 90, -348, -348, -348, 96, 96, -299, -414,
	88, -291, -402, -370, 584, 584, -414, 26, -376, -375,
	-293, 87, 78, 63, 579, 582, -414, -414, -414, 88,
	-414, -414, -414, 89, 89, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, 88, -414, -175,
	-177, -414, 77, -156, -227, 20, -97, 301, 303, -97,
	-414, -414, -414, -414, -414, 88, -414, -414, 88, -414,
	88, -414, -414, -255, -414, -291, 246, 20, 20, -255,
	-255, -195, -226, -107, -106, -105, 610, -144, -207, -240,
	55, 77, 122, 90, 90, 90, 13, -210, 223, -232,
	-252, -173, 384, -227, -414, -252, 89, 26, 89, 733,
	138, 89, -211, -124, -413, 275, -299, 90, 90, -114,
	-117, -29, 88, 152, -252, -188, 63, -144, -207, -414,
	77, 591, 692, -92, -91, -88, 703, 729, -207, -94,
	-94, -144, -144, -144, 88, -414, -414, -414, -107, 88,
	-104, -103, -291, 77, 122, -264, -291, 89, -414, -413,
	-232, 89, -236, -29, 87, -3, 275, -323, -373, -324,
	-325, -5, -6, -349, -82, 580, -375, -353, -297, -293,
	90, 96, 89, 580, -414, -414, -90, 146, 701, 669,
	-154, 222, -414, 88, -414, 88, -414, 88, -291, 246,
	-105, 88, 26, -300, -174, -172, -291, 633, -393, -392,
	576, -403, -399, 119, 144, 101, -401, 671, 627, 128,
	129, -82, -144, 87, -414, -83, 290, 688, 223, -384,
	581, -90, 702, 647, 622, 647, 622, -149, -144, -144,
	-144, -103, -413, -414, 88, 23, -315, -62, 644, -390,
	-391, 77, -394, 390, 643, 664, 119, 90, 89, -252,
	251, -298, -377, 582, 143, -118, -414, 88, -414, 88,
	-414, -93, -172, 640, -328, -156, -391, 77, -390, 77,
	14, 13, -4, 732, 89, 292, -90, 647, 622, -144,
	-144, -414, -61, 27, -173, -389, 259, 254, 257, 33,
	-389, 96, -4, -414, -414, 644, 253, 32, 119, -156,
	-176, -175, -175,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1617, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2243, 2243, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1622, 1478, 52, 880, 0, 87, 88,
	830, 831, 832, 67, 0, 2241, 881, 1, 3, 73,
	77, 0, 0, 0, 60, 1487, 0, 80, 0, 0,
	884, 0, 0, 1600, 880, 880, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1602, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1505, 167, 1618, 1615, 1616, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 0, 1594, 0, 720, 983, 0, 876, 877,
	0, 786, 786, 0, 786, 786, 786, 786, 0, 0,
	0, 734, 0, 0, 0, 0, 783, 0, 750, 751,
	0, 783, 0, 757, 789, 0, 0, 764, 786, 786,
	767, 2244, 0, 2244, 2244, 1585, 0, 780, 778, 792,
	793, 42, 796, 799, 800, 801, 802, 805, 0, 816,
	819, 1611, 1612, 0, 821, 826, 843, 844, 0, 47,
	1133, 0, 1005, 0, 1011, -2, 1022, 1039, 1040, 1041,
	1042, 1043, 1045, 1046, 1047, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 1114, 0, 0, 0,
	0, 1974, 1451, 0, 0, 1413, 1413, 1149, 1413, 1413,
	1415, 1415, 1415, 1827, 1966, 1975, 2151, 1788, 1794, 1795,
	1796, 2097, 2098, 2099, 2100, 2188, 2189, 2193, 1890, 1783,
	2164, 2165, 0, 2240, 1927, 1935, 1936, 1960, 2061, 2174,
	1806, 1955, 2025, 1887, 1909, 1910, 2043, 2044, 1931, 1932,
	1913, 2103, 2105, 2121, 2122, 2107, 2109, 2118, 2124, 2129,
	2108, 2120, 2125, 2138, 2142, 2145, 2146, 2147, 2115, 2113,
	2126, 2130, 2132, 2134, 2140, 2143, 2116, 2114, 2127, 2131,
	2133, 2135, 2141, 2144, 2102, 2106, 2110, 2119, 2137, 2117,
	2136, 2111, 2123, 2128, 2139, 2112, 2104, 1925, 1928, 1916,
	1917, 1919, 1921, 1926, 1933, 1939, 1918, 1938, 1937, 0,
	1914, 1915, 1920, 1930, 1934, 1922, 1923, 1924, 1929, 1940,
	1981, 1980, 1979, 2024, 1951, 2023, 0, 0, 0, 0,
	0, 1778, 1832, 1833, 2148, 1335, 1336, 1337, 1338, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 1464, 1465,
	46, 1132, 1581, 1415, 1415, 1415, 1415, 1415, 1415, 1074,
	1075, 1076, 1077, 1078, 1102, 1103, 1109, 1110, 2038, 2039,
	2040, 2041, 1870, 2183, 1879, 1880, 2020, 2021, 1892, 1893,
	2214, 2215, -2, -2, -2, 234, 235, 236, 237, 238,
	239, 240, 241, 0, 1831, 2162, 2163, 230, 0, 0,
	298, 299, 295, 296, 297, 1116, 1117, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 291, 292, 2243,
	0, 853, 0, 0, 0, 0, 0, 0, 1623, 1624,
	1487, 0, 1479, 1478, 65, 0, 880, -2, 0, 0,
	0, 0, 49, 0, 54, 940, 883, 79, 78, 1527,
	1530, 0, 0, 0, 61, 1488, 69, 71, 1489, 0,
	885, 886, 0, 916, 920, 0, 0, 0, 1601, 1600,
	1600, 104, 0, 0, 105, 125, 126, 127, 0, 0,
	111, 112, 1587, 1588, 45, 0, 0, 179, 180, 0,
	43, 428, 0, 175, 0, 421, 360, 0, 1505, 0,
	0, 0, 0, 0, 880, 0, 1595, 156, 157, 164,
	165, 166, 401, 401, 401, 575, 0, 0, 167, 167,
	533, 534, 535, 0, 0, -2, 426, 0, 513, 0,
	0, 415, 415, 419, 417, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 402, 0,
	573, 574, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 0, 550, 551, 0, 0, 0, 401,
	401, 0, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 1518, 0, 0, 0,
	-2, 0, 712, 0, 0, 0, 1596, 1596, 0, 719,
	0, 0, 0, 724, 0, 0, 725, 0, 783, 783,
	781, 782, 727, 728, 729, 730, 786, 0, 0, 410,
	411, 412, 783, 786, 0, 786, 786, 786, 786, 783,
	783, 783, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2244, 789, 786, 0, 758, 0, 759, 760,
	761, 762, 765, 766, 768, 2245, 2246, 1613, 1614, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 2244,
	2244, 772, 776, 1586, 798, 804, 806, 807, 0, 0,
	817, 820, 837, 51, 1878, 825, 51, 827, 828, 829,
	855, 856, 861, 0, 0, 0, 0, 867, 868, 869,
	0, 0, 872, 873, 874, 0, 0, 0, 0, 0,
	1003, 0, 0, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1023, 1024,
	0, 0, 0, 1048, 1049, 1050, 1051, 1054, 0, 1065,
	0, 1067, 1460, -2, 0, 0, 0, 1059, 1060, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 0, 0,
	1147, 0, 1148, 1150, 1151, 1152, 0, 1153, 1154, 890,
	890, 890, 890, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 0, 0, 900, 900, 0, 0, 222, 223,
	224, 225, 226, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 300, 248, 249, 250, 1132, 0,
	0, 0, 48, 845, 846, 0, 966, 1606, 0, 0,
	896, 0, 1621, 59, 68, 70, 1487, 63, 1487, 0,
	902, 0, 0, -2, -2, 903, 909, 910, 911, 912,
	913, 56, 2242, 57, 0, 76, 0, 50, 0, 0,
	1528, 0, 1531, 0, 0, 0, 374, 1535, 0, 0,
	1480, 1481, 1484, 0, 917, 1972, 921, 0, 923, 924,
	0, 0, 102, 0, 982, 0, 0, 0, 113, 0,
	115, 116, 0, 0, 0, 385, 1589, 1590, 1591, -2,
	408, 0, 385, 369, 308, 309, 310, 360, 312, 360,
	360, 360, 360, 374, 374, 374, 374, 343, 344, 345,
	346, 347, 0, 0, 329, 360, 360, 360, 360, 350,
	351, 352, 353, 354, 355, 356, 357, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 362, 362, 362, 362,
	362, 366, 366, 0, 44, 0, 389, 0, 1484, 0,
	0, 1518, 1598, 1608, 0, 0, 0, 1598, 134, 0,
	0, 0, 576, 618, 527, 564, 577, 0, 530, 531,
	-2, 0, 0, 512, 0, 514, 0, 409, 0, -2,
	0, 419, 0, 415, 419, 416, 419, 407, 420, 554,
	555, 556, 0, 558, 559, 648, 952, 0, 0, 0,
	0, 0, 654, 655, 656, 0, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 0, 0, 0, 514, 0,
	561, 0, 0, 465, 466, 467, 0, 0, 470, 471,
	472, 473, 0, 0, 476, 477, 478, 969, 970, 479,
	480, 505, 506, 507, 481, 482, 483, 484, 485, 486,
	487, 499, 500, 501, 502, 503, 504, 488, 489, 490,
	491, 492, 493, 496, 0, 149, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 0, 0, 899, 984,
	1619, 1620, 721, 0, 0, 787, 788, 0, 413, 414,
	786, 786, 731, 773, 0, 786, 735, 774, 736, 738,
	737, 739, 752, 753, 786, 742, 784, 785, 743, 744,
	745, 746, 747, 748, 749, 769, 754, 755, 756, 790,
	0, 794, 795, 770, 771, 0, 0, 810, 811, 0,
	818, 840, 838, 839, 841, 833, 834, 835, 836, 0,
	842, 0, 0, 858, 98, 863, 864, 865, 866, 878,
	871, 1134, 1000, 1001, 1002, 0, 1004, 1008, 0, 1118,
	1120, 1010, 1006, 1012, 1129, 1130, 1131, 0, 0, 0,
	0, 0, 1016, 1020, 1025, 1026, 1027, 1028, 1029, 0,
	1030, 0, 1033, 1034, 1035, 1036, 1037, 1038, 1044, 1428,
	1429, 1430, 1063, 301, 302, 0, 1064, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1133, 0, 914, 0, 0,
	0, 1458, 1455, 0, 0, 0, 1414, 1416, 0, 0,
	0, 891, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 0, 0,
	1431, 0, 0, 0, 0, 0, 1451, 0, 1069, 1070,
	1071, 0, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 1340, 1341, 1342, 41, 0,
	0, 0, 0, 0, 0, 0, 901, 1462, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 848, 849, 851, 0, 986, 0,
	967, 0, 0, 854, 0, 895, 0, 898, 62, 64,
	907, 908, 0, 925, 904, 58, 53, 0, 0, 944,
	1529, 1532, 1533, 374, 1555, 0, 383, 383, 380, 1490,
	1491, 0, 1483, 1485, 1486, 81, 922, 918, 0, 998,
	0, 0, 981, 0, 928, 930, 931, 932, 964, 0,
	935, 936, 0, 0, 0, 0, 0, 100, 983, 106,
	0, 114, 0, 0, 119, 120, 107, 108, 109, 110,
	0, 607, -2, 460, 181, 183, 184, 185, 176, -2,
	372, 370, 371, 311, 374, 374, 337, 338, 339, 340,
	341, 342, 0, 0, 330, 331, 332, 333, 322, 0,
	323, 324, 325, 364, 0, 326, 327, 0, 328, 427,
	0, 1492, 390, 391, 393, 401, 0, 396, 397, 0,
	401, 401, 0, 422, 423, 0, 1484, 1509, 0, 0,
	0, 1609, 1608, 1608, 1608, 0, 169, 170, 171, 172,
	173, 174, 643, 0, 0, 619, 641, 642, 167, 0,
	0, 177, 516, 515, 0, 675, 0, 425, 0, 0,
	419, 419, 404, 405, 557, 0, 0, 650, 651, 652,
	653, 0, 0, 0, 543, 454, 0, 544, 545, 514,
	516, 0, 0, 385, 468, 469, 474, 475, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 593, 594, 597, 599, 518, 603, 605, 596,
	598, 600, 518, 604, 606, 1506, 1507, 1508, 0, 0,
	713, 0, 0, 451, 96, 1597, 718, 722, 723, 783,
	741, 775, 783, 733, 740, 763, 808, 809, 814, 822,
	823, 824, 862, 0, 0, 0, 0, 870, 0, 0,
	1009, 1119, 1121, 1013, 0, 1017, 1021, 0, 0, 0,
	0, 0, 1068, 1066, 1462, 0, 0, 0, 1115, 0,
	0, 0, 1137, 1138, 0, 0, 0, 0, 1456, 0,
	0, 1145, 0, 1417, 1155, 0, 0, 0, 0, 0,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1478, 1172, 0, 0, 0, 0, 0, 1177, 1178, 1179,
	1180, 1181, 0, 1183, 0, 1184, 0, 0, 0, 0,
	1191, 1192, 1194, 0, 0, 1197, 1198, 0, 1200, 0,
	1202, 1203, 1204, 1205, 1206, 1207, 0, 1209, 0, 1211,
	1212, 1213, 0, 1215, 0, 1217, 1218, 0, 1220, 0,
	1222, 0, 1225, 0, 1228, 0, 1231, 0, 1234, 0,
	1237, 0, 1240, 0, 1243, 0, 1246, 0, 1249, 0,
	1252, 0, 1255, 0, 1258, 0, 1261, 0, 1264, 0,
	1267, 0, 1270, 1271, 1272, 0, 1274, 0, 1276, 0,
	1279, 1280, 0, 1282, 0, 1285, 0, 1288, 0, 0,
	1289, 0, 0, 0, 1293, 0, 0, 0, 0, 1302,
	1303, 1304, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 1317, 1318, 1319, 1320, 1321, 0,
	1323, 0, 1097, 0, 0, 1097, 0, 0, 0, 0,
	0, 1135, 900, 0, 1418, 1419, 1420, 1421, 1422, 0,
	0, 0, 0, 0, 0, 1362, 1363, 1365, 0, 0,
	1368, 0, 1370, 0, 1580, 847, 850, 852, 938, 987,
	988, 0, 0, 0, 0, 968, 1605, 893, 894, 897,
	946, 0, 1466, 0, 0, 925, 998, 926, 0, 905,
	55, 941, 0, 1537, 1536, 1549, 1562, 383, 383, 377,
	378, 384, 379, 381, 382, 1482, 0, 1487, 0, 1573,
	0, 0, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 0, 0, 974, 0, 0, 0, 0, 965,
	936, 0, 937, 0, -2, 0, 0, 94, 95, 0,
	0, 0, 117, 118, 0, 0, 124, 386, 387, 158,
	167, 462, 182, 435, 0, 0, 307, 373, 334, 335,
	336, 0, 358, 0, 0, 0, 0, 456, 130, 1496,
	1495, 401, 401, 392, 0, 395, 0, 0, 0, 1610,
	361, 424, 0, 148, 0, 0, 0, 0, 0, 154,
	613, 0, 0, 620, 0, 0, 0, 525, 0, 536,
	537, 0, 647, -2, 709, 389, 0, 403, 406, 953,
	0, 0, 538, 0, 541, 542, 455, 516, 547, 548,
	562, 549, 497, 498, 495, 0, 0, 1519, 1520, 1525,
	1523, 1524, 135, 583, 585, 589, 584, 588, 0, 0,
	0, 520, 0, 520, 581, 0, 451, 1492, 0, 717,
	452, 453, 786, 786, 857, 99, 0, 860, 0, 0,
	0, 0, 1014, 1018, 1031, 1032, 1423, 1449, 360, 360,
	1436, 360, 366, 1439, 360, 1441, 360, 1444, 360, 1447,
	1448, 0, 0, 1061, 0, 915, 0, 0, 0, 1144,
	1459, 0, 0, 1156, 1157, 1158, 1159, 1160, 1453, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 147, 0, 0, 0, 0, 0,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1096, 0, 1098, 1099, 0, 0,
	1325, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 1463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 994, 994, 994, 0, 0, 0, 1592,
	1593, 1467, 1468, 998, 1469, 927, 906, 945, 1555, 0,
	1548, 0, -2, 1557, 0, 0, 0, 1563, 375, 376,
	919, 82, 999, 85, 0, 1573, 1582, 0, 1564, 1575,
	1577, 0, 0, 0, 1569, 0, 998, 929, 960, 962,
	0, 957, 972, 973, 975, 0, 977, 0, 979, 980,
	940, 934, 0, 102, 0, 998, 998, 101, 0, 985,
	121, 122, 123, 461, 186, 191, 0, 0, 0, 196,
	0, 198, 0, 0, 0, 203, 204, 401, 401, 436,
	0, 304, 306, 0, 0, 189, 374, 0, 374, 0,
	365, 367, 0, 437, 457, 1493, 1494, 0, 0, 394,
	398, 399, 400, 0, 1599, 150, 0, 0, 0, 616,
	0, 644, 0, 0, 0, 0, 0, 0, 178, 517,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 0,
	401, 0, 0, 0, 401, 401, 401, 0, 701, 388,
	0, 0, 672, 669, 539, 0, 220, 221, 228, 229,
	231, 0, 0, 0, 0, 0, 546, 940, 1510, 1511,
	1512, 0, 1522, 1526, 138, 0, 0, 0, 0, 591,
	595, 601, 0, 519, 602, 714, 715, 716, 97, 726,
	732, 859, 879, 1007, 1015, 1019, 0, 0, 0, 0,
	1450, 1434, 374, 1437, 1438, 1440, 1442, 1443, 1445, 1446,
	1057, 1058, 1062, 0, 1141, 0, 1143, 0, 1457, 0,
	1487, 0, 0, 0, 1175, 0, 0, 0, 1186, 1185,
	1187, 0, 1189, 1190, 1195, 1196, 1199, 1201, 1208, 1210,
	1214, 1216, 1219, 1221, 1223, 0, 1226, 0, 1229, 0,
	1232, 0, 1235, 0, 1238, 0, 1241, 0, 1244, 0,
	1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259, 0,
	1262, 0, 1265, 0, 1268, 0, 1273, 1275, 0, 1278,
	1281, 1283, 0, 1286, 0, 1290, 0, 1292, 1294, 1295,
	0, 0, 0, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1322, 0, 1090, 1093, 1324, 1100, 1101,
	1106, 1327, 0, 0, 0, 1330, 0, 0, 0, 1334,
	1136, 1345, 0, 1350, 0, 0, 1356, 0, 1360, 0,
	1366, 1367, 1369, 1371, 0, 0, 0, 0, 0, 966,
	947, 66, 1469, 1471, 0, 1542, 1540, 1540, 1550, 1551,
	0, 0, 1558, 0, 0, 0, 0, 86, 0, 0,
	0, 1578, 0, 0, 0, 0, 103, 1478, 954, 961,
	0, 0, 955, 0, 956, 976, 978, 933, 0, 998,
	998, 92, 93, 0, 192, 0, 194, 0, 197, 199,
	200, 201, 207, 208, 209, 202, 0, 0, 303, 305,
	0, 0, 348, 359, 349, 0, 0, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 940, 151, 152, 153, 608,
	0, 618, 0, 942, 0, 611, 0, 528, 0, 0,
	0, 401, 401, 401, 0, 0, 0, 0, 686, 0,
	0, 649, 0, 657, 0, 0, 0, 232, 233, 0,
	1521, 582, 0, 136, 137, 0, 0, 587, 521, 522,
	1055, 0, 0, 0, 1056, 1435, 0, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 638, 639, 0, 1374, 1095, 1478, 0,
	1097, 1107, 1108, 0, 1097, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 986, 1471, 1476, 0, 0, 1545, 0, 1538,
	1541, 1539, 1552, 0, 0, 1559, 0, 1561, 0, 1583,
	1584, 1576, 0, 1568, 1571, 1567, 1570, 1487, 958, 0,
	963, 0, 1478, 91, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 206, 0, 0, 363,
	368, 0, 0, 0, 609, 0, 943, 621, 612, 0,
	699, 0, 703, 0, 0, 0, 706, 707, 708, 685,
	0, 689, 429, 673, 670, 671, 540, 0, 139, 140,
	0, 0, 0, 1424, 0, 1427, 1139, 1142, 1140, 0,
	1171, 1173, 1174, 1432, 1433, 1188, 1224, 1227, 1230, 1233,
	1236, 1239, 1242, 1245, 1248, 1251, 1254, 1257, 1260, 1263,
	1266, 1269, 1277, 1284, 1287, 1291, 1296, 0, 1299, 0,
	0, 1300, 0, 640, 1086, 0, 0, 1104, 1105, 0,
	1329, 1331, 1332, 1333, 1346, 0, 1351, 1352, 0, 1357,
	0, 1361, 1372, 0, 991, 948, 949, 996, 997, 0,
	0, 939, 1476, 84, 1477, 1474, 0, 1472, 1470, 1534,
	0, 1543, 1544, 1553, 1554, 1560, 0, 1566, 0, 89,
	0, 0, 0, 1487, 193, 0, 212, 0, 617, 0,
	620, 610, 697, 698, 0, 710, 702, 704, 705, 687,
	-2, 1513, 0, 0, 0, 590, 1425, 0, 0, 1301,
	0, 636, 637, 1094, 1087, 0, 1072, 1073, 1091, 1326,
	1328, 0, 0, 0, 0, 990, 992, 993, 83, 0,
	1473, 1112, 0, 1546, 1547, 1574, 1572, 959, 966, 0,
	90, 442, 435, 1513, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 579, 1515, 141, 142, 0, 509,
	510, 511, 135, 0, 1146, 1297, 1088, 0, 0, 0,
	0, 0, 1347, 0, 1353, 0, 1358, 0, 950, 951,
	1475, 0, 0, 622, 0, 624, 0, -2, 430, 443,
	0, 187, 213, 214, 0, 0, 217, 218, 219, 210,
	211, 131, 0, 0, 711, 0, 1516, 1517, 0, 138,
	0, 0, 1079, 1080, 1081, 1082, 1084, 0, 0, 0,
	0, 1113, 1092, 623, 0, 0, 385, 0, 633, 431,
	432, 0, 438, 439, 440, 441, 215, 216, 645, 0,
	0, 508, 586, 1426, 0, 0, 1348, 0, 1354, 0,
	1359, 0, 625, 626, 634, 0, 433, 0, 434, 0,
	0, 0, 614, 0, 645, 1514, 1089, 1083, 1085, 0,
	0, 1111, 0, 635, 631, 444, 446, 447, 0, 0,
	445, 646, 615, 1349, 1355, 0, 448, 449, 450, 627,
	628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 223, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 734,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:887
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:935
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:939
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:973
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:983
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1006
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1018
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1028
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1032
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1046
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1070
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1080
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1084
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1112
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1116
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1126
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1132
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1183
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1188
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1194
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1214
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1220
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1236
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1243
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1272
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1279
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1290
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1301
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1343
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1353
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1373
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1377
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1383
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1393
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1398
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1431
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1440
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1916
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1954
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2215
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2244
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2254
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2326
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2349
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2358
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2364
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2378
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2383
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2419
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2423
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2502
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2512
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2516
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2522
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2526
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2532
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2542
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2548
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2552
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2579
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2585
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2591
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2614
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2626
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2661
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2683
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2689
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2703
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2901
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2919
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2932
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2936
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2940
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3096
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3148
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3348
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3420
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3432
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3441
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3456
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3470
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3474
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3480
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3486
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3492
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3502
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3518
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3524
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3530
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3560
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3566
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3570
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3580
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3584
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3589
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3598
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3602
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3711
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3726
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3772
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3778
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3784
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3794
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3799
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3842
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3849
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3856
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3874
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3880
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3886
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3892
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3898
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3904
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3916
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3938
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3942
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4224
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4228
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4262
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4266
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4373
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4377
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4384
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4416
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4425
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4429
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4433
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4437
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4442
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4446
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4450
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4454
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4478
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4537
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4547
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4553
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4557
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4561
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4565
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4690
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4750
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4754
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4773
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4779
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4783
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4792
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4797
		{
			yyVAL.strs = nil
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4813
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = SQLCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = DistinctStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = StraightJoinHint
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4849
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4859
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4863
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4867
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4871
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4876
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4884
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4896
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4900
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4906
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4912
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4926
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4930
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4934
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4938
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4944
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4948
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4954
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4958
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4967
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4976
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4982
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4992
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4996
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5002
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5006
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5010
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5014
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5020
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5037
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5041
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5045
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5049
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5055
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5057
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5061
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5067
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5072
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5077
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5098
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5102
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5106
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5112
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5122
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5126
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5130
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5136
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5140
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5150
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5164
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5179
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5185
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5189
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5195
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5199
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5203
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5207
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5212
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5216
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5220
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5224
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5516
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5520
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5526
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5536
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5540
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5544
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5550
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5554
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5561
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5565
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5569
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5573
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5577
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5583
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5587
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5591
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5595
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5599
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5603
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5607
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5616
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5622
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5626
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5635
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5640
		{
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5643
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5649
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5655
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5659
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5671
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5677
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5681
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5687
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5691
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5697
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5701
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5713
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5719
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5723
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5729
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5735
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = ""
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5755
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5759
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5766
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5770
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5774
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5778
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5784
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5788
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5792
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5796
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5800
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5804
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5808
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5814
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5818
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5822
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5829
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5835
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5839
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6825
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6831
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6835
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6839
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6843
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6847
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6851
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6855
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6859
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6863
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6867
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6871
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6875
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6879
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6883
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6913
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6917
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6921
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6925
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6929
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6933
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6937
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6941
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6945
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6949
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6953
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6957
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6991
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6995
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6999
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7017
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7021
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7025
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7031
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7035
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7039
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7043
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7047
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7053
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7057
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7071
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7075
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7085
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7115
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7119
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7123
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7127
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7131
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7135
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7145
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7149
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7158
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7163
		{
			yyVAL.str = string("")
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7167
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7173
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7177
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7183
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7192
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7198
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7202
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7206
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7210
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7226
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7235
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7248
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7257
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7263
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7269
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7273
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7282
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7291
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7297
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7303
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7307
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7313
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7318
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7322
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7326
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7335
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7341
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7345
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7349
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7358
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7362
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7366
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7370
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7377
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7381
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7385
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7389
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7395
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7399
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7403
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7407
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7412
		{
			yyVAL.str = ""
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7429
		{
			yyVAL.str = ""
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7433
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7448
		{
			yyVAL.str = ""
		}
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7452
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7457
		{
			yyVAL.str = "cascaded"
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7474
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7480
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7486
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7492
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7505
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7510
		{
			yyVAL.str = ""
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7520
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7524
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7528
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7532
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7536
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7540
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7544
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7550
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7554
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7558
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = ""
		}
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = " header"
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7585
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = " manifest on"
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = " manifest off"
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = ""
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7602
		{
			yyVAL.str = " overwrite on"
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = " overwrite off"
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7617
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = ""
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = ""
		}
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = " optionally"
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7696
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7700
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7704
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7708
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7712
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7718
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7722
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7726
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7730
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7739
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7745
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7749
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7755
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7759
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7765
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7769
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7774
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7784
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7788
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7794
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7801
		{
			yyVAL.str = "charset"
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7811
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7815
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7819
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7828
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7830
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7833
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7835
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7838
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7840
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7843
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7848
		{
			yyVAL.empty = struct{}{}
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7850
		{
			yyVAL.empty = struct{}{}
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7852
		{
			yyVAL.empty = struct{}{}
		}
	case 1605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7856
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7865
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7872
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7876
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7882
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7886
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7893
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7899
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7909
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7913
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7920
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7926
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7932
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7936
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7940
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8585
		{
		}
	case 2242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8590
		{
		}
	case 2243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8594
		{
			skipToEnd(yylex)
		}
	case 2244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8599
		{
			skipToEnd(yylex)
		}
	case 2245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8603
		{
			skipToEnd(yylex)
		}
	case 2246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8607
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
