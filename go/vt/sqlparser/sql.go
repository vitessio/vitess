// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const JSON_PRETTY = 57445
const JSON_STORAGE_SIZE = 57446
const JSON_STORAGE_FREE = 57447
const JSON_CONTAINS = 57448
const JSON_CONTAINS_PATH = 57449
const JSON_EXTRACT = 57450
const JSON_KEYS = 57451
const JSON_OVERLAPS = 57452
const JSON_SEARCH = 57453
const JSON_VALUE = 57454
const EXTRACT = 57455
const NULL = 57456
const TRUE = 57457
const FALSE = 57458
const OFF = 57459
const DISCARD = 57460
const IMPORT = 57461
const ENABLE = 57462
const DISABLE = 57463
const TABLESPACE = 57464
const VIRTUAL = 57465
const STORED = 57466
const BOTH = 57467
const LEADING = 57468
const TRAILING = 57469
const EMPTY_FROM_CLAUSE = 57470
const LOWER_THAN_CHARSET = 57471
const CHARSET = 57472
const UNIQUE = 57473
const KEY = 57474
const EXPRESSION_PREC_SETTER = 57475
const OR = 57476
const XOR = 57477
const AND = 57478
const NOT = 57479
const BETWEEN = 57480
const CASE = 57481
const WHEN = 57482
const THEN = 57483
const ELSE = 57484
const END = 57485
const LE = 57486
const GE = 57487
const NE = 57488
const NULL_SAFE_EQUAL = 57489
const IS = 57490
const LIKE = 57491
const REGEXP = 57492
const RLIKE = 57493
const IN = 57494
const SHIFT_LEFT = 57495
const SHIFT_RIGHT = 57496
const DIV = 57497
const MOD = 57498
const UNARY = 57499
const COLLATE = 57500
const BINARY = 57501
const UNDERSCORE_ARMSCII8 = 57502
const UNDERSCORE_ASCII = 57503
const UNDERSCORE_BIG5 = 57504
const UNDERSCORE_BINARY = 57505
const UNDERSCORE_CP1250 = 57506
const UNDERSCORE_CP1251 = 57507
const UNDERSCORE_CP1256 = 57508
const UNDERSCORE_CP1257 = 57509
const UNDERSCORE_CP850 = 57510
const UNDERSCORE_CP852 = 57511
const UNDERSCORE_CP866 = 57512
const UNDERSCORE_CP932 = 57513
const UNDERSCORE_DEC8 = 57514
const UNDERSCORE_EUCJPMS = 57515
const UNDERSCORE_EUCKR = 57516
const UNDERSCORE_GB18030 = 57517
const UNDERSCORE_GB2312 = 57518
const UNDERSCORE_GBK = 57519
const UNDERSCORE_GEOSTD8 = 57520
const UNDERSCORE_GREEK = 57521
const UNDERSCORE_HEBREW = 57522
const UNDERSCORE_HP8 = 57523
const UNDERSCORE_KEYBCS2 = 57524
const UNDERSCORE_KOI8R = 57525
const UNDERSCORE_KOI8U = 57526
const UNDERSCORE_LATIN1 = 57527
const UNDERSCORE_LATIN2 = 57528
const UNDERSCORE_LATIN5 = 57529
const UNDERSCORE_LATIN7 = 57530
const UNDERSCORE_MACCE = 57531
const UNDERSCORE_MACROMAN = 57532
const UNDERSCORE_SJIS = 57533
const UNDERSCORE_SWE7 = 57534
const UNDERSCORE_TIS620 = 57535
const UNDERSCORE_UCS2 = 57536
const UNDERSCORE_UJIS = 57537
const UNDERSCORE_UTF16 = 57538
const UNDERSCORE_UTF16LE = 57539
const UNDERSCORE_UTF32 = 57540
const UNDERSCORE_UTF8 = 57541
const UNDERSCORE_UTF8MB4 = 57542
const UNDERSCORE_UTF8MB3 = 57543
const INTERVAL = 57544
const WINDOW_EXPR = 57545
const JSON_EXTRACT_OP = 57546
const JSON_UNQUOTE_EXTRACT_OP = 57547
const CREATE = 57548
const ALTER = 57549
const DROP = 57550
const RENAME = 57551
const ANALYZE = 57552
const ADD = 57553
const FLUSH = 57554
const CHANGE = 57555
const MODIFY = 57556
const DEALLOCATE = 57557
const REVERT = 57558
const SCHEMA = 57559
const TABLE = 57560
const INDEX = 57561
const VIEW = 57562
const TO = 57563
const IGNORE = 57564
const IF = 57565
const PRIMARY = 57566
const COLUMN = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const KEY_BLOCK_SIZE = 57570
const CHECK = 57571
const INDEXES = 57572
const ACTION = 57573
const CASCADE = 57574
const CONSTRAINT = 57575
const FOREIGN = 57576
const NO = 57577
const REFERENCES = 57578
const RESTRICT = 57579
const SHOW = 57580
const DESCRIBE = 57581
const EXPLAIN = 57582
const DATE = 57583
const ESCAPE = 57584
const REPAIR = 57585
const OPTIMIZE = 57586
const TRUNCATE = 57587
const COALESCE = 57588
const EXCHANGE = 57589
const REBUILD = 57590
const PARTITIONING = 57591
const REMOVE = 57592
const PREPARE = 57593
const EXECUTE = 57594
const MAXVALUE = 57595
const PARTITION = 57596
const REORGANIZE = 57597
const LESS = 57598
const THAN = 57599
const PROCEDURE = 57600
const TRIGGER = 57601
const VINDEX = 57602
const VINDEXES = 57603
const DIRECTORY = 57604
const NAME = 57605
const UPGRADE = 57606
const STATUS = 57607
const VARIABLES = 57608
const WARNINGS = 57609
const CASCADED = 57610
const DEFINER = 57611
const OPTION = 57612
const SQL = 57613
const UNDEFINED = 57614
const SEQUENCE = 57615
const MERGE = 57616
const TEMPORARY = 57617
const TEMPTABLE = 57618
const INVOKER = 57619
const SECURITY = 57620
const FIRST = 57621
const AFTER = 57622
const LAST = 57623
const VITESS_MIGRATION = 57624
const CANCEL = 57625
const RETRY = 57626
const LAUNCH = 57627
const COMPLETE = 57628
const CLEANUP = 57629
const THROTTLE = 57630
const UNTHROTTLE = 57631
const EXPIRE = 57632
const RATIO = 57633
const BEGIN = 57634
const START = 57635
const TRANSACTION = 57636
const COMMIT = 57637
const ROLLBACK = 57638
const SAVEPOINT = 57639
const RELEASE = 57640
const WORK = 57641
const BIT = 57642
const TINYINT = 57643
const SMALLINT = 57644
const MEDIUMINT = 57645
const INT = 57646
const INTEGER = 57647
const BIGINT = 57648
const INTNUM = 57649
const REAL = 57650
const DOUBLE = 57651
const FLOAT_TYPE = 57652
const DECIMAL_TYPE = 57653
const NUMERIC = 57654
const TIME = 57655
const TIMESTAMP = 57656
const DATETIME = 57657
const YEAR = 57658
const CHAR = 57659
const VARCHAR = 57660
const BOOL = 57661
const CHARACTER = 57662
const VARBINARY = 57663
const NCHAR = 57664
const TEXT = 57665
const TINYTEXT = 57666
const MEDIUMTEXT = 57667
const LONGTEXT = 57668
const BLOB = 57669
const TINYBLOB = 57670
const MEDIUMBLOB = 57671
const LONGBLOB = 57672
const JSON = 57673
const JSON_SCHEMA_VALID = 57674
const JSON_SCHEMA_VALIDATION_REPORT = 57675
const ENUM = 57676
const GEOMETRY = 57677
const POINT = 57678
const LINESTRING = 57679
const POLYGON = 57680
const GEOMCOLLECTION = 57681
const GEOMETRYCOLLECTION = 57682
const MULTIPOINT = 57683
const MULTILINESTRING = 57684
const MULTIPOLYGON = 57685
const ASCII = 57686
const UNICODE = 57687
const NULLX = 57688
const AUTO_INCREMENT = 57689
const APPROXNUM = 57690
const SIGNED = 57691
const UNSIGNED = 57692
const ZEROFILL = 57693
const CODE = 57694
const COLLATION = 57695
const COLUMNS = 57696
const DATABASES = 57697
const ENGINES = 57698
const EVENT = 57699
const EXTENDED = 57700
const FIELDS = 57701
const FULL = 57702
const FUNCTION = 57703
const GTID_EXECUTED = 57704
const KEYSPACES = 57705
const OPEN = 57706
const PLUGINS = 57707
const PRIVILEGES = 57708
const PROCESSLIST = 57709
const SCHEMAS = 57710
const TABLES = 57711
const TRIGGERS = 57712
const USER = 57713
const VGTID_EXECUTED = 57714
const VITESS_KEYSPACES = 57715
const VITESS_METADATA = 57716
const VITESS_MIGRATIONS = 57717
const VITESS_REPLICATION_STATUS = 57718
const VITESS_SHARDS = 57719
const VITESS_TABLETS = 57720
const VITESS_TARGET = 57721
const VSCHEMA = 57722
const VITESS_THROTTLED_APPS = 57723
const NAMES = 57724
const GLOBAL = 57725
const SESSION = 57726
const ISOLATION = 57727
const LEVEL = 57728
const READ = 57729
const WRITE = 57730
const ONLY = 57731
const REPEATABLE = 57732
const COMMITTED = 57733
const UNCOMMITTED = 57734
const SERIALIZABLE = 57735
const CURRENT_TIMESTAMP = 57736
const DATABASE = 57737
const CURRENT_DATE = 57738
const NOW = 57739
const CURRENT_TIME = 57740
const LOCALTIME = 57741
const LOCALTIMESTAMP = 57742
const CURRENT_USER = 57743
const UTC_DATE = 57744
const UTC_TIME = 57745
const UTC_TIMESTAMP = 57746
const DAY = 57747
const DAY_HOUR = 57748
const DAY_MICROSECOND = 57749
const DAY_MINUTE = 57750
const DAY_SECOND = 57751
const HOUR = 57752
const HOUR_MICROSECOND = 57753
const HOUR_MINUTE = 57754
const HOUR_SECOND = 57755
const MICROSECOND = 57756
const MINUTE = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const MONTH = 57760
const QUARTER = 57761
const SECOND = 57762
const SECOND_MICROSECOND = 57763
const YEAR_MONTH = 57764
const WEEK = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const SEPARATOR = 57771
const TIMESTAMPADD = 57772
const TIMESTAMPDIFF = 57773
const WEIGHT_STRING = 57774
const LTRIM = 57775
const RTRIM = 57776
const TRIM = 57777
const JSON_ARRAY = 57778
const JSON_OBJECT = 57779
const JSON_QUOTE = 57780
const JSON_DEPTH = 57781
const JSON_TYPE = 57782
const JSON_LENGTH = 57783
const JSON_VALID = 57784
const JSON_ARRAY_APPEND = 57785
const JSON_ARRAY_INSERT = 57786
const JSON_INSERT = 57787
const JSON_MERGE = 57788
const JSON_MERGE_PATCH = 57789
const JSON_MERGE_PRESERVE = 57790
const JSON_REMOVE = 57791
const JSON_REPLACE = 57792
const JSON_SET = 57793
const JSON_UNQUOTE = 57794
const COUNT = 57795
const AVG = 57796
const MAX = 57797
const MIN = 57798
const SUM = 57799
const GROUP_CONCAT = 57800
const BIT_AND = 57801
const BIT_OR = 57802
const BIT_XOR = 57803
const STD = 57804
const STDDEV = 57805
const STDDEV_POP = 57806
const STDDEV_SAMP = 57807
const VAR_POP = 57808
const VAR_SAMP = 57809
const VARIANCE = 57810
const REGEXP_INSTR = 57811
const REGEXP_LIKE = 57812
const REGEXP_REPLACE = 57813
const REGEXP_SUBSTR = 57814
const ExtractValue = 57815
const UpdateXML = 57816
const GET_LOCK = 57817
const RELEASE_LOCK = 57818
const RELEASE_ALL_LOCKS = 57819
const IS_FREE_LOCK = 57820
const IS_USED_LOCK = 57821
const LOCATE = 57822
const POSITION = 57823
const MATCH = 57824
const AGAINST = 57825
const BOOLEAN = 57826
const LANGUAGE = 57827
const WITH = 57828
const QUERY = 57829
const EXPANSION = 57830
const WITHOUT = 57831
const VALIDATION = 57832
const UNUSED = 57833
const ARRAY = 57834
const BYTE = 57835
const CUME_DIST = 57836
const DESCRIPTION = 57837
const DENSE_RANK = 57838
const EMPTY = 57839
const EXCEPT = 57840
const FIRST_VALUE = 57841
const GROUPING = 57842
const GROUPS = 57843
const JSON_TABLE = 57844
const LAG = 57845
const LAST_VALUE = 57846
const LATERAL = 57847
const LEAD = 57848
const NTH_VALUE = 57849
const NTILE = 57850
const OF = 57851
const OVER = 57852
const PERCENT_RANK = 57853
const RANK = 57854
const RECURSIVE = 57855
const ROW_NUMBER = 57856
const SYSTEM = 57857
const WINDOW = 57858
const ACTIVE = 57859
const ADMIN = 57860
const AUTOEXTEND_SIZE = 57861
const BUCKETS = 57862
const CLONE = 57863
const COLUMN_FORMAT = 57864
const COMPONENT = 57865
const DEFINITION = 57866
const ENFORCED = 57867
const ENGINE_ATTRIBUTE = 57868
const EXCLUDE = 57869
const FOLLOWING = 57870
const GET_MASTER_PUBLIC_KEY = 57871
const HISTOGRAM = 57872
const HISTORY = 57873
const INACTIVE = 57874
const INVISIBLE = 57875
const LOCKED = 57876
const MASTER_COMPRESSION_ALGORITHMS = 57877
const MASTER_PUBLIC_KEY_PATH = 57878
const MASTER_TLS_CIPHERSUITES = 57879
const MASTER_ZSTD_COMPRESSION_LEVEL = 57880
const NESTED = 57881
const NETWORK_NAMESPACE = 57882
const NOWAIT = 57883
const NULLS = 57884
const OJ = 57885
const OLD = 57886
const OPTIONAL = 57887
const ORDINALITY = 57888
const ORGANIZATION = 57889
const OTHERS = 57890
const PARTIAL = 57891
const PATH = 57892
const PERSIST = 57893
const PERSIST_ONLY = 57894
const PRECEDING = 57895
const PRIVILEGE_CHECKS_USER = 57896
const PROCESS = 57897
const RANDOM = 57898
const REFERENCE = 57899
const REQUIRE_ROW_FORMAT = 57900
const RESOURCE = 57901
const RESPECT = 57902
const RESTART = 57903
const RETAIN = 57904
const REUSE = 57905
const ROLE = 57906
const SECONDARY = 57907
const SECONDARY_ENGINE = 57908
const SECONDARY_ENGINE_ATTRIBUTE = 57909
const SECONDARY_LOAD = 57910
const SECONDARY_UNLOAD = 57911
const SIMPLE = 57912
const SKIP = 57913
const SRID = 57914
const THREAD_PRIORITY = 57915
const TIES = 57916
const UNBOUNDED = 57917
const VCPU = 57918
const VISIBLE = 57919
const RETURNING = 57920
const FORMAT_BYTES = 57921
const FORMAT_PICO_TIME = 57922
const PS_CURRENT_THREAD_ID = 57923
const PS_THREAD_ID = 57924
const GTID_SUBSET = 57925
const GTID_SUBTRACT = 57926
const WAIT_FOR_EXECUTED_GTID_SET = 57927
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57928
const FORMAT = 57929
const TREE = 57930
const VITESS = 57931
const TRADITIONAL = 57932
const VTEXPLAIN = 57933
const LOCAL = 57934
const LOW_PRIORITY = 57935
const NO_WRITE_TO_BINLOG = 57936
const LOGS = 57937
const ERROR = 57938
const GENERAL = 57939
const HOSTS = 57940
const OPTIMIZER_COSTS = 57941
const USER_RESOURCES = 57942
const SLOW = 57943
const CHANNEL = 57944
const RELAY = 57945
const EXPORT = 57946
const CURRENT = 57947
const ROW = 57948
const ROWS = 57949
const AVG_ROW_LENGTH = 57950
const CONNECTION = 57951
const CHECKSUM = 57952
const DELAY_KEY_WRITE = 57953
const ENCRYPTION = 57954
const ENGINE = 57955
const INSERT_METHOD = 57956
const MAX_ROWS = 57957
const MIN_ROWS = 57958
const PACK_KEYS = 57959
const PASSWORD = 57960
const FIXED = 57961
const DYNAMIC = 57962
const COMPRESSED = 57963
const REDUNDANT = 57964
const COMPACT = 57965
const ROW_FORMAT = 57966
const STATS_AUTO_RECALC = 57967
const STATS_PERSISTENT = 57968
const STATS_SAMPLE_PAGES = 57969
const STORAGE = 57970
const MEMORY = 57971
const DISK = 57972
const PARTITIONS = 57973
const LINEAR = 57974
const RANGE = 57975
const LIST = 57976
const SUBPARTITION = 57977
const SUBPARTITIONS = 57978
const HASH = 57979

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	12, 48,
	13, 48,
	-2, 37,
	-1, 49,
	1, 147,
	655, 147,
	-2, 155,
	-1, 50,
	133, 155,
	174, 155,
	337, 155,
	-2, 502,
	-1, 57,
	35, 748,
	236, 748,
	247, 748,
	282, 762,
	283, 762,
	-2, 750,
	-1, 62,
	238, 779,
	-2, 777,
	-1, 116,
	235, 1431,
	-2, 121,
	-1, 118,
	1, 148,
	655, 148,
	-2, 155,
	-1, 129,
	134, 388,
	241, 388,
	-2, 491,
	-1, 148,
	133, 155,
	174, 155,
	337, 155,
	-2, 511,
	-1, 763,
	86, 1448,
	-2, 1295,
	-1, 764,
	86, 1449,
	219, 1453,
	-2, 1296,
	-1, 797,
	219, 1452,
	-2, 39,
	-1, 874,
	59, 848,
	-2, 863,
	-1, 960,
	246, 40,
	251, 40,
	-2, 399,
	-1, 1045,
	1, 559,
	655, 559,
	-2, 155,
	-1, 1334,
	219, 1453,
	-2, 1296,
	-1, 1479,
	59, 849,
	-2, 868,
	-1, 1480,
	59, 850,
	-2, 869,
	-1, 1531,
	133, 155,
	174, 155,
	337, 155,
	-2, 438,
	-1, 1610,
	134, 388,
	241, 388,
	-2, 491,
	-1, 1619,
	246, 41,
	251, 41,
	-2, 400,
	-1, 1973,
	219, 1457,
	-2, 1451,
	-1, 1974,
	219, 1453,
	-2, 1449,
	-1, 2073,
	133, 155,
	174, 155,
	337, 155,
	-2, 439,
	-1, 2080,
	25, 176,
	-2, 178,
	-1, 2443,
	77, 95,
	87, 95,
	-2, 925,
	-1, 2511,
	630, 675,
	-2, 649,
	-1, 2678,
	49, 1390,
	-2, 1384,
	-1, 2973,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 897,
	-1, 3331,
	630, 675,
	-2, 663,
	-1, 3419,
	22, 1808,
	32, 1808,
	175, 1808,
	258, 1808,
	317, 1808,
	318, 1808,
	319, 1808,
	320, 1808,
	321, 1808,
	322, 1808,
	323, 1808,
	325, 1808,
	326, 1808,
	327, 1808,
	328, 1808,
	329, 1808,
	330, 1808,
	331, 1808,
	332, 1808,
	333, 1808,
	334, 1808,
	335, 1808,
	336, 1808,
	338, 1808,
	340, 1808,
	341, 1808,
	342, 1808,
	343, 1808,
	344, 1808,
	345, 1808,
	346, 1808,
	347, 1808,
	348, 1808,
	351, 1808,
	352, 1808,
	353, 1808,
	354, 1808,
	355, 1808,
	357, 1808,
	358, 1808,
	359, 1808,
	360, 1808,
	501, 1808,
	-2, 607,
}

const yyPrivate = 57344

const yyLast = 48693

var yyAct = [...]int{
	1487, 806, 3080, 3081, 798, 1840, 3079, 3490, 3501, 3312,
	799, 671, 3396, 3459, 2070, 3417, 3460, 2022, 3362, 2905,
	3050, 2827, 3385, 1534, 2733, 2740, 2002, 3296, 3244, 651,
	767, 2790, 2795, 39, 2792, 2791, 2789, 2794, 2793, 2781,
	1108, 5, 3294, 2691, 3037, 3109, 2694, 2341, 2004, 3284,
	890, 657, 2375, 2637, 867, 2748, 768, 653, 2140, 1494,
	2692, 2810, 2695, 2944, 2414, 3114, 2938, 1457, 2809, 2572,
	681, 761, 762, 2042, 2026, 2812, 2964, 2437, 2689, 2679,
	2401, 1964, 2930, 2103, 2476, 2833, 649, 2556, 2128, 2108,
	2477, 1588, 2508, 922, 992, 2478, 2171, 157, 2058, 38,
	2426, 2046, 891, 1110, 869, 2047, 40, 2407, 1481, 2393,
	871, 2377, 875, 1969, 1961, 1935, 1855, 1836, 650, 1794,
	1086, 2548, 2127, 2149, 1617, 143, 2034, 2110, 2470, 955,
	968, 893, 2188, 1523, 2445, 950, 1503, 645, 2049, 94,
	1635, 1461, 98, 1346, 99, 1934, 663, 1859, 1813, 1057,
	1738, 1274, 1624, 929, 1734, 958, 926, 2125, 961, 930,
	1716, 2099, 956, 957, 1522, 881, 908, 1508, 910, 1970,
	2027, 658, 1931, 1463, 1868, 1330, 1306, 1106, 10, 101,
	878, 876, 9, 79, 8, 1100, 1743, 1583, 877, 161,
	1609, 121, 119, 120, 903, 126, 127, 879, 1041, 1350,
	78, 87, 3321, 2501, 92, 100, 1994, 3491, 2142, 2143,
	2144, 1354, 3038, 2778, 2142, 2499, 3347, 2531, 2530, 2186,
	1701, 640, 898, 902, 3030, 2993, 3443, 2564, 587, 584,
	1275, 2565, 3342, 884, 3343, 89, 3084, 89, 2229, 122,
	994, 128, 3348, 923, 1801, 93, 997, 862, 2, 1800,
	812, 813, 814, 1011, 1012, 1013, 626, 1016, 1017, 1018,
	1019, 972, 2800, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	870, 918, 917, 1005, 868, 89, 971, 1799, 928, 641,
	105, 106, 107, 947, 110, 620, 626, 116, 3397, 1816,
	185, 885, 892, 582, 1798, 998, 1001, 1002, 122, 184,
	946, 945, 944, 3084, 639, 1999, 2000, 812, 813, 814,
	2798, 1797, 3083, 863, 864, 865, 866, 1796, 1275, 874,
	3438, 3343, 1014, 123, 1774, 145, 948, 1285, 2373, 643,
	620, 644, 2675, 2804, 2175, 3463, 166, 916, 765, 766,
	2800, 1291, 2521, 3447, 3445, 2641, 3511, 905, 906, 2403,
	3458, 3481, 2910, 2797, 939, 934, 2909, 916, 765, 766,
	1488, 2524, 3297, 3403, 2173, 2342, 122, 156, 3446, 3444,
	1806, 2119, 617, 144, 2852, 3240, 3239, 3043, 2174, 996,
	3044, 620, 89, 995, 80, 80, 3472, 80, 3250, 3083,
	3441, 3062, 2238, 3051, 163, 620, 2113, 164, 2798, 3386,
	80, 620, 3393, 82, 3061, 2168, 3249, 1845, 2417, 3326,
	3422, 2872, 1598, 132, 133, 155, 154, 183, 2730, 2731,
	603, 2804, 2539, 1307, 2374, 1285, 2538, 1524, 1281, 1525,
	3403, 1273, 601, 2418, 3127, 2729, 943, 2030, 1050, 1051,
	2064, 2065, 2066, 2563, 2801, 2849, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1316, 1315, 1317, 1318, 2236, 2454, 2235,
	2547, 2453, 89, 89, 2455, 89, 1076, 861, 3427, 1093,
	1053, 1095, 598, 860, 1288, 1064, 1289, 1290, 89, 3313,
	1065, 612, 2466, 3425, 2829, 2230, 2231, 2233, 2232, 621,
	2502, 2941, 3431, 3432, 941, 1103, 608, 2083, 2082, 2860,
	2750, 2751, 620, 1081, 1082, 2410, 2411, 3426, 2858, 1092,
	1094, 2001, 634, 620, 2606, 1077, 149, 130, 152, 137,
	129, 1521, 150, 151, 3464, 1782, 1281, 638, 167, 1722,
	632, 1044, 2801, 1070, 621, 2834, 1909, 173, 138, 2112,
	1040, 1465, 2549, 1015, 2509, 3465, 3272, 2534, 3273, 2150,
	2822, 2189, 141, 139, 134, 135, 136, 140, 2823, 909,
	2194, 3493, 620, 1717, 131, 1079, 1080, 588, 1085, 590,
	604, 2830, 623, 142, 622, 594, 1097, 592, 596, 605,
	597, 1046, 591, 2551, 602, 621, 3032, 593, 606, 607,
	610, 613, 614, 615, 611, 609, 1064, 600, 624, 621,
	1083, 1065, 1078, 1102, 2030, 621, 1691, 2749, 1090, 1063,
	1084, 1062, 1091, 938, 942, 2195, 940, 3031, 2831, 2752,
	1071, 2212, 1096, 2028, 2029, 1901, 1890, 1891, 1892, 1893,
	1903, 1894, 1895, 1896, 1908, 1904, 1897, 1898, 1905, 1906,
	1907, 1899, 1900, 1902, 3439, 2193, 1089, 919, 913, 911,
	1692, 2209, 1693, 2210, 1021, 2211, 158, 1280, 1277, 1278,
	1279, 1284, 1286, 1283, 1020, 1282, 2191, 919, 913, 911,
	3224, 2153, 3088, 2607, 2043, 1276, 981, 979, 970, 1324,
	1325, 1326, 1327, 2640, 943, 1039, 3028, 2192, 952, 1338,
	990, 989, 1342, 2201, 2197, 2199, 2200, 2198, 2202, 2203,
	951, 988, 987, 1468, 952, 986, 621, 1602, 1332, 985,
	984, 3320, 2500, 943, 983, 935, 978, 621, 1098, 991,
	1321, 2752, 937, 936, 1321, 2236, 3512, 3470, 1060, 927,
	1066, 1067, 1068, 1069, 153, 2555, 1725, 3399, 1723, 1724,
	963, 1726, 1727, 1520, 970, 1048, 1007, 1054, 927, 1043,
	1056, 2536, 925, 1104, 1105, 1280, 1277, 1278, 1279, 1284,
	1286, 1283, 809, 1282, 809, 2172, 621, 3398, 1074, 1261,
	1735, 941, 2468, 1276, 1623, 2503, 3505, 927, 2126, 969,
	2942, 949, 964, 904, 973, 963, 1262, 1263, 2850, 975,
	2028, 2029, 2552, 976, 974, 146, 2179, 2116, 147, 3027,
	2178, 1000, 1328, 1268, 3399, 2568, 625, 963, 3082, 2250,
	1731, 999, 809, 1266, 977, 1703, 1702, 1704, 1705, 1706,
	2991, 2992, 982, 980, 1008, 2771, 2573, 618, 159, 1455,
	2378, 2380, 3060, 83, 3398, 171, 2533, 2117, 1596, 970,
	2802, 2803, 619, 970, 2115, 969, 1595, 1042, 1452, 1594,
	973, 963, 2519, 2806, 1732, 975, 970, 912, 1592, 976,
	974, 2523, 942, 586, 581, 2170, 2546, 1489, 1491, 2545,
	1352, 3309, 1353, 2237, 1721, 2980, 179, 912, 2118, 88,
	88, 1622, 88, 1322, 1323, 3082, 1356, 2558, 2114, 1471,
	2960, 942, 2557, 1475, 2450, 88, 2413, 2558, 1456, 871,
	970, 2350, 2557, 1848, 1512, 2522, 1423, 1055, 1469, 2575,
	118, 2408, 2071, 1321, 1318, 1472, 3430, 160, 165, 162,
	168, 169, 170, 172, 174, 175, 176, 177, 2802, 2803,
	2728, 887, 2894, 178, 180, 181, 182, 1052, 1049, 1061,
	969, 2806, 1101, 1087, 969, 3334, 963, 966, 967, 2736,
	927, 1869, 1744, 113, 960, 964, 993, 969, 3023, 1006,
	3429, 1059, 1456, 1003, 1473, 1870, 1474, 2954, 98, 1073,
	99, 1429, 1430, 1431, 1432, 1433, 2585, 2584, 2583, 2577,
	1075, 2581, 2592, 2576, 2190, 2574, 1791, 1728, 1526, 1462,
	2579, 1860, 2492, 3503, 2737, 2379, 3504, 3473, 3502, 2578,
	1860, 969, 2267, 1289, 1290, 101, 1290, 963, 966, 967,
	3123, 927, 2998, 1629, 1818, 960, 964, 2580, 2582, 1291,
	2739, 1718, 2997, 1719, 114, 2157, 1720, 1632, 1819, 1319,
	1320, 1817, 1599, 1600, 1601, 2734, 959, 1808, 1810, 1811,
	1664, 1631, 1615, 1667, 1291, 1669, 1313, 1314, 1316, 1315,
	1317, 1318, 2750, 2751, 1621, 2167, 2162, 2162, 2169, 2735,
	1470, 1809, 2165, 1686, 981, 2294, 868, 1516, 1493, 870,
	1608, 1459, 1291, 1490, 1311, 1312, 1313, 1314, 1316, 1315,
	1317, 1318, 2302, 1627, 979, 1533, 1668, 1625, 1625, 1088,
	1517, 1518, 2741, 1867, 2166, 2164, 3513, 1045, 1745, 1676,
	1677, 1291, 3466, 1058, 2981, 1682, 1683, 3364, 1291, 1637,
	1626, 1638, 1476, 1640, 1642, 1291, 3507, 1646, 1648, 1650,
	1652, 1654, 1591, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1316, 1315, 1317, 1318, 1605, 883, 3232, 3302, 1618, 1606,
	1604, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1293, 1740,
	1291, 3365, 1288, 3231, 1289, 1290, 1488, 3222, 3073, 2749,
	2264, 2594, 2242, 2243, 2244, 1488, 3072, 3005, 1670, 1672,
	3004, 2752, 1865, 1746, 1747, 1711, 1866, 1288, 1597, 1289,
	1290, 3303, 3514, 1709, 3477, 1488, 2994, 1751, 1291, 2779,
	2767, 3475, 1488, 2474, 1758, 1759, 1760, 1736, 3409, 1488,
	812, 813, 814, 1715, 1966, 1288, 1698, 1289, 1290, 1963,
	1748, 2473, 1291, 1965, 3057, 2122, 3058, 1752, 1712, 1754,
	1755, 1756, 1757, 1696, 3467, 122, 1761, 946, 945, 944,
	1291, 807, 1695, 2263, 1288, 1749, 1289, 1290, 1773, 1710,
	1694, 1288, 1753, 1289, 1290, 1684, 1291, 1708, 1288, 1750,
	1289, 1290, 1291, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1678, 1675, 1674, 1673, 1771, 1644, 1497, 2255, 1966, 1291,
	1697, 3407, 1488, 1772, 1291, 2035, 2036, 626, 3329, 3328,
	626, 2988, 2738, 1288, 2457, 1289, 1290, 3306, 3305, 3304,
	39, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1315, 1317,
	1318, 1787, 2137, 2257, 2135, 2133, 2138, 1307, 2136, 2134,
	1303, 3227, 1304, 2256, 1843, 1843, 1498, 1841, 1841, 1844,
	3212, 1288, 3211, 1289, 1290, 1822, 1305, 1319, 1320, 1302,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1315, 1317,
	1318, 626, 1863, 3122, 3120, 1288, 1864, 1289, 1290, 1814,
	3069, 3002, 3405, 1488, 2987, 2835, 2832, 3281, 1488, 2770,
	2769, 2483, 1455, 1288, 2471, 1289, 1290, 1454, 1307, 2184,
	2567, 1812, 2183, 1332, 2025, 1291, 2007, 1775, 1741, 1288,
	1927, 1289, 1290, 1707, 1699, 1288, 1689, 1289, 1290, 1685,
	1861, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1315,
	1317, 1318, 1288, 1681, 1289, 1290, 1680, 1288, 1959, 1289,
	1290, 1679, 1499, 1821, 1099, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1779, 1780,
	2826, 1456, 95, 1988, 1265, 2304, 1521, 1795, 1790, 1815,
	79, 1921, 1788, 96, 1789, 1287, 1488, 1489, 1995, 2399,
	3492, 1932, 1488, 104, 1971, 3258, 1291, 2742, 3279, 1488,
	1307, 2746, 2249, 1291, 103, 2395, 102, 3257, 2745, 1291,
	1820, 3454, 1488, 97, 2867, 97, 3216, 184, 1287, 1488,
	97, 2019, 1962, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1316, 1315, 1317, 1318, 1923, 2399, 3392, 1847, 1488, 1291,
	2446, 123, 2747, 1854, 1856, 2399, 3372, 2743, 1288, 3215,
	1289, 1290, 2744, 2012, 166, 2013, 1996, 1973, 2399, 3368,
	104, 3049, 1932, 1871, 1872, 1873, 1874, 3355, 1488, 1976,
	1977, 103, 1488, 102, 1488, 2399, 3322, 1885, 2260, 2080,
	1488, 3041, 3319, 1971, 3235, 1488, 3276, 1488, 98, 95,
	99, 2510, 3262, 1488, 1291, 2723, 97, 2459, 2399, 3223,
	96, 3041, 1488, 2447, 1972, 2236, 1291, 103, 98, 2488,
	99, 1501, 163, 2449, 1291, 164, 2399, 3039, 1291, 2415,
	2018, 2123, 2929, 1488, 1975, 2045, 2690, 1978, 1979, 1288,
	2079, 1289, 1290, 2162, 1488, 183, 1288, 2953, 1289, 1290,
	2446, 1488, 1288, 2953, 1289, 1290, 1973, 2958, 1488, 1287,
	2089, 2090, 2091, 2092, 89, 1488, 2075, 2315, 1488, 2074,
	884, 2084, 2955, 2085, 2086, 2087, 2088, 2006, 2056, 2760,
	2759, 3360, 1288, 2422, 1289, 1290, 1287, 1500, 2017, 2095,
	2096, 2097, 2098, 2828, 2756, 2757, 2756, 2755, 2020, 2922,
	1488, 2423, 2078, 2040, 1291, 3333, 2105, 2919, 1488, 2399,
	1291, 2917, 1488, 2447, 1291, 2111, 2423, 2038, 2151, 2037,
	1291, 2423, 1488, 2236, 1291, 2062, 2061, 2041, 2060, 2044,
	918, 917, 1795, 2914, 1291, 2077, 2076, 1288, 2423, 1289,
	1290, 2236, 2532, 2758, 1307, 2782, 2663, 1291, 2148, 1288,
	2063, 1289, 1290, 1587, 2513, 2121, 167, 1288, 1291, 1289,
	1290, 1288, 2260, 1289, 1290, 173, 2306, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1316, 1315, 1317, 1318, 2506, 2507,
	2106, 2101, 2102, 2315, 972, 2291, 2156, 2120, 1488, 2159,
	2163, 2160, 2124, 3253, 1625, 2132, 1307, 2882, 1488, 2399,
	2398, 2176, 2290, 2865, 1488, 2260, 1488, 2370, 1488, 971,
	1846, 1488, 1587, 1586, 2155, 2106, 2158, 2154, 3468, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1316, 1315, 1317, 1318,
	2180, 3317, 2177, 2415, 2181, 2182, 2162, 1288, 2145, 1289,
	1290, 2368, 1488, 1288, 2033, 1289, 1290, 1288, 2162, 1289,
	1290, 1532, 1531, 1288, 1492, 1289, 1290, 1288, 3006, 1289,
	1290, 1997, 1291, 1846, 1792, 1730, 1519, 1288, 954, 1289,
	1290, 873, 953, 3435, 2187, 3375, 3246, 1495, 3213, 3134,
	1288, 1660, 1289, 1290, 158, 3022, 3019, 3000, 2253, 2247,
	2877, 1288, 2258, 1289, 1290, 2261, 1291, 2262, 2876, 1589,
	2104, 2824, 2269, 2784, 2480, 2953, 2271, 2272, 2273, 3007,
	3008, 3009, 2780, 1044, 1814, 2514, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2100, 2215, 1795, 2254,
	2094, 1291, 1661, 1662, 1663, 2196, 2222, 2223, 2252, 1291,
	2093, 2225, 1714, 1291, 2213, 2214, 3220, 1620, 2218, 89,
	2226, 1616, 2295, 2296, 2297, 2298, 2299, 2221, 2301, 1585,
	1291, 115, 2303, 2479, 2224, 3247, 2308, 2309, 2119, 2310,
	2965, 2966, 2313, 2010, 2314, 1291, 2274, 2246, 2317, 2248,
	3024, 1291, 2321, 3487, 2234, 1291, 2326, 2327, 2328, 2329,
	2227, 3485, 1973, 2289, 3461, 1288, 3341, 1289, 1290, 2340,
	1291, 2343, 2344, 2971, 1815, 3267, 2245, 1777, 1291, 2346,
	2348, 2480, 2968, 3010, 2347, 1488, 2351, 2352, 2353, 2354,
	2355, 2776, 2330, 1488, 1291, 2775, 2975, 2362, 2363, 1288,
	2364, 1289, 1290, 2367, 2369, 2019, 2774, 2371, 2690, 1972,
	1656, 2493, 2216, 2322, 1488, 1291, 2266, 2383, 1496, 2970,
	1843, 1291, 2712, 1841, 2384, 2709, 159, 2713, 2924, 1291,
	3011, 3012, 3013, 171, 1288, 2475, 1289, 1290, 2920, 1778,
	3337, 2708, 1288, 2016, 1289, 1290, 1288, 2710, 1289, 1290,
	3248, 2024, 2711, 2892, 2959, 1291, 2668, 1657, 1658, 1659,
	2946, 2888, 2667, 1288, 2382, 1289, 1290, 3113, 2945, 2714,
	2300, 2432, 2433, 3301, 179, 3115, 1291, 2874, 1288, 2949,
	1289, 1290, 2677, 39, 1288, 1729, 1289, 1290, 1288, 859,
	1289, 1290, 2439, 1291, 2419, 3104, 2754, 3103, 2873, 1291,
	2385, 2464, 2387, 1288, 2870, 1289, 1290, 2484, 1010, 1291,
	2400, 1288, 2366, 1289, 1290, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 1869, 1288, 1009, 1289,
	1290, 178, 180, 181, 182, 1264, 1291, 2396, 2365, 2843,
	1870, 1291, 764, 2680, 2682, 3102, 1462, 2409, 1288, 2372,
	1289, 1290, 2683, 2479, 1288, 2561, 1289, 1290, 888, 2361,
	2520, 2438, 1288, 1291, 1289, 1290, 889, 2392, 95, 123,
	2467, 2469, 1291, 95, 2505, 97, 2360, 2951, 2397, 96,
	2412, 2460, 2359, 1291, 96, 2444, 97, 1291, 1288, 3499,
	1289, 1290, 2358, 2035, 2036, 189, 1291, 2772, 189, 2219,
	3414, 631, 2448, 3318, 2208, 2529, 637, 2451, 2111, 1288,
	3242, 1289, 1290, 2753, 1291, 2461, 189, 2482, 2458, 2357,
	2436, 2021, 2485, 2486, 2356, 2207, 1288, 2206, 1289, 1290,
	1291, 189, 1288, 2472, 1289, 1290, 896, 897, 1291, 2443,
	2527, 2666, 1288, 2205, 1289, 1290, 2345, 2481, 2204, 2665,
	2931, 2240, 102, 3110, 3289, 2339, 637, 189, 637, 1291,
	2489, 3288, 2494, 2495, 2496, 3270, 2338, 2490, 3121, 1288,
	2337, 1289, 1290, 1291, 1288, 3119, 1289, 1290, 3118, 2336,
	2526, 1608, 3111, 3020, 2950, 2596, 2597, 2598, 2599, 2600,
	2570, 2948, 2515, 2516, 2785, 2146, 1288, 2335, 1289, 1290,
	1291, 104, 1603, 895, 2605, 1288, 104, 1289, 1290, 2491,
	2525, 103, 103, 2334, 102, 2415, 1288, 103, 1289, 1290,
	1288, 2333, 1289, 1290, 1291, 2939, 3489, 3488, 3488, 1288,
	1291, 1289, 1290, 3092, 3489, 2395, 2586, 2588, 2608, 2550,
	104, 2292, 2332, 2008, 1513, 2553, 2569, 1288, 1505, 1289,
	1290, 103, 2559, 102, 2601, 2560, 2331, 108, 109, 1291,
	3307, 2986, 97, 1288, 1291, 1289, 1290, 3, 1291, 886,
	91, 1288, 1291, 1289, 1290, 2540, 2541, 2542, 2543, 2544,
	2571, 1, 2990, 2325, 3424, 2587, 599, 2589, 1998, 1460,
	3462, 1291, 1288, 3420, 1289, 1290, 2618, 3421, 2620, 1795,
	2554, 2647, 2642, 1700, 1690, 3052, 1288, 2324, 1289, 1290,
	2644, 1933, 3243, 2323, 2631, 2632, 2633, 2634, 2788, 2152,
	2562, 3018, 2109, 962, 148, 2072, 1291, 2073, 1962, 3388,
	1962, 2699, 2610, 1288, 112, 1289, 1290, 920, 111, 965,
	1072, 2616, 2320, 2147, 3042, 1291, 2465, 2319, 2717, 2718,
	2081, 2318, 1538, 1536, 1537, 2316, 1291, 1288, 1535, 1289,
	1290, 875, 1540, 1288, 2647, 1289, 1290, 1539, 2670, 2851,
	2643, 2293, 2645, 2646, 2312, 2687, 2702, 2893, 1781, 2693,
	2722, 1475, 2439, 2671, 2693, 2696, 633, 2626, 2627, 2628,
	2629, 2630, 1288, 2435, 1289, 1290, 627, 1288, 2658, 1289,
	1290, 1288, 186, 1289, 1290, 1288, 1527, 1289, 1290, 2311,
	1506, 2906, 2669, 1004, 589, 2672, 2761, 1291, 2185, 2659,
	2660, 2661, 2684, 2685, 1288, 595, 1289, 1290, 2307, 1339,
	876, 1776, 2662, 2724, 2664, 2703, 2725, 877, 2706, 2305,
	2704, 2705, 2808, 2707, 2452, 2715, 915, 907, 2009, 2386,
	2719, 2720, 98, 914, 99, 2698, 2943, 2676, 2726, 1288,
	2678, 1289, 1290, 2402, 1740, 1291, 2681, 2732, 2674, 3300,
	3112, 2787, 2701, 3373, 2462, 1502, 2913, 2845, 1288, 2764,
	1289, 1290, 2762, 2763, 2765, 2766, 2265, 1858, 1329, 1288,
	2050, 1289, 1290, 3087, 1807, 655, 654, 2862, 2863, 2864,
	2270, 2866, 2868, 2816, 2815, 652, 2388, 2416, 2847, 1294,
	2786, 800, 2111, 2807, 2376, 2875, 1514, 2427, 2425, 2424,
	2879, 2880, 2881, 2883, 2884, 2885, 2886, 2217, 2819, 2887,
	2057, 2889, 2890, 2891, 2967, 2963, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2836, 3416, 2259, 2839,
	1288, 2838, 1289, 1290, 2911, 2052, 2048, 2915, 2394, 2916,
	2918, 753, 2921, 2923, 2846, 2925, 2926, 2927, 2928, 752,
	664, 2856, 656, 2934, 648, 2853, 2854, 2773, 2855, 751,
	750, 2857, 2983, 2859, 2814, 2861, 2428, 2431, 2432, 2433,
	2429, 3400, 2430, 2434, 2535, 2908, 2965, 2966, 1288, 2825,
	1289, 1290, 2912, 2811, 2537, 2463, 2821, 1272, 2956, 2957,
	1478, 642, 2961, 933, 2848, 3324, 2239, 2820, 2871, 2841,
	2842, 1477, 1888, 1889, 189, 3331, 189, 2796, 3036, 189,
	2973, 2974, 2777, 2511, 2139, 65, 2837, 43, 3295, 2840,
	3361, 749, 746, 3089, 2937, 2428, 2431, 2432, 2433, 2429,
	3090, 2430, 2434, 2932, 2933, 2935, 3091, 2638, 2639, 637,
	3344, 637, 637, 1486, 1482, 2940, 3345, 745, 2947, 3346,
	1916, 1269, 3437, 1783, 90, 34, 33, 2962, 1483, 32,
	2952, 637, 189, 1486, 1482, 31, 2972, 30, 25, 24,
	23, 22, 21, 2969, 27, 20, 19, 18, 1483, 2978,
	2979, 2799, 3457, 2014, 2015, 1485, 2976, 1484, 3498, 1334,
	117, 2977, 3025, 3026, 52, 49, 47, 2984, 2816, 2815,
	3040, 125, 2985, 1479, 1480, 1485, 124, 1484, 50, 46,
	1047, 44, 29, 28, 17, 16, 15, 14, 3046, 3047,
	3001, 13, 3003, 12, 11, 7, 6, 37, 2936, 36,
	35, 2995, 2996, 1786, 26, 4, 2498, 2141, 0, 3059,
	0, 0, 3063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3074,
	3048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3029, 3078, 0, 0, 3033, 3034, 3035,
	0, 0, 0, 0, 0, 0, 3086, 0, 0, 0,
	0, 0, 0, 0, 3093, 0, 0, 0, 0, 0,
	0, 0, 3068, 0, 0, 0, 2999, 0, 0, 3064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 3014, 0, 0, 3015, 3016,
	3017, 0, 0, 0, 0, 0, 3076, 0, 0, 0,
	0, 3107, 0, 0, 3085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	1841, 3136, 0, 0, 0, 0, 0, 0, 39, 0,
	0, 0, 0, 189, 0, 0, 0, 637, 637, 3128,
	0, 0, 0, 0, 3108, 2693, 3130, 3117, 3116, 0,
	0, 0, 2696, 189, 3124, 0, 2696, 3132, 3126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 189, 3234, 0, 0,
	3221, 3137, 3138, 0, 3140, 0, 3241, 0, 637, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3251, 3252, 0, 3254,
	0, 3255, 3256, 0, 3217, 0, 3259, 3260, 3261, 3219,
	3263, 3266, 3264, 3265, 3233, 3225, 1843, 0, 3218, 1841,
	3268, 637, 3245, 0, 0, 3237, 3275, 3277, 3278, 3280,
	3282, 3283, 3285, 3238, 1334, 0, 0, 0, 0, 0,
	637, 637, 0, 637, 0, 637, 637, 0, 637, 637,
	637, 637, 637, 637, 0, 3228, 3229, 3230, 0, 0,
	0, 1334, 0, 0, 1334, 637, 1334, 189, 0, 0,
	3315, 0, 3269, 3271, 0, 0, 0, 3274, 0, 0,
	0, 0, 3311, 184, 3293, 3290, 3291, 189, 0, 0,
	3292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 189, 0, 3308, 0, 0, 123, 0, 3299,
	0, 0, 0, 3310, 2696, 0, 637, 0, 189, 0,
	166, 0, 3314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 637,
	0, 3316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3335, 3340, 0, 0, 0, 0,
	0, 183, 0, 39, 0, 0, 0, 3327, 0, 0,
	3330, 3323, 0, 0, 3332, 3356, 0, 0, 0, 0,
	0, 3357, 3358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3369, 0, 0, 0, 0, 0, 3350,
	0, 0, 3351, 0, 0, 0, 0, 0, 0, 0,
	3339, 0, 0, 0, 646, 0, 3359, 0, 3349, 3394,
	3395, 0, 0, 0, 0, 0, 0, 0, 0, 39,
	0, 3366, 0, 3404, 3406, 3408, 0, 3401, 3402, 2693,
	3374, 3376, 3387, 3379, 3384, 3371, 3381, 3380, 3378, 3383,
	3382, 0, 0, 0, 3245, 3389, 0, 0, 3436, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 3412, 0,
	0, 173, 0, 637, 637, 0, 3415, 3433, 3423, 3428,
	0, 637, 0, 0, 0, 0, 189, 0, 3401, 3402,
	3442, 0, 0, 0, 3440, 0, 0, 3453, 0, 0,
	0, 3336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3451, 1342, 0, 0, 0, 894, 0, 0,
	900, 900, 3456, 0, 0, 0, 0, 0, 0, 3474,
	3476, 3478, 0, 3469, 637, 0, 0, 0, 0, 1843,
	0, 3471, 1841, 3483, 1334, 0, 0, 0, 0, 0,
	3480, 3482, 3479, 0, 3486, 637, 3484, 184, 0, 0,
	3497, 1334, 0, 0, 3401, 3402, 3494, 0, 2504, 0,
	0, 0, 0, 3500, 0, 0, 3509, 3510, 3506, 0,
	3508, 123, 0, 145, 0, 0, 637, 637, 0, 0,
	158, 0, 0, 1843, 166, 0, 1841, 3515, 3517, 3518,
	3265, 0, 3516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 164, 0, 0, 0, 3158,
	3160, 3159, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 703,
	0, 1611, 1612, 155, 154, 183, 189, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 637, 0, 0, 1974, 189, 0, 189, 0,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 149, 1613, 152, 0, 1610, 0,
	150, 151, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 0, 0, 0, 0, 0, 178, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 637, 0, 3164, 0, 637,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3172, 3173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 189, 0, 0, 189, 0, 189,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 189, 769, 0, 682, 773, 684, 770,
	771, 0, 680, 683, 772, 0, 3455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 189,
	0, 0, 153, 0, 637, 0, 0, 0, 0, 0,
	701, 702, 3157, 3161, 3162, 3163, 3174, 3175, 3176, 3184,
	3186, 734, 3185, 3187, 3188, 3189, 3192, 3193, 3194, 3195,
	3190, 3191, 3196, 3141, 3145, 3142, 3143, 3144, 3156, 3146,
	3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3197,
	3198, 3199, 3200, 3201, 3202, 3167, 3171, 3170, 3168, 3169,
	3165, 3166, 0, 146, 0, 0, 147, 0, 0, 1334,
	0, 1974, 1292, 0, 774, 0, 775, 0, 0, 779,
	0, 0, 0, 781, 780, 0, 782, 748, 747, 0,
	0, 776, 777, 0, 778, 0, 159, 0, 0, 0,
	0, 1347, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3203,
	3204, 3205, 3206, 3207, 3208, 3209, 3210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 0, 0, 0, 0,
	0, 178, 180, 181, 182, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 1556, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 189, 0,
	0, 1569, 1572, 1573, 1574, 1575, 1576, 1577, 0, 1578,
	1579, 1580, 1581, 1582, 1557, 1558, 1559, 1560, 1541, 1542,
	1570, 0, 1544, 0, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 0, 0, 1554, 1561, 1562, 1563, 1564,
	1504, 1565, 1566, 1567, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 1543, 0, 0, 189, 0, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 189, 189, 189, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 189, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 1572, 1573, 1574, 1575, 1576,
	1577, 0, 1578, 1579, 1580, 1581, 1582, 1557, 1558, 1559,
	1560, 1541, 1542, 1570, 0, 1544, 0, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 0, 637, 1554, 1561,
	1562, 1563, 1564, 0, 1565, 1566, 1567, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	1334, 0, 0, 637, 637, 1334, 189, 189, 189, 189,
	189, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 189, 0, 0, 189, 0, 189, 0,
	0, 189, 189, 189, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 1334, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 1849, 1850, 0, 0, 0, 1852, 0, 900, 900,
	1857, 0, 0, 0, 1862, 189, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 0, 0, 0,
	0, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 0, 1922,
	0, 1924, 1925, 1926, 0, 1928, 1929, 1930, 0, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 0, 1960, 0, 1967, 1968, 900, 0, 900,
	900, 900, 900, 900, 0, 0, 0, 0, 637, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 184, 1989, 1990,
	1991, 1992, 1993, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 123, 0, 145, 80, 41, 42, 82, 0, 0,
	0, 0, 0, 900, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 45, 71,
	72, 0, 69, 73, 0, 2031, 2032, 0, 0, 0,
	0, 70, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 163, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 189, 0, 0, 0, 0,
	0, 1611, 1612, 155, 154, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 189, 189, 189,
	0, 0, 0, 0, 0, 0, 0, 637, 637, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 637, 637, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 1613, 152, 0, 1610, 0,
	150, 151, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 48,
	51, 54, 53, 56, 0, 68, 0, 0, 77, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 85, 84, 0, 0, 66, 67, 55, 0,
	0, 0, 0, 0, 75, 76, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 637, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 60, 0, 61, 62,
	63, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 637, 0, 0, 0, 0, 808, 0, 0, 81,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2275, 2276, 2277, 2278,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 83, 637, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 872, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 146, 0, 0, 147, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 0, 0, 0, 0,
	0, 178, 180, 181, 182, 0, 0, 0, 1966, 0,
	0, 810, 811, 0, 0, 0, 0, 1842, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 637, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 2566, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 900, 0, 0, 2590, 2591,
	0, 0, 2593, 0, 0, 2595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2602, 2603, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2609, 0, 0,
	2611, 2612, 2613, 0, 0, 0, 2614, 2615, 0, 0,
	1936, 2617, 0, 0, 2619, 0, 0, 2621, 2622, 2623,
	2624, 0, 0, 0, 0, 2625, 1936, 1936, 1936, 1936,
	1936, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 0, 0,
	0, 2648, 2649, 2650, 2651, 2652, 2653, 0, 0, 0,
	2654, 2655, 0, 2656, 0, 2657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	636, 0, 0, 1107, 0, 1107, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2783, 0, 0,
	0, 0, 872, 1331, 1336, 1337, 0, 1340, 0, 1341,
	1343, 1344, 1345, 0, 1348, 1349, 1351, 1351, 0, 1351,
	1355, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 0, 0, 2869,
	0, 1422, 0, 1424, 1425, 1426, 1427, 1428, 0, 0,
	0, 0, 0, 2878, 0, 0, 1355, 1355, 1355, 1355,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 1458, 801, 810, 811,
	812, 813, 814, 802, 805, 0, 0, 0, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 815, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 2817,
	2818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 0, 0, 3021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3065, 635, 3066, 0, 0, 3067, 0, 0, 3070, 3071,
	0, 0, 0, 0, 0, 0, 0, 3075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3094,
	0, 924, 3095, 931, 3096, 3097, 0, 3098, 0, 3099,
	810, 811, 0, 0, 3100, 0, 1842, 0, 0, 0,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3125,
	0, 636, 1260, 636, 636, 0, 0, 0, 0, 0,
	3133, 0, 0, 3135, 0, 0, 769, 0, 0, 773,
	0, 770, 771, 636, 0, 0, 772, 3139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3214, 0, 0, 0, 0,
	0, 1333, 0, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 801, 810,
	811, 812, 813, 814, 802, 805, 0, 0, 0, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 815, 816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 1107, 0,
	0, 0, 0, 0, 0, 3298, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2817, 2818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3338, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 3352, 0, 0, 3353, 0, 3354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 1333, 1630, 0, 0,
	1633, 1634, 636, 636, 0, 636, 0, 636, 636, 0,
	636, 636, 636, 636, 636, 636, 0, 0, 0, 0,
	0, 0, 0, 1333, 1665, 1666, 1333, 636, 1333, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3434, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3448, 0, 3449, 0, 3450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 1109, 1109, 0, 0,
	0, 0, 0, 0, 932, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3495, 0, 3496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 636, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 1466, 1467, 0, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 636, 0, 0,
	0, 0, 2251, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 636,
	0, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 924, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 1636, 0, 1636, 0,
	1636, 1636, 0, 1645, 1636, 1636, 1636, 1636, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 0, 636, 0, 0, 0, 0, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	2381, 0, 0, 0, 636, 0, 0, 636, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2420,
	2421, 0, 0, 0, 0, 0, 0, 0, 2440, 0,
	2441, 2442, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 2129,
	2130, 2131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 636, 1628, 0, 0, 1628,
	0, 1628, 0, 0, 0, 0, 0, 2161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2518, 0, 636, 0, 0, 0, 0, 636, 0, 0,
	0, 636, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1109,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 1887, 0, 0, 0, 0, 0, 0, 2635,
	0, 1333, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2697, 0, 81, 0, 0,
	2051, 2051, 2051, 2051, 2051, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2440, 872, 0,
	0, 0, 2051, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2805, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 2813, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2456, 0, 0, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	1837, 0, 0, 0, 1837, 1837, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 1628, 1628, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 2528, 0, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 585, 2982, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 901, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 1333, 0, 0, 636, 636, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3101, 0, 3105,
	3106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2697, 0, 81, 0, 2697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 0, 0, 2768,
	0, 0, 0, 0, 0, 2404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 1333, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 2512, 0, 0, 0, 0, 0, 0, 0, 0,
	2517, 0, 0, 0, 2697, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 3325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2989, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	585, 0, 1837, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2636, 0, 0, 0, 0, 0, 0, 0, 1109, 0,
	3370, 0, 0, 0, 0, 81, 585, 0, 0, 0,
	0, 0, 0, 636, 636, 636, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 2700, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 636, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 924, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2907, 0, 0, 636, 0, 585, 0,
	636, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 1335, 0,
	1335, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 2023, 2023, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 585, 585, 585, 585,
	585, 585, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3053, 3054, 3055, 3056,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 3129, 0, 3131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 636,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	901, 901, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3286,
	0, 0, 0, 3286, 3286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 901,
	1739, 901, 901, 901, 901, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 1739,
	585, 0, 585, 0, 585, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 2023, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 585, 0,
	2907, 585, 3418, 2220, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 2497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 585,
	585, 585, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 0, 1335,
	585, 585, 585, 585, 585, 0, 0, 0, 0, 0,
	0, 0, 2716, 0, 0, 0, 0, 585, 0, 0,
	1687, 0, 585, 0, 0, 585, 2727, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 585, 585, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1335, 379, 0, 0, 1243, 1228,
	495, 0, 1171, 1246, 1140, 1159, 1256, 1162, 1165, 1207,
	1119, 1185, 398, 1156, 1112, 1144, 1114, 1151, 1115, 1142,
	1173, 257, 1139, 1230, 1189, 1245, 350, 254, 1121, 1145,
	412, 1161, 196, 1209, 465, 241, 360, 357, 503, 269,
	260, 256, 239, 303, 368, 410, 485, 404, 1252, 354,
	1195, 0, 475, 383, 0, 0, 1687, 1175, 1234, 1183,
	1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248, 309,
	237, 311, 195, 395, 476, 273, 0, 0, 0, 0,
	626, 0, 0, 0, 3390, 0, 3391, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1153, 1201, 1242,
	1154, 1203, 252, 307, 259, 251, 500, 1253, 1233, 1118,
	1182, 1241, 0, 0, 219, 1244, 1177, 0, 1206, 0,
	1259, 1113, 1197, 0, 1116, 1120, 1255, 1237, 1148, 262,
	0, 0, 0, 0, 0, 0, 0, 1174, 1184, 1218,
	1222, 1168, 0, 0, 0, 0, 0, 0, 0, 1146,
	0, 1193, 0, 0, 0, 1125, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1172,
	0, 0, 0, 0, 1128, 0, 1147, 1219, 0, 1111,
	284, 1122, 384, 244, 0, 1226, 1236, 1169, 540, 1240,
	1167, 1166, 1213, 1126, 1232, 1160, 349, 1124, 316, 191,
	215, 0, 1158, 394, 440, 452, 1231, 1143, 1152, 242,
	1150, 450, 408, 519, 223, 271, 437, 414, 448, 421,
	274, 1192, 1211, 449, 355, 505, 431, 516, 541, 542,
	250, 388, 528, 489, 536, 557, 216, 247, 402, 482,
	522, 472, 380, 501, 502, 315, 471, 282, 194, 353,
	547, 214, 458, 0, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 1123, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 1138, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 1227, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 1216, 1258, 407, 451, 230,
	521, 474, 1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134,
	1249, 1250, 1251, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238, 1239,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	1191, 190, 211, 352, 1254, 433, 275, 558, 531, 526,
	197, 213, 1130, 249, 1141, 1149, 0, 1155, 1163, 1164,
	1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212,
	1215, 1217, 1224, 1235, 1257, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 0,
	361, 1190, 1196, 364, 268, 291, 306, 1205, 530, 480,
	217, 445, 277, 240, 1223, 1225, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1186, 1214, 359, 496, 497, 302, 379, 0, 0, 1243,
	1228, 495, 0, 1171, 1246, 1140, 1159, 1256, 1162, 1165,
	1207, 1119, 1185, 398, 1156, 1112, 1144, 1114, 1151, 1115,
	1142, 1173, 257, 1139, 1230, 1189, 1245, 350, 254, 1121,
	1145, 412, 1161, 196, 1209, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 1252,
	354, 1195, 0, 475, 383, 0, 0, 0, 1175, 1234,
	1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 1153, 1201,
	1242, 1154, 1203, 252, 307, 259, 251, 500, 1253, 1233,
	1118, 1182, 1241, 0, 0, 219, 1244, 1177, 0, 1206,
	0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237, 1148,
	262, 0, 0, 0, 0, 0, 0, 0, 1174, 1184,
	1218, 1222, 1168, 0, 0, 0, 0, 0, 2728, 0,
	1146, 0, 1193, 0, 0, 0, 1125, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 0, 0, 0, 1128, 0, 1147, 1219, 0,
	1111, 284, 1122, 384, 244, 0, 1226, 1236, 1169, 540,
	1240, 1167, 1166, 1213, 1126, 1232, 1160, 349, 1124, 316,
	191, 215, 0, 1158, 394, 440, 452, 1231, 1143, 1152,
	242, 1150, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 1192, 1211, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1123,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1138, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1227, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1216, 1258, 407, 451,
	230, 521, 474, 1133, 1137, 1131, 1198, 1132, 1187, 1188,
	1134, 1249, 1250, 1251, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238,
	1239, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1191, 190, 211, 352, 1254, 433, 275, 558, 531,
	526, 197, 213, 1130, 249, 1141, 1149, 0, 1155, 1163,
	1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210,
	1212, 1215, 1217, 1224, 1235, 1257, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 1190, 1196, 364, 268, 291, 306, 1205, 530,
	480, 217, 445, 277, 240, 1223, 1225, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 1186, 1214, 359, 496, 497, 302, 379, 0, 0,
	1243, 1228, 495, 0, 1171, 1246, 1140, 1159, 1256, 1162,
	1165, 1207, 1119, 1185, 398, 1156, 1112, 1144, 1114, 1151,
	1115, 1142, 1173, 257, 1139, 1230, 1189, 1245, 350, 254,
	1121, 1145, 412, 1161, 196, 1209, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1252, 354, 1195, 0, 475, 383, 0, 0, 0, 1175,
	1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204,
	1248, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1153,
	1201, 1242, 1154, 1203, 252, 307, 259, 251, 500, 1253,
	1233, 1118, 1182, 1241, 0, 0, 219, 1244, 1177, 0,
	1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237,
	1148, 262, 0, 0, 0, 0, 0, 0, 0, 1174,
	1184, 1218, 1222, 1168, 0, 0, 0, 0, 0, 2686,
	0, 1146, 0, 1193, 0, 0, 0, 1125, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 0, 0, 0, 0, 1128, 0, 1147, 1219,
	0, 1111, 284, 1122, 384, 244, 0, 1226, 1236, 1169,
	540, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 349, 1124,
	316, 191, 215, 0, 1158, 394, 440, 452, 1231, 1143,
	1152, 242, 1150, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1192, 1211, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 0, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	1123, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 1138, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 1227, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 1216, 1258, 407,
	451, 230, 521, 474, 1133, 1137, 1131, 1198, 1132, 1187,
	1188, 1134, 1249, 1250, 1251, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 1220, 1127, 0, 1135, 1136, 1229,
	1238, 1239, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 1191, 190, 211, 352, 1254, 433, 275, 558,
	531, 526, 197, 213, 1130, 249, 1141, 1149, 0, 1155,
	1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202,
	1210, 1212, 1215, 1217, 1224, 1235, 1257, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 0, 361, 1190, 1196, 364, 268, 291, 306, 1205,
	530, 480, 217, 445, 277, 240, 1223, 1225, 202, 236,
	220, 246, 261, 264, 310, 374, 382, 411, 416, 283,
	258, 234, 438, 231, 463, 486, 487, 488, 490, 378,
	253, 415, 1186, 1214, 359, 496, 497, 302, 379, 0,
	0, 1243, 1228, 495, 0, 1171, 1246, 1140, 1159, 1256,
	1162, 1165, 1207, 1119, 1185, 398, 1156, 1112, 1144, 1114,
	1151, 1115, 1142, 1173, 257, 1139, 1230, 1189, 1245, 350,
	254, 1121, 1145, 412, 1161, 196, 1209, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 1252, 354, 1195, 0, 475, 383, 0, 0, 0,
	1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157,
	1204, 1248, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	1153, 1201, 1242, 1154, 1203, 252, 307, 259, 251, 500,
	1253, 1233, 1118, 1182, 1241, 0, 0, 219, 1244, 1177,
	0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255,
	1237, 1148, 262, 0, 0, 0, 0, 0, 0, 0,
	1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0, 0,
	2039, 0, 1146, 0, 1193, 0, 0, 0, 1125, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 1128, 0, 1147,
	1219, 0, 1111, 284, 1122, 384, 244, 0, 1226, 1236,
	1169, 540, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 349,
	1124, 316, 191, 215, 0, 1158, 394, 440, 452, 1231,
	1143, 1152, 242, 1150, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 1192, 1211, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 1123, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 1138, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 1227,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 1216, 1258,
	407, 451, 230, 521, 474, 1133, 1137, 1131, 1198, 1132,
	1187, 1188, 1134, 1249, 1250, 1251, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 1220, 1127, 0, 1135, 1136,
	1229, 1238, 1239, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 1191, 190, 211, 352, 1254, 433, 275,
	558, 531, 526, 197, 213, 1130, 249, 1141, 1149, 0,
	1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200,
	1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 1190, 1196, 364, 268, 291, 306,
	1205, 530, 480, 217, 445, 277, 240, 1223, 1225, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 1186, 1214, 359, 496, 497, 302, 379,
	0, 0, 1243, 1228, 495, 0, 1171, 1246, 1140, 1159,
	1256, 1162, 1165, 1207, 1119, 1185, 398, 1156, 1112, 1144,
	1114, 1151, 1115, 1142, 1173, 257, 1139, 1230, 1189, 1245,
	350, 254, 1121, 1145, 412, 1161, 196, 1209, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 1252, 354, 1195, 0, 475, 383, 0, 0,
	0, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247,
	1157, 1204, 1248, 309, 237, 311, 195, 395, 476, 273,
	0, 89, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 1153, 1201, 1242, 1154, 1203, 252, 307, 259, 251,
	500, 1253, 1233, 1118, 1182, 1241, 0, 0, 219, 1244,
	1177, 0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120,
	1255, 1237, 1148, 262, 0, 0, 0, 0, 0, 0,
	0, 1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 1193, 0, 0, 0, 1125,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 1128, 0,
	1147, 1219, 0, 1111, 284, 1122, 384, 244, 0, 1226,
	1236, 1169, 540, 1240, 1167, 1166, 1213, 1126, 1232, 1160,
	349, 1124, 316, 191, 215, 0, 1158, 394, 440, 452,
	1231, 1143, 1152, 242, 1150, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 1192, 1211, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 0, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 1123, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 1138, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	1227, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 1216,
	1258, 407, 451, 230, 521, 474, 1133, 1137, 1131, 1198,
	1132, 1187, 1188, 1134, 1249, 1250, 1251, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 1220, 1127, 0, 1135,
	1136, 1229, 1238, 1239, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 1191, 190, 211, 352, 1254, 433,
	275, 558, 531, 526, 197, 213, 1130, 249, 1141, 1149,
	0, 1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199,
	1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 0, 361, 1190, 1196, 364, 268, 291,
	306, 1205, 530, 480, 217, 445, 277, 240, 1223, 1225,
	202, 236, 220, 246, 261, 264, 310, 374, 382, 411,
	416, 283, 258, 234, 438, 231, 463, 486, 487, 488,
	490, 378, 253, 415, 1186, 1214, 359, 496, 497, 302,
	379, 0, 0, 1243, 1228, 495, 0, 1171, 1246, 1140,
	1159, 1256, 1162, 1165, 1207, 1119, 1185, 398, 1156, 1112,
	1144, 1114, 1151, 1115, 1142, 1173, 257, 1139, 1230, 1189,
	1245, 350, 254, 1121, 1145, 412, 1161, 196, 1209, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 1252, 354, 1195, 0, 475, 383, 0,
	0, 0, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194,
	1247, 1157, 1204, 1248, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1153, 1201, 1242, 1154, 1203, 252, 307, 259,
	251, 500, 1253, 1233, 1118, 1182, 1241, 0, 0, 219,
	1244, 1177, 0, 1206, 0, 1259, 1113, 1197, 0, 1116,
	1120, 1255, 1237, 1148, 262, 0, 0, 0, 0, 0,
	0, 0, 1174, 1184, 1218, 1222, 1168, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 1193, 0, 0, 0,
	1125, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 1128,
	0, 1147, 1219, 0, 1111, 284, 1122, 384, 244, 0,
	1226, 1236, 1169, 540, 1240, 1167, 1166, 1213, 1126, 1232,
	1160, 349, 1124, 316, 191, 215, 0, 1158, 394, 440,
	452, 1231, 1143, 1152, 242, 1150, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 1192, 1211, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 1123, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 1138, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 1227, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	1216, 1258, 407, 451, 230, 521, 474, 1133, 1137, 1131,
	1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 1220, 1127, 0,
	1135, 1136, 1229, 1238, 1239, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 1191, 190, 211, 352, 1254,
	433, 275, 558, 531, 526, 197, 213, 1130, 249, 1141,
	1149, 0, 1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181,
	1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 1190, 1196, 364, 268,
	291, 306, 1205, 530, 480, 217, 445, 277, 240, 1223,
	1225, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 1186, 1214, 359, 496, 497,
	302, 379, 0, 0, 1243, 1228, 495, 0, 1171, 1246,
	1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185, 398, 1156,
	1112, 1144, 1114, 1151, 1115, 1142, 1173, 257, 1139, 1230,
	1189, 1245, 350, 254, 1121, 1145, 412, 1161, 196, 1209,
	465, 241, 360, 357, 503, 269, 260, 256, 239, 303,
	368, 410, 485, 404, 1252, 354, 1195, 0, 475, 383,
	0, 0, 0, 1175, 1234, 1183, 1221, 1170, 1208, 1129,
	1194, 1247, 1157, 1204, 1248, 309, 237, 311, 195, 395,
	476, 273, 0, 0, 0, 0, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 1153, 1201, 1242, 1154, 1203, 252, 307,
	259, 251, 500, 1253, 1233, 1118, 1182, 1241, 0, 0,
	219, 1244, 1177, 0, 1206, 0, 1259, 1113, 1197, 0,
	1116, 1120, 1255, 1237, 1148, 262, 0, 0, 0, 0,
	0, 0, 0, 1174, 1184, 1218, 1222, 1168, 0, 0,
	0, 0, 0, 0, 0, 1146, 0, 1193, 0, 0,
	0, 1125, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1172, 0, 0, 0, 0,
	1128, 0, 1147, 1219, 0, 1111, 284, 1122, 384, 244,
	0, 1226, 1236, 1169, 540, 1240, 1167, 1166, 1213, 1126,
	1232, 1160, 349, 1124, 316, 191, 215, 0, 1158, 394,
	440, 452, 1231, 1143, 1152, 242, 1150, 450, 408, 519,
	223, 271, 437, 414, 448, 421, 274, 1192, 1211, 449,
	355, 505, 431, 516, 541, 542, 250, 388, 528, 489,
	536, 557, 216, 247, 402, 482, 522, 472, 380, 501,
	502, 315, 471, 282, 194, 353, 547, 214, 458, 0,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 1123, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 1138,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 1227, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 1216, 1258, 407, 451, 230, 521, 474, 1133, 1137,
	1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 1220, 1127,
	0, 1135, 1136, 1229, 1238, 1239, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 1191, 190, 211, 352,
	1254, 433, 275, 558, 531, 526, 197, 213, 1130, 249,
	1141, 1149, 0, 1155, 1163, 1164, 1176, 1178, 1179, 1180,
	1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235,
	1257, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 1190, 1196, 364,
	268, 291, 306, 1205, 530, 480, 217, 445, 277, 240,
	1223, 1225, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 1186, 1214, 359, 496,
	497, 302, 379, 0, 0, 1243, 1228, 495, 0, 1171,
	1246, 1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185, 398,
	1156, 1112, 1144, 1114, 1151, 1115, 1142, 1173, 257, 1139,
	1230, 1189, 1245, 350, 254, 1121, 1145, 412, 1161, 196,
	1209, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 1252, 354, 1195, 0, 475,
	383, 0, 0, 0, 1175, 1234, 1183, 1221, 1170, 1208,
	1129, 1194, 1247, 1157, 1204, 1248, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1153, 1201, 1242, 1154, 1203, 252,
	307, 259, 251, 500, 1253, 1233, 1118, 1182, 1241, 0,
	0, 219, 1244, 1177, 0, 1206, 0, 1259, 1113, 1197,
	0, 1116, 1120, 1255, 1237, 1148, 262, 0, 0, 0,
	0, 0, 0, 0, 1174, 1184, 1218, 1222, 1168, 0,
	0, 0, 0, 0, 0, 0, 1146, 0, 1193, 0,
	0, 0, 1125, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 1128, 0, 1147, 1219, 0, 1111, 284, 1122, 384,
	244, 0, 1226, 1236, 1169, 540, 1240, 1167, 1166, 1213,
	1126, 1232, 1160, 349, 1124, 316, 191, 215, 0, 1158,
	394, 440, 452, 1231, 1143, 1152, 242, 1150, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 1192, 1211,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 1123, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	1138, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 1227, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 1216, 1258, 407, 451, 230, 521, 474, 1133,
	1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 1220,
	1127, 0, 1135, 1136, 1229, 1238, 1239, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 1191, 190, 211,
	352, 1254, 433, 275, 558, 531, 526, 197, 213, 1130,
	249, 1141, 1149, 0, 1155, 1163, 1164, 1176, 1178, 1179,
	1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224,
	1235, 1257, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 1190, 1196,
	364, 268, 291, 306, 1205, 530, 480, 217, 445, 277,
	240, 1223, 1225, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 1186, 1214, 359,
	496, 497, 302, 379, 0, 0, 0, 0, 495, 0,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 665, 0, 0, 0, 257,
	670, 0, 0, 0, 350, 254, 0, 0, 412, 0,
	196, 0, 465, 241, 360, 357, 503, 269, 260, 256,
	239, 303, 368, 410, 485, 404, 677, 354, 0, 0,
	475, 383, 0, 0, 0, 0, 0, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 395, 476, 273, 0, 89, 0, 0, 797, 765,
	766, 801, 810, 811, 812, 813, 814, 802, 805, 0,
	0, 228, 803, 804, 235, 705, 707, 706, 724, 725,
	726, 727, 728, 729, 730, 703, 807, 815, 816, 0,
	252, 307, 259, 251, 500, 0, 0, 1918, 1919, 1920,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	647, 662, 0, 676, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 660, 0, 0, 0, 0, 759,
	0, 661, 0, 0, 669, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	384, 244, 0, 758, 0, 0, 540, 0, 0, 756,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 394, 440, 452, 0, 0, 0, 242, 0, 450,
	408, 519, 223, 271, 437, 414, 448, 421, 274, 0,
	0, 449, 355, 505, 431, 516, 541, 542, 250, 388,
	528, 489, 536, 557, 216, 247, 402, 482, 522, 472,
	380, 501, 502, 315, 471, 282, 194, 353, 547, 214,
	458, 0, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 711, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 719, 720,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	769, 757, 682, 773, 684, 770, 771, 679, 680, 683,
	772, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	760, 668, 667, 0, 675, 0, 701, 702, 704, 708,
	709, 710, 721, 722, 723, 731, 733, 734, 732, 735,
	736, 737, 740, 741, 742, 743, 738, 739, 744, 685,
	689, 686, 687, 688, 700, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 783, 784, 785, 786, 787,
	788, 714, 718, 717, 715, 716, 712, 713, 666, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	774, 249, 775, 0, 0, 779, 0, 0, 0, 781,
	780, 0, 782, 748, 747, 0, 0, 776, 777, 0,
	778, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 789, 790, 791, 792, 793,
	794, 795, 796, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 809, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 0, 379,
	359, 496, 497, 302, 495, 0, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 665, 0, 0, 0, 257, 670, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 677, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 673, 674, 0, 0, 0, 0, 0,
	0, 2067, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 89, 0, 0, 797, 765, 766, 801, 810, 811,
	812, 813, 814, 802, 805, 0, 0, 228, 803, 804,
	235, 705, 707, 706, 724, 725, 726, 727, 728, 729,
	730, 703, 807, 815, 816, 2068, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 647, 662, 0, 676,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	660, 0, 0, 0, 0, 759, 0, 661, 0, 0,
	669, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 758,
	0, 0, 540, 0, 0, 756, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 0, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 711,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 719, 720, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 769, 757, 682, 773,
	684, 770, 771, 679, 680, 683, 772, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 760, 668, 667, 0,
	675, 0, 701, 702, 704, 708, 709, 710, 721, 722,
	723, 731, 733, 734, 732, 735, 736, 737, 740, 741,
	742, 743, 738, 739, 744, 685, 689, 686, 687, 688,
	700, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 783, 784, 785, 786, 787, 788, 714, 718, 717,
	715, 716, 712, 713, 666, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 774, 249, 775, 0,
	0, 779, 0, 0, 0, 781, 780, 0, 782, 748,
	747, 0, 0, 776, 777, 0, 778, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 789, 790, 791, 792, 793, 794, 795, 796, 286,
	515, 544, 0, 0, 361, 0, 0, 364, 268, 291,
	306, 0, 530, 480, 217, 445, 277, 240, 809, 0,
	202, 236, 220, 246, 261, 264, 310, 374, 382, 411,
	416, 283, 258, 234, 438, 231, 463, 486, 487, 488,
	490, 378, 253, 415, 0, 0, 359, 496, 497, 302,
	379, 0, 0, 0, 80, 495, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 665, 0, 0, 0, 257, 670, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 677, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 673, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 89, 0, 0, 797, 765, 766, 801, 810,
	811, 812, 813, 814, 802, 805, 0, 0, 228, 803,
	804, 235, 705, 707, 706, 724, 725, 726, 727, 728,
	729, 730, 703, 807, 815, 816, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 647, 662, 0,
	676, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 660, 0, 0, 0, 0, 759, 0, 661, 0,
	0, 669, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	758, 0, 0, 540, 0, 0, 756, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	711, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 719, 720, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 769, 757, 682,
	773, 684, 770, 771, 679, 680, 683, 772, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 760, 668, 667,
	0, 675, 0, 701, 702, 704, 708, 709, 710, 721,
	722, 723, 731, 733, 734, 732, 735, 736, 737, 740,
	741, 742, 743, 738, 739, 744, 685, 689, 686, 687,
	688, 700, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 783, 784, 785, 786, 787, 788, 714, 718,
	717, 715, 716, 712, 713, 666, 190, 211, 352, 88,
	433, 275, 558, 531, 526, 197, 213, 774, 249, 775,
	0, 0, 779, 0, 0, 0, 781, 780, 0, 782,
	748, 747, 0, 0, 776, 777, 0, 778, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 789, 790, 791, 792, 793, 794, 795, 796,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 809,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 665, 0,
	0, 0, 257, 670, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 677,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	673, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 89, 0,
	0, 797, 765, 766, 801, 810, 811, 812, 813, 814,
	802, 805, 0, 0, 228, 803, 804, 235, 705, 707,
	706, 724, 725, 726, 727, 728, 729, 730, 703, 807,
	815, 816, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 647, 662, 0, 676, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 660, 0, 0,
	0, 0, 759, 0, 661, 0, 0, 669, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 758, 0, 0, 540,
	0, 0, 756, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 3377, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 711, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 719, 720, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 769, 757, 682, 773, 684, 770, 771,
	679, 680, 683, 772, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 760, 668, 667, 0, 675, 0, 701,
	702, 704, 708, 709, 710, 721, 722, 723, 731, 733,
	734, 732, 735, 736, 737, 740, 741, 742, 743, 738,
	739, 744, 685, 689, 686, 687, 688, 700, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 783, 784,
	785, 786, 787, 788, 714, 718, 717, 715, 716, 712,
	713, 666, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 774, 249, 775, 0, 0, 779, 0,
	0, 0, 781, 780, 0, 782, 748, 747, 0, 0,
	776, 777, 0, 778, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 789, 790,
	791, 792, 793, 794, 795, 796, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 809, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 665, 0, 0, 0, 257, 670,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 677, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 673, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 1488, 797, 765, 766,
	801, 810, 811, 812, 813, 814, 802, 805, 0, 0,
	228, 803, 804, 235, 705, 707, 706, 724, 725, 726,
	727, 728, 729, 730, 703, 807, 815, 816, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 647,
	662, 0, 676, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 660, 0, 0, 0, 0, 759, 0,
	661, 0, 0, 669, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 758, 0, 0, 540, 0, 0, 756, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 711, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 719, 720, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 769,
	757, 682, 773, 684, 770, 771, 679, 680, 683, 772,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 760,
	668, 667, 0, 675, 0, 701, 702, 704, 708, 709,
	710, 721, 722, 723, 731, 733, 734, 732, 735, 736,
	737, 740, 741, 742, 743, 738, 739, 744, 685, 689,
	686, 687, 688, 700, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 783, 784, 785, 786, 787, 788,
	714, 718, 717, 715, 716, 712, 713, 666, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 774,
	249, 775, 0, 0, 779, 0, 0, 0, 781, 780,
	0, 782, 748, 747, 0, 0, 776, 777, 0, 778,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 789, 790, 791, 792, 793, 794,
	795, 796, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 809, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	665, 0, 0, 0, 257, 670, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 677, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 673, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	89, 0, 0, 797, 765, 766, 801, 810, 811, 812,
	813, 814, 802, 805, 0, 0, 228, 803, 804, 235,
	705, 707, 706, 724, 725, 726, 727, 728, 729, 730,
	703, 807, 815, 816, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 647, 662, 0, 676, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 660,
	899, 0, 0, 0, 759, 0, 661, 0, 0, 669,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 758, 0,
	0, 540, 0, 0, 756, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 711, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 719, 720, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 769, 757, 682, 773, 684,
	770, 771, 679, 680, 683, 772, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 760, 668, 667, 0, 675,
	0, 701, 702, 704, 708, 709, 710, 721, 722, 723,
	731, 733, 734, 732, 735, 736, 737, 740, 741, 742,
	743, 738, 739, 744, 685, 689, 686, 687, 688, 700,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	783, 784, 785, 786, 787, 788, 714, 718, 717, 715,
	716, 712, 713, 666, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 774, 249, 775, 0, 0,
	779, 0, 0, 0, 781, 780, 0, 782, 748, 747,
	0, 0, 776, 777, 0, 778, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	789, 790, 791, 792, 793, 794, 795, 796, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 809, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 665, 0, 0, 0,
	257, 670, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 677, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 797,
	765, 766, 801, 810, 811, 812, 813, 814, 802, 805,
	0, 0, 228, 803, 804, 235, 705, 707, 706, 724,
	725, 726, 727, 728, 729, 730, 703, 807, 815, 816,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 647, 662, 0, 676, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 659, 660, 0, 0, 0, 0,
	759, 0, 661, 0, 0, 669, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 758, 0, 0, 540, 0, 0,
	756, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 711, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 719,
	720, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 769, 757, 682, 773, 684, 770, 771, 679, 680,
	683, 772, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 760, 668, 667, 0, 675, 0, 701, 702, 704,
	708, 709, 710, 721, 722, 723, 731, 733, 734, 732,
	735, 736, 737, 740, 741, 742, 743, 738, 739, 744,
	685, 689, 686, 687, 688, 700, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 783, 784, 785, 786,
	787, 788, 714, 718, 717, 715, 716, 712, 713, 666,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 774, 249, 775, 0, 0, 779, 0, 0, 0,
	781, 780, 0, 782, 748, 747, 0, 0, 776, 777,
	0, 778, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 789, 790, 791, 792,
	793, 794, 795, 796, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 809, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 665, 0, 0, 0, 257, 670, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 677, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 673, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 89, 0, 0, 797, 765, 766, 801, 810,
	811, 812, 813, 814, 802, 805, 0, 0, 228, 803,
	804, 235, 705, 707, 706, 724, 725, 726, 727, 728,
	729, 730, 703, 807, 815, 816, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	676, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 660, 0, 0, 0, 0, 759, 0, 661, 0,
	0, 669, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	758, 0, 0, 540, 0, 0, 756, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	711, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 719, 720, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 769, 757, 682,
	773, 684, 770, 771, 679, 680, 683, 772, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 760, 668, 667,
	0, 675, 0, 701, 702, 704, 708, 709, 710, 721,
	722, 723, 731, 733, 734, 732, 735, 736, 737, 740,
	741, 742, 743, 738, 739, 744, 685, 689, 686, 687,
	688, 700, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 783, 784, 785, 786, 787, 788, 714, 718,
	717, 715, 716, 712, 713, 666, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 774, 249, 775,
	0, 0, 779, 0, 0, 0, 781, 780, 0, 782,
	748, 747, 0, 0, 776, 777, 0, 778, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 789, 790, 791, 792, 793, 794, 795, 796,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 809,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 969, 540,
	0, 0, 0, 0, 0, 966, 967, 349, 927, 316,
	191, 215, 960, 964, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 797, 0, 0,
	1451, 1454, 0, 0, 0, 0, 1449, 1453, 0, 0,
	228, 1450, 1448, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 0, 359,
	496, 497, 302, 379, 0, 0, 0, 80, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 412, 0,
	196, 0, 465, 241, 360, 357, 503, 269, 260, 256,
	239, 303, 368, 410, 485, 404, 0, 354, 0, 0,
	475, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 395, 476, 273, 0, 89, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 500, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	384, 244, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 394, 440, 452, 0, 0, 0, 242, 0, 450,
	408, 519, 223, 271, 437, 414, 448, 421, 274, 0,
	0, 449, 355, 505, 431, 516, 541, 542, 250, 388,
	528, 489, 536, 557, 216, 247, 402, 482, 522, 472,
	380, 501, 502, 315, 471, 282, 194, 353, 547, 214,
	458, 0, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 88, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 2054, 0,
	0, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 0, 1507,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	1509, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 626, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 1288, 0, 1289, 1290, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 0, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 0, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	0, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 0,
	0, 407, 451, 230, 521, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 0, 190, 211, 352, 0, 433,
	275, 558, 531, 526, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 0, 361, 0, 0, 364, 268, 291,
	306, 0, 530, 480, 217, 445, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 374, 382, 411,
	416, 283, 258, 234, 438, 231, 463, 486, 487, 488,
	490, 378, 253, 415, 0, 0, 359, 496, 497, 302,
	379, 0, 0, 0, 80, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 89, 0, 1488, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 88,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 89, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 2054, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 2005, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 2003,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	927, 316, 191, 215, 925, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 2005, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 188,
	0, 0, 0, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 1488, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 3287, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 2405, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 2390,
	0, 0, 0, 2391, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1530, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 626,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 3411, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 3287, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 1793, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 626,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 1655,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 1653, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1651, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 1649, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1647, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 1643,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 1641, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 1639, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	1614, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 1515,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 89, 0, 0, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 1270, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 880, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 379, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 583,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 0, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 379, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 0, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 0, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 0, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 0, 0, 407, 451, 230, 521,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 0,
	190, 211, 352, 0, 433, 275, 558, 531, 526, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 3419, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	0, 0, 364, 268, 291, 306, 0, 530, 480, 217,
	445, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 0,
	379, 359, 496, 497, 302, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 412, 0, 196, 0, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 0, 354, 0, 0, 475, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 500, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 384, 244, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 394, 440,
	452, 0, 0, 0, 242, 0, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 0, 0, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 0, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 509, 510, 243, 560,
	218, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 339, 340, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 367, 464, 518, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 373, 381,
	498, 298, 206, 207, 208, 491, 492, 493, 494, 532,
	533, 537, 441, 442, 443, 444, 279, 527, 295, 447,
	446, 317, 318, 362, 430, 0, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 287, 288, 425, 426, 300, 301, 555, 556,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 0, 379, 359, 496, 497,
	302, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 0,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	242, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 0, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	0, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 0, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 0, 0, 359,
	496, 497, 302,
}

var yyPact = [...]int{
	-1000, -1000, 4796, -1000, -451, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2136, 2323,
	-1000, -1000, -1000, -1000, 2335, -1000, 877, 1835, -1000, 2128,
	302, -1000, 48038, 639, -1000, 45454, 638, 207, 30596, -1000,
	229, -1000, 206, 46746, 223, -1000, -1000, -1000, -270, 20250,
	2035, 97, 91, 48038, -1000, -1000, -1000, -1000, 2289, 1823,
	-1000, 389, -1000, -1000, -1000, -1000, -1000, -1000, 44808, -1000,
	1044, -1000, -1000, 2147, 2141, 2347, 781, 2106, -1000, 2222,
	1823, -1000, 20250, 2274, 2203, 19604, 19604, 554, -1000, -1000,
	258, -1000, -1000, 26074, 48038, 33180, 489, -1000, 2128, -1000,
	-1000, -1000, 162, -1000, 443, 1745, -1000, 1741, -1000, 775,
	553, 455, 562, 561, 453, 449, 448, 444, 441, 440,
	430, 429, 463, -1000, 817, 817, -114, -118, 3146, 575,
	508, 508, 731, 596, 2083, 2063, -1000, -1000, 817, 817,
	817, 379, 817, 817, 817, 817, 395, 385, 817, 817,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	817, 817, 817, 817, 817, 460, 2128, 310, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48038, 212, 48038, -1000, 698, 48038, 956, 956, 235,
	956, 956, 956, 956, 261, 743, 90, -1000, 243, 293,
	231, 296, 939, 244, -1000, -1000, 303, 939, 1331, -1000,
	795, 227, -1000, 956, 956, -1000, 13765, 167, 13765, 13765,
	-1000, 2093, -1000, -1000, -1000, -1000, -1000, 1354, -1000, -1000,
	-1000, -1000, -1000, 585, -1000, -1000, -1000, -1000, 46746, 44162,
	-1000, -1000, 55, -1000, -1000, 1532, 1218, 20250, 1002, -1000,
	1179, 749, -1000, -1000, -1000, -1000, -1000, 672, -1000, 20896,
	20896, 20896, 20896, -1000, -1000, 1538, 43516, 1538, 1538, 20896,
	1538, -1000, 20896, 1538, 1538, 1538, 20250, 1538, 1538, 1538,
	1538, -1000, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	-1000, -1000, -1000, -1000, 1538, 697, 1538, 1538, 1538, 1538,
	1538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1538,
	1538, 1538, 1538, 1538, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22188, -1000, 17666, 1538,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	48038, -1000, 1538, 252, 46746, 46746, 445, 2222, 1823, -1000,
	2289, 2284, 389, -1000, 2750, 1456, 1537, 1374, 1823, 1727,
	48038, -1000, 1751, -1000, -1000, -1000, -1000, 1947, 1233, 1329,
	-1000, -1000, -1000, -1000, 1560, 20250, -1000, -1000, 2324, -1000,
	23485, 695, 2320, 42870, -1000, 554, 554, 1739, 442, 35,
	-1000, -1000, -1000, -1000, 849, 29950, -1000, -1000, -1000, -1000,
	1724, 48038, -1000, -1000, 4087, 1262, -1000, 1833, -1000, 1685,
	-1000, 1773, 20250, 1792, 633, 1262, 623, 620, 612, -1000,
	-19, -1000, -1000, -1000, -1000, -1000, -1000, 817, 817, 817,
	-1000, 451, 2273, 302, 4770, -1000, -1000, -1000, 42224, 1825,
	1262, -1000, 1821, -1000, 929, 650, 718, 718, 1262, -1000,
	-1000, 47392, 1262, 916, 902, 1262, 1262, 46746, 46746, -1000,
	41578, -1000, 40932, 40286, 1180, 46746, 39640, 38994, 38348, 37702,
	37056, -1000, 1969, -1000, 1810, -1000, -1000, -1000, 47392, 1262,
	1262, 47392, 46746, 47392, 48038, 1262, -1000, -1000, 390, -1000,
	-1000, 1178, 1177, 1176, 817, 817, 1175, 1328, 1323, 1320,
	817, 817, 1160, 1306, 31888, 1303, 364, 1155, 1147, 1138,
	1185, 1301, 189, 1300, 1162, 1154, 1133, 46746, 1816, 48038,
	-1000, 287, 808, 446, 848, 2128, 2031, 1738, 582, 629,
	1262, 540, 540, 46746, -1000, 15718, -1000, -1000, 1295, 20250,
	-1000, 948, 939, 939, -1000, -1000, -1000, -1000, -1000, -1000,
	956, 48038, 948, -1000, -1000, -1000, 939, 956, 48038, 956,
	956, 956, 956, 939, 939, 939, 956, 48038, 48038, 48038,
	48038, 48038, 48038, 48038, 48038, 48038, 13765, 795, 956, -278,
	-1000, 1294, -1000, 1953, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13765, 13765, -1000, -1000, -1000, -1000, 221, -1000, 36410, 402,
	847, -1000, 1737, 35764, -1000, -285, -291, -308, -325, -1000,
	-1000, -1000, -363, -368, -1000, -1000, -1000, 20250, 20250, 20250,
	20250, -146, -1000, 930, 20896, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 199, 881, 20896, 20896, 20896, 20896, 20896, 20896,
	20896, 20896, 20896, 20896, 20896, 20896, 20896, 20896, 20896, -1000,
	-1000, 28012, 6167, 6167, 749, 749, 749, 749, -1000, -83,
	1736, 47392, -1000, -1000, -1000, 694, 20250, 20250, 749, -1000,
	1262, 17666, 35118, 19604, 19604, 20250, 856, 1218, 47392, 20250,
	-1000, 1374, -1000, -1000, -1000, 1087, -1000, 937, 2092, 2092,
	2092, 2092, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250,
	20250, 20250, 2092, 46746, 46746, 213, 20250, 20250, 20250, 20250,
	20250, 20250, 16369, 20250, 20250, 20896, 20250, 20250, 20250, 1374,
	20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250,
	20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250,
	20250, 20250, 20250, 20250, 20250, 20250, 20250, 1374, 20250, 1124,
	20250, 20250, 19604, 15067, 19604, 19604, 19604, 19604, 19604, -1000,
	-1000, -1000, -1000, -1000, 20250, 20250, 20250, 20250, 20250, 20250,
	20250, 20250, 1374, 20250, 20250, 20250, 20250, 20250, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1523, 1420, 1401, 20250, -1000,
	1734, -1000, -89, 25428, 20250, 1293, 2319, 1856, 46746, -1000,
	-1000, -1000, 2222, -1000, 2222, 1523, 2730, 1974, 19604, -1000,
	-1000, 2730, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1454, -1000, 48038, 1727, 2186, 46746, 1979, 1291, 439, -1000,
	20250, 20250, 1717, -1000, 1258, 48038, -1000, -146, -1000, 34472,
	-1000, -1000, 13114, 48038, 413, 48038, -1000, 24782, 33826, 278,
	35, -1000, 1623, -1000, 47, 46, 17015, 748, -1000, -1000,
	-1000, 3146, 21542, 1512, 748, 141, -1000, -1000, -1000, 1773,
	-1000, 1773, 1773, 1773, 1773, 439, 439, 439, 439, -1000,
	-1000, -1000, -1000, -1000, 1814, 1804, -1000, 1773, 1773, 1773,
	1773, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1800, 1800,
	1800, 1774, 1774, 493, -1000, 20250, 304, 33180, 2156, 1130,
	1660, 287, 548, 1851, 1262, 1262, 1262, 548, -1000, 1226,
	1225, 1223, -1000, -441, 1711, -1000, -1000, 2266, -1000, -1000,
	714, 969, 949, 619, 46746, 263, 410, -1000, 541, -1000,
	33180, 1262, 900, 718, 1262, -1000, 1262, -1000, -1000, -1000,
	-1000, -1000, 1262, -1000, -1000, 1709, -1000, 1721, 980, 947,
	979, 940, 1709, -1000, -1000, -88, 1709, -1000, 1709, -1000,
	1709, -1000, 1709, -1000, 1709, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 843, 233, -206, 46746, 263, 572,
	-1000, 568, 28012, -1000, -1000, -1000, 28012, 28012, -1000, -1000,
	-1000, -1000, 1289, 1286, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -426, 48038, -1000, 273, 845, 399, 420,
	335, 48038, 403, 2215, 2210, 2194, 2192, 2171, 372, 352,
	48038, 48038, 540, 1926, 48038, 2163, 48038, -1000, -1000, -1000,
	-1000, -1000, 1218, 48038, -1000, -1000, 956, 956, -1000, -1000,
	48038, 956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48038, -1000, -1000, -1000,
	-1000, 46746, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -110, 153, 65, 380, -1000, -1000, -1000, -1000, -1000,
	2219, -1000, 1218, 874, 876, -1000, 1538, -1000, -1000, 1055,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 199, 20896, 20896,
	20896, 1332, 560, 1618, 972, 1139, 920, 920, 890, 890,
	753, 753, 753, 753, 753, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1284, -1000, 1538, 47392, 1683, 15067, 1252,
	1236, 1374, 2551, -1000, 1678, -1000, 1678, 1156, 865, -1000,
	20250, 1374, 2503, -1000, -1000, 1374, 1374, 1374, 20250, -1000,
	-1000, 20250, 20250, 20250, 20250, 1660, 1660, 1660, 1660, 1660,
	1660, 1660, 1660, 1660, 1660, 20250, 1675, 1658, 2317, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1050, 1660, 1660, 1660, 1660, 1660, 20250, 1078, -1000, -1000,
	-1000, 1368, 2442, 1566, 2431, 1660, 1660, -1000, 1660, 2412,
	2377, 1374, 1532, 1374, 1656, -1000, 2358, 1660, 2354, 2350,
	2345, 1916, 2316, 2310, 2286, 1660, 1660, 1660, 1895, 2259,
	2245, 2224, 2216, 2200, 2182, 2173, 2169, 2158, 1660, -152,
	1660, 1374, -1000, -1000, -1000, -1000, -1000, 2149, 1887, 1374,
	1635, 1538, 692, -1000, -1000, 1678, 1374, 1374, 1678, 1678,
	2127, 2122, 2095, 2085, 2079, 2062, 1660, 1660, -1000, 1660,
	2041, 2015, 1714, 1680, 1374, -1000, 1401, 48038, -1000, -271,
	-1000, 29, 766, 1538, -1000, 31888, 1374, -1000, 5328, -1000,
	1188, -1000, -1000, -1000, -1000, -1000, 29304, 1461, 2730, -1000,
	-1000, 1538, 1672, -1000, -1000, 439, 114, 28658, 746, 746,
	154, 1218, 1218, 20250, -1000, -1000, -1000, -1000, -1000, -1000,
	687, 2290, 386, 1538, -1000, 1611, 2669, -1000, -1000, -1000,
	2185, 22839, -1000, 1538, 1538, 48038, 1596, 1496, -1000, 685,
	-1000, 1357, 1623, 35, 64, -1000, -1000, -1000, -1000, 1218,
	-1000, 1201, 427, 1480, -1000, 512, -1000, -1000, -1000, -1000,
	2051, 124, -1000, -1000, -1000, 272, 439, -1000, -1000, -1000,
	-1000, -1000, -1000, 1281, 1281, -1000, -1000, -1000, -1000, -1000,
	1126, -1000, -1000, -1000, 1108, -1000, -1000, 1937, 1890, 304,
	-1000, -1000, 817, 1278, -1000, -1000, 2058, 817, 817, 46746,
	-1000, -1000, 1491, 2156, 273, 48038, 861, 1925, -1000, 1851,
	1851, 1851, 48038, -1000, -1000, -1000, -1000, -1000, -1000, -433,
	68, 414, -1000, -1000, -1000, 3470, 46746, 1651, -1000, 257,
	-1000, 1473, -1000, 46746, -1000, 1626, 1789, 1262, 1262, -1000,
	-1000, -1000, 46746, 1538, -1000, -1000, -1000, -1000, 627, 2119,
	321, -1000, -1000, -171, -1000, -1000, 263, 257, 47392, 1262,
	748, -1000, -1000, -1000, -1000, -1000, -429, 1614, 609, 262,
	343, 48038, 48038, 48038, 48038, 48038, 651, -1000, -1000, 76,
	-1000, -1000, 245, -1000, -1000, -1000, -1000, 245, -1000, -1000,
	-1000, -1000, 313, 564, -1000, 48038, 48038, 658, -1000, -1000,
	-1000, 939, -1000, -1000, 939, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2112, 48038, 49, -394, -1000,
	-388, 20250, -1000, -1000, -1000, -1000, 1240, 556, 1618, 20896,
	20896, 20896, -1000, -1000, -1000, 661, 661, 28012, -1000, 20250,
	19604, -1000, -1000, 20250, 20250, 844, -1000, 20250, 1025, -1000,
	20250, -1000, -1000, -1000, 1401, 1660, 1660, 1660, 1660, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1559,
	20250, 20250, 20250, 1374, 349, -1000, -1000, -1000, -1000, -1000,
	2314, -1000, 20250, -1000, 28012, 20250, 20250, 20250, -1000, -1000,
	-1000, 20250, 20250, -1000, -1000, 20250, 20250, -1000, 20250, 20250,
	20250, -1000, 20250, 20250, 20250, 20250, -1000, -1000, -1000, -1000,
	20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250, 20250,
	-1000, -1000, 33180, 116, -152, 1124, 116, 1124, -1000, 19604,
	14416, -1000, -1000, -1000, -1000, -1000, 20250, 20250, 20250, 20250,
	20250, 20250, -1000, -1000, -1000, 20250, 20250, -1000, 20250, -1000,
	20250, -1000, -1000, -1000, -1000, -1000, 766, -1000, 718, 718,
	718, 46746, -1000, -1000, -1000, -1000, 1619, -1000, 2217, -1000,
	1995, 1989, 2311, 2290, -1000, 24782, 2730, -1000, -1000, 46746,
	-262, -1000, 2026, 2086, 746, 746, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12463, 2222, 20250, 1922, 47392, 151, -1000,
	24136, 46746, 47392, 24782, 24782, 24782, 24782, 24782, -1000, 1965,
	1949, -1000, 1971, 1946, 1993, 48038, -1000, 1594, 1374, 2284,
	22839, 389, 20250, 26720, 1488, 24782, -1000, -1000, 24782, 48038,
	11812, -1000, -1000, 41, 20, -1000, -1000, -1000, -1000, 3146,
	-1000, -1000, 928, 2178, 2045, -1000, -1000, -1000, -1000, -1000,
	1569, -1000, 1567, 1616, 1552, 233, -1000, 1783, 2110, 817,
	817, -1000, 1105, -1000, 1262, 1277, 1276, -1000, -1000, -1000,
	598, -1000, 2161, 48038, 1920, 1909, 1905, -1000, -439, 1104,
	1786, 1624, 20250, 1777, 2265, 1582, 46746, -1000, -1000, 47392,
	-1000, 306, -1000, 304, 46746, -1000, -1000, -1000, 410, 48038,
	-1000, 6306, -1000, -1000, -1000, 257, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 48038, 274, -1000, 1775, 1350, -1000, -1000,
	1576, -1000, -1000, -1000, -1000, 217, 351, 1273, 237, 1272,
	237, -1000, 48038, 648, 1890, 48038, -1000, -1000, -1000, 956,
	956, -1000, -1000, 2096, -1000, 1262, 1660, 20896, 20896, -1000,
	749, 295, -125, 1773, 1773, -1000, 1773, 1774, -1000, 1773,
	196, 1773, 187, 1773, -1000, -1000, 1374, 1374, 1401, -1000,
	1676, 1462, -1000, 1218, 20250, 2007, -1000, -1000, -1000, -1000,
	-1000, -25, 2001, 1980, 1660, -1000, 1772, 1764, 20250, 1660,
	1374, 1670, 1660, 1660, 1660, 1660, -1000, 1218, 1401, 1964,
	1401, 1660, 1660, 1956, 347, 1660, 1540, 1540, 1540, 1540,
	1540, 1401, 1401, 1401, 1401, 46746, -1000, -152, -1000, -1000,
	-193, -197, -1000, 1374, -152, 1606, 1374, -1000, 1584, 1580,
	1941, 1572, 1660, 1931, 1660, 1660, 1660, 1505, -1000, 2218,
	2218, 2218, 1516, 1188, 48038, -1000, -1000, -1000, -1000, 2290,
	2299, 1589, -1000, -1000, 114, 450, -1000, 2003, 2086, -1000,
	2262, 2020, 2255, -1000, -1000, -1000, -1000, -1000, 1218, -1000,
	2137, 1520, -1000, 828, 1545, -1000, -1000, 18958, 1530, 1987,
	681, 1516, 1778, 2669, 1854, 1896, 2610, -1000, -1000, -1000,
	-1000, 1943, -1000, 1897, -1000, -1000, 1751, -1000, -1000, 1420,
	1374, 1899, 413, 24782, 1574, 1574, -1000, 666, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 997, 5895, 2339, -1000, 1271,
	-1000, 1198, 194, 1101, -1000, -1000, 817, 817, -1000, 897,
	887, -1000, 48038, 1761, -1000, 439, 1268, 439, 1085, -1000,
	1082, -1000, -1000, -1000, -1000, 1787, 1942, -1000, -1000, -1000,
	-1000, 48038, -1000, -1000, 48038, 48038, 48038, 1760, 2254, -1000,
	20250, 1759, 819, 1852, 46746, 46746, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 536, 817, -406,
	348, 317, 817, 817, 817, -440, -1000, -1000, 1499, 1484,
	-1000, -116, -1000, 20250, -1000, -1000, -1000, 1115, 1115, -1000,
	1751, -1000, -1000, -1000, 1443, -1000, -1000, -100, 46746, 46746,
	46746, 46746, -1000, -1000, 1129, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 749, 1374, 341,
	-103, 1374, -1000, -1000, 439, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20250, -1000, 20250, -1000, 1218,
	20250, 2222, 1267, 20250, 20250, -1000, 1081, 1073, 1660, -1000,
	-1000, -1000, 20250, -1000, -1000, -1000, -1000, -1000, 20250, -1000,
	-1000, -1000, 20250, 282, 661, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1374, 411, -1000, -1000, -1000,
	-1000, 2309, -1000, 1374, 20250, -1000, -1000, 20250, -1000, 20250,
	20250, -1000, 20250, -1000, 20250, -1000, -1000, -1000, -1000, 20250,
	1538, 2069, 1538, 1538, 26720, -1000, -1000, 2299, 2226, 2253,
	2004, 2013, 2013, 2003, -1000, 2249, 2246, -1000, 1261, 2239,
	1260, 885, -1000, 47392, 20250, 151, -1000, 387, 46746, 151,
	46746, -1000, 2283, -1000, -1000, 20250, 1753, -1000, 20250, -1000,
	-1000, -1000, -1000, -1000, -1000, 6167, 2290, 1574, -1000, -1000,
	774, -1000, 20250, -1000, -1000, -1000, 3473, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1239, 1237, -1000, -1000, 1752,
	20250, -1000, -1000, -1000, 1431, 1398, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1751, -1000, -1000, -1000, -1000, 410,
	-435, 1818, 46746, 1072, -1000, 1481, 1582, 406, 151, 1228,
	817, 817, 817, 1068, 1051, 31888, 1467, -1000, 46746, 478,
	-1000, 410, -1000, -121, -122, 1660, -1000, -1000, 2175, -1000,
	-1000, 14416, -1000, -1000, 1750, 1848, -1000, -1000, -1000, -1000,
	1978, -86, -107, -1000, -1000, 1660, 1660, 1666, 1374, -1000,
	1660, 1660, 1389, 1377, -1000, 1660, 1401, 1475, -1000, 282,
	1374, 1889, -1000, -1000, 6167, -1000, -1000, 2283, 2236, 116,
	-1000, -1000, 260, 116, 1218, 1469, 1660, 1381, 1280, 1660,
	1660, 27366, -1000, 2232, 2225, 32534, 32534, 766, 2226, -161,
	20250, 20250, 2009, 1071, -1000, -1000, -1000, -1000, 1206, 1205,
	-1000, 1204, -1000, 2338, -1000, 1218, -1000, 151, -1000, 662,
	1545, -1000, 2222, 1218, 46746, 1218, 118, 2283, -1000, 1660,
	-1000, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538, 1538,
	1538, -1000, -1000, 46746, 1703, -1000, -1000, 2168, 1464, 67,
	-1000, 1458, -1000, -1000, 149, -1000, 20250, -1000, 31888, 1196,
	1195, -1000, -1000, -1000, -1000, -440, -1000, -1000, -1000, -1000,
	-1000, -1000, 389, 1578, -1000, 806, 46746, 48038, -1000, 1968,
	-1000, -1000, -1000, 20250, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20250, -1000, 1374, 1880, -1000, -282, -1000, -408,
	20250, -152, -1000, -1000, -152, -1000, 20250, -1000, -1000, 20250,
	-1000, 20250, -1000, -1000, 1450, -1000, -1000, -1000, -1000, -1000,
	1450, 1450, -1000, -161, -1000, 1554, -1000, 46746, 1218, 1532,
	-1000, 1041, -1000, -1000, -1000, -1000, -1000, 47392, 1545, 46746,
	-1000, 1441, 1374, 1538, 2222, -1000, 1428, -1000, 389, -1000,
	1749, 1624, -1000, -1000, -1000, 18312, -1000, -1000, -1000, -1000,
	-1000, 218, -94, 14416, 11161, 1418, -1000, -91, 1660, 1401,
	-1000, -379, -1000, -1000, -1000, -1000, 155, -1000, -1000, 1532,
	-1000, -1000, 1275, 1194, 1121, 31242, -1000, -1000, -1000, -1000,
	-161, -1000, -1000, 2165, -1000, -1000, 1526, -1000, -1000, 26720,
	46100, -1000, -79, 376, -94, 20250, 1747, 1374, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 45, -1000, -1000, -1000,
	-1000, -1000, 1576, -104, -1000, -1000, -1000, 222, -397, -191,
	-192, -1000, -1000, 20896, -1000, 20250, -1000, 20250, -1000, 20250,
	-1000, -1000, -1000, 46746, 1538, -1000, 1394, -1000, 3874, -207,
	1878, -1000, -32, -1000, -1000, -1000, 995, 1141, -1000, -1000,
	-1000, -1000, -1000, -1000, 1690, 46746, -1000, 491, -1000, -1000,
	-100, -109, 867, -1000, -1000, -1000, -1000, -1000, 1114, 1107,
	1660, -1000, 46746, -1000, 46100, -202, 748, 6167, -1000, 1875,
	1867, 2304, -1000, -1000, -1000, -1000, -1000, -1000, -446, 1372,
	284, -1000, -1000, 222, -1000, 20250, -1000, 20250, -1000, 1374,
	-1000, -1000, 2153, 118, -1000, 2312, -1000, 2305, 754, 754,
	-1000, 1031, -446, -1000, -1000, 1660, 1660, -1000, -211, -1000,
	-1000, -1000, -1000, -1000, 488, 1075, -1000, -1000, -1000, -1000,
	-1000, 6167, -1000, -1000, -1000, 205, 205, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2847, 2846, 39, 7, 38, 37, 2845, 30, 99,
	200, 41, 201, 106, 2844, 2843, 2840, 2839, 2837, 2836,
	2835, 184, 182, 178, 2834, 2833, 2831, 2827, 2826, 2825,
	2824, 2823, 2822, 2821, 180, 165, 197, 2820, 2819, 2818,
	125, 190, 90, 95, 196, 2816, 2811, 84, 2806, 2805,
	2804, 193, 192, 191, 920, 2800, 189, 123, 58, 2798,
	2792, 2791, 2787, 2786, 2785, 2784, 2782, 2781, 2780, 2779,
	2778, 2777, 2775, 2769, 2766, 2765, 248, 2764, 2763, 22,
	2762, 87, 2761, 2760, 2759, 2757, 12, 2756, 2750, 19,
	47, 2748, 2747, 53, 2746, 2740, 2733, 2732, 2731, 18,
	2730, 27, 2728, 42, 2727, 2725, 135, 2724, 2723, 2722,
	44, 2718, 2717, 2715, 2713, 2712, 2711, 2708, 151, 2706,
	2705, 2704, 174, 205, 2703, 2701, 169, 113, 116, 2700,
	2697, 108, 198, 2696, 132, 2695, 2694, 2689, 160, 2684,
	3334, 2681, 2674, 75, 72, 2672, 118, 2670, 2669, 11,
	29, 71, 10, 4, 5, 2664, 2662, 70, 86, 2660,
	114, 2659, 2651, 109, 77, 2648, 101, 105, 2646, 2645,
	15, 9, 2637, 2, 6, 3, 76, 2625, 2624, 119,
	2620, 2617, 2609, 100, 2608, 2607, 173, 2606, 98, 138,
	111, 82, 2604, 52, 64, 2601, 2599, 2597, 2596, 2595,
	57, 2586, 2585, 2584, 148, 67, 172, 2583, 46, 56,
	62, 146, 2580, 51, 92, 175, 2578, 2577, 147, 143,
	2576, 2566, 66, 45, 54, 2565, 104, 136, 126, 50,
	102, 139, 2564, 2563, 65, 80, 2560, 2559, 2558, 2556,
	176, 2553, 2550, 79, 2547, 63, 2546, 206, 2545, 17,
	59, 49, 171, 2543, 81, 2539, 2538, 73, 140, 78,
	43, 2537, 170, 2536, 60, 168, 133, 164, 2534, 2524,
	2521, 2519, 194, 359, 2515, 2508, 149, 185, 154, 157,
	96, 2506, 365, 2504, 2503, 103, 2132, 6137, 2501, 40,
	167, 2500, 2496, 7856, 150, 48, 26, 2492, 120, 2486,
	2483, 2476, 2468, 221, 177, 117, 166, 69, 2467, 2461,
	2459, 23, 2457, 2452, 2448, 2444, 2443, 2442, 91, 36,
	35, 34, 211, 74, 14, 107, 161, 83, 2440, 2436,
	2434, 128, 93, 2433, 163, 162, 129, 130, 2430, 186,
	152, 124, 2429, 94, 32, 2428, 2427, 2424, 2419, 97,
	2417, 2415, 2414, 2413, 159, 153, 127, 88, 2412, 89,
	122, 158, 156, 68, 2411, 61, 2409, 2408, 31, 195,
	28, 2402, 20, 115, 145, 2401, 5674, 187, 2395, 21,
	364, 155, 2394, 2393, 8, 13, 16, 2387, 2383, 2380,
	2379, 141, 2378, 2376, 2374, 2372, 25, 55, 24, 1,
	121, 85, 2371, 2360, 5176, 0, 134, 2357, 199,
}

//line sql.y:7838
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 402, 403, 403, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 254, 376,
	377, 377, 252, 252, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 406, 406, 181, 181, 179, 179, 180, 180, 257,
	257, 24, 25, 25, 267, 267, 266, 266, 266, 268,
	268, 268, 268, 306, 306, 306, 26, 26, 26, 26,
	26, 124, 124, 379, 379, 378, 372, 372, 371, 371,
	370, 375, 375, 374, 374, 373, 38, 39, 48, 48,
	48, 48, 49, 50, 380, 380, 345, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 347, 347, 333, 333, 346, 346, 346,
	346, 346, 346, 346, 332, 332, 135, 135, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 395, 395, 395, 394, 394,
	233, 233, 233, 233, 233, 233, 233, 233, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 156, 156, 152,
	152, 152, 153, 153, 153, 154, 154, 396, 396, 396,
	396, 311, 311, 311, 311, 314, 314, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 313, 313, 313, 313,
	313, 315, 315, 315, 315, 315, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 317, 317, 317, 317, 317, 317, 317, 317,
	331, 331, 318, 318, 326, 326, 327, 327, 327, 328,
	328, 328, 329, 329, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 325, 325, 324, 324, 324, 334, 359,
	359, 358, 358, 356, 356, 356, 356, 356, 356, 356,
	356, 343, 343, 353, 353, 353, 353, 353, 342, 342,
	338, 338, 338, 339, 339, 340, 340, 337, 337, 341,
	341, 355, 355, 354, 354, 335, 335, 336, 336, 361,
	397, 397, 397, 397, 397, 398, 398, 362, 387, 389,
	389, 389, 388, 388, 385, 386, 384, 384, 384, 384,
	384, 81, 81, 81, 280, 280, 281, 281, 351, 351,
	350, 350, 350, 352, 352, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 275, 275, 275, 383,
	383, 383, 383, 383, 383, 382, 382, 382, 348, 348,
	348, 381, 381, 57, 57, 214, 214, 400, 400, 401,
	401, 401, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 106, 106, 107, 107, 107, 107, 109, 109,
	109, 364, 364, 58, 58, 3, 3, 169, 171, 172,
	172, 170, 170, 170, 170, 170, 170, 60, 60, 59,
	59, 174, 173, 175, 175, 175, 1, 1, 2, 2,
	4, 4, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 330, 330, 330, 363, 363, 365,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	112, 111, 111, 110, 113, 113, 113, 113, 113, 113,
	113, 113, 367, 367, 367, 61, 61, 368, 319, 320,
	321, 5, 6, 344, 366, 120, 120, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 274, 274,
	283, 283, 273, 273, 298, 298, 298, 276, 276, 276,
	277, 277, 393, 393, 393, 270, 270, 64, 64, 64,
	299, 299, 299, 299, 66, 66, 67, 68, 68, 301,
	301, 302, 302, 69, 70, 82, 82, 82, 82, 82,
	82, 82, 105, 105, 105, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 390, 390, 391,
	392, 392, 392, 392, 73, 75, 31, 31, 31, 31,
	31, 31, 130, 130, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 125, 125, 125, 119,
	119, 407, 76, 77, 77, 123, 123, 123, 116, 116,
	116, 122, 122, 122, 16, 16, 17, 256, 256, 18,
	18, 127, 127, 129, 129, 129, 129, 129, 131, 131,
	131, 131, 131, 131, 131, 126, 126, 128, 128, 128,
	128, 291, 291, 291, 290, 290, 163, 163, 165, 164,
	164, 166, 166, 167, 167, 167, 167, 212, 212, 189,
	189, 250, 250, 249, 249, 255, 255, 251, 251, 251,
	251, 258, 258, 168, 168, 168, 168, 176, 176, 177,
	177, 178, 178, 300, 300, 296, 296, 296, 295, 295,
	182, 182, 182, 184, 183, 183, 183, 183, 185, 185,
	187, 187, 186, 186, 188, 193, 193, 192, 192, 190,
	190, 190, 190, 191, 191, 191, 191, 194, 194, 140,
	140, 140, 140, 140, 140, 140, 155, 155, 155, 155,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 240, 240, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 149, 216, 216, 215, 215, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 207, 207, 288,
	288, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 271, 271, 195, 195, 203, 203, 203, 203, 196,
	196, 196, 196, 196, 196, 196, 204, 204, 204, 211,
	205, 205, 201, 201, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	160, 160, 160, 160, 221, 221, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 148, 148, 161, 161, 161, 161, 162, 162, 162,
	162, 162, 162, 162, 308, 308, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 408, 408, 322,
	322, 322, 322, 202, 202, 202, 202, 202, 121, 121,
	121, 121, 121, 305, 305, 305, 309, 309, 309, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 310, 310, 219, 219, 117, 117,
	217, 217, 218, 220, 220, 213, 213, 213, 213, 198,
	198, 198, 222, 222, 223, 223, 101, 102, 102, 103,
	103, 224, 224, 226, 225, 225, 227, 228, 228, 228,
	229, 229, 230, 230, 230, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 132, 132,
	132, 132, 134, 134, 133, 133, 79, 79, 80, 80,
	80, 138, 138, 139, 139, 139, 136, 136, 137, 137,
	247, 247, 231, 231, 231, 238, 238, 238, 234, 234,
	236, 236, 236, 237, 237, 237, 235, 244, 244, 246,
	246, 245, 245, 241, 241, 242, 242, 243, 243, 243,
	239, 239, 197, 197, 197, 197, 197, 248, 248, 248,
	248, 259, 259, 208, 208, 210, 210, 209, 209, 159,
	260, 260, 264, 261, 261, 265, 265, 265, 265, 253,
	253, 253, 262, 262, 263, 263, 292, 292, 292, 269,
	269, 282, 282, 278, 278, 279, 279, 272, 272, 284,
	284, 284, 74, 206, 206, 360, 360, 357, 287, 287,
	289, 289, 293, 293, 297, 297, 294, 294, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 404, 405,
	303, 304, 304, 304,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 1, 6, 3,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 8, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 6, 5, 9, 6, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -402, -76, -407, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 9, 10, -104, -33, 32, -38, -48, 223, -49,
	-39, 224, -50, 226, 225, 262, 227, 255, 74, 309,
	310, 312, 313, 314, 315, -105, 260, 261, 229, 36,
	45, 33, 34, 37, 233, 268, 269, 232, -10, -34,
	8, -404, 11, 441, 257, 256, 28, -12, 503, 86,
	-77, -403, 655, -247, -231, 22, 33, 29, -230, -226,
	-123, -231, 20, 18, 7, -76, -76, -76, 12, 13,
	-76, -345, -347, 86, 157, 86, -76, -55, -54, -52,
	-51, -53, -56, 31, -45, -46, -369, -44, -41, 228,
	225, 272, 121, 122, 262, 263, 264, 227, 246, 261,
	265, 260, 281, -40, 81, 33, 503, 506, -352, 224,
	230, 231, 226, 442, 124, 123, 75, -349, 364, 536,
	625, -56, 627, 102, 105, 626, 44, 236, 628, 629,
	630, 543, 631, 245, 632, 633, 634, 635, 641, 584,
	642, 643, 644, 125, 7, -76, -297, -293, 89, -286,
	500, 248, 534, 535, 297, 81, 41, 509, 361, 364,
	536, 471, 625, 309, 323, 317, 476, 477, 478, 344,
	336, 501, 537, 510, 300, 249, 285, 619, 334, 133,
	627, 304, 538, 263, 369, 370, 539, 371, 102, 312,
	408, 640, 303, 540, 638, 105, 626, 79, 470, 51,
	622, 44, 258, 332, 232, 328, 628, 286, 541, 512,
	279, 124, 121, 647, 36, 326, 50, 30, 637, 123,
	49, 629, 148, 542, 630, 543, 373, 351, 613, 48,
	374, 264, 544, 84, 269, 505, 307, 621, 375, 490,
	327, 376, 296, 636, 229, 545, 604, 596, 597, 377,
	378, 614, 356, 352, 357, 492, 546, 400, 475, 379,
	600, 601, 654, 52, 547, 548, 615, 122, 549, 78,
	631, 80, 321, 322, 550, 294, 247, 495, 496, 402,
	348, 453, 460, 461, 109, 110, 456, 111, 462, 112,
	463, 464, 465, 454, 113, 106, 455, 466, 467, 349,
	350, 114, 468, 108, 107, 457, 459, 115, 469, 245,
	35, 380, 502, 298, 58, 273, 403, 46, 354, 651,
	45, 609, 497, 551, 612, 347, 343, 450, 53, 552,
	553, 554, 555, 472, 632, 346, 320, 342, 646, 4,
	291, 473, 633, 62, 231, 359, 358, 360, 280, 399,
	339, 556, 557, 558, 252, 82, 559, 329, 21, 560,
	561, 381, 287, 562, 56, 563, 564, 406, 261, 565,
	54, 634, 39, 566, 266, 648, 635, 567, 568, 569,
	570, 268, 571, 383, 572, 598, 599, 382, 353, 355,
	498, 275, 384, 504, 573, 308, 325, 265, 639, 574,
	253, 486, 487, 488, 489, 620, 494, 493, 267, 272,
	260, 407, 254, 575, 576, 577, 578, 579, 301, 595,
	580, 581, 313, 641, 451, 43, 582, 583, 584, 585,
	586, 295, 290, 401, 410, 61, 83, 366, 587, 588,
	618, 319, 288, 589, 310, 55, 642, 643, 644, 282,
	645, 479, 480, 481, 482, 9, 652, 653, 474, 386,
	125, 292, 293, 47, 340, 274, 590, 305, 591, 330,
	331, 345, 318, 341, 311, 605, 276, 387, 452, 262,
	592, 409, 289, 362, 367, 306, 508, 491, 281, 388,
	617, 507, 483, 484, 338, 335, 283, 485, 593, 389,
	237, 277, 278, 594, 606, 390, 391, 299, 392, 393,
	394, 395, 396, 398, 397, 602, 603, 284, 506, 316,
	333, 368, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	449, 235, -76, 235, -186, -293, 235, -262, 370, -283,
	372, 385, 380, 390, 378, -274, 381, 383, 275, -393,
	400, 235, 387, 223, 373, 382, 391, 392, 299, 398,
	393, 397, 284, 394, 395, 396, -376, 175, 630, 645,
	133, 337, 377, 375, 401, 609, 89, -299, 89, 90,
	91, -286, 311, -301, 316, -287, -376, -286, 314, -76,
	-303, -303, -125, 609, 611, -205, -140, 141, -155, -158,
	-146, -150, -199, -200, -201, -202, -156, -213, -252, 164,
	165, 172, 142, -211, -159, 26, 499, 443, 442, 175,
	31, -149, 218, 68, 69, 445, 144, 57, 11, 418,
	419, -157, 413, 420, 415, 470, 472, 473, 474, 471,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	475, 447, 448, 116, 449, 106, 108, 107, 450, 451,
	452, 334, 497, 498, 492, 495, 496, 494, 493, 349,
	350, 453, 454, 455, 109, 110, 111, 112, 113, 114,
	115, 456, 459, 457, 458, 460, 461, 462, 467, 468,
	463, 464, 465, 466, 469, -85, -97, 525, 524, -98,
	-147, -148, -161, -162, -287, -293, 240, 412, 234, 170,
	441, -151, -144, -376, -286, 90, 91, -8, -209, 411,
	416, 417, 421, 414, 511, 513, 528, 529, 531, 516,
	521, 520, 523, 486, 487, 488, 489, 490, 491, 596,
	597, 598, 599, 600, 601, 602, 603, 89, -153, -152,
	-195, 92, 98, 103, 104, 99, -399, 117, -404, 623,
	93, 94, 95, 96, 97, 118, 119, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 44,
	386, 386, -186, -76, -76, -76, -76, -224, -123, -226,
	-10, -8, -404, 8, -76, -8, -9, -13, -34, -36,
	530, -35, -293, 101, -231, -247, 12, 160, 42, 50,
	-229, -230, -12, -8, -140, 19, 23, 24, -128, 166,
	-140, -293, -128, -272, 239, -76, -76, -261, -306, 311,
	-265, 401, 609, 400, -253, -263, 89, -252, -262, 399,
	-346, 157, -332, -336, -287, 250, -362, 246, -186, -355,
	-354, -287, -404, -124, -282, 236, 244, 243, 134, -380,
	137, 292, 412, 234, -51, -52, -53, -262, 174, 629,
	-106, 267, 271, 87, 87, -336, -335, -334, -381, 271,
	250, -361, -353, 242, 251, -342, 243, 244, -337, 236,
	135, -381, -337, 241, 251, 246, 250, 271, 271, 125,
	271, 125, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 266, -343, 149, -343, 507, 507, -349, -381, 246,
	236, -381, -381, 242, -284, -337, 238, 25, 238, 35,
	35, -343, -343, -343, -262, 174, -343, -343, -343, -343,
	279, 279, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, 235,
	-380, -132, 397, 299, 81, -54, 281, -37, -186, -282,
	236, 237, -380, 268, -186, 219, -186, -276, 157, 15,
	-276, -273, 386, 384, 371, 376, -276, -276, -276, -276,
	282, 369, -338, 236, 35, 247, 386, 282, 369, 282,
	283, 282, 283, 379, 389, 282, -298, 14, 160, 412,
	374, 378, 275, 235, 276, 237, 388, 283, -298, 93,
	-277, 157, 386, 278, -276, -276, -304, -404, -289, -287,
	-285, 228, 23, 140, 25, 27, 143, 175, 128, 19,
	144, 37, 230, 337, 246, 174, 242, 442, 223, 72,
	511, 413, 415, 411, 418, 444, 445, 412, 372, 31,
	13, 513, 28, 256, 24, 38, 168, 225, 147, 514,
	259, 26, 257, 116, 119, 516, 22, 75, 251, 14,
	244, 40, 16, 517, 518, 17, 240, 239, 160, 236,
	70, 11, 218, 29, 156, 66, 519, 135, 520, 521,
	522, 523, 129, 68, 157, 20, 649, 416, 417, 33,
	610, 499, 270, 170, 73, 59, 611, 141, 414, 524,
	525, 117, 526, 120, 76, 616, 137, 18, 71, 42,
	527, 271, 528, 241, 650, 529, 404, 530, 158, 226,
	441, 69, 159, 623, 531, 624, 234, 385, 8, 446,
	32, 255, 243, 127, 67, 532, 235, 146, 447, 448,
	238, 130, 118, 7, 134, 34, 12, 74, 77, 419,
	420, 421, 57, 126, 503, 145, 15, 533, 405, 139,
	-376, 612, -304, -304, 32, 90, 238, -287, -186, -82,
	604, 227, -130, 386, -118, 175, 630, 613, 614, 615,
	612, 383, 620, 618, 616, 282, 617, 87, 137, 139,
	140, 4, -140, 156, -196, 149, 150, 151, 152, 153,
	154, 155, 160, 141, 143, 157, -240, 138, 161, 162,
	163, 164, 165, 166, 167, 169, 168, 170, 171, 158,
	159, 174, 221, 222, -150, -150, -150, -150, -211, -216,
	-215, -404, -213, -376, -286, -293, -404, -404, -150, -271,
	-404, -404, -150, -404, -404, -404, -219, -140, -404, -404,
	-408, -404, -408, -408, -322, -404, -322, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, 219, -404, -404, -404, -404, -404, -322,
	-322, -322, -322, -322, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, 104, 98,
	103, 92, -213, 99, 93, -8, -9, -205, -404, -303,
	-390, -391, -189, -186, -404, 299, -287, -287, 268, -229,
	-12, -8, -224, -230, -226, -8, -76, -116, -129, 63,
	64, -131, 24, 38, 67, 65, 23, -405, 88, -405,
	-247, -405, 87, -36, -250, 86, 61, 43, 93, 93,
	87, 21, -225, -227, -140, 14, -291, 4, -290, 25,
	-287, 93, 219, 14, -187, 29, -186, -272, -272, 87,
	311, 89, -267, -266, 402, 404, 149, -292, -287, 93,
	31, 88, 87, -186, -311, -314, -316, -315, -317, -312,
	-313, 334, 335, 175, 338, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 351, 32, 258, 330, 331, 332,
	333, 352, 353, 354, 355, 357, 358, 359, 360, 317,
	336, 501, 318, 319, 320, 321, 322, 323, 325, 326,
	327, 328, 329, -377, -376, 86, 88, 87, -318, 86,
	-140, -132, 235, -376, 236, 236, 236, -76, 441, -343,
	-343, -343, 266, 19, -44, -41, -369, 18, -40, -41,
	228, 121, 122, 225, 86, -332, 86, -341, -377, -376,
	86, 135, 241, 134, -340, -337, -340, -341, -376, -213,
	-376, 135, 135, -376, -376, -258, -287, -258, -258, 23,
	-258, 23, -258, 23, 95, -287, -258, 23, -258, 23,
	-258, 23, -258, 23, -258, 23, 31, 78, 79, 80,
	31, 82, 83, 84, -213, -376, -376, -213, -332, -213,
	-186, -376, -262, 95, 95, 95, -343, -343, 95, 93,
	93, 93, -343, -343, 95, 93, -295, -293, 93, 93,
	-382, 252, 296, 298, 95, 95, 95, 95, 31, 93,
	-383, 31, 637, 636, 638, 639, 640, 93, 95, 31,
	95, 31, 95, -287, 86, -186, -138, 286, 223, 225,
	228, 76, 93, 302, 303, 300, 305, 306, 149, 44,
	87, 238, 235, -376, -278, 240, -278, -287, -294, -293,
	-285, 93, -140, -339, 14, 160, -298, -298, -276, -186,
	-339, -298, -276, -186, -276, -276, -276, -276, -298, -298,
	-298, -276, -293, -293, -186, -186, -186, -186, -186, -186,
	-186, -304, -277, -276, 612, 93, -270, 14, 76, -304,
	-304, -302, 314, -78, -287, 93, -15, -11, -22, -21,
	-23, 149, 87, 503, -179, -186, 612, 612, 612, 612,
	612, 612, -140, -140, -140, -140, 526, -203, 117, 141,
	118, 119, -158, -204, -209, -211, 100, 160, 143, 157,
	-240, -146, -150, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -305, -287, 93, 175,
	-154, -153, 99, -399, -154, 500, 87, -215, 219, -140,
	-140, -376, -140, -287, -126, -128, -126, -140, -217, -218,
	145, -213, -140, -405, -405, 95, 99, 166, -122, 24,
	38, -122, -122, -122, -122, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -122, -287, -287, -115, -114,
	423, 424, 425, 426, 428, 429, 430, 433, 434, 438,
	439, 422, 440, 427, 432, 435, 436, 437, 431, 333,
	-140, -140, -140, -140, -140, -140, -83, -140, 128, 129,
	130, -205, -140, -146, -140, -140, -140, -405, -140, -140,
	-140, -206, -205, -375, -374, -373, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -405,
	-140, -160, -144, 95, -254, 99, 90, -140, -140, -127,
	-126, -289, -294, -285, -286, -126, -127, -127, -126, -126,
	-140, -140, -140, -140, -140, -140, -140, -140, -405, -140,
	-140, -140, -140, -140, -247, -405, -205, 87, -392, 404,
	405, 610, -296, 271, -295, 25, -206, 93, 14, -256,
	77, -287, -229, -229, 63, 64, 59, -126, -131, -405,
	-35, 25, -249, -287, 62, 93, -323, -262, 361, 362,
	175, -140, -140, 87, -228, 27, 28, -186, -290, 166,
	-294, -186, -257, 271, -186, -164, -166, -167, -168, -189,
	-212, -404, -169, 522, 519, 14, -179, -180, -188, -293,
	-265, -306, -267, 87, 403, 405, 406, 76, 120, -140,
	-324, 174, -351, -350, -349, -332, -334, -335, -336, 88,
	-324, -328, 367, 366, -318, -318, -318, -318, -318, -323,
	-323, -323, -323, 86, 86, -318, -318, -318, -318, -326,
	86, -326, -326, -327, 86, -327, -362, -140, -359, -358,
	-356, -357, 245, 102, 594, 550, 503, 543, 584, 77,
	-354, -228, 95, -405, -138, -279, 240, -360, -357, -376,
	-376, -376, -279, 89, 93, 89, 93, 89, 93, -107,
	-58, -1, 649, 650, 651, 87, 19, -333, -332, -57,
	296, -365, -366, 271, -361, -355, -341, 135, -340, -341,
	-341, -376, 87, 29, 125, 125, 125, 125, 503, 225,
	32, -280, 542, 141, 594, 550, -332, -57, 238, 238,
	-305, -305, -305, 93, 93, -275, 645, -179, -134, 288,
	149, 277, 277, 235, 235, 290, -186, 301, 304, 302,
	303, 300, 305, 306, 23, 23, 23, 23, 23, 289,
	291, 293, 279, -186, -186, -278, 76, -181, -186, 26,
	-293, -186, -276, -276, -186, -276, -276, -186, -287, 348,
	605, 606, 608, 607, -118, 404, 87, 503, 22, -119,
	22, -404, 117, 118, 119, -204, -146, -150, -146, 140,
	259, -404, -213, -405, -289, 25, 87, 77, -405, 87,
	87, -405, -405, 87, 14, -220, -218, 147, -140, -405,
	87, -405, -405, -405, -205, -140, -140, -140, -140, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -205,
	87, 87, 14, -309, 25, -405, -405, -405, -405, -405,
	-219, -405, 14, -405, 77, 87, 160, 87, -405, -405,
	-405, 87, 87, -405, -405, 87, 87, -405, 87, 87,
	87, -405, 87, 87, 87, 87, -405, -405, -405, -405,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	-405, -90, 527, -405, -405, 87, -405, 87, -405, -404,
	219, -405, -405, -405, -405, -405, 87, 87, 87, 87,
	87, 87, -405, -405, -405, 87, 87, -405, 87, -405,
	87, -405, -391, 609, 405, -193, -192, -190, 74, 239,
	75, -404, -295, -405, -154, -254, -255, -254, -198, -287,
	95, 99, -231, -163, -165, 14, -131, -211, 88, 87,
	-323, -235, -241, -273, -287, 93, 175, -325, 175, -325,
	361, 362, -227, 219, -194, 15, -197, 32, 57, -11,
	-404, -404, 32, 87, -182, -184, -183, -185, 66, 70,
	72, 67, 68, 69, 73, -300, 25, -164, -9, -8,
	-404, -404, -404, -186, -179, -406, 14, 77, -406, 87,
	219, -266, -268, 407, 404, 410, -376, 93, -106, 87,
	-349, -336, -232, -135, 40, -329, 368, -323, 510, -323,
	-331, 93, -331, 95, 95, 88, -47, -42, -43, 33,
	81, -356, -343, 93, 39, -343, -343, -287, 88, -228,
	-134, -186, 141, 76, -360, -360, -360, -293, -2, 648,
	654, 135, 86, 371, 18, -249, 87, 88, -214, 297,
	88, -108, -287, 88, 86, -341, -341, -287, -404, 235,
	31, 31, 594, 550, 542, -57, -214, -213, -376, -324,
	647, 646, 88, 237, 295, -139, 418, -136, 93, 89,
	-186, -186, -186, -186, -186, 228, 225, 394, -400, 307,
	-400, 280, 238, -179, -186, 87, -81, 254, 249, -298,
	-298, 33, -186, 404, 621, 619, -140, 140, 259, -158,
	-150, -146, -307, 175, 334, 258, 332, 328, 348, 339,
	366, 330, 367, 327, 326, 325, -307, -305, -205, -128,
	-140, -140, 148, -140, 146, -140, -405, -405, -405, -405,
	-405, -224, -140, -140, -140, -405, 175, 334, 14, -140,
	-305, -140, -140, -140, -140, -140, -373, -140, -205, -140,
	-205, -140, -140, -140, -140, -140, -374, -374, -374, -374,
	-374, -205, -205, -205, -205, -404, -287, -93, -92, -91,
	577, 239, -90, -160, -93, -160, -127, -289, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -190, -337,
	-337, -337, -258, 87, -269, 22, 14, 57, 57, -163,
	-194, -164, -131, -287, -238, 604, -244, 46, -242, -243,
	47, -239, 48, 56, -325, -325, 166, -229, -140, -259,
	76, -260, -264, -213, -208, -210, -209, -404, -248, -405,
	-287, -258, -260, -166, -167, -167, -166, -167, 66, 66,
	66, 71, 66, 71, 66, -183, -293, -405, -405, -9,
	-9, -140, -296, 77, -164, -164, -188, -293, 166, 404,
	408, 409, -349, -398, 117, 141, 31, 76, 364, 102,
	-396, 174, 539, 589, 594, 550, 543, 584, -397, 241,
	134, 135, 253, 25, 41, 88, 87, 88, 87, 88,
	87, -281, -280, -43, -42, -343, -343, 95, -376, 93,
	93, 237, 26, -186, 76, 76, 76, -109, 652, 95,
	86, -3, 81, -140, 86, 19, -332, -213, -367, -319,
	-368, -320, -321, -5, -6, -344, -112, 57, 102, -61,
	44, 236, 632, 633, 125, -404, 645, -359, -249, -363,
	-365, -186, -143, -404, -142, -144, -151, 164, 165, -214,
	-186, -133, 286, 294, 86, -137, 90, -379, 77, 277,
	364, 277, 93, -401, 308, 93, -401, -186, -81, -47,
	-186, -276, -276, 33, -376, -405, -158, -150, -121, 160,
	503, -310, 509, -318, -318, -318, -327, -318, 322, -318,
	322, -318, -405, -405, -405, 87, -405, 22, -405, -140,
	87, -117, 446, 87, 87, -405, 86, 86, -140, -405,
	-405, -405, 87, -405, -405, -405, -405, -405, 87, -405,
	-405, -405, 87, -308, 595, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -89, -288, -287, -90, 559,
	559, -405, -90, -221, 87, -405, -405, 87, -405, 87,
	87, -405, 87, -405, 87, -405, -405, -405, -405, 87,
	-191, 22, -191, -191, -405, -254, -186, -194, -222, 16,
	-235, 51, 340, -246, -245, 55, 47, -243, 19, 49,
	19, 30, -259, 87, 149, 87, -405, -405, 87, 57,
	219, -405, -194, -177, -176, 76, 77, -178, 76, -176,
	66, 66, -250, -405, -405, 87, -257, -164, -194, -194,
	219, 117, -404, -145, -157, -143, 12, 93, 93, -376,
	-395, 636, 637, 31, 95, -343, -343, 135, 135, -186,
	86, -323, 93, -323, 95, 95, 31, 82, 83, 84,
	31, 78, 79, 80, -186, -186, -186, -186, -364, 86,
	19, -140, 86, 149, 88, -249, -249, 273, 160, -343,
	630, 279, 279, -343, -343, -343, -111, -110, 652, 88,
	-405, 87, -330, 503, 506, -140, -152, -152, -250, 88,
	-372, 503, -378, -287, -287, -287, -287, 95, 97, -405,
	501, 73, 504, -405, -323, -140, -140, -140, -229, 93,
	-140, -140, 95, 95, -405, -140, -205, -140, -405, -174,
	-173, -175, 613, 117, 31, -307, -405, -207, 271, -96,
	-95, -94, 14, -405, -140, -140, -140, -140, -140, -140,
	-140, -404, 66, 18, 16, -404, -404, -296, -222, -223,
	17, 19, -236, 53, -234, 52, -234, -245, 19, 19,
	93, 19, 93, 135, -264, -140, -210, 57, -11, -287,
	-208, -287, -224, -140, 86, -140, -154, -194, -194, -140,
	-200, 470, 472, 473, 474, 471, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 475, 449, 106, 108,
	107, 450, 451, 452, 334, 497, 498, 492, 495, 496,
	494, 493, 349, 350, 453, 454, 455, 109, 110, 111,
	112, 113, 114, 115, 456, 459, 457, 460, 461, 462,
	467, 468, 463, 464, 465, 466, 469, 486, 487, 488,
	489, 490, 491, 596, 597, 598, 599, 600, 601, 602,
	603, 93, 93, 86, -140, 88, 88, -250, -363, -58,
	88, -249, 95, 88, 274, -209, -404, 93, -343, -343,
	-343, 95, 95, -295, -405, 87, -287, -397, -365, 507,
	507, -405, 25, -371, -370, -289, 86, 77, 62, 502,
	505, -405, -405, 87, -405, -405, -405, 88, 88, -405,
	-405, -405, 87, -405, -173, -175, -405, 76, -154, -224,
	19, -93, 296, 298, -93, -405, 87, -405, -405, 87,
	-405, 87, -405, -405, -251, -405, -287, 241, 19, 19,
	-251, -251, -193, -223, -103, -102, -101, 533, -140, -205,
	-237, 54, 76, 120, 93, 93, 93, 12, -208, 219,
	-229, -249, -171, 371, -224, -405, -249, 88, 25, 88,
	654, 135, 88, -209, -120, -404, 270, -295, 93, 93,
	-110, -113, -11, 87, 149, -249, -186, 62, -140, -205,
	-405, 76, 514, 613, -88, -87, -84, 624, 650, -205,
	-90, -90, -140, -140, -140, 87, -405, -405, -405, -103,
	87, -100, -99, -287, 76, 120, -260, -287, 88, -405,
	-404, -229, 88, -233, -11, 86, -3, 270, -319, -368,
	-320, -321, -5, -6, -344, -79, 503, -370, -348, -289,
	93, 95, 88, 503, -405, -405, -86, 143, 622, 592,
	-141, -152, -149, 218, -405, 87, -405, 87, -405, 87,
	-287, 241, -101, 87, 25, -296, -172, -170, -287, 556,
	-388, -387, 499, -398, -394, 117, 141, 102, -396, 594,
	550, 126, 127, -79, -140, 86, -405, -80, 285, 609,
	-379, 504, -86, 623, 570, 545, 570, 545, -140, -140,
	-140, -99, -404, -405, 87, 22, -311, -60, 567, -385,
	-386, 76, -389, 377, 566, 587, 117, 93, 88, -249,
	246, -372, 505, 140, -405, 87, -405, 87, -405, -89,
	-170, 563, -324, -154, -386, 76, -385, 76, 13, 12,
	-4, 653, 88, 287, -86, -140, -140, -405, -59, 26,
	-171, -384, 254, 249, 252, 32, -384, 95, -4, -405,
	-405, 567, 248, 31, 117, -154, -174, -173, -173,
}

var yyDef = [...]int{
	841, -2, -2, 843, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 841, 841, 841, 0, 841, 0, 0, 841, -2,
	-2, 841, 1454, 0, 841, 0, 0, -2, 768, 774,
	0, 776, -2, 0, 0, 841, 2000, 2000, 836, 0,
	0, 0, 0, 0, 841, 841, 841, 841, 1311, 49,
	841, 0, 84, 85, 792, 793, 794, 64, 0, 1998,
	842, 1, 3, 70, 74, 0, 0, 0, 57, 1320,
	0, 77, 0, 0, 845, 0, 0, 1437, 841, 841,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 582, 505, 557, 503, 542, -2,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 381, 381, 0, 0, -2, 491,
	491, 491, 1439, 0, 0, 0, 539, 443, 381, 381,
	381, 0, 381, 381, 381, 381, 0, 0, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 1338, 155, 1455, 1452, 1453,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 0, 1431, 0, 695, 942, 0, 757, 757, 0,
	757, 757, 757, 757, 0, 0, 0, 707, 0, 0,
	0, 0, 754, 0, 723, 724, 0, 754, 0, 730,
	760, 0, 735, 757, 757, 738, 2001, 0, 2001, 2001,
	1422, 0, 751, 749, 763, 764, 39, 767, 770, 771,
	772, 773, 775, 0, 780, 783, 1448, 1449, 0, 785,
	804, 805, 0, 837, 838, 44, 1090, 0, 964, 969,
	980, 995, 996, 997, 998, 999, 1001, 1002, 1003, 0,
	0, 0, 0, 1008, 1009, 0, 0, 0, 0, 0,
	1071, 1017, 0, 0, 0, 0, 1286, 0, 0, 1247,
	1247, 1105, 1247, 1249, 1249, 1655, 1790, 1798, 1915, 1618,
	1623, 1624, 1625, 1908, 1909, 1910, 1911, 1949, 1950, 1954,
	1715, 0, 0, 0, 1997, 1752, 1760, 1761, 1784, 1881,
	1935, 1635, 1779, 1847, 1712, 1734, 1735, 1863, 1864, 1756,
	1757, 1738, 1750, 1753, 1741, 1742, 1744, 1746, 1751, 1758,
	1764, 1743, 1763, 1762, 0, 1739, 1740, 1745, 1755, 1759,
	1747, 1748, 1749, 1754, 1765, 0, 0, 0, 0, 0,
	1186, 1187, 1188, 1189, 0, 0, 0, 0, 0, 0,
	0, 277, 278, -2, -2, 42, 43, 1089, 1409, 1249,
	1249, 1249, 1249, 1249, 1031, 1032, 1033, 1034, 1035, 1059,
	1060, 1066, 1067, 1858, 1859, 1860, 1861, 1696, 1944, 1704,
	1705, 1842, 1843, 1717, 1718, 1972, 1973, -2, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 217, 0, 0,
	282, 283, 279, 280, 281, 1073, 1074, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 2000,
	0, 814, 0, 0, 0, 0, 0, 1320, 0, 1312,
	1311, 62, 0, 841, -2, 0, 0, 0, 0, 46,
	0, 51, 901, 844, 76, 75, 1360, 0, 0, 0,
	58, 1321, 66, 68, 1322, 0, 846, 847, 0, 877,
	881, 0, 0, 0, 1438, 1437, 1437, 101, 0, 0,
	1413, 113, 114, 115, 0, 0, 1419, 1420, 1424, 1425,
	0, 0, 167, 168, 0, 40, 408, 0, 163, 0,
	401, 342, 0, 1338, 0, 0, 0, 0, 0, 841,
	0, 1432, 144, 145, 152, 153, 154, 381, 381, 381,
	554, 0, 0, 155, 155, 512, 513, 514, 0, 0,
	-2, 406, 0, 492, 0, 0, 395, 395, 399, 397,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 0, 382, 0, 552, 553, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 1440, 1441, 0, 529,
	530, 0, 0, 0, 381, 381, 0, 0, 0, 0,
	381, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 1351, 0, 0, 0, -2, 0, 687, 0, 0,
	0, 1433, 1433, 0, 694, 0, 696, 697, 0, 0,
	698, 0, 754, 754, 752, 753, 700, 701, 702, 703,
	757, 0, 0, 390, 391, 392, 754, 757, 0, 757,
	757, 757, 757, 754, 754, 754, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 760, 757, 0,
	731, 0, 732, 733, 736, 737, 739, 2002, 2003, 1450,
	1451, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	2001, 2001, 743, 747, 1423, 769, 781, 784, 799, 48,
	1703, 791, 816, 817, 822, 0, 0, 0, 0, 828,
	829, 830, 0, 0, 833, 834, 835, 0, 0, 0,
	0, 0, 962, 0, 0, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 981,
	982, 0, 0, 0, 1004, 1005, 1006, 1007, 1010, 0,
	1022, 0, 1024, 1295, -2, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	1103, 0, 1104, 1106, 1107, 0, 1108, 851, 851, 851,
	851, 851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 861, 861, 0, 0, 210,
	211, 212, 213, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 230,
	231, 232, 233, 234, 284, 1089, 0, 0, 0, 45,
	806, 807, 0, 925, 1443, 0, 0, 857, 0, 56,
	65, 67, 1320, 60, 1320, 0, 863, 0, 0, -2,
	-2, 864, 870, 871, 872, 873, 874, 53, 1999, 54,
	0, 73, 0, 47, 0, 0, 0, 0, 354, 1363,
	0, 0, 1313, 1314, 1317, 0, 878, 1796, 882, 0,
	884, 885, 0, 0, 99, 0, 941, 0, 0, 0,
	0, 1421, 103, 104, 0, 0, 0, 365, 1426, 1427,
	1428, -2, 388, 0, 365, 349, 292, 293, 294, 342,
	296, 342, 342, 342, 342, 354, 354, 354, 354, 325,
	326, 327, 328, 329, 0, 0, 311, 342, 342, 342,
	342, 332, 333, 334, 335, 336, 337, 338, 339, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 344, 344,
	344, 346, 346, 0, 41, 0, 369, 0, 1317, 0,
	0, 1351, 1435, 1445, 0, 0, 0, 1435, 122, 0,
	0, 0, 555, 593, 506, 543, 556, 0, 509, 510,
	-2, 0, 0, 491, 0, 493, 0, 389, 0, -2,
	0, 399, 0, 395, 399, 396, 399, 387, 400, 533,
	534, 535, 0, 537, 538, 623, 911, 0, 0, 0,
	0, 0, 629, 630, 631, 0, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 0, 0, 0, 493, 0,
	540, 0, 0, 445, 446, 447, 0, 0, 450, 451,
	452, 453, 0, 0, 456, 457, 458, 928, 929, 459,
	460, 485, 486, 487, 461, 462, 463, 464, 465, 466,
	467, 479, 480, 481, 482, 483, 484, 468, 469, 470,
	471, 472, 473, 476, 0, 137, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1433, 0, 0, 0, 0, 860, 943, 1456,
	1457, 758, 759, 0, 393, 394, 757, 757, 704, 744,
	0, 757, 708, 745, 709, 711, 710, 712, 725, 726,
	757, 715, 755, 756, 716, 717, 718, 719, 720, 721,
	722, 740, 727, 728, 729, 761, 0, 765, 766, 741,
	742, 0, 782, 802, 800, 801, 803, 795, 796, 797,
	798, 0, 0, 0, 819, 95, 824, 825, 826, 827,
	839, 832, 1091, 959, 960, 961, 0, 963, 966, 0,
	1075, 1077, 968, 970, 1086, 1087, 1088, 0, 0, 0,
	0, 0, 974, 978, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 1000, 1263, 1264, 1265,
	1019, 285, 286, 0, 1020, 0, 0, 0, 0, 0,
	0, 0, 1090, 1021, 0, 875, 0, 0, 1293, 1290,
	0, 0, 0, 1248, 1250, 0, 0, 0, 0, 852,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1266, 0, 0, 0, 0, 0, 1286, 0, 1026, 1027,
	1028, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 1444, 0, 132, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 1191, 1192, 1193, 38, 0, 0, 0,
	862, 1297, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 809, 810,
	812, 0, 945, 0, 926, 0, 0, 815, 0, 856,
	0, 859, 59, 61, 868, 869, 0, 886, 865, 55,
	50, 0, 0, 903, 1361, 354, 1383, 0, 363, 363,
	360, 1323, 1324, 0, 1316, 1318, 1319, 78, 883, 879,
	0, 957, 0, 0, 940, 0, 889, 891, 892, 893,
	923, 0, 896, 0, 0, 0, 0, 0, 97, 942,
	1414, 0, 102, 0, 0, 107, 108, 1415, 1416, 1417,
	1418, 0, 582, -2, 440, 169, 171, 172, 173, 164,
	-2, 352, 350, 351, 295, 354, 354, 319, 320, 321,
	322, 323, 324, 0, 0, 312, 313, 314, 315, 306,
	0, 307, 308, 309, 0, 310, 407, 0, 1325, 370,
	371, 373, 381, 0, 376, 377, 0, 381, 381, 0,
	402, 403, 0, 1317, 1342, 0, 0, 0, 1446, 1445,
	1445, 1445, 0, 157, 158, 159, 160, 161, 162, 618,
	0, 0, 594, 616, 617, 155, 0, 0, 165, 495,
	494, 0, 650, 0, 405, 0, 0, 399, 399, 384,
	385, 536, 0, 0, 625, 626, 627, 628, 0, 0,
	0, 522, 434, 0, 523, 524, 493, 495, 0, 0,
	365, 448, 449, 454, 455, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 570, 571,
	574, 576, 497, 580, 573, 575, 577, 497, 581, 1339,
	1340, 1341, 0, 0, 688, 0, 0, 431, 93, 1434,
	693, 754, 714, 746, 754, 706, 713, 734, 778, 786,
	787, 788, 789, 790, 823, 0, 0, 0, 0, 831,
	0, 0, 967, 1076, 1078, 971, 0, 975, 979, 0,
	0, 0, 1025, 1023, 1297, 0, 0, 0, 1072, 0,
	0, 1094, 1095, 0, 0, 0, 1291, 0, 0, 1101,
	0, 1251, 1252, 1109, 0, 0, 0, 0, 0, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1311,
	0, 0, 0, 0, 0, 1130, 1131, 1132, 1133, 1134,
	0, 1136, 0, 1137, 0, 0, 0, 0, 1144, 1145,
	1147, 0, 0, 1150, 1151, 0, 0, 1152, 0, 0,
	0, 1156, 0, 0, 0, 0, 1165, 1166, 1167, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1179, 1180, 0, 1054, 0, 0, 1054, 0, 1092, 861,
	0, 1253, 1254, 1255, 1256, 1257, 0, 0, 0, 0,
	0, 0, 1213, 1214, 1216, 0, 0, 1219, 0, 1221,
	0, 1408, 808, 811, 813, 899, 946, 947, 0, 0,
	0, 0, 927, 1442, 854, 855, 858, 905, 0, 1299,
	0, 0, 886, 957, 887, 0, 866, 52, 902, 0,
	1365, 1364, 1377, 1390, 363, 363, 357, 358, 364, 359,
	361, 362, 1315, 0, 1320, 0, 1401, 0, 0, 1393,
	0, 0, 0, 0, 0, 0, 0, 0, 930, 0,
	0, 933, 0, 0, 0, 0, 924, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 91, 92, 0, 0,
	0, 105, 106, 0, 0, 112, 366, 367, 146, 155,
	442, 170, 415, 0, 0, 291, 353, 316, 317, 318,
	0, 340, 0, 0, 0, 436, 118, 1329, 1328, 381,
	381, 372, 0, 375, 0, 0, 0, 1447, 343, 404,
	0, 136, 0, 0, 0, 0, 0, 142, 588, 0,
	0, 595, 0, 0, 0, 504, 0, 515, 516, 0,
	622, -2, 684, 369, 0, 383, 386, 912, 0, 0,
	517, 0, 520, 521, 435, 495, 526, 527, 541, 528,
	477, 478, 475, 0, 0, 1352, 1353, 1358, 1356, 1357,
	123, 562, 564, 563, 567, 0, 0, 0, 499, 0,
	499, 560, 0, 431, 1325, 0, 692, 432, 433, 757,
	757, 818, 96, 0, 821, 0, 0, 0, 0, 972,
	976, 1258, 1284, 342, 342, 1271, 342, 346, 1274, 342,
	1276, 342, 1279, 342, 1282, 1283, 0, 0, 0, 876,
	0, 0, 1100, 1294, 0, 0, 1110, 1111, 1112, 1113,
	1114, 1288, 0, 0, 0, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1049, 1053, 0, 1055, 1056,
	0, 0, 1182, 0, 0, 1194, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 948, 953,
	953, 953, 0, 0, 0, 1429, 1430, 1300, 1301, 957,
	1302, 888, 867, 904, 1383, 0, 1376, 0, -2, 1385,
	0, 0, 0, 1391, 355, 356, 880, 79, 958, 82,
	0, 1401, 1410, 0, 1392, 1403, 1405, 0, 0, 0,
	1397, 0, 957, 890, 919, 921, 0, 916, 931, 932,
	934, 0, 936, 0, 938, 939, 901, 895, 897, 0,
	0, 0, 99, 0, 957, 957, 98, 0, 944, 109,
	110, 111, 441, 174, 179, 0, 0, 0, 184, 0,
	186, 0, 0, 0, 191, 192, 381, 381, 416, 0,
	288, 290, 0, 0, 177, 354, 0, 354, 0, 347,
	0, 417, 437, 1326, 1327, 0, 0, 374, 378, 379,
	380, 0, 1436, 138, 0, 0, 0, 591, 0, 619,
	0, 0, 0, 0, 0, 0, 166, 496, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 0, 381, 0,
	0, 0, 381, 381, 381, 0, 676, 368, 0, 0,
	647, 644, 518, 0, 215, 216, 218, 0, 0, 525,
	901, 1343, 1344, 1345, 0, 1355, 1359, 126, 0, 0,
	0, 0, 572, 578, 0, 498, 579, 689, 690, 691,
	94, 699, 705, 820, 840, 965, 973, 977, 0, 0,
	0, 0, 1285, 1269, 354, 1272, 1273, 1275, 1277, 1278,
	1280, 1281, 1013, 1014, 1018, 0, 1097, 0, 1099, 1292,
	0, 1320, 0, 0, 0, 1128, 0, 0, 0, 1139,
	1138, 1140, 0, 1142, 1143, 1148, 1149, 1153, 0, 1155,
	1157, 1158, 0, 0, 0, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 0, 1047, 1050, 1181, 1057,
	1058, 1063, 1184, 0, 0, 1093, 1196, 0, 1201, 0,
	0, 1207, 0, 1211, 0, 1217, 1218, 1220, 1222, 0,
	0, 0, 0, 0, 925, 906, 63, 1302, 1304, 0,
	1370, 1368, 1368, 1378, 1379, 0, 0, 1386, 0, 0,
	0, 0, 83, 0, 0, 0, 1406, 0, 0, 0,
	0, 100, 1311, 913, 920, 0, 0, 914, 0, 915,
	935, 937, 894, -2, 898, 0, 957, 957, 89, 90,
	0, 180, 0, 182, 208, 209, 0, 185, 187, 188,
	189, 195, 196, 197, 190, 0, 0, 287, 289, 0,
	0, 330, 341, 331, 0, 0, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 901, 139, 140, 141, 583, 0,
	593, 0, 0, 0, 586, 0, 507, 0, 0, 0,
	381, 381, 381, 0, 0, 0, 0, 661, 0, 0,
	624, 0, 632, 0, 0, 0, 219, 220, 0, 1354,
	561, 0, 124, 125, 0, 0, 566, 500, 501, 1011,
	0, 0, 0, 1012, 1270, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 1135, 0, 0, 0, 1161, 0,
	0, 0, 613, 614, 0, 1225, 1052, 1311, 0, 1054,
	1064, 1065, 0, 1054, 1195, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 0, 0, 945, 1304, 1309,
	0, 0, 1373, 0, 1366, 1369, 1367, 1380, 0, 0,
	1387, 0, 1389, 0, 1411, 1412, 1404, 0, 1396, 1399,
	1395, 1398, 1320, 917, 0, 922, 0, 1311, 88, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 345, 348, 0, 0, 0,
	584, 0, 596, 587, 0, 674, 0, 678, 0, 0,
	0, 681, 682, 683, 660, 0, 664, 409, 648, 645,
	646, 519, 0, 127, 128, 0, 0, 0, 1259, 0,
	1262, 1096, 1098, 0, 1125, 1126, 1127, 1267, 1268, 1141,
	1154, 1159, 0, 1162, 0, 0, 1163, 0, 615, 1043,
	0, 0, 1061, 1062, 0, 1197, 0, 1202, 1203, 0,
	1208, 0, 1212, 1223, 0, 950, 907, 908, 955, 956,
	0, 0, 900, 1309, 81, 1310, 1307, 0, 1305, 1303,
	1362, 0, 1371, 1372, 1381, 1382, 1388, 0, 1394, 0,
	86, 0, 0, 0, 1320, 181, 0, 200, 0, 592,
	0, 595, 585, 672, 673, 0, 685, 677, 679, 680,
	662, -2, 1346, 0, 0, 0, 568, 1260, 0, 0,
	1164, 0, 611, 612, 1051, 1044, 0, 1029, 1030, 1048,
	1183, 1185, 0, 0, 0, 0, 949, 951, 952, 80,
	0, 1306, 1069, 0, 1374, 1375, 1402, 1400, 918, 925,
	0, 87, 422, 415, 1346, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 558, 1348, 129, 130, 488,
	489, 490, 123, 0, 1102, 1160, 1045, 0, 0, 0,
	0, 1041, 1042, 0, 1198, 0, 1204, 0, 1209, 0,
	909, 910, 1308, 0, 0, 597, 0, 599, 0, -2,
	410, 423, 0, 175, 201, 202, 0, 0, 205, 206,
	207, 198, 199, 119, 0, 0, 686, 0, 1349, 1350,
	126, 0, 0, 1036, 1037, 1038, 1039, 1040, 0, 0,
	0, 1070, 1049, 598, 0, 0, 365, 0, 608, 411,
	412, 0, 418, 419, 420, 421, 203, 204, 620, 0,
	0, 565, 1261, 0, 1199, 0, 1205, 0, 1210, 0,
	600, 601, 609, 0, 413, 0, 414, 0, 0, 0,
	589, 0, 620, 1347, 1046, 0, 0, 1068, 0, 610,
	606, 424, 426, 427, 0, 0, 425, 621, 590, 1200,
	1206, 0, 428, 429, 430, 602, 603, 604, 605,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 3, 3, 3, 169, 161, 3,
	86, 88, 166, 164, 87, 165, 219, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 655,
	150, 149, 151, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 171, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 172,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 139, 140, 141, 143, 144, 145, 146,
	147, 148, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 162, 163, 168, 170, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:584
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:597
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:602
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:638
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:644
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:665
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:669
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:675
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:681
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:687
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:691
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:700
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:710
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:716
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:790
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:883
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:887
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:905
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:917
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:921
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:941
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:955
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:965
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:975
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:988
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1010
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1020
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1024
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1028
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1034
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1038
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1042
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1046
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1052
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1056
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1060
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1066
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1072
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1088
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1092
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1099
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1108
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1123
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1128
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1134
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1145
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1154
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1160
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1176
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1183
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1190
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1195
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1200
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1205
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1212
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1219
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1230
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1241
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1247
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1251
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1255
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1283
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1287
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1293
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1303
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1307
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1313
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1317
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1323
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1333
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1338
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1352
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1360
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1371
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1380
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1389
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1402
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1412
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1428
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1433
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1452
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1482
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1488
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1492
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1496
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1502
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1506
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1542
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1655
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Armscii8Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = ASCIIStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Big5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = UBinaryStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Cp1250Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Cp1251Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Cp1256Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Cp1257Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Cp850Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Cp852Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Cp866Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = Cp932Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Dec8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = EucjpmsStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = EuckrStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Gb18030Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Gb2312Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = GbkStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Geostd8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = GreekStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = HebrewStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Hp8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Keybcs2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Koi8rStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Koi8uStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Latin1Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Latin2Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Latin5Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Latin7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = MacceStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = MacromanStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = SjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Swe7Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Tis620Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Ucs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = UjisStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Utf16Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Utf16leStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Utf32Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Utf8mb4Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Utf8Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1840
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1844
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1848
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1854
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1858
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1862
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1868
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1872
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1879
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1883
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1887
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1891
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2128
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2137
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2145
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2171
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = ""
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2250
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2259
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2265
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2275
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2279
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2284
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2288
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2292
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2296
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2300
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2304
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = ""
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2320
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2324
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2328
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2332
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2336
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = "key"
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = yyDollar[1].str
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2393
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2403
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2413
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2417
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2423
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2427
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2433
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2437
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2443
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2449
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2453
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2457
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2461
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2465
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2474
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2480
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2486
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2492
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2496
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2500
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2505
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2509
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2515
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2521
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2527
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2531
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2535
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2539
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2543
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2571
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2575
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2584
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2590
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2604
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2662
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2666
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2670
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2674
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2678
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2682
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2686
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2690
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2694
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2698
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2702
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2706
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2710
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2714
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2718
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2785
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2789
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2798
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2807
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2816
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2820
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2829
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2833
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2837
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2845
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2851
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2951
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2955
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2959
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2963
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2967
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2993
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3066
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3260
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3269
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3277
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3286
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3293
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3305
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3314
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3329
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3343
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3347
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3353
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3359
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3365
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3375
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3379
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3385
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3391
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3397
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3403
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3413
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3427
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3433
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3439
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3443
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3447
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3453
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3457
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3462
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3466
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3471
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3475
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3521
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3525
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3529
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3533
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3537
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3541
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3545
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3549
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3553
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3557
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3561
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3565
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3578
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3584
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3599
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3608
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3613
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3618
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3623
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3628
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3634
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3640
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3645
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3651
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3657
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3667
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3672
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3676
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3681
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3686
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3691
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3696
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3702
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3708
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3715
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3722
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3729
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3737
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3741
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3747
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3753
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3759
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3765
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3771
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3777
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3789
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3811
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3815
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = "extended "
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4117
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4121
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4131
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4225
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4242
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4246
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4250
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4254
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4258
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4262
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4266
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = yyDollar[1].str
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = yyDollar[1].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4343
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4353
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4359
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4363
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4367
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4371
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4496
		{
			setAllowComments(yylex, true)
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4506
		{
			yyVAL.strs = nil
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = SQLCacheStr
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4542
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4546
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4560
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4579
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4598
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4603
		{
			yyVAL.strs = nil
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = SQLCacheStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = DistinctStr
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = DistinctStr
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = StraightJoinHint
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4655
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4665
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4669
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4673
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4677
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4682
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4702
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4706
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4712
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4718
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4736
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4740
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4744
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4750
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4754
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4760
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4764
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4773
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4779
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4789
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4799
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4803
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4817
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4834
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4838
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4842
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4846
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4852
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4858
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4864
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4869
		{
			yyVAL.empty = struct{}{}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.empty = struct{}{}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4895
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4899
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4903
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4909
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4915
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4919
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4923
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4927
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4933
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4937
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4947
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4976
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4982
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4992
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4996
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5000
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5004
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5009
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5013
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5017
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5021
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5315
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5321
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5331
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5335
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5339
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5345
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5349
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5356
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5360
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5364
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5368
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5372
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5378
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5382
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5386
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5390
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5394
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5419
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5423
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5432
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5437
		{
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5446
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5452
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5456
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5468
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5474
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5478
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5484
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5488
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5494
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5498
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5510
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5516
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5520
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5526
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5532
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5552
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5556
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5563
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5567
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5571
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5575
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5581
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5585
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5589
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5593
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5597
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5601
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5605
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5611
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5615
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5619
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5626
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5632
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6198
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6206
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6210
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6214
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6218
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6222
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6226
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6230
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6234
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6238
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6242
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6246
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6252
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6256
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6260
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6264
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6268
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6272
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6276
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6280
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6284
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6339
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6343
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6347
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6351
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6355
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6379
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6383
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6389
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6393
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6397
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6405
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6427
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6431
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6435
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6439
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6471
		{
			yyVAL.str = string("")
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6475
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6481
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6485
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6491
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6506
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6510
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6514
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6518
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6547
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6562
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6568
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6581
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6590
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6596
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6602
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6606
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6612
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6617
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6621
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6625
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6634
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6640
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6644
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6648
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6657
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6661
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6665
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6669
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6676
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6680
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6684
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6688
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6694
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6698
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6702
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6706
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6711
		{
			yyVAL.str = ""
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6719
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6723
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6728
		{
			yyVAL.str = ""
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6747
		{
			yyVAL.str = ""
		}
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6751
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6756
		{
			yyVAL.str = "cascaded"
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6773
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6779
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6785
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6791
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6800
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6809
		{
			yyVAL.str = ""
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6819
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6823
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6829
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6833
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6837
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6842
		{
			yyVAL.str = ""
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6846
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6850
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = " header"
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = ""
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = " manifest on"
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = " manifest off"
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = ""
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6881
		{
			yyVAL.str = " overwrite on"
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = " overwrite off"
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = ""
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6906
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6910
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6920
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6925
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6939
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6945
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6949
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6958
		{
			yyVAL.str = ""
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = " optionally"
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6975
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6979
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6983
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6987
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6991
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6997
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7001
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7005
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1400:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7009
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7018
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7024
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7028
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7034
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7038
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7044
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7048
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7063
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7067
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7073
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7079
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7083
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7089
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7093
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7097
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7101
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7107
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7111
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7115
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7122
		{
			yyVAL.str = "charset"
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7132
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7169
		{
			yyVAL.empty = struct{}{}
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7171
		{
			yyVAL.empty = struct{}{}
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.empty = struct{}{}
		}
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7177
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7186
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7193
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7197
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7203
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7207
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7214
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7220
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7224
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7230
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7241
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7808
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7817
		{
			decNesting(yylex)
		}
	case 2000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7822
		{
			skipToEnd(yylex)
		}
	case 2001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7827
		{
			skipToEnd(yylex)
		}
	case 2002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7831
		{
			skipToEnd(yylex)
		}
	case 2003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7835
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
