// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const LOCATE = 57819
const POSITION = 57820
const MATCH = 57821
const AGAINST = 57822
const BOOLEAN = 57823
const LANGUAGE = 57824
const WITH = 57825
const QUERY = 57826
const EXPANSION = 57827
const WITHOUT = 57828
const VALIDATION = 57829
const UNUSED = 57830
const ARRAY = 57831
const BYTE = 57832
const CUME_DIST = 57833
const DESCRIPTION = 57834
const DENSE_RANK = 57835
const EMPTY = 57836
const EXCEPT = 57837
const FIRST_VALUE = 57838
const GROUPING = 57839
const GROUPS = 57840
const JSON_TABLE = 57841
const LAG = 57842
const LAST_VALUE = 57843
const LATERAL = 57844
const LEAD = 57845
const NTH_VALUE = 57846
const NTILE = 57847
const OF = 57848
const OVER = 57849
const PERCENT_RANK = 57850
const RANK = 57851
const RECURSIVE = 57852
const ROW_NUMBER = 57853
const SYSTEM = 57854
const WINDOW = 57855
const ACTIVE = 57856
const ADMIN = 57857
const AUTOEXTEND_SIZE = 57858
const BUCKETS = 57859
const CLONE = 57860
const COLUMN_FORMAT = 57861
const COMPONENT = 57862
const DEFINITION = 57863
const ENFORCED = 57864
const ENGINE_ATTRIBUTE = 57865
const EXCLUDE = 57866
const FOLLOWING = 57867
const GEOMCOLLECTION = 57868
const GET_MASTER_PUBLIC_KEY = 57869
const HISTOGRAM = 57870
const HISTORY = 57871
const INACTIVE = 57872
const INVISIBLE = 57873
const LOCKED = 57874
const MASTER_COMPRESSION_ALGORITHMS = 57875
const MASTER_PUBLIC_KEY_PATH = 57876
const MASTER_TLS_CIPHERSUITES = 57877
const MASTER_ZSTD_COMPRESSION_LEVEL = 57878
const NESTED = 57879
const NETWORK_NAMESPACE = 57880
const NOWAIT = 57881
const NULLS = 57882
const OJ = 57883
const OLD = 57884
const OPTIONAL = 57885
const ORDINALITY = 57886
const ORGANIZATION = 57887
const OTHERS = 57888
const PARTIAL = 57889
const PATH = 57890
const PERSIST = 57891
const PERSIST_ONLY = 57892
const PRECEDING = 57893
const PRIVILEGE_CHECKS_USER = 57894
const PROCESS = 57895
const RANDOM = 57896
const REFERENCE = 57897
const REQUIRE_ROW_FORMAT = 57898
const RESOURCE = 57899
const RESPECT = 57900
const RESTART = 57901
const RETAIN = 57902
const REUSE = 57903
const ROLE = 57904
const SECONDARY = 57905
const SECONDARY_ENGINE = 57906
const SECONDARY_ENGINE_ATTRIBUTE = 57907
const SECONDARY_LOAD = 57908
const SECONDARY_UNLOAD = 57909
const SIMPLE = 57910
const SKIP = 57911
const SRID = 57912
const THREAD_PRIORITY = 57913
const TIES = 57914
const UNBOUNDED = 57915
const VCPU = 57916
const VISIBLE = 57917
const RETURNING = 57918
const FORMAT_BYTES = 57919
const FORMAT_PICO_TIME = 57920
const PS_CURRENT_THREAD_ID = 57921
const PS_THREAD_ID = 57922
const GTID_SUBSET = 57923
const GTID_SUBTRACT = 57924
const WAIT_FOR_EXECUTED_GTID_SET = 57925
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57926
const FORMAT = 57927
const TREE = 57928
const VITESS = 57929
const TRADITIONAL = 57930
const LOCAL = 57931
const LOW_PRIORITY = 57932
const NO_WRITE_TO_BINLOG = 57933
const LOGS = 57934
const ERROR = 57935
const GENERAL = 57936
const HOSTS = 57937
const OPTIMIZER_COSTS = 57938
const USER_RESOURCES = 57939
const SLOW = 57940
const CHANNEL = 57941
const RELAY = 57942
const EXPORT = 57943
const CURRENT = 57944
const ROW = 57945
const ROWS = 57946
const AVG_ROW_LENGTH = 57947
const CONNECTION = 57948
const CHECKSUM = 57949
const DELAY_KEY_WRITE = 57950
const ENCRYPTION = 57951
const ENGINE = 57952
const INSERT_METHOD = 57953
const MAX_ROWS = 57954
const MIN_ROWS = 57955
const PACK_KEYS = 57956
const PASSWORD = 57957
const FIXED = 57958
const DYNAMIC = 57959
const COMPRESSED = 57960
const REDUNDANT = 57961
const COMPACT = 57962
const ROW_FORMAT = 57963
const STATS_AUTO_RECALC = 57964
const STATS_PERSISTENT = 57965
const STATS_SAMPLE_PAGES = 57966
const STORAGE = 57967
const MEMORY = 57968
const DISK = 57969
const PARTITIONS = 57970
const LINEAR = 57971
const RANGE = 57972
const LIST = 57973
const SUBPARTITION = 57974
const SUBPARTITIONS = 57975
const HASH = 57976

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 48,
	13, 48,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 147,
	652, 147,
	-2, 155,
	-1, 48,
	132, 155,
	173, 155,
	335, 155,
	-2, 500,
	-1, 55,
	35, 742,
	235, 742,
	246, 742,
	281, 756,
	282, 756,
	-2, 744,
	-1, 60,
	237, 773,
	-2, 771,
	-1, 114,
	234, 1424,
	-2, 121,
	-1, 116,
	1, 148,
	652, 148,
	-2, 155,
	-1, 127,
	133, 386,
	240, 386,
	-2, 489,
	-1, 146,
	132, 155,
	173, 155,
	335, 155,
	-2, 509,
	-1, 764,
	86, 1441,
	-2, 1288,
	-1, 765,
	86, 1442,
	218, 1446,
	-2, 1289,
	-1, 798,
	218, 1445,
	-2, 39,
	-1, 874,
	59, 841,
	-2, 856,
	-1, 960,
	245, 40,
	250, 40,
	-2, 397,
	-1, 1045,
	1, 557,
	652, 557,
	-2, 155,
	-1, 1339,
	218, 1446,
	-2, 1289,
	-1, 1483,
	59, 842,
	-2, 861,
	-1, 1484,
	59, 843,
	-2, 862,
	-1, 1536,
	132, 155,
	173, 155,
	335, 155,
	-2, 436,
	-1, 1615,
	133, 386,
	240, 386,
	-2, 489,
	-1, 1624,
	245, 41,
	250, 41,
	-2, 398,
	-1, 1971,
	218, 1450,
	-2, 1444,
	-1, 1972,
	218, 1446,
	-2, 1442,
	-1, 2071,
	132, 155,
	173, 155,
	335, 155,
	-2, 437,
	-1, 2078,
	25, 176,
	-2, 178,
	-1, 2433,
	77, 95,
	87, 95,
	-2, 918,
	-1, 2501,
	627, 669,
	-2, 643,
	-1, 2667,
	49, 1383,
	-2, 1377,
	-1, 2961,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 890,
	-1, 3319,
	627, 669,
	-2, 657,
	-1, 3407,
	22, 1801,
	32, 1801,
	174, 1801,
	257, 1801,
	315, 1801,
	316, 1801,
	317, 1801,
	318, 1801,
	319, 1801,
	320, 1801,
	321, 1801,
	323, 1801,
	324, 1801,
	325, 1801,
	326, 1801,
	327, 1801,
	328, 1801,
	329, 1801,
	330, 1801,
	331, 1801,
	332, 1801,
	333, 1801,
	334, 1801,
	336, 1801,
	338, 1801,
	339, 1801,
	340, 1801,
	341, 1801,
	342, 1801,
	343, 1801,
	344, 1801,
	345, 1801,
	346, 1801,
	349, 1801,
	350, 1801,
	351, 1801,
	352, 1801,
	353, 1801,
	354, 1801,
	355, 1801,
	356, 1801,
	357, 1801,
	498, 1801,
	-2, 601,
}

const yyPrivate = 57344

const yyLast = 46143

var yyAct = [...]int{
	1491, 806, 3068, 3069, 3300, 3478, 3067, 3384, 3447, 1838,
	755, 3489, 800, 672, 3448, 2068, 3405, 3350, 3373, 2020,
	3038, 799, 2893, 1539, 2000, 2816, 2722, 2729, 3284, 652,
	2779, 3232, 768, 37, 2770, 2784, 2781, 1108, 3, 2680,
	3282, 2780, 2778, 2783, 2782, 769, 889, 3025, 2683, 2331,
	3097, 3272, 2365, 867, 2626, 2798, 654, 2684, 2138, 2002,
	2681, 3102, 2799, 2737, 2926, 2932, 1461, 2561, 2024, 682,
	2801, 763, 633, 2404, 658, 1498, 2391, 762, 2040, 2952,
	2678, 2668, 1962, 2101, 2466, 2821, 2918, 992, 2545, 2427,
	2467, 2106, 650, 1593, 2126, 922, 2468, 2169, 2056, 36,
	155, 1110, 890, 869, 2416, 2045, 1640, 1485, 38, 2397,
	871, 2498, 875, 2367, 2383, 1967, 1853, 1933, 1834, 2147,
	2044, 2186, 924, 1959, 931, 1086, 2125, 141, 1792, 950,
	892, 2537, 2108, 2460, 646, 1622, 1057, 1528, 2032, 2435,
	95, 96, 1507, 1932, 91, 664, 2047, 1465, 1811, 1351,
	1857, 1741, 1279, 1737, 1629, 929, 926, 958, 961, 1721,
	2123, 955, 930, 2097, 1527, 1512, 2025, 881, 1968, 659,
	968, 908, 910, 1866, 1335, 956, 957, 1929, 1311, 876,
	1106, 1100, 98, 1746, 159, 119, 117, 118, 877, 1588,
	1614, 124, 125, 1041, 903, 97, 879, 1992, 85, 3309,
	1355, 2491, 89, 3479, 3026, 641, 2140, 2141, 2142, 1359,
	2767, 3335, 76, 2140, 2521, 2520, 2184, 2489, 2789, 897,
	1706, 902, 585, 878, 77, 8, 7, 2981, 3018, 87,
	6, 994, 120, 87, 90, 883, 618, 3336, 102, 126,
	3431, 2553, 2554, 1280, 1011, 1012, 1013, 997, 1016, 1017,
	1018, 1019, 3330, 3331, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 642, 868, 923, 624, 918, 2787, 948, 917, 104,
	105, 2789, 108, 87, 1799, 114, 971, 947, 183, 884,
	870, 580, 3072, 3072, 2786, 1798, 891, 1814, 2793, 972,
	1280, 120, 946, 945, 944, 998, 1001, 1002, 1997, 1998,
	1797, 863, 864, 865, 866, 624, 1796, 874, 182, 1795,
	1794, 1005, 1777, 87, 3426, 644, 1014, 645, 1786, 2363,
	2664, 2173, 3451, 812, 813, 814, 812, 813, 814, 2787,
	2393, 2511, 121, 3499, 143, 905, 906, 3435, 939, 1492,
	1290, 3331, 2630, 3433, 3446, 164, 1296, 3469, 618, 2898,
	2897, 2793, 2171, 934, 2514, 3285, 2332, 1804, 2840, 120,
	3228, 3227, 996, 3434, 995, 2172, 3460, 3071, 3071, 3432,
	3385, 3031, 3238, 3429, 3032, 2117, 154, 3050, 651, 3039,
	3374, 3381, 142, 78, 1312, 2166, 3237, 1843, 3410, 2860,
	615, 1603, 2228, 916, 766, 767, 2364, 1290, 618, 2790,
	2111, 3049, 3314, 161, 78, 162, 2837, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1321, 1320, 1322, 1323, 2719, 2720,
	78, 130, 131, 153, 152, 181, 2529, 2718, 2407, 619,
	2528, 1103, 3415, 2063, 2064, 1529, 618, 1530, 601, 1286,
	2028, 2444, 1278, 2552, 2443, 3391, 3413, 2445, 3391, 2225,
	599, 78, 2062, 2408, 80, 3419, 3420, 2226, 916, 766,
	767, 87, 2790, 2739, 2740, 1076, 861, 1044, 860, 3115,
	3414, 1064, 1077, 1081, 1082, 3301, 1065, 2492, 1293, 1064,
	1294, 1295, 87, 943, 1065, 1050, 1051, 2456, 1070, 2818,
	596, 2929, 1063, 618, 1062, 618, 1286, 2848, 87, 610,
	2846, 618, 2081, 2080, 1999, 2400, 2401, 2595, 618, 632,
	1785, 636, 3452, 630, 606, 2822, 1526, 1053, 3260, 2538,
	3261, 2499, 1040, 1696, 147, 128, 150, 135, 127, 87,
	148, 149, 1469, 3453, 1015, 1727, 165, 1102, 2148, 2811,
	2524, 941, 2110, 2187, 2192, 171, 136, 2812, 3481, 1722,
	2028, 619, 1907, 1097, 1079, 1080, 1085, 1078, 1046, 2540,
	139, 137, 132, 133, 134, 138, 3020, 1697, 1083, 1698,
	2738, 3019, 129, 1071, 2819, 1787, 1788, 1789, 1084, 2191,
	2207, 140, 2741, 586, 1021, 588, 602, 1020, 621, 2820,
	620, 592, 2189, 590, 594, 603, 595, 3212, 589, 2193,
	600, 619, 2151, 591, 604, 605, 608, 611, 612, 613,
	609, 607, 981, 598, 622, 1109, 979, 1109, 1109, 943,
	1039, 2190, 3076, 2041, 2026, 2027, 2198, 2195, 2197, 2196,
	2199, 2200, 952, 1472, 990, 3016, 3427, 1267, 1269, 619,
	1899, 1888, 1889, 1890, 1891, 1901, 1892, 1893, 1894, 1906,
	1902, 1895, 1896, 1903, 1904, 1905, 1897, 1898, 1900, 942,
	951, 37, 156, 989, 952, 2596, 1607, 1272, 1285, 1282,
	1283, 1284, 1289, 1291, 1288, 970, 1287, 988, 909, 2629,
	1329, 1330, 1331, 1332, 1043, 2204, 1281, 2205, 987, 2206,
	1343, 986, 985, 1347, 984, 983, 619, 991, 619, 978,
	919, 913, 911, 2741, 619, 927, 3308, 1326, 2490, 3500,
	964, 619, 3458, 1060, 927, 1066, 1067, 1068, 1069, 963,
	949, 1098, 1628, 1326, 1738, 1285, 1282, 1283, 1284, 1289,
	1291, 1288, 1337, 1287, 2026, 2027, 1525, 2124, 1104, 1105,
	151, 1728, 3493, 1281, 904, 1729, 1730, 2838, 3015, 1074,
	2541, 2170, 2526, 809, 2226, 2177, 927, 809, 982, 2493,
	925, 2176, 980, 1734, 1000, 919, 913, 911, 1266, 1008,
	963, 2760, 970, 2458, 999, 2523, 969, 1601, 2930, 1600,
	1042, 973, 963, 1599, 1261, 2509, 975, 1262, 1263, 1735,
	976, 974, 2557, 2791, 2792, 942, 1007, 938, 2114, 1597,
	940, 144, 1333, 584, 145, 579, 2795, 809, 2240, 2168,
	3297, 977, 1708, 1707, 1709, 1710, 1711, 2968, 3387, 2979,
	2980, 3387, 623, 2948, 2536, 2440, 3048, 2535, 2403, 1627,
	2340, 1459, 2544, 116, 157, 1327, 1328, 970, 2115, 1846,
	1516, 169, 1428, 616, 1055, 2398, 2113, 3386, 2513, 2069,
	3386, 1326, 77, 1323, 1275, 1273, 2791, 2792, 617, 1274,
	2717, 3070, 3070, 1867, 1087, 1470, 1471, 1493, 1495, 2795,
	2227, 1456, 1357, 969, 1358, 86, 886, 1868, 3418, 1101,
	2116, 81, 3322, 177, 1747, 1361, 2368, 2370, 993, 3011,
	2112, 1475, 2512, 1059, 2942, 1479, 86, 943, 1460, 935,
	1514, 871, 2188, 1731, 1473, 970, 937, 936, 1531, 1276,
	912, 2725, 86, 2581, 1476, 2547, 1533, 1858, 1061, 1052,
	2546, 2482, 3417, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1049, 2882, 970, 3461, 969, 176,
	178, 179, 180, 86, 963, 966, 967, 111, 927, 1073,
	1295, 3111, 960, 964, 2986, 941, 2726, 1726, 3491, 924,
	1075, 3492, 1460, 3490, 1477, 1478, 1294, 1295, 95, 96,
	1434, 1435, 1436, 1437, 1438, 912, 2985, 2155, 1641, 1641,
	1637, 1641, 2728, 1641, 1641, 1636, 1650, 1641, 1641, 1641,
	1641, 1641, 1093, 2547, 1095, 3454, 2723, 1466, 2546, 2562,
	1858, 2167, 2257, 924, 1865, 1626, 969, 1816, 1006, 1088,
	98, 2160, 1003, 2739, 2740, 2165, 2163, 112, 1045, 981,
	2724, 1817, 1324, 1325, 1815, 1604, 1605, 1606, 2160, 1748,
	970, 979, 1092, 1094, 1058, 3352, 1634, 969, 1718, 2969,
	1296, 1517, 973, 963, 1620, 3495, 3290, 975, 2164, 3220,
	2369, 976, 974, 2730, 1740, 1463, 868, 1474, 2232, 2233,
	2234, 2284, 3219, 1669, 1494, 2162, 1672, 1497, 1674, 3501,
	3210, 3061, 1613, 942, 1691, 1642, 3060, 1643, 3353, 1645,
	1647, 870, 2564, 1651, 1653, 1655, 1657, 1659, 1673, 3291,
	1522, 1523, 1681, 1682, 1632, 1716, 1714, 1109, 1687, 1688,
	1492, 2993, 1480, 1723, 1964, 1724, 1703, 1863, 1725, 1961,
	1296, 1864, 1631, 1963, 812, 813, 814, 1596, 2992, 2982,
	2738, 1318, 1319, 1321, 1320, 1322, 1323, 1630, 1630, 1090,
	807, 969, 2741, 1091, 1610, 1611, 1609, 963, 966, 967,
	1623, 927, 3045, 1096, 3046, 960, 964, 1743, 2574, 2573,
	2572, 2566, 2768, 2570, 3502, 2565, 2756, 2563, 2464, 1715,
	1713, 1964, 2568, 2463, 2120, 1677, 959, 1089, 1602, 1717,
	1702, 2567, 1293, 1701, 1294, 1295, 1700, 1699, 1749, 1750,
	1316, 1317, 1318, 1319, 1321, 1320, 1322, 1323, 2569, 2571,
	1689, 1296, 1754, 3465, 1492, 1683, 1739, 1751, 1680, 1761,
	1762, 1763, 1679, 1312, 1755, 2556, 1757, 1758, 1759, 1760,
	1296, 1678, 1649, 1764, 1806, 1808, 1809, 3455, 3317, 3316,
	120, 946, 945, 944, 765, 1776, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1321, 1320, 1322, 1323, 1501, 1807, 624,
	3294, 2727, 1293, 2976, 1294, 1295, 1753, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1321, 1320, 1322, 1323, 3293, 624,
	2135, 1109, 1109, 2447, 2136, 3292, 2133, 1774, 2131, 1775,
	2134, 3215, 2132, 3200, 3199, 187, 1312, 3110, 187, 3108,
	1296, 629, 3057, 2990, 2975, 2815, 635, 1502, 187, 2823,
	1296, 2759, 2758, 3463, 1492, 2473, 187, 2461, 2296, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1321, 1320, 1322, 1323,
	1458, 187, 2182, 2181, 1296, 2023, 2005, 1778, 1744, 1841,
	1841, 1712, 1704, 1293, 1694, 1294, 1295, 1835, 1842, 1312,
	1820, 2239, 2583, 1690, 1296, 2245, 635, 187, 635, 1839,
	1839, 1686, 1293, 1812, 1294, 1295, 1685, 1861, 1851, 1684,
	1503, 1862, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321,
	1320, 1322, 1323, 3397, 1492, 1099, 624, 1312, 1265, 1459,
	1308, 1526, 1309, 3395, 1492, 2389, 3480, 1296, 94, 1884,
	1885, 1492, 1810, 3442, 1492, 1925, 1310, 1324, 1325, 1307,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1320, 1322,
	1323, 1337, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1320,
	1322, 1323, 1293, 1957, 1294, 1295, 2731, 3241, 1859, 3246,
	2735, 3245, 1293, 3204, 1294, 1295, 1292, 1492, 2734, 1109,
	2294, 1782, 1783, 3203, 1296, 3037, 1460, 1492, 1986, 2500,
	1292, 1492, 2478, 1813, 2292, 1919, 1293, 2077, 1294, 1295,
	1296, 1493, 1993, 2389, 3380, 1930, 1969, 2389, 3360, 2436,
	3393, 1492, 2736, 1296, 1312, 92, 1293, 2732, 1294, 1295,
	2389, 3356, 2733, 2009, 3343, 1492, 93, 1818, 2389, 3310,
	2941, 1296, 3029, 3307, 1292, 2017, 1960, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1321, 1320, 1322, 1323, 3223, 1492,
	2021, 1845, 2389, 3211, 2943, 1296, 2712, 1852, 1854, 1293,
	3348, 1294, 1295, 2010, 1514, 2011, 2226, 1109, 1492, 1994,
	1971, 1296, 2437, 2855, 2679, 1930, 2412, 1869, 1870, 1871,
	1872, 1492, 2439, 3269, 1492, 2941, 1974, 1975, 924, 3029,
	1492, 1883, 2389, 3027, 1969, 2078, 3267, 1492, 2160, 1492,
	2946, 1492, 95, 96, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1298, 2305, 1492, 3264, 1492, 1293, 3321, 1294, 1295,
	1970, 2436, 95, 96, 2749, 2748, 1296, 2745, 2746, 2385,
	1296, 2413, 1293, 2016, 1294, 1295, 2121, 2161, 1973, 1492,
	101, 1976, 1977, 931, 94, 1293, 1296, 1294, 1295, 2745,
	2744, 100, 2043, 99, 3250, 1492, 2413, 1492, 1971, 2087,
	2088, 2089, 2090, 1293, 2389, 1294, 1295, 2226, 2522, 2413,
	924, 1592, 2503, 2073, 2496, 2497, 931, 2072, 2082, 883,
	2083, 2084, 2085, 2086, 2437, 2902, 2004, 1293, 2747, 1294,
	1295, 2015, 2054, 1296, 2226, 2160, 2093, 2094, 2095, 2096,
	2389, 2388, 2250, 1293, 2018, 1294, 1295, 2652, 2038, 2917,
	1492, 2103, 2061, 2910, 1492, 1296, 2250, 1492, 100, 2036,
	2405, 1492, 2405, 924, 2149, 2250, 2109, 2305, 1835, 1296,
	2060, 918, 1835, 1835, 917, 1296, 2059, 2058, 1819, 2076,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 2075, 2074, 2146, 1844, 1492, 1293, 2281,
	1294, 1295, 1293, 2280, 1294, 1295, 1592, 1591, 1537, 1536,
	2160, 101, 2119, 2143, 2031, 1296, 2907, 1492, 1293, 92,
	1294, 1295, 100, 1496, 99, 2104, 94, 1292, 2099, 2100,
	93, 2994, 2413, 94, 2941, 2118, 2122, 1995, 2905, 1492,
	1296, 1844, 2154, 2130, 1790, 2157, 1733, 2158, 2174, 1524,
	954, 953, 2870, 1492, 1296, 87, 971, 2771, 2963, 1921,
	2104, 2153, 2152, 2156, 1665, 1293, 3423, 1294, 1295, 972,
	873, 3363, 3234, 2175, 1499, 2223, 2178, 2033, 2034, 1630,
	2179, 2180, 2995, 2996, 2997, 1492, 3475, 1293, 2247, 1294,
	1295, 3201, 1492, 3122, 187, 3010, 187, 3473, 2246, 187,
	1296, 1293, 3007, 1294, 1295, 2988, 2865, 1293, 2864, 1294,
	1295, 1296, 1594, 2102, 2813, 1666, 1667, 1668, 1296, 2470,
	2773, 2769, 1044, 2853, 1492, 2504, 2243, 2237, 2185, 635,
	2248, 635, 635, 2251, 2098, 2252, 2817, 1109, 2092, 2091,
	2259, 1812, 1719, 1625, 2261, 2262, 2263, 1293, 87, 1294,
	1295, 635, 635, 1621, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2244, 1590, 2217, 2218, 1296, 2210,
	113, 2220, 1293, 2469, 1294, 1295, 3235, 1296, 2254, 2117,
	2221, 2008, 1339, 2360, 1492, 1296, 1293, 3449, 1294, 1295,
	2285, 2286, 2287, 2288, 2289, 1492, 2291, 1296, 3329, 2242,
	2293, 2358, 1492, 3255, 2298, 2299, 1296, 2300, 2953, 2954,
	2303, 2956, 2304, 2264, 1296, 2765, 2307, 1780, 2764, 2763,
	2311, 2470, 1296, 2224, 2316, 2317, 2318, 2319, 1971, 1296,
	2279, 1505, 1293, 2679, 1294, 1295, 2483, 2330, 2211, 2333,
	2334, 1813, 1296, 1293, 2235, 1294, 1295, 2336, 2338, 2959,
	1293, 2253, 1294, 1295, 2341, 2342, 2343, 2344, 2345, 1296,
	2337, 1492, 2701, 2958, 1296, 2352, 2353, 2702, 2354, 3456,
	2698, 2357, 2359, 2017, 3092, 2361, 3091, 1296, 1970, 1781,
	2320, 1492, 2697, 3325, 3236, 2373, 2699, 2256, 1841, 2312,
	1492, 2700, 2703, 2022, 2422, 2423, 2374, 1504, 1500, 2014,
	1293, 2947, 1294, 1295, 2657, 2379, 3305, 2656, 1839, 1293,
	3289, 1294, 1295, 3208, 1296, 3101, 2394, 1293, 2998, 1294,
	1295, 1339, 2934, 1296, 3090, 2937, 3012, 2669, 2671, 1293,
	2933, 1294, 1295, 1296, 1661, 3103, 2672, 1296, 1293, 2666,
	1294, 1295, 2912, 2372, 2290, 1732, 1293, 2908, 1294, 1295,
	887, 859, 2743, 37, 1293, 2454, 1294, 1295, 888, 2409,
	2880, 1293, 2429, 1294, 1295, 2999, 3000, 3001, 2831, 2375,
	2474, 2377, 2390, 1867, 1293, 187, 1294, 1295, 1010, 635,
	635, 1662, 1663, 1664, 2469, 1009, 2550, 1868, 1264, 92,
	2510, 1293, 121, 1294, 1295, 187, 1293, 2876, 1294, 1295,
	93, 2939, 2033, 2034, 2386, 94, 2862, 3487, 2477, 1293,
	2761, 1294, 1295, 2214, 635, 3402, 2861, 2399, 187, 3306,
	2858, 3230, 1466, 2362, 1296, 2742, 2426, 92, 1296, 2428,
	635, 2019, 2457, 2459, 94, 2021, 187, 2203, 93, 2202,
	2382, 2201, 2502, 1296, 2495, 2387, 1293, 1296, 1294, 1295,
	2919, 2507, 2450, 2230, 2402, 1293, 2655, 1294, 1295, 895,
	896, 99, 2434, 3277, 2654, 1293, 3276, 1294, 1295, 1293,
	3258, 1294, 1295, 635, 2519, 2438, 3109, 101, 2472, 2441,
	2448, 3107, 2109, 2475, 2476, 2236, 1339, 2238, 100, 100,
	99, 3106, 635, 635, 3099, 635, 3008, 635, 635, 94,
	635, 635, 635, 635, 635, 635, 2462, 1296, 2465, 2938,
	2936, 2356, 101, 1339, 2774, 2451, 1339, 635, 1339, 187,
	2471, 2144, 2927, 100, 2480, 99, 2355, 1608, 894, 3098,
	2351, 2517, 101, 1296, 2484, 2485, 2486, 2405, 1835, 187,
	2479, 3080, 2385, 100, 2597, 2585, 2586, 2587, 2588, 2589,
	2559, 1613, 635, 2282, 187, 2006, 1293, 1518, 1294, 1295,
	1293, 1509, 1294, 1295, 2594, 1296, 3476, 2516, 635, 3477,
	187, 2505, 2506, 103, 2515, 1293, 3295, 1294, 1295, 1293,
	1296, 1294, 1295, 3477, 3476, 1835, 187, 106, 107, 2974,
	2350, 885, 88, 187, 2575, 1, 2577, 2978, 3412, 597,
	1996, 1464, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 635, 2558, 2590, 2539, 3450, 2349, 3408, 3409, 2542,
	1705, 1695, 2548, 2625, 3040, 2549, 2418, 2421, 2422, 2423,
	2419, 1109, 2420, 2424, 1296, 1931, 2953, 2954, 3231, 1293,
	2777, 1294, 1295, 2150, 1490, 1486, 2576, 2578, 2348, 3006,
	2107, 962, 146, 2070, 2071, 2607, 3376, 2609, 2636, 1487,
	110, 920, 1641, 2347, 2631, 1293, 109, 1294, 1295, 965,
	1072, 2633, 2145, 2620, 2621, 2622, 2623, 3030, 647, 2455,
	2662, 2079, 1543, 1541, 2012, 2013, 1489, 1960, 1488, 1960,
	1542, 2688, 1540, 2599, 1109, 1545, 1544, 1293, 2839, 1294,
	1295, 2689, 1641, 2605, 2283, 2881, 1784, 631, 2706, 2707,
	2425, 625, 1293, 1296, 1294, 1295, 184, 2346, 1532, 1510,
	2894, 2636, 1004, 875, 587, 2750, 2183, 593, 1344, 1779,
	2653, 2676, 2691, 2442, 2685, 2635, 915, 2659, 2711, 2632,
	907, 2634, 2007, 1479, 2429, 2615, 2616, 2617, 2618, 2619,
	2418, 2421, 2422, 2423, 2419, 2660, 2420, 2424, 2651, 2376,
	2647, 914, 2682, 2687, 2931, 2665, 1293, 2682, 1294, 1295,
	2667, 2392, 2670, 2663, 2661, 635, 635, 2658, 893, 3288,
	3100, 899, 3361, 899, 2673, 2674, 2452, 924, 1506, 2901,
	876, 2255, 1856, 187, 1334, 2021, 2335, 2048, 2690, 877,
	2693, 2694, 3075, 2696, 2797, 2713, 1296, 1805, 2714, 2704,
	2708, 2709, 95, 96, 2692, 656, 655, 2695, 2715, 2648,
	2649, 2650, 1743, 1296, 653, 2378, 2406, 1299, 801, 2366,
	2721, 1519, 2417, 2415, 2414, 2212, 2833, 2754, 2755, 2753,
	1296, 635, 2055, 2751, 2752, 1293, 2955, 1294, 1295, 2951,
	3404, 1339, 2050, 2046, 2776, 2384, 2850, 2851, 2852, 754,
	2854, 2856, 635, 2804, 1296, 753, 665, 2835, 1339, 2805,
	1296, 657, 2775, 649, 2863, 2796, 752, 751, 2109, 2867,
	2868, 2869, 2871, 2872, 2873, 2874, 2971, 1296, 2875, 2329,
	2877, 2878, 2879, 635, 635, 2883, 2884, 2885, 2886, 2887,
	2888, 2889, 2890, 2891, 2892, 2824, 2328, 2808, 2827, 2803,
	2560, 2826, 1296, 2899, 3388, 2895, 2903, 2525, 2904, 2906,
	2814, 2909, 2911, 2327, 2913, 2914, 2915, 2916, 2527, 2834,
	2844, 2453, 2922, 2810, 1277, 1482, 2841, 2842, 1293, 2843,
	1294, 1295, 2845, 1972, 2847, 643, 2849, 2326, 933, 2836,
	3312, 2229, 2859, 2325, 1481, 1293, 2896, 1294, 1295, 1886,
	1887, 3319, 2785, 2900, 3024, 2829, 2830, 2944, 2945, 2766,
	2324, 2949, 1293, 2501, 1294, 1295, 2137, 63, 41, 3283,
	1296, 3349, 187, 750, 747, 3077, 3078, 635, 3079, 2961,
	2962, 2627, 2628, 3332, 3333, 2323, 1293, 1296, 1294, 1295,
	746, 1296, 1293, 3334, 1294, 1295, 1914, 1296, 638, 3425,
	1268, 187, 2925, 901, 635, 2923, 2920, 2921, 1296, 1293,
	2928, 1294, 1295, 32, 187, 31, 30, 29, 635, 2935,
	28, 1972, 23, 187, 22, 187, 1296, 187, 187, 21,
	20, 2940, 19, 1296, 1293, 2950, 1294, 1295, 25, 18,
	17, 16, 635, 2788, 3445, 2957, 3486, 115, 50, 47,
	45, 2960, 123, 2322, 2021, 2021, 1296, 2966, 2967, 122,
	2964, 1296, 48, 3013, 3014, 2972, 2973, 2804, 44, 3028,
	2321, 1296, 2965, 2805, 2315, 1047, 1296, 42, 27, 26,
	2314, 15, 14, 2989, 13, 2991, 12, 1296, 11, 3034,
	3035, 2313, 10, 2983, 2984, 9, 5, 635, 3041, 3042,
	3043, 3044, 1293, 4, 1294, 1295, 35, 3047, 34, 2310,
	3051, 33, 1271, 24, 2, 1296, 2309, 2488, 2139, 1293,
	0, 1294, 1295, 1293, 635, 1294, 1295, 0, 0, 1293,
	635, 1294, 1295, 0, 0, 0, 0, 3062, 0, 2308,
	1293, 0, 1294, 1295, 2306, 3017, 0, 1296, 0, 3021,
	3022, 3023, 3066, 1296, 2302, 3036, 0, 0, 1293, 2301,
	1294, 1295, 0, 0, 3074, 1293, 0, 1294, 1295, 0,
	2297, 0, 3081, 0, 1490, 1486, 3056, 635, 0, 0,
	0, 3052, 635, 0, 0, 0, 635, 635, 1293, 1487,
	1294, 1295, 0, 1293, 0, 1294, 1295, 0, 2295, 0,
	0, 0, 0, 1293, 0, 1294, 1295, 0, 1293, 0,
	1294, 1295, 0, 3064, 1483, 1484, 1489, 3095, 1488, 1293,
	3073, 1294, 1295, 0, 187, 0, 0, 3117, 0, 3119,
	2260, 187, 0, 0, 0, 1841, 2249, 0, 187, 187,
	0, 0, 187, 3124, 187, 0, 0, 1293, 37, 1294,
	1295, 187, 0, 0, 3116, 1839, 0, 0, 187, 2685,
	3096, 0, 3104, 2685, 0, 0, 3118, 3105, 0, 0,
	0, 3114, 3112, 0, 3120, 0, 0, 0, 0, 1293,
	0, 1294, 1295, 0, 187, 1293, 2682, 1294, 1295, 635,
	0, 2021, 0, 0, 0, 3222, 0, 0, 0, 0,
	3209, 3128, 0, 0, 3229, 0, 0, 3224, 3125, 3126,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	1109, 0, 0, 0, 3239, 3240, 0, 3242, 0, 3243,
	3244, 0, 3213, 3206, 3247, 3248, 3249, 3207, 3251, 3254,
	3252, 3253, 0, 0, 1841, 0, 1352, 3233, 3205, 1339,
	0, 1972, 3256, 3221, 3263, 3265, 3266, 3268, 3270, 3271,
	3273, 3225, 3226, 0, 1839, 0, 0, 0, 0, 0,
	3274, 0, 0, 0, 3274, 3274, 3216, 3217, 3218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3303, 3257,
	0, 0, 3259, 2021, 0, 0, 3262, 0, 0, 0,
	0, 0, 3299, 0, 0, 3278, 3279, 3281, 3280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2685, 0, 0, 3296, 0, 3287, 3298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 3304, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 635,
	0, 0, 0, 3328, 3323, 0, 0, 0, 3311, 0,
	635, 0, 0, 37, 0, 0, 0, 0, 0, 3320,
	0, 3318, 0, 3344, 0, 0, 3315, 0, 0, 3345,
	3346, 0, 0, 0, 187, 0, 0, 0, 187, 0,
	0, 0, 0, 1508, 0, 0, 3351, 0, 0, 0,
	0, 3357, 0, 0, 0, 0, 0, 0, 3355, 3338,
	0, 0, 3339, 0, 0, 0, 0, 3327, 0, 0,
	0, 0, 3347, 0, 0, 3337, 0, 3382, 3383, 0,
	0, 1595, 1109, 1109, 0, 3354, 0, 0, 0, 37,
	0, 3392, 3394, 3396, 3364, 3362, 0, 3389, 3390, 3359,
	3367, 0, 635, 3375, 3398, 3372, 3369, 0, 187, 3233,
	3377, 3368, 3366, 3371, 3370, 187, 3424, 0, 0, 3406,
	2682, 0, 0, 0, 0, 0, 0, 3400, 0, 635,
	0, 3421, 3403, 0, 0, 0, 635, 0, 3411, 3416,
	0, 0, 0, 3430, 0, 635, 0, 0, 3389, 3390,
	0, 0, 0, 0, 0, 3441, 3428, 0, 0, 0,
	0, 1339, 3351, 0, 0, 0, 0, 0, 0, 3439,
	0, 1347, 0, 0, 187, 187, 187, 187, 187, 0,
	3444, 0, 0, 0, 2021, 0, 0, 3462, 3464, 3466,
	0, 0, 0, 3457, 0, 187, 187, 1841, 0, 3459,
	0, 2895, 0, 3406, 0, 3471, 0, 3474, 1745, 3468,
	3470, 187, 3472, 3467, 0, 0, 0, 1839, 3485, 3482,
	0, 0, 0, 0, 3389, 3390, 3488, 0, 0, 0,
	0, 0, 635, 0, 3497, 3498, 3496, 0, 0, 3494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 3505, 3506, 3253, 3503,
	3504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 1339, 0, 0, 635, 635, 1339, 187, 187,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 187, 0, 0, 187, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 3146,
	3148, 3147, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 704,
	0, 635, 0, 0, 1339, 0, 0, 0, 0, 635,
	1847, 1848, 0, 0, 187, 1850, 0, 899, 899, 1855,
	0, 0, 0, 1860, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 187, 0, 0, 187,
	1908, 1909, 1910, 1911, 1912, 1913, 1915, 0, 1920, 0,
	1922, 1923, 1924, 0, 1926, 1927, 1928, 0, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 0, 1958, 0, 1965, 1966, 899, 0, 899, 899,
	899, 899, 899, 0, 0, 0, 0, 0, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 0, 1987, 1988, 1989,
	1990, 1991, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 899, 0, 0, 182, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 2030, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 3152, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 3160, 3161, 0, 2449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 161,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 187, 0, 0, 187, 187,
	187, 181, 0, 0, 0, 0, 0, 0, 635, 635,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 770, 0, 683, 774, 685, 771, 772, 0,
	681, 684, 773, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 635, 635, 635, 0, 0, 702, 703,
	3145, 3149, 3150, 3151, 3162, 3163, 3164, 3172, 3174, 735,
	3173, 3175, 3176, 3177, 3180, 3181, 3182, 3183, 3178, 3179,
	3184, 3129, 3133, 3130, 3131, 3132, 3144, 3134, 3135, 3136,
	3137, 3138, 3139, 3140, 3141, 3142, 3143, 3185, 3186, 3187,
	3188, 3189, 3190, 3155, 3159, 3158, 3156, 3157, 3153, 3154,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 775, 0, 776, 0, 0, 780, 0, 0,
	0, 782, 781, 0, 783, 749, 748, 0, 0, 777,
	778, 0, 779, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 635, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3191, 3192,
	3193, 3194, 3195, 3196, 3197, 3198, 0, 0, 808, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2258, 187, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 2265, 2266,
	2267, 2268, 0, 156, 635, 0, 0, 0, 0, 0,
	0, 1467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 635, 635,
	0, 0, 932, 0, 0, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 187, 169, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 635, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2555, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	0, 0, 2579, 2580, 0, 0, 2582, 0, 635, 2584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 635, 0, 2591,
	2592, 2593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2598, 0, 0, 2600, 2601, 2602, 0, 0, 0,
	2603, 2604, 0, 0, 1934, 2606, 0, 0, 2608, 0,
	764, 2610, 2611, 2612, 2613, 0, 0, 0, 0, 2614,
	1934, 1934, 1934, 1934, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	0, 0, 0, 0, 0, 2637, 2638, 2639, 2640, 2641,
	2642, 0, 0, 0, 2643, 2644, 0, 2645, 0, 2646,
	0, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3443, 0,
	0, 0, 634, 0, 634, 0, 0, 0, 1560, 0,
	0, 2710, 0, 1107, 0, 1107, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 1048, 0, 1054, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 1336, 1341, 1342, 0,
	1345, 2772, 1346, 1348, 1349, 1350, 0, 1353, 1354, 1356,
	1356, 0, 1356, 1360, 1360, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1548, 0, 0, 0, 1427, 0, 1429, 1430, 1431, 1432,
	1433, 0, 2857, 0, 0, 0, 0, 0, 0, 1360,
	1360, 1360, 1360, 1360, 0, 0, 2866, 0, 0, 0,
	0, 0, 0, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 872, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 1560, 0, 0, 0,
	0, 1574, 1577, 1578, 1579, 1580, 1581, 1582, 0, 1583,
	1584, 1585, 1586, 1587, 1562, 1563, 1564, 1565, 1546, 1547,
	1575, 0, 1549, 0, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 0, 0, 1559, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3033, 0, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 3053, 0, 3054, 0, 0, 3055, 0, 0,
	3058, 3059, 0, 0, 0, 0, 0, 0, 0, 3063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3065,
	0, 0, 0, 0, 0, 0, 1675, 0, 0, 0,
	0, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 3082, 0, 0, 3083, 0, 3084, 3085, 0, 3086,
	0, 3087, 0, 0, 0, 1107, 3088, 0, 0, 0,
	0, 1720, 0, 0, 0, 634, 1260, 634, 634, 0,
	0, 1561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3113, 0, 0, 0, 0, 0, 634, 634, 0,
	810, 811, 3121, 1752, 0, 3123, 1840, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 3127,
	0, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 3202, 0, 1574,
	1577, 1578, 1579, 1580, 1581, 1582, 0, 1583, 1584, 1585,
	1586, 1587, 1562, 1563, 1564, 1565, 1546, 1547, 1575, 0,
	1549, 0, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 0, 0, 1559, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 0, 0, 0, 0, 0, 1107,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 3286, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2494, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 185, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	1793, 0, 0, 0, 583, 0, 0, 0, 0, 0,
	0, 154, 1576, 0, 0, 634, 634, 142, 0, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 900, 0, 900, 161, 0,
	162, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 1616, 1617, 153, 152,
	181, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1589, 0, 0, 0,
	3326, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3340, 0, 0, 3341, 0, 3342, 634,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 1338, 1635, 0, 0, 1638, 1639, 634, 634,
	0, 634, 0, 634, 634, 0, 634, 634, 634, 634,
	634, 634, 0, 0, 0, 0, 0, 0, 0, 1338,
	1670, 1671, 1338, 634, 1338, 0, 1676, 0, 0, 147,
	1618, 150, 0, 1615, 0, 148, 149, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 2049, 0, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 3422, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 3436, 0, 3437, 0, 3438, 0, 0, 0,
	2039, 0, 2042, 0, 0, 1793, 0, 634, 0, 0,
	0, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 0, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	164, 0, 3483, 0, 3484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 1616, 1617, 153, 152,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 145,
	0, 1793, 0, 0, 0, 0, 0, 0, 2194, 0,
	0, 0, 0, 0, 0, 2208, 2209, 0, 0, 2213,
	0, 0, 0, 2231, 0, 0, 0, 0, 2216, 157,
	0, 0, 0, 0, 0, 2219, 169, 634, 0, 147,
	1618, 150, 0, 1615, 0, 148, 149, 1338, 0, 0,
	0, 165, 0, 0, 0, 0, 1849, 0, 634, 0,
	171, 2222, 2241, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 583, 0, 0, 583, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 2339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2371, 0, 0, 0, 634, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 2410,
	2411, 0, 0, 78, 39, 40, 80, 0, 2430, 0,
	2431, 2432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 43, 69, 70,
	0, 67, 71, 0, 0, 0, 0, 0, 0, 1340,
	68, 0, 0, 634, 0, 0, 0, 0, 0, 0,
	2127, 2128, 2129, 0, 0, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	634, 0, 0, 0, 0, 2433, 634, 1633, 0, 0,
	1633, 87, 1633, 0, 0, 0, 0, 0, 2159, 157,
	0, 0, 0, 583, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	2508, 0, 0, 634, 0, 0, 0, 0, 634, 0,
	0, 0, 634, 634, 0, 0, 583, 0, 177, 0,
	0, 0, 0, 0, 0, 2481, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 1340, 0, 0, 0, 0, 0,
	0, 2530, 2531, 2532, 2533, 2534, 0, 46, 49, 52,
	51, 54, 0, 66, 0, 0, 75, 72, 0, 0,
	0, 1340, 1793, 2543, 1340, 634, 1340, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2551, 55,
	83, 82, 0, 0, 64, 65, 53, 1692, 0, 0,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 2624, 0, 0, 0, 1338, 0, 634, 0, 0,
	0, 0, 57, 58, 583, 59, 60, 61, 62, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 1766, 583, 583, 583, 583, 583, 583, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 0, 79,
	0, 0, 2049, 2049, 2049, 2049, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2430,
	872, 0, 0, 0, 2049, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2794, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	2802, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2762, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	2446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2825, 0, 0, 2828, 0, 634, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 900, 0, 0, 0, 1340, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 1633, 1633, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 2518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	900, 1742, 900, 900, 900, 900, 900, 0, 0, 0,
	0, 2049, 0, 0, 0, 2924, 0, 0, 0, 0,
	0, 0, 0, 0, 2970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 634, 0, 0, 0, 1742,
	0, 583, 0, 583, 0, 583, 2057, 0, 0, 0,
	0, 0, 0, 2987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3002, 634, 0, 3003, 3004, 3005, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 1338, 0,
	0, 634, 634, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3089, 0, 3093,
	3094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2686, 0, 79, 0, 2686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2757, 87, 0, 0, 0,
	0, 0, 802, 810, 811, 812, 813, 814, 803, 805,
	0, 0, 0, 804, 0, 0, 0, 634, 0, 0,
	1338, 0, 583, 0, 0, 634, 807, 815, 816, 583,
	0, 0, 0, 0, 0, 0, 583, 583, 0, 0,
	583, 0, 2215, 0, 0, 3214, 0, 0, 0, 583,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2806, 2807, 2832, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2686, 634, 0, 1340, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2977, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 802, 810, 811, 812, 813,
	814, 803, 805, 0, 0, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 634, 634, 0, 0, 583, 807,
	815, 816, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 770, 0,
	0, 774, 0, 771, 772, 0, 0, 3324, 773, 0,
	3358, 0, 0, 0, 0, 79, 0, 0, 634, 634,
	634, 634, 0, 0, 0, 0, 2806, 2807, 0, 0,
	0, 0, 583, 0, 0, 0, 583, 0, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 3440, 0, 2487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 634, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 1340,
	810, 811, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 583, 583, 583, 583, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 900, 0, 0, 0, 0, 0, 0,
	634, 0, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 634, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 900, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 1340, 583, 583, 583, 583,
	583, 0, 634, 0, 0, 0, 0, 0, 2705, 0,
	0, 0, 0, 583, 0, 0, 1692, 0, 583, 0,
	0, 583, 2716, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1340, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 1338, 0, 634, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 634, 583, 0, 0, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 634, 0, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 0, 0, 583, 583, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 377,
	0, 0, 1243, 1228, 493, 0, 1171, 1246, 1140, 1159,
	1256, 1162, 1165, 1207, 1119, 1185, 396, 1156, 1112, 1144,
	1114, 1151, 1115, 1142, 1173, 255, 1139, 1230, 1189, 1245,
	348, 252, 1121, 1145, 410, 1161, 194, 1209, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 1252, 352, 1195, 0, 473, 381, 0, 0,
	1692, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247,
	1157, 1204, 1248, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 3378, 0,
	3379, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	1153, 1201, 1242, 1154, 1203, 250, 305, 257, 249, 498,
	1253, 1233, 1118, 1182, 1241, 0, 0, 217, 1244, 1177,
	0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255,
	1237, 1148, 260, 0, 0, 0, 0, 0, 0, 0,
	1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 1193, 0, 0, 0, 1125, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 1128, 0, 1147,
	1219, 0, 1111, 282, 1122, 382, 242, 0, 1226, 1236,
	1169, 538, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 347,
	1124, 314, 189, 213, 0, 1158, 392, 438, 450, 1231,
	1143, 1152, 240, 1150, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 1192, 1211, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	1123, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 1138, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 1227, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 1216, 1258, 405, 449,
	228, 519, 472, 1133, 1137, 1131, 1198, 1132, 1187, 1188,
	1134, 1249, 1250, 1251, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238,
	1239, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 1191, 188, 209, 350, 1254, 431, 273, 556, 529,
	524, 195, 211, 1130, 247, 1141, 1149, 0, 1155, 1163,
	1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210,
	1212, 1215, 1217, 1224, 1235, 1257, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 1190, 1196, 362, 266, 289, 304, 1205, 528,
	478, 215, 443, 275, 238, 1223, 1225, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 1186, 1214, 357, 494, 495, 300, 377, 0, 0,
	1243, 1228, 493, 0, 1171, 1246, 1140, 1159, 1256, 1162,
	1165, 1207, 1119, 1185, 396, 1156, 1112, 1144, 1114, 1151,
	1115, 1142, 1173, 255, 1139, 1230, 1189, 1245, 348, 252,
	1121, 1145, 410, 1161, 194, 1209, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	1252, 352, 1195, 0, 473, 381, 0, 0, 0, 1175,
	1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204,
	1248, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 1153, 1201,
	1242, 1154, 1203, 250, 305, 257, 249, 498, 1253, 1233,
	1118, 1182, 1241, 0, 0, 217, 1244, 1177, 0, 1206,
	0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237, 1148,
	260, 0, 0, 0, 0, 0, 0, 0, 1174, 1184,
	1218, 1222, 1168, 0, 0, 0, 0, 0, 2717, 0,
	1146, 0, 1193, 0, 0, 0, 1125, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 0, 0, 0, 1128, 0, 1147, 1219, 0,
	1111, 282, 1122, 382, 242, 0, 1226, 1236, 1169, 538,
	1240, 1167, 1166, 1213, 1126, 1232, 1160, 347, 1124, 314,
	189, 213, 0, 1158, 392, 438, 450, 1231, 1143, 1152,
	240, 1150, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 1192, 1211, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 1123, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 1138, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 1227, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 1216, 1258, 405, 449, 228, 519,
	472, 1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249,
	1250, 1251, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 1220, 1127, 0, 1135, 1136, 1229, 1238, 1239, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 1191,
	188, 209, 350, 1254, 431, 273, 556, 529, 524, 195,
	211, 1130, 247, 1141, 1149, 0, 1155, 1163, 1164, 1176,
	1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215,
	1217, 1224, 1235, 1257, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	1190, 1196, 362, 266, 289, 304, 1205, 528, 478, 215,
	443, 275, 238, 1223, 1225, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 1186,
	1214, 357, 494, 495, 300, 377, 0, 0, 1243, 1228,
	493, 0, 1171, 1246, 1140, 1159, 1256, 1162, 1165, 1207,
	1119, 1185, 396, 1156, 1112, 1144, 1114, 1151, 1115, 1142,
	1173, 255, 1139, 1230, 1189, 1245, 348, 252, 1121, 1145,
	410, 1161, 194, 1209, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 1252, 352,
	1195, 0, 473, 381, 0, 0, 0, 1175, 1234, 1183,
	1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 1153, 1201, 1242, 1154,
	1203, 250, 305, 257, 249, 498, 1253, 1233, 1118, 1182,
	1241, 0, 0, 217, 1244, 1177, 0, 1206, 0, 1259,
	1113, 1197, 0, 1116, 1120, 1255, 1237, 1148, 260, 0,
	0, 0, 0, 0, 0, 0, 1174, 1184, 1218, 1222,
	1168, 0, 0, 0, 0, 0, 2675, 0, 1146, 0,
	1193, 0, 0, 0, 1125, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1172, 0,
	0, 0, 0, 1128, 0, 1147, 1219, 0, 1111, 282,
	1122, 382, 242, 0, 1226, 1236, 1169, 538, 1240, 1167,
	1166, 1213, 1126, 1232, 1160, 347, 1124, 314, 189, 213,
	0, 1158, 392, 438, 450, 1231, 1143, 1152, 240, 1150,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	1192, 1211, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 1123, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	1138, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 1227, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 1216, 1258, 405, 449, 228, 519, 472, 1133,
	1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 1220,
	1127, 0, 1135, 1136, 1229, 1238, 1239, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 1191, 188, 209,
	350, 1254, 431, 273, 556, 529, 524, 195, 211, 1130,
	247, 1141, 1149, 0, 1155, 1163, 1164, 1176, 1178, 1179,
	1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224,
	1235, 1257, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 1190, 1196,
	362, 266, 289, 304, 1205, 528, 478, 215, 443, 275,
	238, 1223, 1225, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 1186, 1214, 357,
	494, 495, 300, 377, 0, 0, 1243, 1228, 493, 0,
	1171, 1246, 1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185,
	396, 1156, 1112, 1144, 1114, 1151, 1115, 1142, 1173, 255,
	1139, 1230, 1189, 1245, 348, 252, 1121, 1145, 410, 1161,
	194, 1209, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 1252, 352, 1195, 0,
	473, 381, 0, 0, 0, 1175, 1234, 1183, 1221, 1170,
	1208, 1129, 1194, 1247, 1157, 1204, 1248, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 1153, 1201, 1242, 1154, 1203, 250,
	305, 257, 249, 498, 1253, 1233, 1118, 1182, 1241, 0,
	0, 217, 1244, 1177, 0, 1206, 0, 1259, 1113, 1197,
	0, 1116, 1120, 1255, 1237, 1148, 260, 0, 0, 0,
	0, 0, 0, 0, 1174, 1184, 1218, 1222, 1168, 0,
	0, 0, 0, 0, 2037, 0, 1146, 0, 1193, 0,
	0, 0, 1125, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 1128, 0, 1147, 1219, 0, 1111, 282, 1122, 382,
	242, 0, 1226, 1236, 1169, 538, 1240, 1167, 1166, 1213,
	1126, 1232, 1160, 347, 1124, 314, 189, 213, 0, 1158,
	392, 438, 450, 1231, 1143, 1152, 240, 1150, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 1192, 1211,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 1123, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 1138, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 1227, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	1216, 1258, 405, 449, 228, 519, 472, 1133, 1137, 1131,
	1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 1220, 1127, 0,
	1135, 1136, 1229, 1238, 1239, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 1191, 188, 209, 350, 1254,
	431, 273, 556, 529, 524, 195, 211, 1130, 247, 1141,
	1149, 0, 1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181,
	1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 1190, 1196, 362, 266,
	289, 304, 1205, 528, 478, 215, 443, 275, 238, 1223,
	1225, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 1186, 1214, 357, 494, 495,
	300, 377, 0, 0, 1243, 1228, 493, 0, 1171, 1246,
	1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185, 396, 1156,
	1112, 1144, 1114, 1151, 1115, 1142, 1173, 255, 1139, 1230,
	1189, 1245, 348, 252, 1121, 1145, 410, 1161, 194, 1209,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 1252, 352, 1195, 0, 473, 381,
	0, 0, 0, 1175, 1234, 1183, 1221, 1170, 1208, 1129,
	1194, 1247, 1157, 1204, 1248, 307, 235, 309, 193, 393,
	474, 271, 0, 87, 0, 0, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 1153, 1201, 1242, 1154, 1203, 250, 305, 257,
	249, 498, 1253, 1233, 1118, 1182, 1241, 0, 0, 217,
	1244, 1177, 0, 1206, 0, 1259, 1113, 1197, 0, 1116,
	1120, 1255, 1237, 1148, 260, 0, 0, 0, 0, 0,
	0, 0, 1174, 1184, 1218, 1222, 1168, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 1193, 0, 0, 0,
	1125, 1117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 1128,
	0, 1147, 1219, 0, 1111, 282, 1122, 382, 242, 0,
	1226, 1236, 1169, 538, 1240, 1167, 1166, 1213, 1126, 1232,
	1160, 347, 1124, 314, 189, 213, 0, 1158, 392, 438,
	450, 1231, 1143, 1152, 240, 1150, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 1192, 1211, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 1123, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 1138, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 1227,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 1216, 1258,
	405, 449, 228, 519, 472, 1133, 1137, 1131, 1198, 1132,
	1187, 1188, 1134, 1249, 1250, 1251, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 1220, 1127, 0, 1135, 1136,
	1229, 1238, 1239, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 1191, 188, 209, 350, 1254, 431, 273,
	556, 529, 524, 195, 211, 1130, 247, 1141, 1149, 0,
	1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200,
	1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 1190, 1196, 362, 266, 289, 304,
	1205, 528, 478, 215, 443, 275, 238, 1223, 1225, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 1186, 1214, 357, 494, 495, 300, 377,
	0, 0, 1243, 1228, 493, 0, 1171, 1246, 1140, 1159,
	1256, 1162, 1165, 1207, 1119, 1185, 396, 1156, 1112, 1144,
	1114, 1151, 1115, 1142, 1173, 255, 1139, 1230, 1189, 1245,
	348, 252, 1121, 1145, 410, 1161, 194, 1209, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 1252, 352, 1195, 0, 473, 381, 0, 0,
	0, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247,
	1157, 1204, 1248, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	1153, 1201, 1242, 1154, 1203, 250, 305, 257, 249, 498,
	1253, 1233, 1118, 1182, 1241, 0, 0, 217, 1244, 1177,
	0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255,
	1237, 1148, 260, 0, 0, 0, 0, 0, 0, 0,
	1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 1193, 0, 0, 0, 1125, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 1128, 0, 1147,
	1219, 0, 1111, 282, 1122, 382, 242, 0, 1226, 1236,
	1169, 538, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 347,
	1124, 314, 189, 213, 0, 1158, 392, 438, 450, 1231,
	1143, 1152, 240, 1150, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 1192, 1211, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	1123, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 1138, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 1227, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 1216, 1258, 405, 449,
	228, 519, 472, 1133, 1137, 1131, 1198, 1132, 1187, 1188,
	1134, 1249, 1250, 1251, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238,
	1239, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 1191, 188, 209, 350, 1254, 431, 273, 556, 529,
	524, 195, 211, 1130, 247, 1141, 1149, 0, 1155, 1163,
	1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210,
	1212, 1215, 1217, 1224, 1235, 1257, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 1190, 1196, 362, 266, 289, 304, 1205, 528,
	478, 215, 443, 275, 238, 1223, 1225, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 1186, 1214, 357, 494, 495, 300, 377, 0, 0,
	1243, 1228, 493, 0, 1171, 1246, 1140, 1159, 1256, 1162,
	1165, 1207, 1119, 1185, 396, 1156, 1112, 1144, 1114, 1151,
	1115, 1142, 1173, 255, 1139, 1230, 1189, 1245, 348, 252,
	1121, 1145, 410, 1161, 194, 1209, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	1252, 352, 1195, 0, 473, 381, 0, 0, 0, 1175,
	1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204,
	1248, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 1153, 1201,
	1242, 1154, 1203, 250, 305, 257, 249, 498, 1253, 1233,
	1118, 1182, 1241, 0, 0, 217, 1244, 1177, 0, 1206,
	0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237, 1148,
	260, 0, 0, 0, 0, 0, 0, 0, 1174, 1184,
	1218, 1222, 1168, 0, 0, 0, 0, 0, 0, 0,
	1146, 0, 1193, 0, 0, 0, 1125, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 0, 0, 0, 1128, 0, 1147, 1219, 0,
	1111, 282, 1122, 382, 242, 0, 1226, 1236, 1169, 538,
	1240, 1167, 1166, 1213, 1126, 1232, 1160, 347, 1124, 314,
	189, 213, 0, 1158, 392, 438, 450, 1231, 1143, 1152,
	240, 1150, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 1192, 1211, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 1123, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 1138, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 1227, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 1216, 1258, 405, 449, 228, 519,
	472, 1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249,
	1250, 1251, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 1220, 1127, 0, 1135, 1136, 1229, 1238, 1239, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 1191,
	188, 209, 350, 1254, 431, 273, 556, 529, 524, 195,
	211, 1130, 247, 1141, 1149, 0, 1155, 1163, 1164, 1176,
	1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215,
	1217, 1224, 1235, 1257, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	1190, 1196, 362, 266, 289, 304, 1205, 528, 478, 215,
	443, 275, 238, 1223, 1225, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 1186,
	1214, 357, 494, 495, 300, 377, 0, 0, 1243, 1228,
	493, 0, 1171, 1246, 1140, 1159, 1256, 1162, 1165, 1207,
	1119, 1185, 396, 1156, 1112, 1144, 1114, 1151, 1115, 1142,
	1173, 255, 1139, 1230, 1189, 1245, 348, 252, 1121, 1145,
	410, 1161, 194, 1209, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 1252, 352,
	1195, 0, 473, 381, 0, 0, 0, 1175, 1234, 1183,
	1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 1153, 1201, 1242, 1154,
	1203, 250, 305, 257, 249, 498, 1253, 1233, 1118, 1182,
	1241, 0, 0, 217, 1244, 1177, 0, 1206, 0, 1259,
	1113, 1197, 0, 1116, 1120, 1255, 1237, 1148, 260, 0,
	0, 0, 0, 0, 0, 0, 1174, 1184, 1218, 1222,
	1168, 0, 0, 0, 0, 0, 0, 0, 1146, 0,
	1193, 0, 0, 0, 1125, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1172, 0,
	0, 0, 0, 1128, 0, 1147, 1219, 0, 1111, 282,
	1122, 382, 242, 0, 1226, 1236, 1169, 538, 1240, 1167,
	1166, 1213, 1126, 1232, 1160, 347, 1124, 314, 189, 213,
	0, 1158, 392, 438, 450, 1231, 1143, 1152, 240, 1150,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	1192, 1211, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 1123, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	1138, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 1227, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 1216, 1258, 405, 449, 228, 519, 472, 1133,
	1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 1220,
	1127, 0, 1135, 1136, 1229, 1238, 1239, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 1191, 188, 209,
	350, 1254, 431, 273, 556, 529, 524, 195, 211, 1130,
	247, 1141, 1149, 0, 1155, 1163, 1164, 1176, 1178, 1179,
	1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224,
	1235, 1257, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 1190, 1196,
	362, 266, 289, 304, 1205, 528, 478, 215, 443, 275,
	238, 1223, 1225, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 1186, 1214, 357,
	494, 495, 300, 377, 0, 0, 0, 0, 493, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 666, 0, 0, 0, 255,
	671, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 678, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 87, 0, 0, 798, 766,
	767, 802, 810, 811, 812, 813, 814, 803, 805, 0,
	0, 226, 804, 233, 706, 708, 707, 725, 726, 727,
	728, 729, 730, 731, 704, 807, 815, 816, 0, 250,
	305, 257, 249, 498, 0, 0, 1916, 1917, 1918, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 648,
	663, 0, 677, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 661, 0, 0, 0, 0, 760, 0,
	662, 0, 0, 670, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 759, 0, 0, 538, 0, 0, 757, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 712, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 720, 721, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 770, 758, 683,
	774, 685, 771, 772, 680, 681, 684, 773, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 761, 669, 668,
	0, 676, 0, 702, 703, 705, 709, 710, 711, 722,
	723, 724, 732, 734, 735, 733, 736, 737, 738, 741,
	742, 743, 744, 739, 740, 745, 686, 690, 687, 688,
	689, 701, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 784, 785, 786, 787, 788, 789, 715, 719,
	718, 716, 717, 713, 714, 667, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 775, 247, 776,
	0, 0, 780, 0, 0, 0, 782, 781, 0, 783,
	749, 748, 0, 0, 777, 778, 0, 779, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 790, 791, 792, 793, 794, 795, 796,
	797, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 809,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 666, 0,
	0, 0, 255, 671, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 678,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	674, 675, 0, 0, 0, 0, 0, 0, 2065, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 87, 0,
	0, 798, 766, 767, 802, 810, 811, 812, 813, 814,
	803, 805, 0, 0, 226, 804, 233, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 807, 815,
	816, 2066, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 0, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 759, 0, 0, 538, 0,
	0, 757, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 712, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 720,
	721, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	770, 758, 683, 774, 685, 771, 772, 680, 681, 684,
	773, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	761, 669, 668, 0, 676, 0, 702, 703, 705, 709,
	710, 711, 722, 723, 724, 732, 734, 735, 733, 736,
	737, 738, 741, 742, 743, 744, 739, 740, 745, 686,
	690, 687, 688, 689, 701, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 784, 785, 786, 787, 788,
	789, 715, 719, 718, 716, 717, 713, 714, 667, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	775, 247, 776, 0, 0, 780, 0, 0, 0, 782,
	781, 0, 783, 749, 748, 0, 0, 777, 778, 0,
	779, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 790, 791, 792, 793,
	794, 795, 796, 797, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 809, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 0,
	357, 494, 495, 300, 377, 0, 0, 0, 78, 493,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 666, 0, 0, 0,
	255, 671, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 678, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 87, 0, 0, 798,
	766, 767, 802, 810, 811, 812, 813, 814, 803, 805,
	0, 0, 226, 804, 233, 706, 708, 707, 725, 726,
	727, 728, 729, 730, 731, 704, 807, 815, 816, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	648, 663, 0, 677, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 661, 0, 0, 0, 0, 760,
	0, 662, 0, 0, 670, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 759, 0, 0, 538, 0, 0, 757,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 712, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 720, 721, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 770, 758,
	683, 774, 685, 771, 772, 680, 681, 684, 773, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 761, 669,
	668, 0, 676, 0, 702, 703, 705, 709, 710, 711,
	722, 723, 724, 732, 734, 735, 733, 736, 737, 738,
	741, 742, 743, 744, 739, 740, 745, 686, 690, 687,
	688, 689, 701, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 784, 785, 786, 787, 788, 789, 715,
	719, 718, 716, 717, 713, 714, 667, 188, 209, 350,
	86, 431, 273, 556, 529, 524, 195, 211, 775, 247,
	776, 0, 0, 780, 0, 0, 0, 782, 781, 0,
	783, 749, 748, 0, 0, 777, 778, 0, 779, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 790, 791, 792, 793, 794, 795,
	796, 797, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	809, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 666,
	0, 0, 0, 255, 671, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	678, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 87,
	0, 0, 798, 766, 767, 802, 810, 811, 812, 813,
	814, 803, 805, 0, 0, 226, 804, 233, 706, 708,
	707, 725, 726, 727, 728, 729, 730, 731, 704, 807,
	815, 816, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 648, 663, 0, 677, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 760, 0, 662, 0, 0, 670, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 759, 0, 0, 538,
	0, 0, 757, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 3365, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 712, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	720, 721, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 770, 758, 683, 774, 685, 771, 772, 680, 681,
	684, 773, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 761, 669, 668, 0, 676, 0, 702, 703, 705,
	709, 710, 711, 722, 723, 724, 732, 734, 735, 733,
	736, 737, 738, 741, 742, 743, 744, 739, 740, 745,
	686, 690, 687, 688, 689, 701, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 784, 785, 786, 787,
	788, 789, 715, 719, 718, 716, 717, 713, 714, 667,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 775, 247, 776, 0, 0, 780, 0, 0, 0,
	782, 781, 0, 783, 749, 748, 0, 0, 777, 778,
	0, 779, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 790, 791, 792,
	793, 794, 795, 796, 797, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 809, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 666, 0, 0, 0, 255, 671, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 678, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 87, 0, 1492, 798, 766, 767, 802, 810,
	811, 812, 813, 814, 803, 805, 0, 0, 226, 804,
	233, 706, 708, 707, 725, 726, 727, 728, 729, 730,
	731, 704, 807, 815, 816, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 648, 663, 0, 677,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 760, 0, 662, 0, 0,
	670, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 759,
	0, 0, 538, 0, 0, 757, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 712, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 720, 721, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 770, 758, 683, 774, 685, 771,
	772, 680, 681, 684, 773, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 761, 669, 668, 0, 676, 0,
	702, 703, 705, 709, 710, 711, 722, 723, 724, 732,
	734, 735, 733, 736, 737, 738, 741, 742, 743, 744,
	739, 740, 745, 686, 690, 687, 688, 689, 701, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 784,
	785, 786, 787, 788, 789, 715, 719, 718, 716, 717,
	713, 714, 667, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 775, 247, 776, 0, 0, 780,
	0, 0, 0, 782, 781, 0, 783, 749, 748, 0,
	0, 777, 778, 0, 779, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	790, 791, 792, 793, 794, 795, 796, 797, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 809, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 666, 0, 0, 0, 255,
	671, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 678, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 87, 0, 0, 798, 766,
	767, 802, 810, 811, 812, 813, 814, 803, 805, 0,
	0, 226, 804, 233, 706, 708, 707, 725, 726, 727,
	728, 729, 730, 731, 704, 807, 815, 816, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 648,
	663, 0, 677, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 661, 898, 0, 0, 0, 760, 0,
	662, 0, 0, 670, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 759, 0, 0, 538, 0, 0, 757, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 712, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 720, 721, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 770, 758, 683,
	774, 685, 771, 772, 680, 681, 684, 773, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 761, 669, 668,
	0, 676, 0, 702, 703, 705, 709, 710, 711, 722,
	723, 724, 732, 734, 735, 733, 736, 737, 738, 741,
	742, 743, 744, 739, 740, 745, 686, 690, 687, 688,
	689, 701, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 784, 785, 786, 787, 788, 789, 715, 719,
	718, 716, 717, 713, 714, 667, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 775, 247, 776,
	0, 0, 780, 0, 0, 0, 782, 781, 0, 783,
	749, 748, 0, 0, 777, 778, 0, 779, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 790, 791, 792, 793, 794, 795, 796,
	797, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 809,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 666, 0,
	0, 0, 255, 671, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 678,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 87, 0,
	0, 798, 766, 767, 802, 810, 811, 812, 813, 814,
	803, 805, 0, 0, 226, 804, 233, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 807, 815,
	816, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 0, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 759, 0, 0, 538, 0,
	0, 757, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 712, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 720,
	721, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	770, 758, 683, 774, 685, 771, 772, 680, 681, 684,
	773, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	761, 669, 668, 0, 676, 0, 702, 703, 705, 709,
	710, 711, 722, 723, 724, 732, 734, 735, 733, 736,
	737, 738, 741, 742, 743, 744, 739, 740, 745, 686,
	690, 687, 688, 689, 701, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 784, 785, 786, 787, 788,
	789, 715, 719, 718, 716, 717, 713, 714, 667, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	775, 247, 776, 0, 0, 780, 0, 0, 0, 782,
	781, 0, 783, 749, 748, 0, 0, 777, 778, 0,
	779, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 790, 791, 792, 793,
	794, 795, 796, 797, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 809, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 666, 0, 0, 0, 255, 671, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 678, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 87, 0, 0, 798, 766, 767, 802, 810, 811,
	812, 813, 814, 803, 805, 0, 0, 226, 804, 233,
	706, 708, 707, 725, 726, 727, 728, 729, 730, 731,
	704, 807, 815, 816, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 677, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 661,
	0, 0, 0, 0, 760, 0, 662, 0, 0, 670,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 759, 0,
	0, 538, 0, 0, 757, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 712, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 720, 721, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 775, 247, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 790,
	791, 792, 793, 794, 795, 796, 797, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 809, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 969, 538, 0, 0, 0, 0, 0,
	966, 967, 347, 927, 314, 189, 213, 960, 964, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 0, 357, 494, 495, 300,
	377, 0, 0, 0, 78, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 87, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 86, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 1511, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 1513, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 624, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 1293, 0, 1294, 1295, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 798, 0, 0, 1455, 1458, 0, 0, 0, 0,
	1454, 1457, 0, 0, 226, 1453, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 0,
	357, 494, 495, 300, 377, 0, 0, 0, 78, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 87, 0, 1492, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	86, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 87,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 2003, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 2001, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 927, 314, 189, 213, 925, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 2003, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 1492, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 3275, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 2395, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 2380,
	0, 0, 0, 2381, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 0, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1535, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 0, 0, 0, 624, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 0, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 3399, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 3275,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 87, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 1791, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	1660, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 0, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 1658, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 1656, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 1654,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 1652, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 1648, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 1646, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 1644, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 1619, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 1520, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 0, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 87, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 0, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 624,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 639, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 581, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 3407, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 0, 357,
	494, 495, 300,
}

var yyPact = [...]int{
	6255, -1000, -450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2125, 2190, -1000, -1000,
	-1000, -1000, 2295, -1000, 871, 1804, -1000, 2081, 311, -1000,
	45491, 581, -1000, 42919, 579, 226, 28130, -1000, 214, -1000,
	205, 44205, 209, 42276, -1000, -1000, -281, 17832, 2027, 95,
	93, 45491, -1000, -1000, -1000, -1000, 2245, 1782, -1000, 385,
	-1000, -1000, -1000, -1000, -1000, -1000, 41633, -1000, -1000, -1000,
	2096, 2087, 2299, 727, 2028, -1000, 2161, 1782, -1000, 17832,
	2229, 2156, 17189, -1000, 17189, 516, -1000, -1000, 379, -1000,
	-1000, 23629, 45491, 30702, 674, -1000, 2081, -1000, -1000, -1000,
	104, -1000, 404, 1684, -1000, 1683, -1000, 906, 551, 439,
	502, 498, 435, 434, 432, 431, 428, 417, 403, 374,
	442, -1000, 750, 750, -130, -132, 3912, 539, 488, 488,
	781, 542, 2070, 2063, -1000, -1000, 750, 750, 750, 371,
	750, 750, 750, 750, 319, 316, 750, 750, 750, 750,
	750, 750, 750, 750, 750, 750, 750, 750, 750, 750,
	750, 750, 750, 396, 2081, 288, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45491,
	260, 45491, -1000, 636, 45491, 888, 888, 121, 888, 888,
	888, 888, 217, 724, 92, -1000, 201, 283, 202, 285,
	860, 768, -1000, -1000, 281, 860, 1282, -1000, 733, 164,
	-1000, 888, 888, -1000, 11377, 185, 11377, 11377, -1000, 2076,
	-1000, -1000, -1000, -1000, -1000, 1288, -1000, -1000, -1000, -1000,
	-1000, 541, -1000, -1000, -1000, -1000, 44205, 40990, 453, 771,
	-1000, -1000, -1000, 69, -1000, -1000, 1407, 1602, 17832, 1416,
	-1000, 1240, 688, -1000, -1000, -1000, -1000, -1000, 625, -1000,
	18475, 18475, 18475, 18475, -1000, -1000, 1689, 40347, 1689, 1689,
	18475, 1689, -1000, 18475, 1689, 1689, 1689, 17832, 1689, 1689,
	1689, 1689, -1000, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, -1000, -1000, -1000, -1000, 1689, 634, 1689, 1689, 1689,
	1689, 1689, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1689, 1689, 1689, 1689, 1689, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21052, -1000, 15260, 1689,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	45491, -1000, 1689, 244, 44205, 44205, 376, 2161, 1782, -1000,
	2245, 2225, 385, -1000, 2881, 1724, 1717, 1303, 1782, 1656,
	45491, -1000, 1708, -1000, -1000, -1000, 1957, 1204, 1267, -1000,
	-1000, -1000, -1000, 1930, 17832, -1000, -1000, 2267, -1000, 20409,
	632, 950, 2263, 39704, -1000, 516, 516, 1682, 437, 46,
	-1000, -1000, -1000, -1000, 770, 27487, -1000, -1000, -1000, -1000,
	1641, 45491, -1000, -1000, 5074, 1287, -1000, 1799, -1000, 1639,
	-1000, 1746, 17832, 1761, 575, 1287, 558, 554, 552, -1000,
	-37, -1000, -1000, -1000, -1000, -1000, -1000, 750, 750, 750,
	-1000, 411, 2228, 311, 5816, -1000, -1000, -1000, 39061, 1787,
	1287, -1000, 1777, -1000, 881, 599, 648, 648, 1287, -1000,
	-1000, 44848, 1287, 861, 856, 1287, 1287, 44205, 44205, -1000,
	38418, -1000, 37775, 37132, 1127, 44205, 36489, 35846, 35203, 34560,
	33917, -1000, 2023, -1000, 1753, -1000, -1000, -1000, 44848, 1287,
	1287, 44848, 44205, 44848, 45491, 1287, -1000, -1000, 373, -1000,
	-1000, 1126, 1117, 1113, 750, 750, 1110, 1266, 1263, 1258,
	750, 750, 1105, 1250, 29416, 1241, 282, 1092, 1091, 1088,
	1085, 1239, 189, 1238, 1075, 1074, 1084, 44205, 1776, 45491,
	-1000, 274, 891, 452, 765, 2081, 2021, 1679, 536, 565,
	1287, 495, 495, 44205, -1000, 13321, -1000, -1000, 1235, 17832,
	-1000, 880, 860, 860, -1000, -1000, -1000, -1000, -1000, -1000,
	888, 45491, 880, -1000, -1000, -1000, 860, 888, 45491, 888,
	888, 888, 888, 860, 860, 860, 888, 45491, 45491, 45491,
	45491, 45491, 45491, 45491, 45491, 45491, 11377, 733, 888, -287,
	-1000, 1234, -1000, 1923, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11377, 11377, -1000, -1000, -1000, -1000, 208, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -18, 1677, 33274, -1000,
	-289, -290, -293, -299, -1000, -1000, -1000, -314, -325, -1000,
	-1000, -1000, 17832, 17832, 17832, 17832, -156, -1000, 1108, 18475,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 197, 875, 18475,
	18475, 18475, 18475, 18475, 18475, 18475, 18475, 18475, 18475, 18475,
	18475, 18475, 18475, 18475, -1000, -1000, 25558, 5257, 5257, 688,
	688, 688, 688, -1000, -100, 1674, 44848, -1000, -1000, -1000,
	631, 17832, 17832, 688, -1000, 1287, 15260, 32631, 17189, 17189,
	17832, 783, 1602, 44848, 17832, -1000, 1303, -1000, -1000, -1000,
	1022, -1000, 849, 2069, 2069, 2069, 2069, 17832, 17832, 17832,
	17832, 17832, 17832, 17832, 17832, 17832, 17832, 2069, 44205, 44205,
	231, 17832, 17832, 17832, 17832, 17832, 17832, 13969, 17832, 17832,
	18475, 17832, 17832, 17832, 1303, 17832, 17832, 17832, 17832, 17832,
	17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832,
	17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832,
	17832, 17832, 1303, 17832, 1024, 17832, 17832, 17189, 12673, 17189,
	17189, 17189, 17189, 17189, -1000, -1000, -1000, -1000, -1000, 17832,
	17832, 17832, 17832, 17832, 17832, 17832, 17832, 1303, 17832, 17832,
	17832, 17832, 17832, -1000, -1000, -1000, -1000, -1000, -1000, 1593,
	1453, 1349, 17832, -1000, 1670, -1000, -93, 22986, 17832, 1233,
	2261, 1824, 44205, -1000, -1000, -1000, 2161, -1000, 2161, 1593,
	2341, 1960, 17189, -1000, -1000, 2341, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1359, -1000, 45491, 1656, 2126, 44205,
	1951, 1232, 386, -1000, 17832, 17832, 1647, -1000, 1770, 45491,
	-1000, -156, -1000, 31988, -1000, -1000, 10729, -1000, 45491, 363,
	45491, -1000, 22343, 31345, 314, 46, -1000, 1585, -1000, 62,
	41, 14612, 686, -1000, -1000, -1000, 3912, 19118, 1369, 686,
	149, -1000, -1000, -1000, 1746, -1000, 1746, 1746, 1746, 1746,
	386, 386, 386, 386, -1000, -1000, -1000, -1000, -1000, 1773,
	1772, -1000, 1746, 1746, 1746, 1746, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1768, 1768, 1768, 1747, 1747, 479, -1000,
	17832, 308, 30702, 2095, 1079, 1827, 274, 508, 1822, 1287,
	1287, 1287, 508, -1000, 1189, 1187, 1181, -1000, -440, 1646,
	-1000, -1000, 2222, -1000, -1000, 713, 917, 905, 812, 44205,
	253, 342, -1000, 470, -1000, 30702, 1287, 853, 648, 1287,
	-1000, 1287, -1000, -1000, -1000, -1000, -1000, 1287, -1000, -1000,
	1643, -1000, 1568, 951, 902, 934, 901, 1643, -1000, -1000,
	-105, 1643, -1000, 1643, -1000, 1643, -1000, 1643, -1000, 1643,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 787,
	222, -217, 44205, 253, 534, -1000, 528, 25558, -1000, -1000,
	-1000, 25558, 25558, -1000, -1000, -1000, -1000, 1230, 1229, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -426, 45491,
	-1000, 266, 764, 326, 355, 320, 45491, 337, 2138, 2136,
	2134, 407, 312, 45491, 45491, 495, 1882, 45491, 2107, 45491,
	-1000, -1000, -1000, -1000, -1000, 1602, 45491, -1000, -1000, 888,
	888, -1000, -1000, 45491, 888, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 888, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45491,
	-1000, -1000, -1000, -1000, 44205, -1000, -1000, -1000, -1000, -1000,
	126, 58, 380, -1000, -1000, -1000, -1000, -1000, 2151, -1000,
	1602, 838, 821, -1000, 1689, -1000, -1000, 952, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 197, 18475, 18475, 18475, 1202,
	560, 1337, 1097, 1251, 1027, 1027, 966, 966, 693, 693,
	693, 693, 693, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1227, -1000, 1689, 44848, 1629, 12673, 1320, 1731, 1303,
	2879, -1000, 1589, -1000, 1589, 1884, 866, -1000, 17832, 1303,
	2873, -1000, -1000, 1303, 1303, 1303, 17832, -1000, -1000, 17832,
	17832, 17832, 17832, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 17832, 1636, 1632, 2259, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1046, 1827,
	1827, 1827, 1827, 1827, 17832, 1440, -1000, -1000, -1000, 1363,
	2841, 1149, 2813, 1827, 1827, -1000, 1827, 2802, 2797, 1303,
	1407, 1303, 1600, -1000, 2787, 1827, 2782, 2759, 2752, 1922,
	2734, 2723, 2717, 1827, 1827, 1827, 1913, 2713, 2696, 2628,
	2603, 2586, 2580, 2556, 2539, 2522, 1827, -158, 1827, 1303,
	-1000, -1000, -1000, -1000, -1000, 2429, 1893, 1303, 1598, 1689,
	622, -1000, -1000, 1589, 1303, 1303, 1589, 1589, 2350, 2296,
	2281, 2249, 2223, 2163, 1827, 1827, -1000, 1827, 2159, 2144,
	1834, 1816, 1303, -1000, 1349, 45491, -1000, -277, -1000, 4,
	822, 1689, -1000, 29416, 1303, -1000, 7577, -1000, 1081, -1000,
	-1000, -1000, -1000, -1000, 26844, 1575, 2341, -1000, -1000, 1689,
	1573, -1000, -1000, 386, 113, 26201, 681, 681, 157, 1602,
	1602, 17832, -1000, -1000, -1000, -1000, -1000, -1000, 620, 2242,
	406, 1689, -1000, 1504, 2404, -1000, -1000, -1000, 2121, 19766,
	-1000, 1689, 1689, 45491, 1567, 1455, -1000, 617, -1000, 1292,
	1585, 46, 50, -1000, -1000, -1000, -1000, 1602, -1000, 1180,
	372, 3877, -1000, 521, -1000, -1000, -1000, -1000, 2035, 132,
	-1000, -1000, -1000, 276, 386, -1000, -1000, -1000, -1000, -1000,
	-1000, 1214, 1214, -1000, -1000, -1000, -1000, -1000, 1078, -1000,
	-1000, -1000, 1073, -1000, -1000, 2140, 1860, 308, -1000, -1000,
	750, 1212, -1000, -1000, 2051, 750, 750, 44205, -1000, -1000,
	1364, 2095, 266, 45491, 791, 1880, -1000, 1822, 1822, 1822,
	45491, -1000, -1000, -1000, -1000, -1000, -1000, -428, 67, 401,
	-1000, -1000, -1000, 5496, 44205, 1547, -1000, 235, -1000, 1361,
	-1000, 44205, -1000, 1544, 1759, 1287, 1287, -1000, -1000, -1000,
	44205, 1689, -1000, -1000, -1000, -1000, 561, 2079, 310, -1000,
	-1000, -175, -1000, -1000, 253, 235, 44848, 1287, 686, -1000,
	-1000, -1000, -1000, -1000, -429, 1540, 549, 256, 347, 45491,
	45491, 45491, 45491, 45491, 610, -1000, -1000, -1000, -1000, 224,
	-1000, -1000, 224, -1000, -1000, -1000, -1000, 290, 523, -1000,
	45491, 45491, 755, -1000, -1000, -1000, 860, -1000, -1000, 860,
	-1000, -1000, -1000, -1000, -1000, 2073, 45491, 52, -377, -1000,
	-374, 17832, -1000, -1000, -1000, -1000, 1076, 544, 1337, 18475,
	18475, 18475, -1000, -1000, -1000, 835, 835, 25558, -1000, 17832,
	17189, -1000, -1000, 17832, 17832, 776, -1000, 17832, 1197, -1000,
	17832, -1000, -1000, -1000, 1349, 1827, 1827, 1827, 1827, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1660,
	17832, 17832, 17832, 1303, 343, -1000, -1000, -1000, -1000, -1000,
	2250, -1000, 17832, -1000, 25558, 17832, 17832, 17832, -1000, -1000,
	-1000, 17832, 17832, -1000, -1000, 17832, 17832, -1000, 17832, 17832,
	17832, -1000, 17832, 17832, 17832, 17832, -1000, -1000, -1000, -1000,
	17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832, 17832,
	-1000, -1000, 30702, 114, -158, 1024, 114, 1024, -1000, 17189,
	12025, -1000, -1000, -1000, -1000, -1000, 17832, 17832, 17832, 17832,
	17832, 17832, -1000, -1000, -1000, 17832, 17832, -1000, 17832, -1000,
	17832, -1000, -1000, -1000, -1000, -1000, 822, -1000, 648, 648,
	648, 44205, -1000, -1000, -1000, -1000, 1580, -1000, 2162, -1000,
	1970, 1967, 2248, 2242, -1000, 22343, 2341, -1000, -1000, 44205,
	-272, -1000, 2013, 2000, 681, 681, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10081, 2161, 17832, 1877, 44848, 147, -1000,
	21700, 44205, 44848, 22343, 22343, 22343, 22343, 22343, -1000, 1936,
	1924, -1000, 1940, 1916, 1946, 45491, -1000, 1529, 1303, 2225,
	19766, 385, 17832, 24272, 1439, 22343, -1000, -1000, 22343, 45491,
	9433, -1000, -1000, 36, 23, -1000, -1000, -1000, -1000, 3912,
	-1000, -1000, 890, 2120, 2031, -1000, -1000, -1000, -1000, -1000,
	1522, -1000, 1500, 1561, 1497, 222, -1000, 1758, 2071, 750,
	750, -1000, 1071, -1000, 1287, 1209, 1208, -1000, -1000, -1000,
	545, -1000, 2104, 45491, 1863, 1862, 1859, -1000, -439, 1067,
	1755, 1696, 17832, 1754, 2215, 1537, 44205, -1000, -1000, 44848,
	-1000, 237, -1000, 308, 44205, -1000, -1000, -1000, 342, 45491,
	-1000, 7373, -1000, -1000, -1000, 235, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 45491, 264, -1000, 1748, 1205, -1000, -1000,
	1779, -1000, -1000, -1000, -1000, 223, 323, 219, 1206, 219,
	-1000, 45491, 677, 1860, 45491, -1000, -1000, -1000, 888, 888,
	-1000, -1000, 2055, -1000, 1287, 1827, 18475, 18475, -1000, 688,
	257, -138, 1746, 1746, -1000, 1746, 1747, -1000, 1746, 190,
	1746, 187, 1746, -1000, -1000, 1303, 1303, 1349, -1000, 1756,
	1511, -1000, 1602, 17832, 2053, -1000, -1000, -1000, -1000, -1000,
	-44, 2049, 2039, 1827, -1000, 1742, 1740, 17832, 1827, 1303,
	1685, 1827, 1827, 1827, 1827, -1000, 1602, 1349, 2030, 1349,
	1827, 1827, 1993, 352, 1827, 1485, 1485, 1485, 1485, 1485,
	1349, 1349, 1349, 1349, 44205, -1000, -158, -1000, -1000, -197,
	-198, -1000, 1303, -158, 1558, 1303, -1000, 1671, 1649, 1980,
	1586, 1827, 1975, 1827, 1827, 1827, 1582, -1000, 2148, 2148,
	2148, 1471, 1081, 45491, -1000, -1000, -1000, -1000, 2242, 2226,
	1542, -1000, -1000, 113, 450, -1000, 1995, 2000, -1000, 2211,
	1996, 2210, -1000, -1000, -1000, -1000, -1000, 1602, -1000, 2091,
	1458, -1000, 756, 1427, -1000, -1000, 16546, 1473, 1964, 615,
	1471, 1667, 2404, 1852, 1855, 2280, -1000, -1000, -1000, -1000,
	1917, -1000, 1903, -1000, -1000, 1708, -1000, -1000, 1453, 1303,
	1691, 363, 22343, 1665, 1665, -1000, 609, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 933, 7100, 2297, -1000, 1201, -1000,
	1160, 196, 1034, -1000, -1000, 750, 750, -1000, 852, 830,
	-1000, 45491, 1739, -1000, 386, 1200, 386, 1033, -1000, 1016,
	-1000, -1000, -1000, -1000, 1720, 2007, -1000, -1000, -1000, -1000,
	45491, -1000, -1000, 45491, 45491, 45491, 1736, 2197, -1000, 17832,
	1729, 751, 1958, 44205, 44205, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 486, 750, -399, 303,
	298, 750, 750, 750, -445, -1000, -1000, 1465, 1462, -1000,
	-119, -1000, 17832, -1000, -1000, -1000, 1029, 1029, -1000, 1708,
	-1000, -1000, -1000, 1357, -1000, -1000, -111, 44205, 44205, 44205,
	44205, -1000, 1057, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 688, 1303, 338, -114, 1303,
	-1000, -1000, 386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17832, -1000, 17832, -1000, 1602, 17832, 2161,
	1199, 17832, 17832, -1000, 991, 986, 1827, -1000, -1000, -1000,
	17832, -1000, -1000, -1000, -1000, -1000, 17832, -1000, -1000, -1000,
	17832, 261, 835, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1303, 362, -1000, -1000, -1000, -1000, 2247,
	-1000, 1303, 17832, -1000, -1000, 17832, -1000, 17832, 17832, -1000,
	17832, -1000, 17832, -1000, -1000, -1000, -1000, 17832, 1689, 1978,
	1689, 1689, 24272, -1000, -1000, 2226, 2232, 2195, 1982, 2003,
	2003, 1995, -1000, 2192, 2182, -1000, 1196, 2177, 1194, 827,
	-1000, 44848, 17832, 147, -1000, 422, 44205, 147, 44205, -1000,
	2191, -1000, -1000, 17832, 1727, -1000, 17832, -1000, -1000, -1000,
	-1000, -1000, -1000, 5257, 2242, 1665, -1000, -1000, 705, -1000,
	17832, -1000, -1000, -1000, 3614, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1191, 1190, -1000, -1000, 1725, 17832, -1000,
	-1000, -1000, 1355, 1345, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1708, -1000, -1000, -1000, -1000, 342, -433, 1945,
	44205, 985, -1000, 1425, 1537, 334, 147, 1188, 750, 750,
	750, 977, 964, 29416, 1421, -1000, 44205, 461, -1000, 342,
	-1000, -133, -134, 1827, -1000, -1000, 2116, -1000, -1000, 12025,
	-1000, -1000, 1706, 1819, -1000, -1000, -1000, -1000, 1942, -103,
	-120, -1000, -1000, 1827, 1827, 1340, 1303, -1000, 1827, 1827,
	1343, 1341, -1000, 1827, 1349, 1527, -1000, 261, 1303, 1847,
	-1000, -1000, 5257, -1000, -1000, 2191, 2171, 114, -1000, -1000,
	233, 114, 1602, 1487, 1827, 1469, 1456, 1827, 1827, 24915,
	-1000, 2167, 2164, 30059, 30059, 822, 2232, -165, 17832, 17832,
	1976, 980, -1000, -1000, -1000, -1000, 1182, 1175, -1000, 1157,
	-1000, 2284, -1000, 1602, -1000, 147, -1000, 602, 1427, -1000,
	2161, 1602, 44205, 1602, 117, 2191, -1000, 1827, -1000, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
	1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, -1000,
	-1000, 44205, 1938, -1000, -1000, 2114, 1405, 65, -1000, 1401,
	-1000, -1000, 143, -1000, 17832, -1000, 29416, 1136, 1135, -1000,
	-1000, -1000, -1000, -445, -1000, -1000, -1000, -1000, -1000, -1000,
	385, 1490, -1000, 744, 44205, 45491, -1000, 1941, -1000, -1000,
	-1000, 17832, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17832, -1000, 1303, 1842, -1000, -259, -1000, -410, 17832, -158,
	-1000, -1000, -158, -1000, 17832, -1000, -1000, 17832, -1000, 17832,
	-1000, -1000, 1397, -1000, -1000, -1000, -1000, -1000, 1397, 1397,
	-1000, -165, -1000, 1433, -1000, 44205, 1602, 1407, -1000, 969,
	-1000, -1000, -1000, -1000, -1000, 44848, 1427, 44205, -1000, 1393,
	1303, 1689, 2161, -1000, 1380, -1000, 385, -1000, 1705, 1696,
	-1000, -1000, -1000, 15903, -1000, -1000, -1000, -1000, -1000, 174,
	-110, 12025, 8785, 1376, -1000, -109, 1827, 1349, -1000, -357,
	-1000, -1000, -1000, -1000, 238, -1000, -1000, 1407, -1000, -1000,
	1383, 1296, 1286, 28773, -1000, -1000, -1000, -1000, -165, -1000,
	-1000, 2110, -1000, -1000, 1403, -1000, -1000, 24272, 43562, -1000,
	-98, 340, -110, 17832, 1700, 1303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 40, -1000, -1000, -1000, -1000, -1000,
	1779, -118, -1000, -1000, -1000, 241, -380, -189, -195, -1000,
	-1000, 18475, -1000, 17832, -1000, 17832, -1000, 17832, -1000, -1000,
	-1000, 44205, 1689, -1000, 1306, -1000, 4796, -211, 1831, -1000,
	-42, -1000, -1000, -1000, 889, 1134, -1000, -1000, -1000, -1000,
	-1000, -1000, 1901, 44205, -1000, 477, -1000, -1000, -111, -126,
	808, -1000, -1000, -1000, -1000, -1000, 1216, 1116, 1827, -1000,
	44205, -1000, 43562, -204, 686, 5257, -1000, 1741, 1730, 2291,
	-1000, -1000, -1000, -1000, -1000, -1000, -447, 1298, 272, -1000,
	-1000, 241, -1000, 17832, -1000, 17832, -1000, 1303, -1000, -1000,
	2101, 117, -1000, 2277, -1000, 2273, 720, 720, -1000, 960,
	-447, -1000, -1000, 1827, 1827, -1000, -222, -1000, -1000, -1000,
	-1000, -1000, 472, 1048, -1000, -1000, -1000, -1000, -1000, 5257,
	-1000, -1000, -1000, 262, 262, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2848, 2847, 34, 5, 44, 43, 2844, 32, 99,
	212, 38, 198, 108, 2843, 2842, 2841, 2838, 2836, 2833,
	2826, 230, 226, 225, 2825, 2822, 2818, 2816, 2814, 2812,
	2811, 2809, 2808, 2807, 223, 167, 196, 2805, 2798, 2792,
	127, 190, 90, 96, 192, 2789, 2782, 84, 2780, 2779,
	2778, 187, 186, 185, 843, 2777, 184, 119, 58, 2776,
	2774, 2773, 2771, 2770, 2769, 2768, 2762, 2760, 2759, 2754,
	2752, 2750, 2747, 2746, 2745, 2743, 238, 2733, 2730, 18,
	2729, 88, 2728, 2726, 2723, 2720, 7, 2714, 2713, 22,
	49, 2712, 2711, 54, 2708, 2706, 2705, 2704, 2703, 17,
	2701, 28, 2699, 40, 2698, 2697, 129, 2696, 2693, 2689,
	47, 2684, 2682, 2681, 2680, 2679, 2674, 2672, 152, 2671,
	2670, 2669, 173, 195, 2668, 2665, 168, 115, 116, 2655,
	2654, 107, 193, 2653, 121, 2651, 2648, 2640, 159, 2637,
	2398, 2634, 2629, 70, 71, 2606, 388, 2597, 2596, 13,
	29, 77, 12, 21, 9, 2593, 2591, 69, 92, 2586,
	123, 2585, 2579, 114, 89, 2575, 120, 105, 2573, 2572,
	16, 4, 2570, 2, 6, 3, 79, 2569, 2566, 128,
	2562, 2555, 2554, 104, 2553, 2552, 4281, 2551, 98, 146,
	113, 86, 2549, 52, 73, 2548, 2547, 2546, 2545, 2544,
	56, 2536, 2535, 2527, 148, 66, 177, 2522, 48, 45,
	57, 145, 2517, 74, 111, 174, 2514, 2512, 150, 149,
	2511, 2509, 64, 50, 53, 2508, 103, 142, 138, 46,
	102, 144, 2506, 2502, 61, 76, 2500, 2499, 2493, 2492,
	178, 2491, 2490, 81, 2485, 65, 2484, 197, 2483, 19,
	75, 51, 169, 2481, 82, 2479, 2462, 78, 106, 80,
	39, 2460, 166, 2456, 60, 172, 137, 164, 2453, 2450,
	2449, 2448, 194, 340, 2447, 2446, 136, 181, 153, 160,
	97, 2445, 363, 2444, 2442, 101, 1234, 10, 2440, 37,
	165, 2439, 2438, 5492, 151, 59, 24, 2436, 125, 2431,
	2430, 2427, 2426, 205, 180, 118, 171, 67, 2425, 2424,
	2418, 23, 2416, 2415, 2412, 2410, 2403, 2402, 93, 42,
	41, 36, 209, 68, 15, 109, 163, 83, 2401, 2399,
	2397, 133, 95, 2392, 176, 175, 161, 170, 2390, 183,
	154, 135, 2389, 87, 35, 2386, 2381, 2380, 2376, 100,
	2374, 2373, 2372, 2371, 162, 155, 132, 94, 2370, 91,
	126, 158, 156, 55, 2369, 62, 2363, 2360, 30, 191,
	31, 2358, 20, 117, 143, 2355, 4710, 189, 2344, 25,
	348, 157, 2341, 2340, 11, 8, 14, 2338, 2337, 2335,
	2321, 147, 2320, 2319, 2318, 2317, 27, 63, 26, 1,
	131, 85, 2315, 2312, 4218, 0, 139, 2293, 200,
}

//line sql.y:7792
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 402, 403, 403, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 254, 376,
	377, 377, 252, 252, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 406, 406, 181, 181, 179, 179, 180, 180, 257,
	257, 24, 25, 25, 267, 267, 266, 266, 266, 268,
	268, 268, 268, 306, 306, 306, 26, 26, 26, 26,
	26, 124, 124, 379, 379, 378, 372, 372, 371, 371,
	370, 375, 375, 374, 374, 373, 38, 39, 48, 48,
	48, 48, 49, 50, 380, 380, 345, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 347, 347, 333, 333, 346, 346, 346,
	346, 346, 346, 346, 332, 332, 135, 135, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 395, 395, 395, 394, 394,
	233, 233, 233, 233, 233, 233, 233, 233, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 156, 156, 152, 152, 152,
	153, 153, 153, 154, 154, 396, 396, 396, 396, 311,
	311, 311, 311, 314, 314, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 313, 313, 313, 313, 313, 315,
	315, 315, 315, 315, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	317, 317, 317, 317, 317, 317, 317, 317, 331, 331,
	318, 318, 326, 326, 327, 327, 327, 328, 328, 328,
	329, 329, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 325, 325, 324, 324, 324, 334, 359, 359, 358,
	358, 356, 356, 356, 356, 356, 356, 356, 356, 343,
	343, 353, 353, 353, 353, 353, 342, 342, 338, 338,
	338, 339, 339, 340, 340, 337, 337, 341, 341, 355,
	355, 354, 354, 335, 335, 336, 336, 361, 397, 397,
	397, 397, 397, 398, 398, 362, 387, 389, 389, 389,
	388, 388, 385, 386, 384, 384, 384, 384, 384, 81,
	81, 81, 280, 280, 281, 281, 351, 351, 350, 350,
	350, 352, 352, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 275, 275, 275, 383, 383, 383,
	383, 383, 383, 382, 382, 382, 348, 348, 348, 381,
	381, 57, 57, 214, 214, 400, 400, 401, 401, 401,
	45, 45, 45, 45, 45, 45, 44, 44, 44, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 364, 364, 58, 58, 3,
	3, 169, 171, 172, 172, 170, 170, 170, 170, 170,
	170, 60, 60, 59, 59, 174, 173, 175, 175, 175,
	1, 1, 2, 2, 4, 4, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 330, 330,
	330, 363, 363, 365, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 367, 367, 367, 61,
	61, 368, 319, 320, 321, 5, 6, 344, 366, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 274, 274, 283, 283, 273, 273, 298, 298,
	298, 276, 276, 276, 277, 277, 393, 393, 393, 270,
	270, 64, 64, 64, 299, 299, 299, 299, 66, 66,
	67, 68, 68, 301, 301, 302, 302, 69, 70, 82,
	82, 82, 82, 82, 82, 105, 105, 105, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	390, 390, 391, 392, 392, 392, 392, 73, 75, 31,
	31, 31, 31, 31, 31, 130, 130, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 125,
	125, 125, 119, 119, 407, 76, 77, 77, 123, 123,
	123, 116, 116, 116, 122, 122, 122, 16, 16, 17,
	256, 256, 18, 18, 127, 127, 129, 129, 129, 129,
	129, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	128, 128, 128, 128, 291, 291, 291, 290, 290, 163,
	163, 165, 164, 164, 166, 166, 167, 167, 167, 167,
	212, 212, 189, 189, 250, 250, 249, 249, 255, 255,
	251, 251, 251, 251, 258, 258, 168, 168, 168, 168,
	176, 176, 177, 177, 178, 178, 300, 300, 296, 296,
	296, 295, 295, 182, 182, 182, 184, 183, 183, 183,
	183, 185, 185, 187, 187, 186, 186, 188, 193, 193,
	192, 192, 190, 190, 190, 190, 191, 191, 191, 191,
	194, 194, 140, 140, 140, 140, 140, 140, 140, 155,
	155, 155, 155, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 240, 240, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 149, 216, 216, 215, 215, 83,
	83, 83, 84, 84, 85, 85, 85, 85, 85, 86,
	86, 86, 86, 86, 141, 141, 88, 88, 87, 87,
	207, 207, 288, 288, 89, 90, 90, 93, 93, 92,
	91, 91, 97, 97, 94, 94, 96, 96, 95, 98,
	98, 99, 100, 100, 271, 271, 195, 195, 203, 203,
	203, 203, 196, 196, 196, 196, 196, 196, 196, 204,
	204, 204, 211, 205, 205, 201, 201, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 160, 160, 160, 160, 221, 221, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 148, 148, 161, 161, 161, 161,
	162, 162, 162, 162, 162, 162, 162, 308, 308, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	408, 408, 322, 322, 322, 322, 202, 202, 202, 202,
	202, 121, 121, 121, 121, 121, 305, 305, 305, 309,
	309, 309, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 310, 310, 219,
	219, 117, 117, 217, 217, 218, 220, 220, 213, 213,
	213, 213, 198, 198, 198, 222, 222, 223, 223, 101,
	102, 102, 103, 103, 224, 224, 226, 225, 225, 227,
	228, 228, 228, 229, 229, 230, 230, 230, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	43, 132, 132, 132, 132, 134, 134, 133, 133, 79,
	79, 80, 80, 80, 138, 138, 139, 139, 139, 136,
	136, 137, 137, 247, 247, 231, 231, 231, 238, 238,
	238, 234, 234, 236, 236, 236, 237, 237, 237, 235,
	244, 244, 246, 246, 245, 245, 241, 241, 242, 242,
	243, 243, 243, 239, 239, 197, 197, 197, 197, 197,
	248, 248, 248, 248, 259, 259, 208, 208, 210, 210,
	209, 209, 159, 260, 260, 264, 261, 261, 265, 265,
	265, 265, 253, 253, 253, 262, 262, 263, 263, 292,
	292, 292, 269, 269, 282, 282, 278, 278, 279, 279,
	272, 272, 284, 284, 284, 74, 206, 206, 360, 360,
	357, 287, 287, 289, 289, 293, 293, 297, 297, 294,
	294, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 404, 405, 303, 304, 304, 304,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	3, 4, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	1, 6, 3, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 8, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -402, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -404,
	11, 438, 256, 255, 28, -12, 500, 86, -403, 652,
	-247, -231, 22, 33, 29, -230, -226, -123, -231, 20,
	18, 7, -76, -407, -76, -76, 12, 13, -76, -345,
	-347, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -369, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 500, 503, -352, 223, 229, 230,
	225, 439, 123, 122, 75, -349, 361, 533, 622, -56,
	624, 102, 104, 623, 44, 235, 625, 626, 627, 540,
	628, 244, 629, 630, 631, 632, 638, 582, 639, 640,
	641, 124, 7, -76, -297, -293, 89, -286, 497, 247,
	531, 532, 296, 81, 41, 506, 358, 361, 533, 468,
	622, 307, 321, 315, 473, 474, 475, 342, 334, 498,
	534, 507, 299, 248, 284, 616, 332, 132, 624, 302,
	535, 262, 366, 367, 536, 368, 102, 310, 405, 637,
	301, 537, 635, 104, 623, 79, 467, 51, 619, 44,
	257, 330, 231, 326, 625, 285, 538, 509, 278, 123,
	120, 644, 36, 324, 50, 30, 634, 122, 49, 626,
	147, 539, 627, 540, 370, 349, 610, 48, 371, 263,
	541, 84, 268, 502, 305, 618, 372, 487, 325, 373,
	295, 633, 228, 542, 602, 594, 595, 374, 375, 611,
	543, 350, 354, 489, 544, 397, 472, 376, 598, 599,
	651, 52, 545, 546, 612, 121, 547, 78, 628, 80,
	319, 320, 548, 293, 246, 492, 493, 399, 346, 450,
	457, 458, 108, 109, 453, 110, 459, 111, 460, 461,
	462, 451, 112, 105, 452, 463, 464, 347, 348, 113,
	465, 107, 106, 454, 456, 114, 466, 244, 35, 377,
	499, 297, 58, 272, 400, 46, 352, 648, 45, 606,
	494, 549, 609, 345, 341, 447, 53, 550, 551, 552,
	553, 469, 629, 344, 318, 340, 643, 4, 290, 470,
	630, 62, 230, 356, 355, 357, 279, 396, 337, 554,
	555, 556, 251, 82, 557, 327, 21, 558, 559, 378,
	286, 560, 56, 561, 562, 403, 260, 563, 54, 631,
	39, 564, 265, 645, 632, 565, 566, 567, 568, 267,
	569, 380, 570, 596, 597, 379, 351, 353, 495, 274,
	381, 501, 571, 306, 323, 264, 636, 572, 252, 483,
	484, 485, 486, 617, 491, 490, 266, 271, 259, 404,
	253, 573, 574, 575, 576, 577, 300, 593, 578, 579,
	311, 638, 448, 43, 580, 581, 582, 583, 584, 294,
	289, 398, 407, 61, 83, 363, 585, 586, 615, 317,
	287, 587, 308, 55, 639, 640, 641, 281, 642, 476,
	477, 478, 479, 9, 649, 650, 471, 383, 124, 291,
	292, 47, 338, 273, 588, 303, 589, 328, 329, 343,
	316, 339, 309, 603, 275, 384, 449, 261, 590, 406,
	288, 359, 364, 304, 505, 488, 280, 385, 614, 504,
	480, 481, 336, 333, 282, 482, 591, 386, 236, 276,
	277, 592, 604, 387, 388, 298, 389, 390, 391, 392,
	393, 395, 394, 600, 601, 283, 503, 314, 331, 365,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 446, 234,
	-76, 234, -186, -293, 234, -262, 367, -283, 369, 382,
	377, 387, 375, -274, 378, 380, 274, -393, 397, 234,
	384, 222, 370, 379, 388, 389, 298, 395, 390, 394,
	283, 391, 392, 393, -376, 174, 627, 642, 132, 335,
	374, 372, 398, 606, 89, -299, 89, 90, 91, -286,
	309, -301, 314, -287, -376, -286, 312, -186, -82, 602,
	226, -303, -303, -125, 606, 608, -205, -140, 140, -155,
	-158, -146, -150, -199, -200, -201, -202, -156, -213, -252,
	163, 164, 171, 141, -211, -159, 26, 496, 440, 439,
	174, 31, -149, 217, 68, 69, 442, 143, 57, 11,
	415, 416, -157, 410, 417, 412, 467, 469, 470, 471,
	468, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 472, 444, 445, 115, 446, 105, 107, 106, 447,
	448, 449, 332, 494, 495, 489, 492, 493, 491, 490,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 455, 457, 458, 459, 464,
	465, 460, 461, 462, 463, 466, -85, -97, 522, 521,
	-98, -147, -148, -161, -162, -287, -293, 239, 409, 233,
	169, 438, -151, -144, -376, -286, 90, 91, -8, -209,
	408, 413, 414, 418, 411, 508, 510, 525, 526, 528,
	513, 518, 517, 520, 483, 484, 485, 486, 487, 488,
	594, 595, 596, 597, 598, 599, 600, 601, 89, -153,
	-152, -195, 92, 98, 103, 99, -399, 116, -404, 620,
	93, 94, 95, 96, 97, 117, 118, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 44,
	383, 383, -186, -76, -76, -76, -76, -224, -123, -226,
	-10, -8, -404, 8, -76, -8, -9, -13, -34, -36,
	527, -35, -293, -231, -247, 12, 159, 42, 50, -229,
	-230, -12, -8, -140, 19, 23, 24, -128, 165, -140,
	-293, -77, -128, -272, 238, -76, -76, -261, -306, 309,
	-265, 398, 606, 397, -253, -263, 89, -252, -262, 396,
	-346, 156, -332, -336, -287, 249, -362, 245, -186, -355,
	-354, -287, -404, -124, -282, 235, 243, 242, 133, -380,
	136, 291, 409, 233, -51, -52, -53, -262, 173, 626,
	-106, 266, 270, 87, 87, -336, -335, -334, -381, 270,
	249, -361, -353, 241, 250, -342, 242, 243, -337, 235,
	134, -381, -337, 240, 250, 245, 249, 270, 270, 124,
	270, 124, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 265, -343, 148, -343, 504, 504, -349, -381, 245,
	235, -381, -381, 241, -284, -337, 237, 25, 237, 35,
	35, -343, -343, -343, -262, 173, -343, -343, -343, -343,
	278, 278, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, 234,
	-380, -132, 394, 298, 81, -54, 280, -37, -186, -282,
	235, 236, -380, 267, -186, 218, -186, -276, 156, 15,
	-276, -273, 383, 381, 368, 373, -276, -276, -276, -276,
	281, 366, -338, 235, 35, 246, 383, 281, 366, 281,
	282, 281, 282, 376, 386, 281, -298, 14, 159, 409,
	371, 375, 274, 234, 275, 236, 385, 282, -298, 93,
	-277, 156, 383, 277, -276, -276, -304, -404, -289, -287,
	-285, 227, 23, 139, 25, 27, 142, 174, 127, 19,
	143, 37, 229, 335, 245, 173, 241, 439, 222, 72,
	508, 410, 412, 408, 415, 441, 442, 409, 369, 31,
	13, 510, 28, 255, 24, 38, 167, 224, 146, 511,
	258, 26, 256, 115, 118, 513, 22, 75, 250, 14,
	243, 40, 16, 514, 515, 17, 239, 238, 159, 235,
	70, 11, 217, 29, 155, 66, 516, 134, 517, 518,
	519, 520, 128, 68, 156, 20, 646, 413, 414, 33,
	607, 496, 269, 169, 73, 59, 608, 140, 411, 521,
	522, 116, 523, 119, 76, 613, 136, 18, 71, 42,
	524, 270, 525, 240, 647, 526, 401, 527, 157, 225,
	438, 69, 158, 620, 528, 621, 233, 382, 8, 443,
	32, 254, 242, 126, 67, 529, 234, 145, 444, 445,
	237, 129, 117, 7, 133, 34, 12, 74, 77, 416,
	417, 418, 57, 125, 500, 144, 15, 530, 402, 138,
	-376, 609, -304, -304, 32, 90, 237, -287, -78, -287,
	93, -15, -11, -22, -21, -23, 148, -130, 383, -118,
	174, 627, 610, 611, 612, 609, 380, 617, 615, 613,
	281, 614, 87, 136, 138, 139, 4, -140, 155, -196,
	148, 149, 150, 151, 152, 153, 154, 159, 140, 142,
	156, -240, 137, 160, 161, 162, 163, 164, 165, 166,
	168, 167, 169, 170, 157, 158, 173, 220, 221, -150,
	-150, -150, -150, -211, -216, -215, -404, -213, -376, -286,
	-293, -404, -404, -150, -271, -404, -404, -150, -404, -404,
	-404, -219, -140, -404, -404, -408, -404, -408, -408, -322,
	-404, -322, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, 218, -404,
	-404, -404, -404, -404, -322, -322, -322, -322, -322, -404,
	-404, -404, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -404, 103, 98, 92, -213, 99, 93, -8,
	-9, -205, -404, -303, -390, -391, -189, -186, -404, 298,
	-287, -287, 267, -229, -12, -8, -224, -230, -226, -8,
	-76, -116, -129, 63, 64, -131, 24, 38, 67, 65,
	23, -405, 88, -405, -247, -405, 87, -36, -250, 86,
	61, 43, 93, 93, 87, 21, -225, -227, -140, 14,
	-291, 4, -290, 25, -287, 93, 218, 101, 14, -187,
	29, -186, -272, -272, 87, 309, 89, -267, -266, 399,
	401, 148, -292, -287, 93, 31, 88, 87, -186, -311,
	-314, -316, -315, -317, -312, -313, 332, 333, 174, 336,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 349,
	32, 257, 328, 329, 330, 331, 350, 351, 352, 353,
	354, 355, 356, 357, 315, 334, 498, 316, 317, 318,
	319, 320, 321, 323, 324, 325, 326, 327, -377, -376,
	86, 88, 87, -318, 86, -140, -132, 234, -376, 235,
	235, 235, -76, 438, -343, -343, -343, 265, 19, -44,
	-41, -369, 18, -40, -41, 227, 120, 121, 224, 86,
	-332, 86, -341, -377, -376, 86, 134, 240, 133, -340,
	-337, -340, -341, -376, -213, -376, 134, 134, -376, -376,
	-258, -287, -258, -258, 23, -258, 23, -258, 23, 95,
	-287, -258, 23, -258, 23, -258, 23, -258, 23, -258,
	23, 31, 78, 79, 80, 31, 82, 83, 84, -213,
	-376, -376, -213, -332, -213, -186, -376, -262, 95, 95,
	95, -343, -343, 95, 93, 93, 93, -343, -343, 95,
	93, -295, -293, 93, 93, -382, 251, 295, 297, 95,
	95, 95, 95, 31, 93, -383, 31, 634, 633, 635,
	636, 637, 93, 95, 31, 95, 31, 95, -287, 86,
	-186, -138, 285, 222, 224, 227, 76, 93, 299, 303,
	304, 148, 44, 87, 237, 234, -376, -278, 239, -278,
	-287, -294, -293, -285, 93, -140, -339, 14, 159, -298,
	-298, -276, -186, -339, -298, -276, -186, -276, -276, -276,
	-276, -298, -298, -298, -276, -293, -293, -186, -186, -186,
	-186, -186, -186, -186, -304, -277, -276, 609, 93, -270,
	14, 76, -304, -304, -302, 312, 346, 603, 604, 605,
	87, 500, -179, -186, 609, 609, 609, 609, 609, 609,
	-140, -140, -140, -140, 523, -203, 116, 140, 117, 118,
	-158, -204, -209, -211, 100, 159, 142, 156, -240, -146,
	-150, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -305, -287, 93, 174, -154, -153,
	99, -399, -154, 497, 87, -215, 218, -140, -140, -376,
	-140, -287, -126, -128, -126, -140, -217, -218, 144, -213,
	-140, -405, -405, 95, 99, 165, -122, 24, 38, -122,
	-122, -122, -122, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -122, -287, -287, -115, -114, 420, 421,
	422, 423, 425, 426, 427, 430, 431, 435, 436, 419,
	437, 424, 429, 432, 433, 434, 428, 331, -140, -140,
	-140, -140, -140, -140, -83, -140, 127, 128, 129, -205,
	-140, -146, -140, -140, -140, -405, -140, -140, -140, -206,
	-205, -375, -374, -373, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -405, -140, -160,
	-144, 95, -254, 99, 90, -140, -140, -127, -126, -289,
	-294, -285, -286, -126, -127, -127, -126, -126, -140, -140,
	-140, -140, -140, -140, -140, -140, -405, -140, -140, -140,
	-140, -140, -247, -405, -205, 87, -392, 401, 402, 607,
	-296, 270, -295, 25, -206, 93, 14, -256, 77, -287,
	-229, -229, 63, 64, 59, -126, -131, -405, -35, 25,
	-249, -287, 62, 93, -323, -262, 358, 359, 174, -140,
	-140, 87, -228, 27, 28, -186, -290, 165, -294, -186,
	-257, 270, -186, -164, -166, -167, -168, -189, -212, -404,
	-169, 519, 516, 14, -179, -180, -188, -293, -265, -306,
	-267, 87, 400, 402, 403, 76, 119, -140, -324, 173,
	-351, -350, -349, -332, -334, -335, -336, 88, -324, -328,
	364, 363, -318, -318, -318, -318, -318, -323, -323, -323,
	-323, 86, 86, -318, -318, -318, -318, -326, 86, -326,
	-326, -327, 86, -327, -362, -140, -359, -358, -356, -357,
	244, 102, 592, 548, 500, 540, 582, 77, -354, -228,
	95, -405, -138, -279, 239, -360, -357, -376, -376, -376,
	-279, 89, 93, 89, 93, 89, 93, -107, -58, -1,
	646, 647, 648, 87, 19, -333, -332, -57, 295, -365,
	-366, 270, -361, -355, -341, 134, -340, -341, -341, -376,
	87, 29, 124, 124, 124, 124, 500, 224, 32, -280,
	539, 140, 592, 548, -332, -57, 237, 237, -305, -305,
	-305, 93, 93, -275, 642, -179, -134, 287, 148, 276,
	276, 234, 234, 289, -186, 300, 302, 301, 299, 303,
	304, 23, 23, 23, 288, 290, 292, 278, -186, -186,
	-278, 76, -181, -186, 26, -293, -186, -276, -276, -186,
	-276, -276, -186, -287, -118, 401, 87, 500, 22, -119,
	22, -404, 116, 117, 118, -204, -146, -150, -146, 139,
	258, -404, -213, -405, -289, 25, 87, 77, -405, 87,
	87, -405, -405, 87, 14, -220, -218, 146, -140, -405,
	87, -405, -405, -405, -205, -140, -140, -140, -140, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -205,
	87, 87, 14, -309, 25, -405, -405, -405, -405, -405,
	-219, -405, 14, -405, 77, 87, 159, 87, -405, -405,
	-405, 87, 87, -405, -405, 87, 87, -405, 87, 87,
	87, -405, 87, 87, 87, 87, -405, -405, -405, -405,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	-405, -90, 524, -405, -405, 87, -405, 87, -405, -404,
	218, -405, -405, -405, -405, -405, 87, 87, 87, 87,
	87, 87, -405, -405, -405, 87, 87, -405, 87, -405,
	87, -405, -391, 606, 402, -193, -192, -190, 74, 238,
	75, -404, -295, -405, -154, -254, -255, -254, -198, -287,
	95, 99, -231, -163, -165, 14, -131, -211, 88, 87,
	-323, -235, -241, -273, -287, 93, 174, -325, 174, -325,
	358, 359, -227, 218, -194, 15, -197, 32, 57, -11,
	-404, -404, 32, 87, -182, -184, -183, -185, 66, 70,
	72, 67, 68, 69, 73, -300, 25, -164, -9, -8,
	-404, -404, -404, -186, -179, -406, 14, 77, -406, 87,
	218, -266, -268, 404, 401, 407, -376, 93, -106, 87,
	-349, -336, -232, -135, 40, -329, 365, -323, 507, -323,
	-331, 93, -331, 95, 95, 88, -47, -42, -43, 33,
	81, -356, -343, 93, 39, -343, -343, -287, 88, -228,
	-134, -186, 140, 76, -360, -360, -360, -293, -2, 645,
	651, 134, 86, 368, 18, -249, 87, 88, -214, 296,
	88, -108, -287, 88, 86, -341, -341, -287, -404, 234,
	31, 31, 592, 548, 539, -57, -214, -213, -376, -324,
	644, 643, 88, 236, 294, -139, 415, -136, 93, 89,
	-186, -186, -186, -186, -186, 227, 224, -400, 305, -400,
	279, 237, -179, -186, 87, -81, 253, 248, -298, -298,
	33, -186, 401, 618, 616, -140, 139, 258, -158, -150,
	-146, -307, 174, 332, 257, 330, 326, 346, 337, 363,
	328, 364, 325, 324, 323, -307, -305, -205, -128, -140,
	-140, 147, -140, 145, -140, -405, -405, -405, -405, -405,
	-224, -140, -140, -140, -405, 174, 332, 14, -140, -305,
	-140, -140, -140, -140, -140, -373, -140, -205, -140, -205,
	-140, -140, -140, -140, -140, -374, -374, -374, -374, -374,
	-205, -205, -205, -205, -404, -287, -93, -92, -91, 575,
	238, -90, -160, -93, -160, -127, -289, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -190, -337, -337,
	-337, -258, 87, -269, 22, 14, 57, 57, -163, -194,
	-164, -131, -287, -238, 602, -244, 46, -242, -243, 47,
	-239, 48, 56, -325, -325, 165, -229, -140, -259, 76,
	-260, -264, -213, -208, -210, -209, -404, -248, -405, -287,
	-258, -260, -166, -167, -167, -166, -167, 66, 66, 66,
	71, 66, 71, 66, -183, -293, -405, -405, -9, -9,
	-140, -296, 77, -164, -164, -188, -293, 165, 401, 405,
	406, -349, -398, 116, 140, 31, 76, 361, 102, -396,
	173, 536, 587, 592, 548, 540, 582, -397, 240, 133,
	134, 252, 25, 41, 88, 87, 88, 87, 88, 87,
	-281, -280, -43, -42, -343, -343, 95, -376, 93, 93,
	236, 26, -186, 76, 76, 76, -109, 649, 95, 86,
	-3, 81, -140, 86, 19, -332, -213, -367, -319, -368,
	-320, -321, -5, -6, -344, -112, 57, 102, -61, 44,
	235, 629, 630, 124, -404, 642, -359, -249, -363, -365,
	-186, -143, -404, -142, -144, -151, 163, 164, -214, -186,
	-133, 285, 293, 86, -137, 90, -379, 77, 276, 361,
	276, -401, 306, 93, -401, -186, -81, -47, -186, -276,
	-276, 33, -376, -405, -158, -150, -121, 159, 500, -310,
	506, -318, -318, -318, -327, -318, 320, -318, 320, -318,
	-405, -405, -405, 87, -405, 22, -405, -140, 87, -117,
	443, 87, 87, -405, 86, 86, -140, -405, -405, -405,
	87, -405, -405, -405, -405, -405, 87, -405, -405, -405,
	87, -308, 593, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -89, -288, -287, -90, 557, 557, -405,
	-90, -221, 87, -405, -405, 87, -405, 87, 87, -405,
	87, -405, 87, -405, -405, -405, -405, 87, -191, 22,
	-191, -191, -405, -254, -186, -194, -222, 16, -235, 51,
	338, -246, -245, 55, 47, -243, 19, 49, 19, 30,
	-259, 87, 148, 87, -405, -405, 87, 57, 218, -405,
	-194, -177, -176, 76, 77, -178, 76, -176, 66, 66,
	-250, -405, -405, 87, -257, -164, -194, -194, 218, 116,
	-404, -145, -157, -143, 12, 93, 93, -376, -395, 633,
	634, 31, 95, -343, -343, 134, 134, -186, 86, -323,
	93, -323, 95, 95, 31, 82, 83, 84, 31, 78,
	79, 80, -186, -186, -186, -186, -364, 86, 19, -140,
	86, 148, 88, -249, -249, 272, 159, -343, 627, 278,
	278, -343, -343, -343, -111, -110, 649, 88, -405, 87,
	-330, 500, 503, -140, -152, -152, -250, 88, -372, 500,
	-378, -287, -287, -287, -287, 95, 97, -405, 498, 73,
	501, -405, -323, -140, -140, -140, -229, 93, -140, -140,
	95, 95, -405, -140, -205, -140, -405, -174, -173, -175,
	610, 116, 31, -307, -405, -207, 270, -96, -95, -94,
	14, -405, -140, -140, -140, -140, -140, -140, -140, -404,
	66, 18, 16, -404, -404, -296, -222, -223, 17, 19,
	-236, 53, -234, 52, -234, -245, 19, 19, 93, 19,
	93, 134, -264, -140, -210, 57, -11, -287, -208, -287,
	-224, -140, 86, -140, -154, -194, -194, -140, -200, 467,
	469, 470, 471, 468, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 472, 446, 105, 107, 106, 447,
	448, 449, 332, 494, 495, 489, 492, 493, 491, 490,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 457, 458, 459, 464, 465,
	460, 461, 462, 463, 466, 483, 484, 485, 486, 487,
	488, 594, 595, 596, 597, 598, 599, 600, 601, 93,
	93, 86, -140, 88, 88, -250, -363, -58, 88, -249,
	95, 88, 273, -209, -404, 93, -343, -343, -343, 95,
	95, -295, -405, 87, -287, -397, -365, 504, 504, -405,
	25, -371, -370, -289, 86, 77, 62, 499, 502, -405,
	-405, 87, -405, -405, -405, 88, 88, -405, -405, -405,
	87, -405, -173, -175, -405, 76, -154, -224, 19, -93,
	295, 297, -93, -405, 87, -405, -405, 87, -405, 87,
	-405, -405, -251, -405, -287, 240, 19, 19, -251, -251,
	-193, -223, -103, -102, -101, 530, -140, -205, -237, 54,
	76, 119, 93, 93, 93, 12, -208, 218, -229, -249,
	-171, 368, -224, -405, -249, 88, 25, 88, 651, 134,
	88, -209, -120, -404, 269, -295, 93, 93, -110, -113,
	-11, 87, 148, -249, -186, 62, -140, -205, -405, 76,
	511, 610, -88, -87, -84, 621, 647, -205, -90, -90,
	-140, -140, -140, 87, -405, -405, -405, -103, 87, -100,
	-99, -287, 76, 119, -260, -287, 88, -405, -404, -229,
	88, -233, -11, 86, -3, 269, -319, -368, -320, -321,
	-5, -6, -344, -79, 500, -370, -348, -289, 93, 95,
	88, 500, -405, -405, -86, 142, 619, 590, -141, -152,
	-149, 217, -405, 87, -405, 87, -405, 87, -287, 240,
	-101, 87, 25, -296, -172, -170, -287, 554, -388, -387,
	496, -398, -394, 116, 140, 102, -396, 592, 548, 125,
	126, -79, -140, 86, -405, -80, 284, 606, -379, 501,
	-86, 620, 568, 542, 568, 542, -140, -140, -140, -99,
	-404, -405, 87, 22, -311, -60, 565, -385, -386, 76,
	-389, 374, 564, 585, 116, 93, 88, -249, 245, -372,
	502, 139, -405, 87, -405, 87, -405, -89, -170, 561,
	-324, -154, -386, 76, -385, 76, 13, 12, -4, 650,
	88, 286, -86, -140, -140, -405, -59, 26, -171, -384,
	253, 248, 251, 32, -384, 95, -4, -405, -405, 565,
	247, 31, 116, -154, -174, -173, -173,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 69, 71, 72, 834,
	834, 834, 0, 834, 0, 0, 834, -2, -2, 834,
	1447, 0, 834, 0, 0, -2, 762, 768, 0, 770,
	-2, 0, 0, 779, 1993, 1993, 829, 0, 0, 0,
	0, 0, 834, 834, 834, 834, 1304, 49, 834, 0,
	84, 85, 785, 786, 787, 64, 0, 1991, 1, 3,
	70, 74, 0, 0, 0, 57, 1313, 0, 77, 0,
	0, 838, 0, 836, 0, 1430, 834, 834, 0, 116,
	117, 0, 0, 0, -2, 120, -2, 149, 150, 151,
	0, 156, 576, 503, 555, 501, 540, -2, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 379, 379, 0, 0, -2, 489, 489, 489,
	1432, 0, 0, 0, 537, 441, 379, 379, 379, 0,
	379, 379, 379, 379, 0, 0, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 1331, 155, 1448, 1445, 1446, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 0,
	1424, 0, 689, 935, 0, 751, 751, 0, 751, 751,
	751, 751, 0, 0, 0, 701, 0, 0, 0, 0,
	748, 0, 717, 718, 0, 748, 0, 724, 754, 0,
	729, 751, 751, 732, 1994, 0, 1994, 1994, 1415, 0,
	745, 743, 757, 758, 39, 761, 764, 765, 766, 767,
	769, 0, 774, 777, 1441, 1442, 0, 792, 48, 1696,
	784, 797, 798, 0, 830, 831, 44, 1083, 0, 957,
	962, 973, 988, 989, 990, 991, 992, 994, 995, 996,
	0, 0, 0, 0, 1001, 1002, 0, 0, 0, 0,
	0, 1064, 1010, 0, 0, 0, 0, 1279, 0, 0,
	1240, 1240, 1098, 1240, 1242, 1242, 1648, 1783, 1791, 1908,
	1611, 1616, 1617, 1618, 1901, 1902, 1903, 1904, 1942, 1943,
	1947, 1708, 0, 0, 0, 1990, 1745, 1753, 1754, 1777,
	1874, 1928, 1628, 1772, 1840, 1705, 1727, 1728, 1856, 1857,
	1749, 1750, 1731, 1743, 1746, 1734, 1735, 1737, 1739, 1744,
	1751, 1757, 1736, 1756, 1755, 0, 1732, 1733, 1738, 1748,
	1752, 1740, 1741, 1742, 1747, 1758, 0, 0, 0, 0,
	0, 1179, 1180, 1181, 1182, 0, 0, 0, 0, 0,
	0, 0, 275, 276, -2, -2, 42, 43, 1082, 1402,
	1242, 1242, 1242, 1242, 1242, 1024, 1025, 1026, 1027, 1028,
	1052, 1053, 1059, 1060, 1851, 1852, 1853, 1854, 1689, 1937,
	1697, 1698, 1835, 1836, 1710, 1711, 1965, 1966, -2, 221,
	222, 223, 224, 225, 226, 227, 0, 217, 0, 0,
	280, 281, 277, 278, 279, 1066, 1067, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 1993,
	0, 807, 0, 0, 0, 0, 0, 1313, 0, 1305,
	1304, 62, 0, 834, -2, 0, 0, 0, 0, 46,
	0, 51, 894, 76, 75, 1353, 0, 0, 0, 58,
	1314, 66, 68, 1315, 0, 839, 840, 0, 870, 874,
	0, 835, 0, 0, 1431, 1430, 1430, 101, 0, 0,
	1406, 113, 114, 115, 0, 0, 1412, 1413, 1417, 1418,
	0, 0, 167, 168, 0, 40, 406, 0, 163, 0,
	399, 340, 0, 1331, 0, 0, 0, 0, 0, 834,
	0, 1425, 144, 145, 152, 153, 154, 379, 379, 379,
	552, 0, 0, 155, 155, 510, 511, 512, 0, 0,
	-2, 404, 0, 490, 0, 0, 393, 393, 397, 395,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 380, 0, 550, 551, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 1433, 1434, 0, 527,
	528, 0, 0, 0, 379, 379, 0, 0, 0, 0,
	379, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 1344, 0, 0, 0, -2, 0, 681, 0, 0,
	0, 1426, 1426, 0, 688, 0, 690, 691, 0, 0,
	692, 0, 748, 748, 746, 747, 694, 695, 696, 697,
	751, 0, 0, 388, 389, 390, 748, 751, 0, 751,
	751, 751, 751, 748, 748, 748, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 754, 751, 0,
	725, 0, 726, 727, 730, 731, 733, 1995, 1996, 1443,
	1444, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1994, 1994, 737, 741, 1416, 763, 775, 778, 795, 793,
	794, 796, 788, 789, 790, 791, 0, 809, 810, 815,
	0, 0, 0, 0, 821, 822, 823, 0, 0, 826,
	827, 828, 0, 0, 0, 0, 0, 955, 0, 0,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 974, 975, 0, 0, 0, 997,
	998, 999, 1000, 1003, 0, 1015, 0, 1017, 1288, -2,
	0, 0, 0, 1008, 1009, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 1096, 0, 1097, 1099, 1100,
	0, 1101, 844, 844, 844, 844, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1436, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 854, 0, 0,
	854, 854, 0, 0, 210, 211, 212, 213, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 229, 230, 231, 232, 282, 1082,
	0, 0, 0, 45, 799, 800, 0, 918, 1436, 0,
	0, 850, 0, 56, 65, 67, 1313, 60, 1313, 0,
	856, 0, 0, -2, -2, 857, 863, 864, 865, 866,
	867, 53, 1992, 54, 0, 73, 0, 47, 0, 0,
	0, 0, 352, 1356, 0, 0, 1306, 1307, 1310, 0,
	871, 1789, 875, 0, 877, 878, 0, 837, 0, 99,
	0, 934, 0, 0, 0, 0, 1414, 103, 104, 0,
	0, 0, 363, 1419, 1420, 1421, -2, 386, 0, 363,
	347, 290, 291, 292, 340, 294, 340, 340, 340, 340,
	352, 352, 352, 352, 323, 324, 325, 326, 327, 0,
	0, 309, 340, 340, 340, 340, 330, 331, 332, 333,
	334, 335, 336, 337, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 342, 342, 342, 344, 344, 0, 41,
	0, 367, 0, 1310, 0, 0, 1344, 1428, 1438, 0,
	0, 0, 1428, 122, 0, 0, 0, 553, 587, 504,
	541, 554, 0, 507, 508, -2, 0, 0, 489, 0,
	491, 0, 387, 0, -2, 0, 397, 0, 393, 397,
	394, 397, 385, 398, 531, 532, 533, 0, 535, 536,
	617, 904, 0, 0, 0, 0, 0, 623, 624, 625,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 542, 543, 544, 545, 546, 547, 548, 549, 0,
	0, 0, 0, 491, 0, 538, 0, 0, 443, 444,
	445, 0, 0, 448, 449, 450, 451, 0, 0, 454,
	455, 456, 921, 922, 457, 458, 483, 484, 485, 459,
	460, 461, 462, 463, 464, 465, 477, 478, 479, 480,
	481, 482, 466, 467, 468, 469, 470, 471, 474, 0,
	137, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 0, 0, 0,
	853, 936, 1449, 1450, 752, 753, 0, 391, 392, 751,
	751, 698, 738, 0, 751, 702, 739, 703, 705, 704,
	706, 719, 720, 751, 709, 749, 750, 710, 711, 712,
	713, 714, 715, 716, 734, 721, 722, 723, 755, 0,
	759, 760, 735, 736, 0, 776, 780, 781, 782, 783,
	0, 0, 812, 95, 817, 818, 819, 820, 832, 825,
	1084, 952, 953, 954, 0, 956, 959, 0, 1068, 1070,
	961, 963, 1079, 1080, 1081, 0, 0, 0, 0, 0,
	967, 971, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 993, 1256, 1257, 1258, 1012, 283,
	284, 0, 1013, 0, 0, 0, 0, 0, 0, 0,
	1083, 1014, 0, 868, 0, 0, 1286, 1283, 0, 0,
	0, 1241, 1243, 0, 0, 0, 0, 845, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1259, 0,
	0, 0, 0, 0, 1279, 0, 1019, 1020, 1021, 0,
	0, 0, 0, 0, 0, 1139, 0, 0, 0, 0,
	1437, 0, 132, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1183, 1184, 1185, 1186, 38, 0, 0, 0, 855, 1290,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 1400, 0, 0, 802, 803, 805, 0,
	938, 0, 919, 0, 0, 808, 0, 849, 0, 852,
	59, 61, 861, 862, 0, 879, 858, 55, 50, 0,
	0, 896, 1354, 352, 1376, 0, 361, 361, 358, 1316,
	1317, 0, 1309, 1311, 1312, 78, 876, 872, 0, 950,
	0, 0, 933, 0, 882, 884, 885, 886, 916, 0,
	889, 0, 0, 0, 0, 0, 97, 935, 1407, 0,
	102, 0, 0, 107, 108, 1408, 1409, 1410, 1411, 0,
	576, -2, 438, 169, 171, 172, 173, 164, -2, 350,
	348, 349, 293, 352, 352, 317, 318, 319, 320, 321,
	322, 0, 0, 310, 311, 312, 313, 304, 0, 305,
	306, 307, 0, 308, 405, 0, 1318, 368, 369, 371,
	379, 0, 374, 375, 0, 379, 379, 0, 400, 401,
	0, 1310, 1335, 0, 0, 0, 1439, 1438, 1438, 1438,
	0, 157, 158, 159, 160, 161, 162, 612, 0, 0,
	588, 610, 611, 155, 0, 0, 165, 493, 492, 0,
	644, 0, 403, 0, 0, 397, 397, 382, 383, 534,
	0, 0, 619, 620, 621, 622, 0, 0, 0, 520,
	432, 0, 521, 522, 491, 493, 0, 0, 363, 446,
	447, 452, 453, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 569, 570, 495,
	574, 571, 495, 575, 1332, 1333, 1334, 0, 0, 682,
	0, 0, 429, 93, 1427, 687, 748, 708, 740, 748,
	700, 707, 728, 772, 816, 0, 0, 0, 0, 824,
	0, 0, 960, 1069, 1071, 964, 0, 968, 972, 0,
	0, 0, 1018, 1016, 1290, 0, 0, 0, 1065, 0,
	0, 1087, 1088, 0, 0, 0, 1284, 0, 0, 1094,
	0, 1244, 1245, 1102, 0, 0, 0, 0, 0, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1304,
	0, 0, 0, 0, 0, 1123, 1124, 1125, 1126, 1127,
	0, 1129, 0, 1130, 0, 0, 0, 0, 1137, 1138,
	1140, 0, 0, 1143, 1144, 0, 0, 1145, 0, 0,
	0, 1149, 0, 0, 0, 0, 1158, 1159, 1160, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 1173, 0, 1047, 0, 0, 1047, 0, 1085, 854,
	0, 1246, 1247, 1248, 1249, 1250, 0, 0, 0, 0,
	0, 0, 1206, 1207, 1209, 0, 0, 1212, 0, 1214,
	0, 1401, 801, 804, 806, 892, 939, 940, 0, 0,
	0, 0, 920, 1435, 847, 848, 851, 898, 0, 1292,
	0, 0, 879, 950, 880, 0, 859, 52, 895, 0,
	1358, 1357, 1370, 1383, 361, 361, 355, 356, 362, 357,
	359, 360, 1308, 0, 1313, 0, 1394, 0, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 923, 0,
	0, 926, 0, 0, 0, 0, 917, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 91, 92, 0, 0,
	0, 105, 106, 0, 0, 112, 364, 365, 146, 155,
	440, 170, 413, 0, 0, 289, 351, 314, 315, 316,
	0, 338, 0, 0, 0, 434, 118, 1322, 1321, 379,
	379, 370, 0, 373, 0, 0, 0, 1440, 341, 402,
	0, 136, 0, 0, 0, 0, 0, 142, 582, 0,
	0, 589, 0, 0, 0, 502, 0, 513, 514, 0,
	616, -2, 678, 367, 0, 381, 384, 905, 0, 0,
	515, 0, 518, 519, 433, 493, 524, 525, 539, 526,
	475, 476, 473, 0, 0, 1345, 1346, 1351, 1349, 1350,
	123, 560, 562, 561, 565, 0, 0, 497, 0, 497,
	558, 0, 429, 1318, 0, 686, 430, 431, 751, 751,
	811, 96, 0, 814, 0, 0, 0, 0, 965, 969,
	1251, 1277, 340, 340, 1264, 340, 344, 1267, 340, 1269,
	340, 1272, 340, 1275, 1276, 0, 0, 0, 869, 0,
	0, 1093, 1287, 0, 0, 1103, 1104, 1105, 1106, 1107,
	1281, 0, 0, 0, 1122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1042, 1046, 0, 1048, 1049, 0,
	0, 1175, 0, 0, 1187, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 941, 946, 946,
	946, 0, 0, 0, 1422, 1423, 1293, 1294, 950, 1295,
	881, 860, 897, 1376, 0, 1369, 0, -2, 1378, 0,
	0, 0, 1384, 353, 354, 873, 79, 951, 82, 0,
	1394, 1403, 0, 1385, 1396, 1398, 0, 0, 0, 1390,
	0, 950, 883, 912, 914, 0, 909, 924, 925, 927,
	0, 929, 0, 931, 932, 894, 888, 890, 0, 0,
	0, 99, 0, 950, 950, 98, 0, 937, 109, 110,
	111, 439, 174, 179, 0, 0, 0, 184, 0, 186,
	0, 0, 0, 191, 192, 379, 379, 414, 0, 286,
	288, 0, 0, 177, 352, 0, 352, 0, 345, 0,
	415, 435, 1319, 1320, 0, 0, 372, 376, 377, 378,
	0, 1429, 138, 0, 0, 0, 585, 0, 613, 0,
	0, 0, 0, 0, 0, 166, 494, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 0, 379, 0, 0,
	0, 379, 379, 379, 0, 670, 366, 0, 0, 641,
	638, 516, 0, 215, 216, 218, 0, 0, 523, 894,
	1336, 1337, 1338, 0, 1348, 1352, 126, 0, 0, 0,
	0, 572, 0, 496, 573, 683, 684, 685, 94, 693,
	699, 813, 833, 958, 966, 970, 0, 0, 0, 0,
	1278, 1262, 352, 1265, 1266, 1268, 1270, 1271, 1273, 1274,
	1006, 1007, 1011, 0, 1090, 0, 1092, 1285, 0, 1313,
	0, 0, 0, 1121, 0, 0, 0, 1132, 1131, 1133,
	0, 1135, 1136, 1141, 1142, 1146, 0, 1148, 1150, 1151,
	0, 0, 0, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 0, 1040, 1043, 1174, 1050, 1051, 1056,
	1177, 0, 0, 1086, 1189, 0, 1194, 0, 0, 1200,
	0, 1204, 0, 1210, 1211, 1213, 1215, 0, 0, 0,
	0, 0, 918, 899, 63, 1295, 1297, 0, 1363, 1361,
	1361, 1371, 1372, 0, 0, 1379, 0, 0, 0, 0,
	83, 0, 0, 0, 1399, 0, 0, 0, 0, 100,
	1304, 906, 913, 0, 0, 907, 0, 908, 928, 930,
	887, -2, 891, 0, 950, 950, 89, 90, 0, 180,
	0, 182, 208, 209, 0, 185, 187, 188, 189, 195,
	196, 197, 190, 0, 0, 285, 287, 0, 0, 328,
	339, 329, 0, 0, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 894, 139, 140, 141, 577, 0, 587, 0,
	0, 0, 580, 0, 505, 0, 0, 0, 379, 379,
	379, 0, 0, 0, 0, 655, 0, 0, 618, 0,
	626, 0, 0, 0, 219, 220, 0, 1347, 559, 0,
	124, 125, 0, 0, 564, 498, 499, 1004, 0, 0,
	0, 1005, 1263, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 1128, 0, 0, 0, 1154, 0, 0, 0,
	607, 608, 0, 1218, 1045, 1304, 0, 1047, 1057, 1058,
	0, 1047, 1188, 0, 0, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 938, 1297, 1302, 0, 0,
	1366, 0, 1359, 1362, 1360, 1373, 0, 0, 1380, 0,
	1382, 0, 1404, 1405, 1397, 0, 1389, 1392, 1388, 1391,
	1313, 910, 0, 915, 0, 1304, 88, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 343, 346, 0, 0, 0, 578, 0,
	590, 581, 0, 668, 0, 672, 0, 0, 0, 675,
	676, 677, 654, 0, 658, 407, 642, 639, 640, 517,
	0, 127, 128, 0, 0, 0, 1252, 0, 1255, 1089,
	1091, 0, 1118, 1119, 1120, 1260, 1261, 1134, 1147, 1152,
	0, 1155, 0, 0, 1156, 0, 609, 1036, 0, 0,
	1054, 1055, 0, 1190, 0, 1195, 1196, 0, 1201, 0,
	1205, 1216, 0, 943, 900, 901, 948, 949, 0, 0,
	893, 1302, 81, 1303, 1300, 0, 1298, 1296, 1355, 0,
	1364, 1365, 1374, 1375, 1381, 0, 1387, 0, 86, 0,
	0, 0, 1313, 181, 0, 200, 0, 586, 0, 589,
	579, 666, 667, 0, 679, 671, 673, 674, 656, -2,
	1339, 0, 0, 0, 566, 1253, 0, 0, 1157, 0,
	605, 606, 1044, 1037, 0, 1022, 1023, 1041, 1176, 1178,
	0, 0, 0, 0, 942, 944, 945, 80, 0, 1299,
	1062, 0, 1367, 1368, 1395, 1393, 911, 918, 0, 87,
	420, 413, 1339, 0, 0, 0, 659, 660, 661, 662,
	663, 664, 665, 556, 1341, 129, 130, 486, 487, 488,
	123, 0, 1095, 1153, 1038, 0, 0, 0, 0, 1034,
	1035, 0, 1191, 0, 1197, 0, 1202, 0, 902, 903,
	1301, 0, 0, 591, 0, 593, 0, -2, 408, 421,
	0, 175, 201, 202, 0, 0, 205, 206, 207, 198,
	199, 119, 0, 0, 680, 0, 1342, 1343, 126, 0,
	0, 1029, 1030, 1031, 1032, 1033, 0, 0, 0, 1063,
	1042, 592, 0, 0, 363, 0, 602, 409, 410, 0,
	416, 417, 418, 419, 203, 204, 614, 0, 0, 563,
	1254, 0, 1192, 0, 1198, 0, 1203, 0, 594, 595,
	603, 0, 411, 0, 412, 0, 0, 0, 583, 0,
	614, 1340, 1039, 0, 0, 1061, 0, 604, 600, 422,
	424, 425, 0, 0, 423, 615, 584, 1193, 1199, 0,
	426, 427, 428, 596, 597, 598, 599,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 652,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:585
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:590
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:631
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:637
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:648
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:658
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:668
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:674
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:680
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:684
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:693
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:699
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:703
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:709
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:898
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:910
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:914
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:943
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:948
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:952
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:958
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:968
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:981
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1003
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1013
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1017
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1021
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1027
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1031
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1035
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1039
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1045
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1049
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1053
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1072
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1081
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1085
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1092
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1101
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1116
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1121
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1127
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1147
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1153
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1169
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1176
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1183
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1188
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1193
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1198
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1205
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1212
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1223
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1234
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1240
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1244
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1248
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1252
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1276
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1296
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1306
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1310
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1316
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1326
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1331
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1340
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1364
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1373
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1471
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1481
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1485
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1489
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1495
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1499
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1541
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1549
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Armscii8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ASCIIStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Big5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = UBinaryStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Cp1250Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Cp1251Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Cp1256Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Cp1257Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Cp850Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Cp852Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Cp866Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Cp932Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Dec8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = EucjpmsStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = EuckrStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Gb18030Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Gb2312Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = GbkStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Geostd8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = GreekStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = HebrewStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Hp8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Keybcs2Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Koi8rStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Koi8uStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Latin1Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Latin2Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Latin5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Latin7Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = MacceStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = MacromanStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = SjisStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Swe7Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Tis620Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Ucs2Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = UjisStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Utf16Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Utf16leStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Utf32Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Utf8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Utf8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1825
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1839
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1843
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1847
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1857
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1864
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1868
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1872
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1876
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2104
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2113
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2118
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2122
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2140
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2148
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2152
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2191
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = ""
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2235
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2244
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2250
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2260
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2264
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2269
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2273
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2277
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2281
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2285
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2289
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2305
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2309
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2313
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2317
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2321
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2326
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = "key"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2388
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2398
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2402
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2408
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2412
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2418
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2422
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2428
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2434
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2438
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2442
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2446
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2450
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2459
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2465
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2477
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2481
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2485
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2490
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2494
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2500
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2512
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2516
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2520
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2524
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2528
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2547
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2560
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2569
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2575
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2589
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2631
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2635
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2724
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2774
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2783
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2801
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2805
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2814
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2818
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2822
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2830
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2836
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2840
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2978
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3037
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3218
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3227
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3235
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3244
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3251
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3263
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3272
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3287
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3296
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3301
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3305
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3311
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3317
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3323
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3333
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3343
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3349
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3355
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3361
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3385
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3391
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3397
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3401
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3405
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3411
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3415
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3420
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3424
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3429
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3433
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3439
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3443
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3447
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3451
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3455
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3459
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3463
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3467
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3471
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3475
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3479
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3483
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3487
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3491
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3495
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3499
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3503
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3507
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3511
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3515
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3519
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3523
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3542
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3557
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3561
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3566
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3571
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3586
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3592
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3598
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3609
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3615
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3625
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3630
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3634
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3639
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3649
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3654
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3660
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3666
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3673
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3680
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3687
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3705
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3711
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3717
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3723
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3729
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3735
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3747
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3769
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3773
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = "extended "
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4041
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4075
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4079
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4089
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4200
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4204
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4208
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4212
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4216
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4220
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = yyDollar[1].str
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = yyDollar[1].str
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4291
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4297
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4307
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4313
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4317
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4321
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4325
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4450
		{
			setAllowComments(yylex, true)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4454
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.strs = nil
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4470
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = SQLCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4524
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4533
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4552
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4557
		{
			yyVAL.strs = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4573
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = SQLCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = DistinctStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = DistinctStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = StraightJoinHint
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4609
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4619
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4623
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4627
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4631
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4656
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4660
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4666
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4672
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4676
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4686
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4690
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4694
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4698
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4704
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4708
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4714
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4718
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4727
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4733
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4737
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4743
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4753
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4757
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4771
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4788
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4792
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4796
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4800
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4808
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4818
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4823
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4828
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4836
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4849
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4853
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4857
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4863
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4869
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4873
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4877
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4881
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4887
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4891
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4930
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4936
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4946
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4950
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4954
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4958
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4963
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4967
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4971
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4975
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5265
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5269
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5275
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5285
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5289
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5293
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5299
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5303
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5310
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5314
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5318
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5322
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5326
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5332
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5336
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5340
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5344
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5348
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5367
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5373
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5377
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5386
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5391
		{
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5400
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5406
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5410
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5422
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5428
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5432
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5438
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5442
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5448
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5452
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5464
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5470
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5474
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5480
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5486
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5490
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5496
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5500
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5506
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5510
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5517
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5521
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5525
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5529
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5535
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5539
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5543
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5547
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5551
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5555
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5559
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5565
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5569
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5573
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5580
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5586
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6152
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6160
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6164
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6168
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6172
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6176
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6180
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6184
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6188
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6192
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6196
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6200
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6206
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6210
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6214
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6218
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6222
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6226
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6230
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6234
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6238
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6293
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6297
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6301
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6305
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6309
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6315
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6333
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6337
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6343
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6347
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6351
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6355
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6359
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6365
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6369
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6373
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6377
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6381
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6385
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6389
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6393
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6397
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6425
		{
			yyVAL.str = string("")
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6429
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6435
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6439
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6445
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6460
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6464
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6468
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6472
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6501
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6516
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6522
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6535
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6544
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6550
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6556
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6560
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6566
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6571
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6575
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6579
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6588
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6594
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6598
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6602
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6611
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6615
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6619
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6623
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6630
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6634
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6638
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6642
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6648
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6652
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6656
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6660
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6665
		{
			yyVAL.str = ""
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6669
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6673
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6677
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6701
		{
			yyVAL.str = ""
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6705
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6710
		{
			yyVAL.str = "cascaded"
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6727
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6733
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6739
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6745
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6754
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6758
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6763
		{
			yyVAL.str = ""
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6767
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6773
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6777
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6783
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6787
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6791
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6796
		{
			yyVAL.str = ""
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6800
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6809
		{
			yyVAL.str = ""
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.str = " header"
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6818
		{
			yyVAL.str = ""
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = " manifest on"
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = " manifest off"
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6831
		{
			yyVAL.str = ""
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = " overwrite on"
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6839
		{
			yyVAL.str = " overwrite off"
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6845
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6850
		{
			yyVAL.str = ""
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6854
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6860
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6874
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6879
		{
			yyVAL.str = ""
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6883
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6889
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6893
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6899
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6903
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6907
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6912
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6916
		{
			yyVAL.str = " optionally"
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6929
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6933
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6937
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6941
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6945
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6951
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6955
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6959
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6963
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6972
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6978
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6982
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6988
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6992
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6998
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7002
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7017
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7027
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7033
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7037
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7043
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7047
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7051
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7055
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7061
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7065
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7069
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7076
		{
			yyVAL.str = "charset"
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7086
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7090
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7094
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7103
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7110
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7115
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7123
		{
			yyVAL.empty = struct{}{}
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7125
		{
			yyVAL.empty = struct{}{}
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7127
		{
			yyVAL.empty = struct{}{}
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7131
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7140
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7147
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7151
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7157
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7161
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7168
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7174
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7178
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7184
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7188
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7195
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7762
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7771
		{
			decNesting(yylex)
		}
	case 1993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7776
		{
			skipToEnd(yylex)
		}
	case 1994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7781
		{
			skipToEnd(yylex)
		}
	case 1995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7785
		{
			skipToEnd(yylex)
		}
	case 1996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7789
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
