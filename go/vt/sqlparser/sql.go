// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const MATCH = 57819
const AGAINST = 57820
const BOOLEAN = 57821
const LANGUAGE = 57822
const WITH = 57823
const QUERY = 57824
const EXPANSION = 57825
const WITHOUT = 57826
const VALIDATION = 57827
const UNUSED = 57828
const ARRAY = 57829
const BYTE = 57830
const CUME_DIST = 57831
const DESCRIPTION = 57832
const DENSE_RANK = 57833
const EMPTY = 57834
const EXCEPT = 57835
const FIRST_VALUE = 57836
const GROUPING = 57837
const GROUPS = 57838
const JSON_TABLE = 57839
const LAG = 57840
const LAST_VALUE = 57841
const LATERAL = 57842
const LEAD = 57843
const NTH_VALUE = 57844
const NTILE = 57845
const OF = 57846
const OVER = 57847
const PERCENT_RANK = 57848
const RANK = 57849
const RECURSIVE = 57850
const ROW_NUMBER = 57851
const SYSTEM = 57852
const WINDOW = 57853
const ACTIVE = 57854
const ADMIN = 57855
const AUTOEXTEND_SIZE = 57856
const BUCKETS = 57857
const CLONE = 57858
const COLUMN_FORMAT = 57859
const COMPONENT = 57860
const DEFINITION = 57861
const ENFORCED = 57862
const ENGINE_ATTRIBUTE = 57863
const EXCLUDE = 57864
const FOLLOWING = 57865
const GEOMCOLLECTION = 57866
const GET_MASTER_PUBLIC_KEY = 57867
const HISTOGRAM = 57868
const HISTORY = 57869
const INACTIVE = 57870
const INVISIBLE = 57871
const LOCKED = 57872
const MASTER_COMPRESSION_ALGORITHMS = 57873
const MASTER_PUBLIC_KEY_PATH = 57874
const MASTER_TLS_CIPHERSUITES = 57875
const MASTER_ZSTD_COMPRESSION_LEVEL = 57876
const NESTED = 57877
const NETWORK_NAMESPACE = 57878
const NOWAIT = 57879
const NULLS = 57880
const OJ = 57881
const OLD = 57882
const OPTIONAL = 57883
const ORDINALITY = 57884
const ORGANIZATION = 57885
const OTHERS = 57886
const PARTIAL = 57887
const PATH = 57888
const PERSIST = 57889
const PERSIST_ONLY = 57890
const PRECEDING = 57891
const PRIVILEGE_CHECKS_USER = 57892
const PROCESS = 57893
const RANDOM = 57894
const REFERENCE = 57895
const REQUIRE_ROW_FORMAT = 57896
const RESOURCE = 57897
const RESPECT = 57898
const RESTART = 57899
const RETAIN = 57900
const REUSE = 57901
const ROLE = 57902
const SECONDARY = 57903
const SECONDARY_ENGINE = 57904
const SECONDARY_ENGINE_ATTRIBUTE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SIMPLE = 57908
const SKIP = 57909
const SRID = 57910
const THREAD_PRIORITY = 57911
const TIES = 57912
const UNBOUNDED = 57913
const VCPU = 57914
const VISIBLE = 57915
const RETURNING = 57916
const FORMAT_BYTES = 57917
const FORMAT_PICO_TIME = 57918
const PS_CURRENT_THREAD_ID = 57919
const PS_THREAD_ID = 57920
const FORMAT = 57921
const TREE = 57922
const VITESS = 57923
const TRADITIONAL = 57924
const LOCAL = 57925
const LOW_PRIORITY = 57926
const NO_WRITE_TO_BINLOG = 57927
const LOGS = 57928
const ERROR = 57929
const GENERAL = 57930
const HOSTS = 57931
const OPTIMIZER_COSTS = 57932
const USER_RESOURCES = 57933
const SLOW = 57934
const CHANNEL = 57935
const RELAY = 57936
const EXPORT = 57937
const CURRENT = 57938
const ROW = 57939
const ROWS = 57940
const AVG_ROW_LENGTH = 57941
const CONNECTION = 57942
const CHECKSUM = 57943
const DELAY_KEY_WRITE = 57944
const ENCRYPTION = 57945
const ENGINE = 57946
const INSERT_METHOD = 57947
const MAX_ROWS = 57948
const MIN_ROWS = 57949
const PACK_KEYS = 57950
const PASSWORD = 57951
const FIXED = 57952
const DYNAMIC = 57953
const COMPRESSED = 57954
const REDUNDANT = 57955
const COMPACT = 57956
const ROW_FORMAT = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const MEMORY = 57962
const DISK = 57963
const PARTITIONS = 57964
const LINEAR = 57965
const RANGE = 57966
const LIST = 57967
const SUBPARTITION = 57968
const SUBPARTITIONS = 57969
const HASH = 57970

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	646, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 740,
	235, 740,
	246, 740,
	281, 754,
	282, 754,
	-2, 742,
	-1, 60,
	237, 767,
	-2, 765,
	-1, 114,
	234, 1400,
	-2, 119,
	-1, 116,
	1, 146,
	646, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 776,
	218, 1421,
	-2, 1417,
	-1, 777,
	218, 1422,
	-2, 1418,
	-1, 853,
	59, 835,
	-2, 850,
	-1, 890,
	148, 1855,
	-2, 112,
	-1, 891,
	148, 1683,
	-2, 113,
	-1, 897,
	148, 1772,
	-2, 1394,
	-1, 1047,
	148, 1605,
	-2, 1391,
	-1, 1088,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1173,
	1, 555,
	646, 555,
	-2, 153,
	-1, 1448,
	59, 836,
	-2, 855,
	-1, 1449,
	59, 837,
	-2, 856,
	-1, 1502,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1581,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1590,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1927,
	218, 1426,
	-2, 1420,
	-1, 2023,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 2030,
	25, 174,
	-2, 176,
	-1, 2315,
	87, 39,
	-2, 892,
	-1, 2372,
	77, 94,
	87, 94,
	-2, 912,
	-1, 2440,
	621, 667,
	-2, 641,
	-1, 2601,
	49, 1361,
	-2, 1355,
	-1, 2844,
	87, 39,
	-2, 893,
	-1, 2882,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 884,
	-1, 3227,
	621, 667,
	-2, 655,
	-1, 3317,
	22, 1774,
	32, 1774,
	174, 1774,
	257, 1774,
	315, 1774,
	316, 1774,
	317, 1774,
	318, 1774,
	319, 1774,
	320, 1774,
	321, 1774,
	323, 1774,
	324, 1774,
	325, 1774,
	326, 1774,
	327, 1774,
	328, 1774,
	329, 1774,
	330, 1774,
	331, 1774,
	332, 1774,
	333, 1774,
	334, 1774,
	336, 1774,
	338, 1774,
	339, 1774,
	340, 1774,
	341, 1774,
	342, 1774,
	343, 1774,
	344, 1774,
	345, 1774,
	346, 1774,
	349, 1774,
	350, 1774,
	351, 1774,
	352, 1774,
	353, 1774,
	354, 1774,
	355, 1774,
	356, 1774,
	357, 1774,
	496, 1774,
	-2, 599,
}

const yyPrivate = 57344

const yyLast = 47324

var yyAct = [...]int{
	776, 2987, 3389, 785, 2986, 3208, 2988, 663, 3401, 3358,
	2020, 3359, 2959, 3295, 2545, 2819, 779, 3260, 3315, 1505,
	2750, 3283, 1953, 1973, 778, 2656, 2663, 3192, 1236, 2254,
	3143, 3, 2704, 2614, 2713, 2718, 2715, 2714, 2712, 3190,
	650, 749, 37, 2717, 2716, 2946, 2274, 2564, 846, 1426,
	3015, 186, 750, 1955, 186, 2303, 611, 186, 3180, 868,
	2617, 2671, 626, 2733, 186, 2732, 2090, 1463, 646, 2853,
	2618, 3020, 186, 2615, 2501, 2544, 2343, 643, 2847, 2543,
	748, 747, 671, 2735, 2873, 2771, 2612, 186, 1993, 2602,
	2366, 2053, 1977, 2839, 2330, 2405, 644, 2484, 2755, 2437,
	2078, 2058, 1050, 1559, 2406, 2121, 642, 2407, 2009, 626,
	155, 869, 626, 186, 626, 2322, 848, 638, 895, 850,
	36, 854, 2355, 38, 2336, 1450, 1923, 2305, 1890, 1810,
	1800, 1096, 1120, 2099, 1588, 1185, 1997, 892, 1916, 871,
	1758, 2077, 2476, 2138, 1606, 141, 1998, 2399, 2060, 95,
	1985, 1083, 1078, 1494, 96, 1472, 2374, 2000, 655, 1889,
	1818, 1430, 1321, 91, 1777, 1257, 1703, 1057, 1595, 1086,
	1707, 1089, 1687, 2075, 1054, 1058, 1084, 1085, 1493, 860,
	1477, 1886, 1289, 1491, 1228, 2049, 1234, 1712, 1554, 1924,
	1580, 1214, 1826, 882, 76, 858, 124, 125, 97, 633,
	855, 98, 1328, 856, 1169, 1945, 119, 1324, 89, 3390,
	2947, 2701, 117, 159, 3217, 1978, 118, 2430, 85, 2092,
	2093, 2094, 3245, 2092, 2460, 2459, 2136, 2428, 857, 77,
	8, 7, 876, 6, 881, 1672, 2939, 3342, 87, 126,
	2902, 2492, 90, 615, 2493, 3240, 3241, 2991, 3246, 1950,
	1951, 1765, 1764, 87, 862, 1763, 87, 1125, 1762, 1258,
	1100, 120, 2723, 1051, 1761, 634, 1760, 1780, 791, 792,
	793, 582, 849, 1743, 2991, 847, 1122, 1752, 636, 1258,
	637, 3336, 1133, 2301, 1076, 188, 189, 190, 2598, 1139,
	1140, 1141, 889, 1144, 1145, 1146, 1147, 863, 1099, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 870, 1126, 1129, 1130,
	2721, 102, 2723, 1074, 896, 791, 792, 793, 2808, 1073,
	120, 1457, 2990, 1072, 2125, 2720, 1075, 2450, 2568, 3362,
	3241, 2332, 2727, 1062, 3346, 3412, 3357, 1067, 3380, 2824,
	3344, 2823, 2453, 3193, 2275, 1770, 2772, 615, 3139, 2990,
	3138, 78, 104, 105, 87, 108, 1268, 1124, 114, 2659,
	3345, 183, 3296, 2123, 577, 1142, 3343, 1123, 2124, 2952,
	2721, 3393, 2953, 78, 78, 2346, 1268, 80, 3409, 3293,
	751, 2180, 78, 3236, 842, 843, 844, 845, 120, 1981,
	853, 3371, 2727, 2960, 3284, 2118, 3292, 3235, 2500, 3320,
	2347, 2790, 3325, 1569, 2660, 2468, 1495, 2383, 1496, 2467,
	2382, 3222, 2302, 2384, 2653, 2654, 3323, 2652, 884, 885,
	2015, 2016, 3033, 2491, 2069, 3329, 3330, 2177, 2014, 87,
	2662, 1231, 1066, 2673, 2674, 1068, 616, 751, 1204, 1952,
	3324, 840, 839, 2724, 2657, 1192, 2178, 3209, 182, 2063,
	1193, 87, 87, 1209, 1210, 1264, 2395, 615, 1256, 2433,
	87, 2673, 2674, 2780, 188, 189, 190, 1290, 2658, 615,
	1205, 1192, 121, 2778, 143, 1264, 1193, 1071, 624, 1178,
	1179, 1198, 2033, 2032, 1191, 164, 1190, 2339, 2340, 3148,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1298, 1300,
	1301, 2664, 1751, 2724, 2431, 2850, 622, 615, 2752, 2532,
	1143, 1181, 2477, 628, 1434, 2756, 154, 3363, 1753, 1754,
	1755, 1168, 142, 2150, 2147, 2149, 2148, 2151, 2152, 2463,
	2438, 1662, 1071, 1867, 1063, 1069, 2100, 1230, 3364, 2745,
	2672, 1065, 1064, 161, 3169, 162, 3170, 2746, 1211, 612,
	616, 2144, 2675, 2139, 1221, 1206, 1223, 3392, 1212, 1688,
	1225, 1582, 1583, 153, 152, 181, 1199, 186, 2672, 186,
	1213, 1693, 186, 1979, 1980, 1663, 2479, 1664, 1174, 2156,
	2675, 2157, 2754, 2158, 1172, 1207, 1208, 3337, 2941, 2940,
	1069, 2062, 2159, 2753, 1220, 1222, 1149, 598, 2143, 1148,
	3123, 1437, 626, 1238, 626, 626, 2145, 2141, 2103, 596,
	2937, 2995, 1109, 2675, 1079, 1107, 1994, 1573, 1080, 626,
	626, 1859, 1848, 1849, 1850, 1851, 1861, 1852, 1853, 1854,
	1866, 1862, 1855, 1856, 1863, 1864, 1865, 1857, 1858, 1860,
	2142, 1080, 1118, 1117, 1119, 1304, 1116, 1115, 1114, 593,
	615, 1113, 1250, 1070, 1112, 1111, 1106, 1055, 607, 3369,
	616, 1053, 37, 2567, 147, 1584, 150, 2533, 1581, 1055,
	148, 149, 616, 603, 1092, 3413, 165, 1055, 1263, 1260,
	1261, 1262, 1267, 1269, 1266, 171, 1265, 1128, 1594, 2661,
	1304, 1218, 1981, 1091, 2178, 1219, 1259, 1127, 1263, 1260,
	1261, 1262, 1267, 1269, 1266, 1224, 1265, 1091, 1070, 1188,
	616, 1194, 1195, 1196, 1197, 3216, 1259, 1202, 2429, 3405,
	2397, 1077, 1704, 2936, 2076, 883, 2480, 2129, 2694, 1217,
	2496, 2465, 2128, 2483, 1232, 1233, 1071, 1167, 1307, 1308,
	1309, 1310, 583, 1700, 585, 599, 1244, 618, 1315, 617,
	589, 3298, 587, 591, 600, 592, 788, 586, 1110, 597,
	2122, 1108, 588, 601, 602, 605, 608, 609, 610, 606,
	604, 788, 595, 619, 788, 2192, 3297, 1694, 1136, 2306,
	2308, 1695, 1696, 2462, 1226, 1567, 2432, 1566, 1565, 1239,
	1240, 1241, 2851, 2448, 1098, 1593, 1701, 1563, 581, 1098,
	576, 1171, 156, 116, 81, 3205, 1311, 1692, 3298, 2475,
	2989, 2120, 2474, 1135, 1305, 1306, 1419, 2889, 1098, 1424,
	3234, 1674, 1673, 1675, 1676, 1677, 2900, 2901, 3149, 2869,
	186, 2725, 2726, 3297, 626, 626, 1456, 2989, 1400, 2379,
	2342, 86, 2452, 2502, 2729, 2066, 3328, 2283, 1944, 77,
	186, 1253, 1251, 616, 1252, 2486, 1481, 2179, 1098, 1394,
	2485, 1183, 2665, 86, 86, 2337, 2669, 1330, 1326, 626,
	1327, 2021, 86, 186, 2668, 1098, 1979, 1980, 626, 1440,
	151, 1304, 1301, 1444, 626, 2067, 2451, 2651, 1441, 850,
	3327, 2725, 2726, 2065, 2486, 1097, 1438, 1170, 1425, 2485,
	1097, 1091, 1094, 1095, 2729, 1055, 892, 1827, 2670, 1088,
	1092, 1177, 1070, 2666, 865, 1180, 1189, 1201, 2667, 1097,
	1229, 1828, 1098, 3230, 1101, 1091, 2504, 2068, 1203, 1103,
	1087, 1187, 1121, 1104, 1102, 3403, 2519, 2064, 3404, 144,
	3402, 1215, 145, 2307, 1713, 1401, 1402, 1403, 1404, 1405,
	111, 2932, 1442, 1689, 1105, 1690, 95, 1443, 1691, 1097,
	2863, 96, 1425, 2140, 1697, 1091, 1094, 1095, 1497, 1055,
	1254, 1819, 157, 1088, 1092, 620, 1097, 2421, 1819, 169,
	2205, 1101, 1091, 1772, 1774, 1775, 1103, 1431, 1173, 3372,
	1104, 1102, 2514, 2513, 2512, 2506, 613, 2510, 1273, 2505,
	2112, 2503, 1782, 2119, 1272, 1273, 2508, 1773, 98, 3029,
	2907, 614, 2906, 2107, 1603, 2507, 1783, 1302, 1303, 1781,
	112, 177, 1602, 1097, 1592, 1134, 2117, 2115, 1428, 1131,
	1109, 1274, 2509, 2511, 1107, 3414, 1274, 2116, 847, 3365,
	186, 2112, 849, 1482, 1555, 1462, 3407, 2890, 1825, 3366,
	3131, 1459, 2231, 3130, 1564, 3262, 1439, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 1487, 1488,
	1274, 3121, 1186, 176, 178, 179, 180, 626, 2114, 1590,
	1296, 1297, 1299, 1298, 1300, 1301, 1216, 1599, 2966, 1714,
	2967, 1601, 1274, 896, 1604, 1605, 626, 626, 3263, 626,
	2979, 626, 626, 1682, 626, 626, 626, 626, 626, 626,
	1294, 1295, 1296, 1297, 1299, 1298, 1300, 1301, 1636, 1637,
	3415, 626, 1290, 186, 1642, 2184, 2185, 2186, 2978, 2914,
	1600, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1298,
	1300, 1301, 2913, 186, 2903, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1299, 1298, 1300, 1301, 626, 1635, 186, 1274,
	1638, 1492, 1640, 1271, 1445, 1272, 1273, 1681, 1271, 1702,
	1272, 1273, 626, 2702, 186, 3376, 1457, 2521, 3225, 1586,
	1292, 1293, 1294, 1295, 1296, 1297, 1299, 1298, 1300, 1301,
	186, 791, 792, 793, 2690, 1680, 1657, 186, 1570, 1571,
	1572, 3198, 1271, 2403, 1272, 1273, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 626, 1596, 1596, 1579, 2402,
	2749, 1598, 2072, 1639, 1271, 1669, 1272, 1273, 1683, 626,
	626, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1276, 1667,
	1666, 1608, 2255, 1609, 3199, 1611, 1613, 186, 1665, 1617,
	1619, 1621, 1623, 1625, 1597, 1290, 1562, 1655, 1286, 1679,
	1287, 1649, 1576, 1646, 1274, 1647, 1648, 1589, 1577, 1575,
	887, 1653, 1654, 1274, 1288, 1302, 1303, 1285, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1299, 1298, 1300, 1301, 1668,
	1274, 1271, 1709, 1272, 1273, 626, 1457, 1645, 1274, 1807,
	1807, 1644, 1615, 1823, 3224, 3202, 3201, 1824, 1813, 3200,
	1804, 1808, 3126, 1986, 1987, 3111, 2786, 3110, 3028, 1274,
	1805, 1805, 3026, 2975, 1717, 188, 189, 190, 1778, 2897,
	2911, 1721, 2896, 1723, 1724, 1725, 1726, 1705, 626, 626,
	1730, 2757, 1643, 188, 189, 190, 2197, 3374, 1457, 2693,
	1274, 2692, 1742, 1243, 1820, 1785, 2196, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1074, 2195, 1715, 1716, 1776, 1786, 1073, 120, 1719, 1568,
	1072, 1919, 1457, 2412, 2400, 1421, 1720, 1274, 188, 189,
	190, 626, 2386, 1727, 1728, 1729, 1271, 2134, 1272, 1273,
	1741, 1740, 3307, 1457, 1887, 1271, 2133, 1272, 1273, 1976,
	1958, 1744, 1290, 1925, 2495, 1748, 1749, 1710, 1274, 1678,
	1670, 1660, 1271, 186, 1272, 1273, 1656, 1466, 626, 1652,
	1271, 1651, 1272, 1273, 1779, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1299, 1298, 1300, 1301, 188, 189, 190, 1650,
	2088, 1271, 186, 1272, 1273, 626, 188, 189, 190, 1784,
	2086, 1917, 1468, 1274, 1227, 186, 1457, 1947, 3156, 626,
	3305, 1457, 2344, 1887, 186, 3155, 186, 1467, 186, 186,
	626, 3115, 1271, 626, 1272, 1273, 1274, 2328, 3391, 3114,
	1526, 1963, 1809, 1964, 626, 3353, 1457, 2958, 1814, 1815,
	1925, 3303, 1457, 1927, 2328, 3290, 2030, 2439, 892, 2613,
	1290, 892, 2191, 1929, 1930, 1829, 1830, 1831, 1832, 1271,
	2862, 1272, 1273, 188, 189, 190, 95, 2084, 94, 1843,
	2417, 96, 1274, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1299, 1298, 1300, 1301, 2352, 1274, 95, 1457, 92, 626,
	1271, 96, 1272, 1273, 1274, 1926, 2079, 2080, 2081, 93,
	2029, 2083, 2085, 2087, 2202, 2862, 1969, 1274, 1996, 3178,
	1457, 2328, 3270, 1274, 92, 1928, 626, 1274, 1931, 1932,
	1270, 94, 626, 1599, 2864, 93, 1599, 1457, 1599, 100,
	1927, 2328, 3266, 2344, 2111, 1271, 2025, 1272, 1273, 2039,
	2040, 2041, 2042, 2024, 2034, 1957, 2035, 2036, 2037, 2038,
	3253, 1457, 3258, 862, 1457, 3176, 1457, 3229, 1271, 2007,
	1272, 1273, 2045, 2046, 2047, 2048, 2646, 1968, 2884, 626,
	2328, 1971, 1514, 101, 626, 2055, 2178, 2201, 626, 626,
	1457, 2101, 1991, 2352, 100, 2028, 99, 2828, 2061, 1989,
	3173, 1457, 2328, 3218, 2804, 94, 3159, 1457, 1270, 2012,
	2836, 1457, 2681, 2011, 1271, 2862, 1272, 1273, 2950, 3215,
	2027, 2026, 2804, 1457, 3134, 1457, 186, 1271, 2098, 1272,
	1273, 2328, 3122, 186, 2950, 1457, 1271, 1274, 1272, 1273,
	186, 186, 1458, 1460, 186, 896, 186, 2351, 896, 1271,
	2071, 1272, 1273, 186, 2586, 1271, 1100, 1272, 1273, 1271,
	186, 1272, 1273, 87, 1457, 1527, 1596, 2106, 2013, 2056,
	2109, 2193, 2110, 2248, 2070, 2074, 2051, 2052, 2328, 2948,
	2228, 2126, 2082, 1274, 2112, 1457, 186, 1274, 2867, 1457,
	2227, 626, 1274, 2239, 1099, 2112, 1274, 101, 2095, 2105,
	1274, 2104, 2352, 2108, 2056, 1274, 1270, 1457, 100, 1274,
	99, 2248, 1457, 2127, 2130, 1274, 2683, 2682, 2131, 2132,
	2833, 1457, 1274, 1540, 1543, 1544, 1545, 1546, 1547, 1548,
	1984, 1549, 1550, 1551, 1552, 1553, 1528, 1529, 1530, 1531,
	1512, 1513, 1541, 1461, 1515, 1948, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 2679, 2680, 1525, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 2137, 1457, 1756, 1271,
	2838, 1272, 1273, 2375, 1778, 2831, 1457, 1274, 1457, 2784,
	1457, 2679, 2678, 2280, 1457, 2352, 1457, 2113, 2263, 1457,
	1699, 2169, 2170, 3367, 1470, 1274, 2172, 2178, 2461, 3213,
	2188, 1274, 2190, 1558, 2442, 2173, 3119, 1274, 2162, 2435,
	2436, 2328, 2327, 1489, 1274, 1271, 2211, 1272, 1273, 1271,
	2189, 1272, 1273, 1274, 1271, 2915, 1272, 1273, 1271, 852,
	1272, 1273, 1271, 2226, 1272, 1273, 2376, 1271, 1274, 1272,
	1273, 1271, 2375, 1272, 1273, 2112, 2378, 1271, 1274, 1272,
	1273, 2193, 1457, 2324, 1271, 1274, 1272, 1273, 1558, 1557,
	1469, 1274, 2176, 2751, 1082, 188, 189, 190, 94, 1081,
	1274, 1918, 1503, 1502, 3333, 1920, 2916, 2917, 2918, 2933,
	1779, 3273, 3145, 1274, 2834, 1464, 2187, 3112, 3040, 186,
	2806, 2931, 786, 1274, 2928, 2909, 3386, 186, 2404, 2795,
	2794, 1560, 626, 1807, 1542, 2376, 2802, 87, 626, 1271,
	2054, 1272, 1273, 2298, 2312, 2178, 1631, 2747, 2204, 626,
	3146, 2792, 2707, 2703, 1805, 2316, 2193, 1271, 2443, 1272,
	1273, 2791, 2050, 1271, 2044, 1272, 1273, 2705, 2294, 1271,
	2043, 1272, 1273, 186, 2293, 1685, 1271, 186, 1272, 1273,
	2310, 1591, 2919, 2292, 1587, 1271, 1274, 1272, 1273, 1556,
	1274, 113, 2385, 2408, 1274, 2348, 2291, 1632, 1633, 1634,
	1271, 2409, 1272, 1273, 1172, 37, 2290, 2237, 2069, 1274,
	1271, 1961, 1272, 1273, 2368, 1627, 3384, 1271, 3360, 1272,
	1273, 3239, 1274, 1271, 1746, 1272, 1273, 3339, 3164, 2920,
	2921, 2922, 1271, 1927, 1272, 1273, 2880, 2874, 2875, 2329,
	626, 2409, 2877, 2699, 2698, 1271, 186, 1272, 1273, 1274,
	2697, 2613, 2422, 186, 2163, 1271, 1967, 1272, 1273, 2879,
	2632, 2635, 1628, 1629, 1630, 2325, 2636, 626, 1274, 2289,
	2631, 3291, 1274, 2278, 626, 2338, 1431, 2272, 1599, 1599,
	2300, 1975, 2633, 626, 1274, 1926, 1747, 2634, 1465, 1274,
	2434, 2868, 2271, 2367, 2637, 2591, 2361, 2362, 2396, 2398,
	2457, 2326, 2321, 2590, 2389, 2270, 3197, 3019, 3021, 2858,
	2341, 2458, 186, 186, 186, 186, 186, 2373, 1271, 2855,
	1272, 1273, 1271, 866, 1272, 1273, 1271, 2854, 1272, 1273,
	2061, 867, 2269, 186, 186, 2377, 3010, 2380, 3009, 2456,
	2600, 1271, 1821, 1272, 1273, 2387, 1822, 2390, 1698, 186,
	838, 2268, 1274, 2677, 1271, 2267, 1272, 1273, 2393, 1827,
	2603, 2605, 2401, 2413, 1138, 2411, 1137, 2266, 626, 2606,
	2414, 2415, 2265, 1828, 92, 2765, 2408, 1882, 2410, 2489,
	1274, 1271, 1242, 1272, 1273, 93, 3008, 2449, 2419, 121,
	2860, 2423, 2424, 2425, 2418, 1986, 1987, 2455, 94, 3399,
	1271, 2695, 1272, 1273, 1271, 1914, 1272, 1273, 2166, 3312,
	3214, 1579, 2444, 2445, 3141, 92, 1271, 2676, 1272, 1273,
	2365, 1271, 94, 1272, 1273, 101, 93, 1807, 1972, 1807,
	2454, 1942, 1807, 874, 875, 2264, 100, 1807, 99, 2155,
	2154, 2515, 1458, 1946, 2589, 2527, 626, 94, 1805, 1919,
	1805, 1919, 2588, 1805, 626, 2153, 1274, 2840, 1805, 2498,
	2182, 99, 3185, 2258, 2546, 3184, 2546, 2478, 2497, 2546,
	3167, 100, 101, 2481, 2546, 3027, 1970, 3025, 3024, 3017,
	626, 1274, 2574, 100, 1271, 99, 1272, 1273, 1432, 2558,
	2559, 2560, 2561, 2499, 2569, 186, 3016, 2571, 2516, 626,
	2929, 2859, 2857, 2708, 2551, 2548, 2096, 1574, 101, 2552,
	873, 2848, 1271, 626, 1272, 1273, 3387, 2344, 2999, 100,
	626, 626, 2324, 186, 186, 186, 186, 186, 2534, 1917,
	2487, 1917, 2229, 2488, 1959, 186, 3388, 3387, 3388, 2257,
	186, 2574, 579, 186, 1274, 186, 1483, 2539, 186, 186,
	186, 1274, 629, 1474, 3203, 2625, 1274, 2616, 106, 107,
	841, 854, 2616, 1274, 2256, 2645, 2895, 864, 103, 2593,
	2619, 88, 1, 2610, 2899, 1274, 3322, 594, 2073, 2573,
	1949, 1444, 2368, 1274, 2691, 2594, 1429, 2570, 1271, 2572,
	1272, 1273, 3361, 186, 2553, 2554, 2555, 2556, 2557, 3318,
	3319, 1056, 2581, 1671, 1274, 1661, 626, 2592, 2582, 2583,
	2584, 2961, 1888, 1271, 626, 1272, 1273, 3142, 2711, 186,
	2102, 2595, 2927, 2059, 2585, 1090, 146, 2253, 2607, 2608,
	2022, 2023, 3286, 186, 2252, 2647, 110, 2731, 2648, 2251,
	855, 1048, 109, 856, 1093, 1200, 2249, 2097, 2951, 2710,
	95, 186, 1455, 1451, 186, 96, 2638, 2649, 2245, 2626,
	2642, 2643, 2629, 2394, 2766, 2624, 2244, 1452, 1709, 2655,
	2627, 2628, 2031, 2630, 1509, 1507, 1271, 1508, 1272, 1273,
	2685, 1506, 2687, 1271, 2686, 1272, 1273, 2240, 1271, 1511,
	1272, 1273, 1965, 1966, 1454, 1271, 1453, 1272, 1273, 1510,
	2230, 2738, 2739, 2807, 1750, 623, 2364, 1271, 2709, 1272,
	1273, 2688, 2689, 2061, 2730, 1271, 184, 1272, 1273, 2357,
	2360, 2361, 2362, 2358, 2742, 2359, 2363, 1498, 1475, 2874,
	2875, 2820, 1132, 626, 584, 2684, 1271, 2135, 1272, 1273,
	590, 2801, 1316, 1745, 2587, 2381, 893, 2758, 2761, 2760,
	886, 1960, 2314, 2621, 2852, 2599, 2601, 626, 186, 2331,
	2604, 2597, 3196, 2769, 3018, 1455, 1451, 3271, 2776, 2391,
	1471, 2782, 2768, 2827, 2203, 1817, 2773, 2774, 2001, 2775,
	1452, 2822, 2777, 2994, 2779, 1771, 2781, 648, 2826, 647,
	645, 2317, 2345, 2763, 2764, 2357, 2360, 2361, 2362, 2358,
	1277, 2359, 2363, 780, 2304, 1448, 1449, 1454, 1484, 1453,
	2356, 2354, 2353, 2164, 2008, 2876, 2872, 186, 3314, 2003,
	1999, 2323, 739, 656, 649, 641, 2194, 738, 737, 2892,
	2198, 2199, 2200, 2737, 3299, 2898, 2464, 2207, 2748, 2846,
	2208, 2209, 2210, 2466, 2392, 2744, 186, 2841, 2842, 1255,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	1447, 2856, 2849, 635, 1061, 186, 3147, 3220, 186, 186,
	186, 2861, 2871, 2181, 2789, 1446, 1846, 2881, 626, 626,
	1847, 3227, 2719, 2945, 2878, 2700, 2232, 2233, 2234, 2235,
	2236, 2440, 2238, 2089, 2887, 2888, 63, 2241, 2242, 41,
	2243, 2934, 2935, 2246, 2885, 2247, 3191, 2886, 3259, 2250,
	2738, 2739, 2893, 2894, 736, 733, 2996, 2259, 2260, 2261,
	2262, 2997, 626, 626, 626, 626, 2998, 2955, 2956, 2565,
	2273, 2566, 2276, 2277, 3242, 3243, 732, 3244, 1874, 2279,
	2281, 2910, 630, 2912, 3335, 2284, 2285, 2286, 2287, 2288,
	1246, 880, 32, 31, 30, 29, 28, 2295, 2296, 23,
	2297, 22, 1970, 21, 2299, 20, 19, 25, 18, 17,
	16, 2722, 2904, 2905, 2311, 3356, 1807, 3398, 1807, 115,
	50, 2957, 47, 45, 123, 122, 48, 44, 1175, 42,
	27, 26, 15, 14, 13, 12, 11, 1805, 10, 1805,
	9, 5, 4, 35, 34, 33, 1249, 24, 2, 2427,
	2091, 0, 0, 2546, 186, 2546, 0, 0, 2968, 2974,
	0, 0, 0, 0, 2938, 0, 0, 0, 2942, 2943,
	2944, 0, 777, 0, 0, 0, 3013, 2970, 626, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2983, 0, 2982, 2992, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 1176, 0, 1182, 3034, 3042,
	1184, 0, 0, 2616, 0, 0, 0, 0, 37, 1805,
	0, 0, 0, 187, 0, 0, 187, 2619, 0, 187,
	3038, 2619, 3023, 3022, 627, 3014, 187, 0, 0, 3036,
	0, 0, 626, 0, 187, 3032, 3030, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 626, 187,
	0, 0, 0, 0, 0, 3120, 0, 0, 0, 0,
	0, 626, 3043, 3044, 3046, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 627, 187, 627, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 3161, 3144,
	3124, 3116, 0, 3162, 3117, 1807, 3118, 0, 3132, 0,
	0, 0, 0, 0, 0, 0, 3165, 121, 626, 0,
	3136, 0, 626, 626, 3137, 0, 1805, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 626, 0, 3166, 3168, 0, 0, 0, 3171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2522, 2523,
	2524, 2525, 2526, 2388, 3207, 3189, 0, 3195, 0, 3188,
	3186, 3187, 3127, 3128, 3129, 0, 0, 2531, 161, 0,
	162, 0, 0, 0, 0, 0, 2619, 0, 0, 0,
	0, 0, 3210, 0, 3204, 0, 0, 0, 3206, 0,
	181, 2547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 3212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 626, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3231,
	0, 0, 0, 3228, 0, 0, 3219, 0, 0, 0,
	3226, 3223, 0, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 2622, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 165, 0, 2640, 2641, 3248, 0, 3247, 3249, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 3257,
	626, 626, 0, 0, 0, 0, 0, 3264, 0, 0,
	0, 0, 0, 0, 2616, 0, 3272, 0, 0, 0,
	3274, 0, 3301, 0, 626, 0, 37, 0, 3144, 3287,
	3285, 3300, 3277, 3282, 3279, 3278, 3276, 3294, 186, 626,
	3269, 3281, 3280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3310, 0, 0, 0,
	3313, 0, 0, 0, 3331, 0, 0, 3321, 3326, 0,
	0, 0, 0, 0, 3301, 0, 0, 0, 0, 0,
	3341, 3338, 626, 3300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3350,
	0, 0, 0, 0, 626, 0, 3355, 156, 0, 0,
	0, 2767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3370, 626, 0, 626, 0, 0, 3368, 0, 0,
	1807, 0, 0, 2783, 2785, 2787, 3381, 3378, 1504, 3385,
	3383, 3382, 3379, 0, 0, 0, 0, 2793, 0, 0,
	3301, 1805, 2797, 2798, 2799, 2800, 3394, 0, 3400, 3300,
	2803, 0, 0, 0, 3408, 0, 2805, 3406, 0, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 0,
	0, 0, 0, 0, 0, 0, 1807, 2825, 3418, 3419,
	2829, 3417, 2830, 2832, 3162, 2835, 2837, 3416, 0, 0,
	0, 0, 2843, 0, 0, 0, 0, 1805, 0, 187,
	0, 187, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2865, 2866, 0,
	0, 2870, 0, 0, 627, 0, 627, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 2882,
	2883, 627, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 1718, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 2949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 2969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2980, 0, 0, 0, 0, 2981, 0,
	0, 0, 0, 0, 2985, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 2993, 0, 0, 0,
	0, 0, 0, 0, 3000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 187, 0, 0, 0, 627, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 627, 0, 0, 0, 187, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 627, 161, 0, 162,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 153, 152, 181,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 3133, 1988, 0, 0, 0, 164, 0, 0,
	0, 3140, 1992, 0, 1995, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3150,
	3151, 3152, 0, 3153, 3154, 0, 0, 0, 0, 3157,
	0, 3158, 0, 3160, 3163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3172,
	3174, 3175, 3177, 3179, 3181, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 147, 128,
	150, 135, 127, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 3211, 0, 0, 0, 0, 0, 0, 171,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 139, 137, 132, 133, 134, 138,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 627,
	0, 627, 0, 627, 627, 0, 627, 627, 627, 627,
	627, 627, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 627, 3233, 187, 0, 171, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 3238, 0,
	0, 2146, 0, 0, 0, 187, 156, 0, 2160, 2161,
	0, 639, 2165, 0, 0, 0, 0, 3254, 627, 0,
	187, 2168, 0, 3255, 3256, 0, 0, 0, 2171, 0,
	0, 0, 0, 0, 627, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 3267, 0, 0, 0, 0,
	0, 0, 187, 0, 2174, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 627, 0, 0,
	0, 0, 182, 0, 151, 0, 0, 3302, 3304, 3306,
	0, 627, 627, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 121, 0, 143, 187,
	0, 872, 3334, 0, 878, 0, 878, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	154, 3352, 0, 0, 0, 0, 142, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 161, 0, 162,
	0, 0, 0, 169, 3373, 3375, 3377, 0, 0, 0,
	0, 0, 0, 0, 0, 1582, 1583, 153, 152, 181,
	627, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 3410, 3411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 157, 0, 0, 176, 178, 179,
	180, 169, 0, 0, 0, 187, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 147, 1584,
	150, 0, 1581, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 187, 2372, 0, 627, 0, 171,
	0, 0, 0, 177, 0, 0, 0, 187, 0, 0,
	0, 627, 0, 0, 0, 0, 187, 0, 187, 0,
	187, 187, 627, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 2420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 0, 0, 3354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 627, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	2469, 2470, 2471, 2472, 2473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 2482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2490, 0, 0,
	0, 627, 0, 0, 0, 0, 627, 0, 0, 0,
	627, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 187, 0, 0, 187, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	1514, 0, 187, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 627, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 1527, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 1540, 1543, 1544, 1545, 1546, 1547, 1548, 0, 1549,
	1550, 1551, 1552, 1553, 1528, 1529, 1530, 1531, 1512, 1513,
	1541, 2696, 1515, 0, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 0, 0, 1525, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 0, 0, 0, 2734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 2762, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	78, 39, 40, 80, 627, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 627, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 87, 0,
	0, 0, 1542, 0, 0, 0, 2845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 627, 787, 79, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 187, 187, 187, 187, 0,
	0, 0, 0, 2923, 0, 0, 2924, 2925, 2926, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 46, 49, 52, 51, 54, 0,
	66, 187, 0, 75, 72, 851, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 851, 55, 83, 82, 0,
	0, 64, 65, 53, 0, 0, 0, 0, 0, 73,
	74, 1060, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 59, 60, 61, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 1711,
	0, 0, 627, 627, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 187, 0, 0, 187, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 1766, 1767, 1768, 1769, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	86, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 1811, 1812, 0, 0, 0,
	878, 878, 1816, 187, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 0, 0,
	0, 0, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1879,
	1880, 1881, 0, 1883, 1884, 1885, 0, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	0, 1915, 0, 1921, 1922, 878, 0, 878, 878, 878,
	878, 878, 0, 0, 0, 627, 0, 0, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3232, 0, 0, 0, 878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	627, 627, 0, 0, 0, 0, 0, 0, 2057, 1235,
	0, 1235, 1235, 0, 0, 0, 3064, 3066, 3065, 3080,
	3081, 3082, 3083, 3084, 3085, 3086, 693, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 627, 627, 627, 0, 0,
	0, 0, 0, 0, 0, 851, 1312, 1313, 1314, 0,
	1317, 0, 1318, 1319, 1320, 0, 1323, 1325, 1325, 0,
	1325, 1329, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 0, 187, 0, 1393, 0,
	1395, 1396, 1397, 1398, 1399, 0, 0, 0, 0, 0,
	1329, 1329, 1329, 1329, 1329, 0, 0, 0, 0, 0,
	627, 0, 627, 0, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 1433,
	627, 0, 0, 0, 0, 851, 0, 0, 0, 851,
	0, 0, 0, 627, 0, 851, 0, 0, 3075, 3076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2213, 2214, 2215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 627, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 672, 756, 674, 753, 754, 1322, 670, 673, 755,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 691, 692, 3063, 3067, 3068,
	3069, 3077, 3078, 3079, 3087, 3089, 721, 3088, 3090, 3091,
	3092, 3095, 3096, 3097, 3098, 3093, 3094, 3099, 3047, 3051,
	3048, 3049, 3050, 3062, 3052, 3053, 3054, 3055, 3056, 3057,
	3058, 3059, 3060, 3061, 3100, 3101, 3102, 3103, 3104, 3105,
	3070, 3074, 3073, 3071, 3072, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 758,
	187, 0, 762, 0, 0, 0, 764, 763, 0, 765,
	735, 734, 0, 0, 759, 760, 1473, 761, 627, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 3106, 3107, 3108, 3109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 2494, 1235, 1235, 0, 0,
	0, 0, 0, 0, 627, 878, 627, 0, 0, 0,
	0, 0, 0, 2517, 2518, 0, 0, 2520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 0, 2528,
	2529, 2530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2535, 2536, 0, 0, 0, 2537, 2538, 0, 0,
	1891, 2540, 0, 2541, 2542, 0, 0, 0, 2549, 2550,
	0, 0, 0, 0, 0, 0, 1891, 1891, 1891, 1891,
	1891, 894, 0, 0, 1052, 0, 1059, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 2575, 2576, 2577, 2578, 2579, 2580, 87, 0, 0,
	0, 0, 0, 781, 789, 790, 791, 792, 793, 782,
	784, 0, 0, 0, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 786, 794, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2611, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 781, 789, 790,
	791, 792, 793, 782, 784, 0, 0, 0, 783, 0,
	0, 0, 0, 2644, 2740, 2741, 0, 0, 0, 0,
	0, 786, 794, 795, 0, 0, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 2740, 2741,
	0, 0, 0, 2706, 0, 2002, 0, 0, 0, 0,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 2313, 0, 0, 789, 790, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2796, 0, 0, 1060,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 790,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 756, 0, 753, 754, 0, 0, 0, 755,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 894, 0, 894, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 2972, 0, 2973, 0,
	0, 1245, 1247, 2976, 2977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3001, 0, 0, 3002, 0, 3003, 3004, 0, 3005, 0,
	3006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3031, 0, 0, 0, 0,
	0, 0, 0, 2282, 0, 0, 3039, 0, 0, 3041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3045, 0, 0, 0, 0, 0, 0,
	0, 0, 2309, 0, 0, 0, 0, 0, 0, 0,
	0, 3113, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2349, 2350, 0, 0, 0, 0, 0, 1422, 0,
	2369, 0, 2370, 2371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1435, 1436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 2447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	580, 0, 0, 621, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 0, 580, 0,
	0, 3237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 3250, 0, 0, 3251, 0,
	3252, 0, 0, 0, 0, 0, 0, 0, 0, 879,
	0, 879, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 0, 0, 0, 0, 0, 1607, 1607,
	0, 1607, 2002, 1607, 1607, 3332, 1616, 1607, 1607, 1607,
	1607, 1607, 0, 0, 0, 0, 0, 0, 0, 1422,
	0, 0, 1422, 1052, 1422, 2620, 0, 79, 0, 0,
	2002, 2002, 2002, 2002, 2002, 3347, 0, 3348, 0, 3349,
	0, 0, 0, 0, 0, 0, 0, 2369, 851, 0,
	0, 0, 2002, 0, 0, 2002, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3395, 0, 3396, 0,
	0, 0, 0, 0, 0, 0, 0, 894, 2728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2736, 0,
	0, 894, 894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2002, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 2891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 894, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 894, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 580, 1052, 0, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3007, 0, 3011,
	3012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 0, 1801, 0, 0, 0,
	1801, 1801, 2620, 0, 79, 0, 2620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	2318, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3268, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 1423, 0, 1423, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2416, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 1974,
	3351, 0, 0, 0, 0, 0, 2441, 0, 0, 0,
	1708, 0, 0, 0, 0, 2446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 1422, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 1732, 580, 580, 580, 580, 580, 580,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 879,
	0, 0, 0, 0, 0, 879, 879, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 1422, 0, 1422, 0,
	0, 1422, 0, 0, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2563, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	879, 1708, 879, 879, 879, 879, 879, 0, 0, 0,
	0, 2596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 894, 0, 0, 0, 1422,
	0, 0, 2623, 1607, 1422, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 0, 0, 1708, 0,
	580, 0, 580, 0, 580, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 0,
	0, 1422, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 580, 580, 0, 0,
	580, 0, 2167, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1974, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2962, 2963, 2964, 2965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1422, 0, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1422, 0, 0, 0, 0,
	3035, 1708, 3037, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 580, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 2426,
	3182, 0, 0, 0, 3182, 3182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 580,
	580, 580, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 1423, 0, 0, 1423, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 3261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1422, 0, 3265, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 894, 894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 3308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3316, 0, 1423, 0, 0, 0, 0, 1423, 580,
	580, 580, 580, 580, 0, 0, 0, 0, 0, 0,
	0, 2639, 0, 0, 0, 0, 580, 0, 0, 1658,
	0, 580, 0, 0, 580, 2650, 1708, 0, 0, 0,
	0, 0, 0, 0, 3261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 2821, 0, 3316, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 0, 580, 580, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 377, 0, 0, 1030, 1015, 492, 0,
	958, 1033, 927, 946, 1043, 949, 952, 994, 906, 972,
	396, 943, 899, 931, 901, 938, 902, 929, 960, 258,
	926, 1017, 976, 1032, 349, 255, 908, 932, 410, 948,
	197, 996, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 1039, 353, 982, 0,
	472, 381, 0, 0, 1658, 962, 1021, 970, 1008, 957,
	995, 916, 981, 1034, 944, 991, 1035, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 3288, 0, 3289, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 940, 988, 1029, 941, 990, 253,
	306, 260, 252, 497, 1040, 1020, 905, 969, 1028, 0,
	0, 220, 1031, 964, 0, 993, 0, 1046, 900, 984,
	0, 903, 907, 1042, 1024, 935, 263, 0, 0, 0,
	0, 0, 0, 0, 961, 971, 1005, 1009, 955, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 980, 0,
	0, 0, 912, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 915, 0, 934, 1006, 0, 898, 285, 909, 382,
	245, 0, 1013, 1023, 956, 537, 1027, 954, 953, 1000,
	913, 1019, 947, 348, 911, 315, 192, 216, 0, 945,
	392, 437, 449, 1018, 930, 939, 243, 937, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 979, 998,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 1237, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 925, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 1014, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	1003, 1045, 405, 448, 231, 518, 471, 920, 924, 918,
	985, 919, 974, 975, 921, 1036, 1037, 1038, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 1007, 914, 0,
	922, 923, 1016, 1025, 1026, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 978, 191, 212, 351, 1041, 430, 276,
	553, 528, 523, 198, 214, 917, 250, 928, 936, 0,
	942, 950, 951, 963, 965, 966, 967, 968, 986, 987,
	989, 997, 999, 1002, 1004, 1011, 1022, 1044, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	977, 983, 362, 269, 292, 305, 992, 527, 477, 218,
	442, 278, 241, 1010, 1012, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 973,
	1001, 358, 493, 494, 301, 377, 0, 0, 1030, 1015,
	492, 0, 958, 1033, 927, 946, 1043, 949, 952, 994,
	906, 972, 396, 943, 899, 931, 901, 938, 902, 929,
	960, 258, 926, 1017, 976, 1032, 349, 255, 908, 932,
	410, 948, 197, 996, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 1039, 353,
	982, 0, 472, 381, 0, 0, 0, 962, 1021, 970,
	1008, 957, 995, 916, 981, 1034, 944, 991, 1035, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 940, 988, 1029, 941,
	990, 253, 306, 260, 252, 497, 1040, 1020, 905, 969,
	1028, 0, 0, 220, 1031, 964, 0, 993, 0, 1046,
	900, 984, 0, 903, 907, 1042, 1024, 935, 263, 0,
	0, 0, 0, 0, 0, 0, 961, 971, 1005, 1009,
	955, 0, 0, 0, 0, 0, 2651, 0, 933, 0,
	980, 0, 0, 0, 912, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 915, 0, 934, 1006, 0, 898, 285,
	909, 382, 245, 0, 1013, 1023, 956, 537, 1027, 954,
	953, 1000, 913, 1019, 947, 348, 911, 315, 192, 216,
	0, 945, 392, 437, 449, 1018, 930, 939, 243, 937,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	979, 998, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 1237, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	925, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 1014, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 1003, 1045, 405, 448, 231, 518, 471, 920,
	924, 918, 985, 919, 974, 975, 921, 1036, 1037, 1038,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 1007,
	914, 0, 922, 923, 1016, 1025, 1026, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 978, 191, 212, 351, 1041,
	430, 276, 553, 528, 523, 198, 214, 917, 250, 928,
	936, 0, 942, 950, 951, 963, 965, 966, 967, 968,
	986, 987, 989, 997, 999, 1002, 1004, 1011, 1022, 1044,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 977, 983, 362, 269, 292, 305, 992, 527,
	477, 218, 442, 278, 241, 1010, 1012, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 973, 1001, 358, 493, 494, 301, 377, 0, 0,
	1030, 1015, 492, 0, 958, 1033, 927, 946, 1043, 949,
	952, 994, 906, 972, 396, 943, 899, 931, 901, 938,
	902, 929, 960, 258, 926, 1017, 976, 1032, 349, 255,
	908, 932, 410, 948, 197, 996, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	1039, 353, 982, 0, 472, 381, 0, 0, 0, 962,
	1021, 970, 1008, 957, 995, 916, 981, 1034, 944, 991,
	1035, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 940, 988,
	1029, 941, 990, 253, 306, 260, 252, 497, 1040, 1020,
	905, 969, 1028, 0, 0, 220, 1031, 964, 0, 993,
	0, 1046, 900, 984, 0, 903, 907, 1042, 1024, 935,
	263, 0, 0, 0, 0, 0, 0, 0, 961, 971,
	1005, 1009, 955, 0, 0, 0, 0, 0, 2609, 0,
	933, 0, 980, 0, 0, 0, 912, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 915, 0, 934, 1006, 0,
	898, 285, 909, 382, 245, 0, 1013, 1023, 956, 537,
	1027, 954, 953, 1000, 913, 1019, 947, 348, 911, 315,
	192, 216, 0, 945, 392, 437, 449, 1018, 930, 939,
	243, 937, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 979, 998, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 1237, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 925, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 1014, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 1003, 1045, 405, 448, 231, 518,
	471, 920, 924, 918, 985, 919, 974, 975, 921, 1036,
	1037, 1038, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 1007, 914, 0, 922, 923, 1016, 1025, 1026, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 978, 191, 212,
	351, 1041, 430, 276, 553, 528, 523, 198, 214, 917,
	250, 928, 936, 0, 942, 950, 951, 963, 965, 966,
	967, 968, 986, 987, 989, 997, 999, 1002, 1004, 1011,
	1022, 1044, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 977, 983, 362, 269, 292, 305,
	992, 527, 477, 218, 442, 278, 241, 1010, 1012, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 973, 1001, 358, 493, 494, 301, 377,
	0, 0, 1030, 1015, 492, 0, 958, 1033, 927, 946,
	1043, 949, 952, 994, 906, 972, 396, 943, 899, 931,
	901, 938, 902, 929, 960, 258, 926, 1017, 976, 1032,
	349, 255, 908, 932, 410, 948, 197, 996, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 1039, 353, 982, 0, 472, 381, 0, 0,
	0, 962, 1021, 970, 1008, 957, 995, 916, 981, 1034,
	944, 991, 1035, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	940, 988, 1029, 941, 990, 253, 306, 260, 252, 497,
	1040, 1020, 905, 969, 1028, 0, 0, 220, 1031, 964,
	0, 993, 0, 1046, 900, 984, 0, 903, 907, 1042,
	1024, 935, 263, 0, 0, 0, 0, 0, 0, 0,
	961, 971, 1005, 1009, 955, 0, 0, 0, 0, 0,
	1990, 0, 933, 0, 980, 0, 0, 0, 912, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 915, 0, 934,
	1006, 0, 898, 285, 909, 382, 245, 0, 1013, 1023,
	956, 537, 1027, 954, 953, 1000, 913, 1019, 947, 348,
	911, 315, 192, 216, 0, 945, 392, 437, 449, 1018,
	930, 939, 243, 937, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 979, 998, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	1237, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 925, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 1014, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 1003, 1045, 405, 448,
	231, 518, 471, 920, 924, 918, 985, 919, 974, 975,
	921, 1036, 1037, 1038, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 1007, 914, 0, 922, 923, 1016, 1025,
	1026, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 978,
	191, 212, 351, 1041, 430, 276, 553, 528, 523, 198,
	214, 917, 250, 928, 936, 0, 942, 950, 951, 963,
	965, 966, 967, 968, 986, 987, 989, 997, 999, 1002,
	1004, 1011, 1022, 1044, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 977, 983, 362, 269,
	292, 305, 992, 527, 477, 218, 442, 278, 241, 1010,
	1012, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 973, 1001, 358, 493, 494,
	301, 377, 0, 0, 1030, 1015, 492, 0, 958, 1033,
	927, 946, 1043, 949, 952, 994, 906, 972, 396, 943,
	899, 931, 901, 938, 902, 929, 960, 258, 926, 1017,
	976, 1032, 349, 255, 908, 932, 410, 948, 197, 996,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 1039, 353, 982, 0, 472, 381,
	0, 0, 0, 962, 1021, 970, 1008, 957, 995, 916,
	981, 1034, 944, 991, 1035, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 940, 988, 1029, 941, 990, 253, 306, 260,
	252, 497, 1040, 1020, 905, 969, 1028, 0, 0, 220,
	1031, 964, 0, 993, 0, 1046, 900, 984, 0, 903,
	907, 1042, 1024, 935, 263, 0, 0, 0, 0, 0,
	0, 0, 961, 971, 1005, 1009, 955, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 980, 0, 0, 0,
	912, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 915,
	0, 934, 1006, 0, 898, 285, 909, 382, 245, 0,
	1013, 1023, 956, 537, 1027, 954, 953, 1000, 913, 1019,
	947, 348, 911, 315, 192, 216, 0, 945, 392, 437,
	449, 1018, 930, 939, 243, 937, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 979, 998, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 1237, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 925, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 1014,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 1003, 1045,
	405, 448, 231, 518, 471, 920, 924, 918, 985, 919,
	974, 975, 921, 1036, 1037, 1038, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 1007, 914, 0, 922, 923,
	1016, 1025, 1026, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 978, 191, 212, 351, 1041, 430, 276, 553, 528,
	523, 198, 214, 917, 250, 928, 936, 0, 942, 950,
	951, 963, 965, 966, 967, 968, 986, 987, 989, 997,
	999, 1002, 1004, 1011, 1022, 1044, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 977, 983,
	362, 269, 292, 305, 992, 527, 477, 218, 442, 278,
	241, 1010, 1012, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 973, 1001, 358,
	493, 494, 301, 377, 0, 0, 1030, 1015, 492, 0,
	958, 1033, 927, 946, 1043, 949, 952, 994, 906, 972,
	396, 943, 899, 931, 901, 938, 902, 929, 960, 258,
	926, 1017, 976, 1032, 349, 255, 908, 932, 410, 948,
	197, 996, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 1039, 353, 982, 0,
	472, 381, 0, 0, 0, 962, 1021, 970, 1008, 957,
	995, 916, 981, 1034, 944, 991, 1035, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 940, 988, 1029, 941, 990, 253,
	306, 260, 252, 497, 1040, 1020, 905, 969, 1028, 0,
	0, 220, 1031, 964, 0, 993, 0, 1046, 900, 984,
	0, 903, 907, 1042, 1024, 935, 263, 0, 0, 0,
	0, 0, 0, 0, 961, 971, 1005, 1009, 955, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 980, 0,
	0, 0, 912, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 915, 0, 934, 1006, 0, 898, 285, 909, 382,
	245, 0, 1013, 1023, 956, 537, 1027, 954, 953, 1000,
	913, 1019, 947, 348, 911, 315, 192, 216, 0, 945,
	392, 437, 449, 1018, 930, 939, 243, 937, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 979, 998,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 1237, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 925, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 1014, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	1003, 1045, 405, 448, 231, 518, 471, 920, 924, 918,
	985, 919, 974, 975, 921, 1036, 1037, 1038, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 1007, 914, 0,
	922, 923, 1016, 1025, 1026, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 978, 191, 212, 351, 1041, 430, 276,
	553, 528, 523, 198, 214, 917, 250, 928, 936, 0,
	942, 950, 951, 963, 965, 966, 967, 968, 986, 987,
	989, 997, 999, 1002, 1004, 1011, 1022, 1044, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	977, 983, 362, 269, 292, 305, 992, 527, 477, 218,
	442, 278, 241, 1010, 1012, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 973,
	1001, 358, 493, 494, 301, 377, 0, 0, 1030, 1015,
	492, 0, 958, 1033, 927, 946, 1043, 949, 952, 994,
	906, 972, 396, 943, 899, 931, 901, 938, 902, 929,
	960, 258, 926, 1017, 976, 1032, 349, 255, 908, 932,
	410, 948, 197, 996, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 1039, 353,
	982, 0, 472, 381, 0, 0, 0, 962, 1021, 970,
	1008, 957, 995, 916, 981, 1034, 944, 991, 1035, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 940, 988, 1029, 941,
	990, 253, 306, 260, 252, 497, 1040, 1020, 905, 969,
	1028, 0, 0, 1047, 1031, 964, 0, 993, 0, 1046,
	900, 984, 0, 903, 907, 1042, 1024, 935, 263, 0,
	0, 0, 0, 0, 0, 0, 961, 971, 1005, 1009,
	955, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	980, 0, 0, 0, 912, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 915, 0, 934, 1006, 0, 898, 285,
	909, 382, 245, 0, 1013, 1023, 956, 537, 1027, 954,
	953, 1000, 913, 1019, 947, 348, 911, 315, 192, 216,
	0, 945, 392, 437, 449, 1018, 930, 939, 243, 937,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	979, 998, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 910, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	925, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 1014, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 897, 891, 890,
	318, 355, 1003, 1045, 405, 448, 231, 518, 471, 920,
	924, 918, 985, 919, 974, 975, 921, 1036, 1037, 1038,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 1007,
	914, 0, 922, 923, 1016, 1025, 1026, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 978, 191, 212, 351, 1041,
	430, 276, 553, 528, 523, 198, 214, 917, 250, 928,
	936, 0, 942, 950, 951, 963, 965, 966, 967, 968,
	986, 987, 989, 997, 999, 1002, 1004, 1011, 1022, 1044,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 977, 983, 362, 269, 292, 305, 992, 527,
	477, 218, 442, 278, 241, 1010, 1012, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 973, 1001, 358, 493, 494, 301, 377, 0, 0,
	1030, 1015, 492, 0, 958, 1033, 927, 946, 1043, 949,
	952, 994, 906, 972, 396, 943, 899, 931, 901, 938,
	902, 929, 960, 258, 926, 1017, 976, 1032, 349, 255,
	908, 932, 410, 948, 197, 996, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	1039, 353, 982, 0, 472, 381, 0, 0, 0, 962,
	1021, 970, 1008, 957, 995, 916, 981, 1034, 944, 991,
	1035, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 940, 988,
	1029, 941, 990, 253, 306, 260, 252, 497, 1040, 1020,
	905, 969, 1028, 0, 0, 1047, 1031, 964, 0, 993,
	0, 1046, 900, 984, 0, 903, 907, 1042, 1024, 935,
	263, 0, 0, 0, 0, 0, 0, 0, 961, 971,
	1005, 1009, 955, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 980, 0, 0, 0, 912, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 915, 0, 934, 1006, 0,
	898, 285, 909, 382, 245, 0, 1013, 1023, 956, 537,
	1027, 954, 953, 1000, 913, 1019, 947, 348, 911, 315,
	192, 216, 0, 945, 392, 437, 449, 1018, 930, 939,
	243, 937, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 979, 998, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 1490, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 910, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 925, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 1014, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 897,
	891, 890, 318, 355, 1003, 1045, 405, 448, 231, 518,
	471, 920, 924, 918, 985, 919, 974, 975, 921, 1036,
	1037, 1038, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 1007, 914, 0, 922, 923, 1016, 1025, 1026, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 978, 191, 212,
	351, 1041, 430, 276, 553, 528, 523, 198, 214, 917,
	250, 928, 936, 0, 942, 950, 951, 963, 965, 966,
	967, 968, 986, 987, 989, 997, 999, 1002, 1004, 1011,
	1022, 1044, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 977, 983, 362, 269, 292, 305,
	992, 527, 477, 218, 442, 278, 241, 1010, 1012, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 973, 1001, 358, 493, 494, 301, 377,
	0, 0, 1030, 1015, 492, 0, 958, 1033, 927, 946,
	1043, 949, 952, 994, 906, 972, 396, 943, 899, 931,
	901, 938, 902, 929, 960, 258, 926, 1017, 976, 1032,
	349, 255, 908, 932, 410, 948, 197, 996, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 1039, 353, 982, 0, 472, 381, 0, 0,
	0, 962, 1021, 970, 1008, 957, 995, 916, 981, 1034,
	944, 991, 1035, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	940, 988, 1029, 941, 990, 253, 306, 260, 252, 497,
	1040, 1020, 905, 969, 1028, 0, 0, 1047, 1031, 964,
	0, 993, 0, 1046, 900, 984, 0, 903, 907, 1042,
	1024, 935, 263, 0, 0, 0, 0, 0, 0, 0,
	961, 971, 1005, 1009, 955, 0, 0, 0, 0, 0,
	0, 0, 933, 0, 980, 0, 0, 0, 912, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 915, 0, 934,
	1006, 0, 898, 285, 909, 382, 245, 0, 1013, 1023,
	956, 537, 1027, 954, 953, 1000, 913, 1019, 947, 348,
	911, 315, 192, 216, 0, 945, 392, 437, 449, 1018,
	930, 939, 243, 937, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 979, 998, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 888, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	910, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 925, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 1014, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 897, 891, 890, 318, 355, 1003, 1045, 405, 448,
	231, 518, 471, 920, 924, 918, 985, 919, 974, 975,
	921, 1036, 1037, 1038, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 1007, 914, 0, 922, 923, 1016, 1025,
	1026, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 978,
	191, 212, 351, 1041, 430, 276, 553, 528, 523, 198,
	214, 917, 250, 928, 936, 0, 942, 950, 951, 963,
	965, 966, 967, 968, 986, 987, 989, 997, 999, 1002,
	1004, 1011, 1022, 1044, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 977, 983, 362, 269,
	292, 305, 992, 527, 477, 218, 442, 278, 241, 1010,
	1012, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 973, 1001, 358, 493, 494,
	301, 377, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 657, 0, 0, 0, 258, 662, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 668, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 781,
	789, 790, 791, 792, 793, 782, 784, 0, 0, 229,
	783, 236, 695, 697, 696, 711, 712, 713, 714, 715,
	716, 717, 693, 786, 794, 795, 0, 253, 306, 260,
	252, 497, 0, 0, 1876, 1877, 1878, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 640, 654, 0,
	667, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 0, 0, 0, 0, 745, 0, 653, 0,
	0, 661, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	744, 0, 0, 537, 0, 0, 742, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 706, 707, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 752, 743, 672, 756, 674,
	753, 754, 669, 670, 673, 755, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 746, 660, 659, 0, 666,
	0, 691, 692, 694, 698, 699, 700, 708, 709, 710,
	718, 720, 721, 719, 722, 723, 724, 727, 728, 729,
	730, 725, 726, 731, 675, 679, 676, 677, 678, 690,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	766, 767, 768, 769, 770, 771, 701, 705, 704, 702,
	703, 658, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 757, 250, 758, 0, 0, 762, 0,
	0, 0, 764, 763, 0, 765, 735, 734, 0, 0,
	759, 760, 0, 761, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 772,
	773, 774, 775, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 788, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	657, 0, 0, 0, 258, 662, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 668, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 664, 665, 0, 0, 0, 0, 0, 0,
	2017, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 781, 789, 790, 791,
	792, 793, 782, 784, 0, 0, 229, 783, 236, 695,
	697, 696, 711, 712, 713, 714, 715, 716, 717, 693,
	786, 794, 795, 2018, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 640, 654, 0, 667, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 0,
	0, 0, 0, 745, 0, 653, 0, 0, 661, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 744, 0, 0,
	537, 0, 0, 742, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 706, 707, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 752, 743, 672, 756, 674, 753, 754, 669,
	670, 673, 755, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 746, 660, 659, 0, 666, 0, 691, 692,
	694, 698, 699, 700, 708, 709, 710, 718, 720, 721,
	719, 722, 723, 724, 727, 728, 729, 730, 725, 726,
	731, 675, 679, 676, 677, 678, 690, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 766, 767, 768,
	769, 770, 771, 701, 705, 704, 702, 703, 658, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	757, 250, 758, 0, 0, 762, 0, 0, 0, 764,
	763, 0, 765, 735, 734, 0, 0, 759, 760, 0,
	761, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 772, 773, 774, 775,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 788, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 0, 358, 493, 494, 301,
	377, 0, 0, 0, 78, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 657, 0, 0, 0, 258, 662, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 668, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 87, 0, 0, 188, 189, 190, 781, 789,
	790, 791, 792, 793, 782, 784, 0, 0, 229, 783,
	236, 695, 697, 696, 711, 712, 713, 714, 715, 716,
	717, 693, 786, 794, 795, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 640, 654, 0, 667,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 0, 0, 0, 0, 745, 0, 653, 0, 0,
	661, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 744,
	0, 0, 537, 0, 0, 742, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 706, 707, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 752, 743, 672, 756, 674, 753,
	754, 669, 670, 673, 755, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 746, 660, 659, 0, 666, 0,
	691, 692, 694, 698, 699, 700, 708, 709, 710, 718,
	720, 721, 719, 722, 723, 724, 727, 728, 729, 730,
	725, 726, 731, 675, 679, 676, 677, 678, 690, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 766,
	767, 768, 769, 770, 771, 701, 705, 704, 702, 703,
	658, 191, 212, 351, 86, 430, 276, 553, 528, 523,
	198, 214, 757, 250, 758, 0, 0, 762, 0, 0,
	0, 764, 763, 0, 765, 735, 734, 0, 0, 759,
	760, 0, 761, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 772, 773,
	774, 775, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	788, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 657,
	0, 0, 0, 258, 662, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	668, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 664, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 87,
	0, 0, 188, 189, 190, 781, 789, 790, 791, 792,
	793, 782, 784, 0, 0, 229, 783, 236, 695, 697,
	696, 711, 712, 713, 714, 715, 716, 717, 693, 786,
	794, 795, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 640, 654, 0, 667, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 0, 0,
	0, 0, 745, 0, 653, 0, 0, 661, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 744, 0, 0, 537,
	0, 0, 742, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 3275, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	706, 707, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 752, 743, 672, 756, 674, 753, 754, 669, 670,
	673, 755, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 746, 660, 659, 0, 666, 0, 691, 692, 694,
	698, 699, 700, 708, 709, 710, 718, 720, 721, 719,
	722, 723, 724, 727, 728, 729, 730, 725, 726, 731,
	675, 679, 676, 677, 678, 690, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 766, 767, 768, 769,
	770, 771, 701, 705, 704, 702, 703, 658, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 757,
	250, 758, 0, 0, 762, 0, 0, 0, 764, 763,
	0, 765, 735, 734, 0, 0, 759, 760, 0, 761,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 772, 773, 774, 775, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 788, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 657, 0, 0, 0,
	258, 662, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 668, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 664, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 87, 0, 1457, 188,
	189, 190, 781, 789, 790, 791, 792, 793, 782, 784,
	0, 0, 229, 783, 236, 695, 697, 696, 711, 712,
	713, 714, 715, 716, 717, 693, 786, 794, 795, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	640, 654, 0, 667, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 0, 0, 0, 0, 745,
	0, 653, 0, 0, 661, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 744, 0, 0, 537, 0, 0, 742,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 706, 707, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 752, 743,
	672, 756, 674, 753, 754, 669, 670, 673, 755, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 746, 660,
	659, 0, 666, 0, 691, 692, 694, 698, 699, 700,
	708, 709, 710, 718, 720, 721, 719, 722, 723, 724,
	727, 728, 729, 730, 725, 726, 731, 675, 679, 676,
	677, 678, 690, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 766, 767, 768, 769, 770, 771, 701,
	705, 704, 702, 703, 658, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 757, 250, 758, 0,
	0, 762, 0, 0, 0, 764, 763, 0, 765, 735,
	734, 0, 0, 759, 760, 0, 761, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 772, 773, 774, 775, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 788, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 657, 0, 0, 0, 258, 662, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 668, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 781,
	789, 790, 791, 792, 793, 782, 784, 0, 0, 229,
	783, 236, 695, 697, 696, 711, 712, 713, 714, 715,
	716, 717, 693, 786, 794, 795, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 640, 654, 0,
	667, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 877, 0, 0, 0, 745, 0, 653, 0,
	0, 661, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	744, 0, 0, 537, 0, 0, 742, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 706, 707, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 752, 743, 672, 756, 674,
	753, 754, 669, 670, 673, 755, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 746, 660, 659, 0, 666,
	0, 691, 692, 694, 698, 699, 700, 708, 709, 710,
	718, 720, 721, 719, 722, 723, 724, 727, 728, 729,
	730, 725, 726, 731, 675, 679, 676, 677, 678, 690,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	766, 767, 768, 769, 770, 771, 701, 705, 704, 702,
	703, 658, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 757, 250, 758, 0, 0, 762, 0,
	0, 0, 764, 763, 0, 765, 735, 734, 0, 0,
	759, 760, 0, 761, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 772,
	773, 774, 775, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 788, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	657, 0, 0, 0, 258, 662, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 668, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 664, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 781, 789, 790, 791,
	792, 793, 782, 784, 0, 0, 229, 783, 236, 695,
	697, 696, 711, 712, 713, 714, 715, 716, 717, 693,
	786, 794, 795, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 640, 654, 0, 667, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 0,
	0, 0, 0, 745, 0, 653, 0, 0, 661, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 744, 0, 0,
	537, 0, 0, 742, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 706, 707, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 752, 743, 672, 756, 674, 753, 754, 669,
	670, 673, 755, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 746, 660, 659, 0, 666, 0, 691, 692,
	694, 698, 699, 700, 708, 709, 710, 718, 720, 721,
	719, 722, 723, 724, 727, 728, 729, 730, 725, 726,
	731, 675, 679, 676, 677, 678, 690, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 766, 767, 768,
	769, 770, 771, 701, 705, 704, 702, 703, 658, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	757, 250, 758, 0, 0, 762, 0, 0, 0, 764,
	763, 0, 765, 735, 734, 0, 0, 759, 760, 0,
	761, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 772, 773, 774, 775,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 788, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 657, 0, 0,
	0, 258, 662, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 668, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 664,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 87, 0, 0,
	188, 189, 190, 781, 789, 790, 791, 792, 793, 782,
	784, 0, 0, 229, 783, 236, 695, 697, 696, 711,
	712, 713, 714, 715, 716, 717, 693, 786, 794, 795,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 667, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 0, 0, 0, 0,
	745, 0, 653, 0, 0, 661, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 744, 0, 0, 537, 0, 0,
	742, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 706, 707,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 752,
	743, 672, 756, 674, 753, 754, 669, 670, 673, 755,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 746,
	660, 659, 0, 666, 0, 691, 692, 694, 698, 699,
	700, 708, 709, 710, 718, 720, 721, 719, 722, 723,
	724, 727, 728, 729, 730, 725, 726, 731, 675, 679,
	676, 677, 678, 690, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 766, 767, 768, 769, 770, 771,
	701, 705, 704, 702, 703, 658, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 757, 250, 758,
	0, 0, 762, 0, 0, 0, 764, 763, 0, 765,
	735, 734, 0, 0, 759, 760, 0, 761, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 772, 773, 774, 775, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 788, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 789, 790, 0, 0, 0, 0, 1806, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	1097, 537, 0, 0, 0, 0, 0, 1094, 1095, 348,
	1055, 315, 192, 216, 1088, 1092, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 0, 358, 493, 494,
	301, 377, 0, 0, 0, 78, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 86, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 1476, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 1478,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 1480, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	1271, 0, 1272, 1273, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 1418, 1421, 0, 0, 0, 0, 1417,
	1420, 0, 0, 229, 1416, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 0, 358, 493, 494, 301, 377, 0, 0,
	0, 78, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 87,
	0, 1457, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 86, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 87, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 1956, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 1954, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 1055,
	315, 192, 216, 1053, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 1956, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 1457, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 3183, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 2334, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	0, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2319, 0, 0, 0, 2320, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 1501, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 3309, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 3183, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	1757, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 1626, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 1624,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 1622, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 287,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 1620, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	1618, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 1614, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 1612, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 1610, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 377,
	358, 493, 494, 301, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	349, 255, 0, 0, 410, 0, 197, 0, 462, 242,
	359, 356, 500, 270, 261, 257, 240, 302, 366, 408,
	482, 402, 0, 353, 0, 0, 472, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 238, 310, 196, 393, 473, 274,
	0, 1585, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	334, 343, 342, 323, 324, 326, 328, 333, 340, 346,
	0, 0, 0, 0, 0, 253, 306, 260, 252, 497,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 382, 245, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 315, 192, 216, 0, 0, 392, 437, 449, 0,
	0, 0, 243, 0, 447, 406, 516, 224, 272, 434,
	412, 445, 419, 275, 0, 0, 446, 354, 502, 428,
	513, 538, 539, 251, 386, 525, 486, 533, 552, 217,
	248, 400, 479, 519, 469, 378, 498, 499, 314, 468,
	283, 195, 352, 544, 215, 455, 233, 222, 504, 522,
	277, 432, 204, 481, 511, 230, 459, 0, 0, 554,
	206, 509, 478, 374, 311, 312, 205, 0, 433, 256,
	281, 246, 395, 506, 507, 244, 555, 219, 532, 211,
	0, 531, 388, 501, 510, 375, 364, 210, 508, 373,
	363, 319, 338, 339, 268, 294, 426, 357, 427, 295,
	384, 383, 385, 199, 520, 0, 200, 0, 474, 521,
	556, 225, 226, 228, 0, 267, 271, 279, 282, 290,
	291, 300, 350, 399, 425, 421, 429, 0, 496, 514,
	526, 536, 542, 543, 545, 546, 547, 548, 549, 551,
	550, 387, 298, 470, 318, 355, 0, 0, 405, 448,
	231, 518, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 365, 461, 515, 320, 332, 335, 325, 344,
	0, 345, 321, 322, 327, 329, 330, 331, 336, 337,
	341, 347, 239, 202, 371, 379, 495, 299, 207, 208,
	209, 488, 489, 490, 491, 529, 530, 534, 438, 439,
	440, 441, 280, 524, 296, 444, 443, 316, 317, 0,
	191, 212, 351, 0, 430, 276, 553, 528, 523, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 293, 297, 303, 304,
	307, 313, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 431, 436, 450, 451, 452, 453,
	454, 457, 458, 463, 464, 465, 466, 467, 475, 476,
	480, 503, 505, 517, 535, 540, 456, 288, 289, 423,
	424, 287, 512, 541, 0, 360, 0, 0, 362, 269,
	292, 305, 0, 527, 477, 218, 442, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 309, 372, 380,
	409, 414, 284, 259, 235, 435, 232, 460, 483, 484,
	485, 487, 376, 254, 413, 0, 377, 358, 493, 494,
	301, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 1485, 258, 0, 0, 0, 0, 349, 255, 0,
	0, 410, 0, 197, 0, 462, 242, 359, 356, 500,
	270, 261, 257, 240, 302, 366, 408, 482, 402, 0,
	353, 0, 0, 472, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 238, 310, 196, 393, 473, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 334, 343, 342,
	323, 324, 326, 328, 333, 340, 346, 0, 0, 0,
	0, 0, 253, 306, 260, 252, 497, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 382, 245, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 315, 192,
	216, 0, 0, 392, 437, 449, 0, 0, 0, 243,
	0, 447, 406, 516, 224, 272, 434, 412, 445, 419,
	275, 0, 0, 446, 354, 502, 428, 513, 538, 539,
	251, 386, 525, 486, 533, 552, 217, 248, 400, 479,
	519, 469, 378, 498, 499, 314, 468, 283, 195, 352,
	544, 215, 455, 233, 222, 504, 522, 277, 432, 204,
	481, 511, 230, 459, 0, 0, 554, 206, 509, 478,
	374, 311, 312, 205, 0, 433, 256, 281, 246, 395,
	506, 507, 244, 555, 219, 532, 211, 0, 531, 388,
	501, 510, 375, 364, 210, 508, 373, 363, 319, 338,
	339, 268, 294, 426, 357, 427, 295, 384, 383, 385,
	199, 520, 0, 200, 0, 474, 521, 556, 225, 226,
	228, 0, 267, 271, 279, 282, 290, 291, 300, 350,
	399, 425, 421, 429, 0, 496, 514, 526, 536, 542,
	543, 545, 546, 547, 548, 549, 551, 550, 387, 298,
	470, 318, 355, 0, 0, 405, 448, 231, 518, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 365,
	461, 515, 320, 332, 335, 325, 344, 0, 345, 321,
	322, 327, 329, 330, 331, 336, 337, 341, 347, 239,
	202, 371, 379, 495, 299, 207, 208, 209, 488, 489,
	490, 491, 529, 530, 534, 438, 439, 440, 441, 280,
	524, 296, 444, 443, 316, 317, 0, 191, 212, 351,
	0, 430, 276, 553, 528, 523, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 293, 297, 303, 304, 307, 313, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 431, 436, 450, 451, 452, 453, 454, 457, 458,
	463, 464, 465, 466, 467, 475, 476, 480, 503, 505,
	517, 535, 540, 456, 288, 289, 423, 424, 287, 512,
	541, 0, 360, 0, 0, 362, 269, 292, 305, 0,
	527, 477, 218, 442, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 309, 372, 380, 409, 414, 284,
	259, 235, 435, 232, 460, 483, 484, 485, 487, 376,
	254, 413, 0, 377, 358, 493, 494, 301, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 349, 255, 0, 0, 410, 0,
	197, 0, 462, 242, 359, 356, 500, 270, 261, 257,
	240, 302, 366, 408, 482, 402, 0, 353, 0, 0,
	472, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 238, 310,
	196, 393, 473, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 334, 343, 342, 323, 324, 326,
	328, 333, 340, 346, 0, 0, 0, 0, 0, 253,
	306, 260, 252, 497, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 382,
	245, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 315, 192, 216, 0, 0,
	392, 437, 449, 0, 0, 0, 243, 0, 447, 406,
	516, 224, 272, 434, 412, 445, 419, 275, 0, 0,
	446, 354, 502, 428, 513, 538, 539, 251, 386, 525,
	486, 533, 552, 217, 248, 400, 479, 519, 469, 378,
	498, 499, 314, 468, 283, 195, 352, 544, 215, 455,
	233, 222, 504, 522, 277, 432, 204, 481, 511, 230,
	459, 0, 0, 554, 206, 509, 478, 374, 311, 312,
	205, 0, 433, 256, 281, 246, 395, 506, 507, 244,
	555, 219, 532, 211, 0, 531, 388, 501, 510, 375,
	364, 210, 508, 373, 363, 319, 338, 339, 268, 294,
	426, 357, 427, 295, 384, 383, 385, 199, 520, 0,
	200, 0, 474, 521, 556, 225, 226, 228, 0, 267,
	271, 279, 282, 290, 291, 300, 350, 399, 425, 421,
	429, 0, 496, 514, 526, 536, 542, 543, 545, 546,
	547, 548, 549, 551, 550, 387, 298, 470, 318, 355,
	0, 0, 405, 448, 231, 518, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 365, 461, 515, 320,
	332, 335, 325, 344, 0, 345, 321, 322, 327, 329,
	330, 331, 336, 337, 341, 347, 239, 202, 371, 379,
	495, 299, 207, 208, 209, 488, 489, 490, 491, 529,
	530, 534, 438, 439, 440, 441, 280, 524, 296, 444,
	443, 316, 317, 0, 191, 212, 351, 0, 430, 276,
	553, 528, 523, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	293, 297, 303, 304, 307, 313, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 431, 436,
	450, 451, 452, 453, 454, 457, 458, 463, 464, 465,
	466, 467, 475, 476, 480, 503, 505, 517, 535, 540,
	456, 288, 289, 423, 424, 287, 512, 541, 0, 360,
	0, 0, 362, 269, 292, 305, 0, 527, 477, 218,
	442, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 309, 372, 380, 409, 414, 284, 259, 235, 435,
	232, 460, 483, 484, 485, 487, 376, 254, 413, 0,
	377, 358, 493, 494, 301, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 349, 255, 0, 0, 410, 0, 197, 0, 462,
	242, 359, 356, 500, 270, 261, 257, 240, 302, 366,
	408, 482, 402, 0, 353, 0, 0, 472, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 238, 310, 196, 393, 473,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 334, 343, 342, 323, 324, 326, 328, 333, 340,
	346, 0, 0, 0, 0, 0, 253, 306, 260, 252,
	497, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 382, 245, 0, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 315, 192, 216, 0, 0, 392, 437, 449,
	0, 0, 0, 243, 0, 447, 406, 516, 224, 272,
	434, 412, 445, 419, 275, 0, 0, 446, 354, 502,
	428, 513, 538, 539, 251, 386, 525, 486, 533, 552,
	217, 248, 400, 479, 519, 469, 378, 498, 499, 314,
	468, 283, 195, 352, 544, 215, 455, 233, 222, 504,
	522, 277, 432, 204, 481, 511, 230, 459, 0, 0,
	554, 206, 509, 478, 374, 311, 312, 205, 0, 433,
	256, 281, 246, 395, 506, 507, 244, 555, 219, 532,
	211, 0, 531, 388, 501, 510, 375, 364, 210, 508,
	373, 363, 319, 338, 339, 268, 294, 426, 357, 427,
	295, 384, 383, 385, 199, 520, 0, 200, 0, 474,
	521, 556, 225, 226, 228, 0, 267, 271, 279, 282,
	290, 291, 300, 350, 399, 425, 421, 429, 0, 496,
	514, 526, 536, 542, 543, 545, 546, 547, 548, 549,
	551, 550, 387, 298, 470, 318, 355, 0, 0, 405,
	448, 231, 518, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 365, 461, 515, 320, 332, 335, 325,
	344, 0, 345, 321, 322, 327, 329, 330, 331, 336,
	337, 341, 347, 239, 202, 371, 379, 495, 299, 207,
	208, 209, 488, 489, 490, 491, 529, 530, 534, 438,
	439, 440, 441, 280, 524, 296, 444, 443, 316, 317,
	0, 191, 212, 351, 0, 430, 276, 553, 528, 523,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 293, 297, 303,
	304, 307, 313, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 431, 436, 450, 451, 452,
	453, 454, 457, 458, 463, 464, 465, 466, 467, 475,
	476, 480, 503, 505, 517, 535, 540, 456, 288, 289,
	423, 424, 287, 512, 541, 0, 360, 0, 0, 362,
	269, 292, 305, 0, 527, 477, 218, 442, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 309, 372,
	380, 409, 414, 284, 259, 235, 435, 232, 460, 483,
	484, 485, 487, 376, 254, 413, 0, 377, 358, 493,
	494, 301, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 349, 255,
	0, 0, 410, 0, 197, 0, 462, 242, 359, 356,
	500, 270, 261, 257, 240, 302, 366, 408, 482, 402,
	0, 353, 0, 0, 472, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 238, 310, 196, 393, 473, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 334, 343,
	342, 323, 324, 326, 328, 333, 340, 346, 0, 0,
	0, 0, 0, 253, 306, 260, 252, 497, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	0, 285, 0, 382, 245, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 315,
	192, 216, 0, 0, 392, 437, 449, 0, 0, 0,
	243, 0, 447, 406, 516, 224, 272, 434, 412, 445,
	419, 275, 0, 0, 446, 354, 502, 428, 513, 538,
	539, 251, 386, 525, 486, 533, 552, 217, 248, 400,
	479, 519, 469, 378, 498, 499, 314, 468, 283, 195,
	352, 544, 215, 455, 233, 222, 504, 522, 277, 432,
	204, 481, 511, 230, 459, 0, 0, 554, 206, 509,
	478, 374, 311, 312, 205, 0, 433, 256, 281, 246,
	395, 506, 507, 244, 555, 219, 532, 211, 0, 531,
	388, 501, 510, 375, 364, 210, 508, 373, 363, 319,
	338, 339, 268, 294, 426, 357, 427, 295, 384, 383,
	385, 199, 520, 0, 200, 0, 474, 521, 556, 225,
	226, 228, 0, 267, 271, 279, 282, 290, 291, 300,
	350, 399, 425, 421, 429, 0, 496, 514, 526, 536,
	542, 543, 545, 546, 547, 548, 549, 551, 550, 387,
	298, 470, 318, 355, 0, 0, 405, 448, 231, 518,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	365, 461, 515, 320, 332, 335, 325, 344, 0, 345,
	321, 322, 327, 329, 330, 331, 336, 337, 341, 347,
	239, 202, 371, 379, 495, 299, 207, 208, 209, 488,
	489, 490, 491, 529, 530, 534, 438, 439, 440, 441,
	280, 524, 296, 444, 443, 316, 317, 0, 191, 212,
	351, 0, 430, 276, 553, 528, 523, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 293, 297, 303, 304, 307, 313,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 431, 436, 450, 451, 452, 453, 454, 457,
	458, 463, 464, 465, 466, 467, 475, 476, 480, 503,
	505, 517, 535, 540, 456, 288, 289, 423, 424, 631,
	512, 541, 0, 360, 0, 0, 362, 269, 292, 305,
	0, 527, 477, 218, 442, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 309, 372, 380, 409, 414,
	284, 259, 235, 435, 232, 460, 483, 484, 485, 487,
	376, 254, 413, 0, 377, 358, 493, 494, 301, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 349, 255, 0, 0, 410,
	0, 197, 0, 462, 242, 359, 356, 500, 270, 261,
	257, 240, 302, 366, 408, 482, 402, 0, 353, 0,
	0, 472, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 238,
	310, 196, 393, 473, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 334, 343, 342, 323, 324,
	326, 328, 333, 340, 346, 0, 0, 0, 0, 0,
	253, 306, 260, 252, 497, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	382, 245, 0, 0, 578, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 315, 192, 216, 0,
	0, 392, 437, 449, 0, 0, 0, 243, 0, 447,
	406, 516, 224, 272, 434, 412, 445, 419, 275, 0,
	0, 446, 354, 502, 428, 513, 538, 539, 251, 386,
	525, 486, 533, 552, 217, 248, 400, 479, 519, 469,
	378, 498, 499, 314, 468, 283, 195, 352, 544, 215,
	455, 233, 222, 504, 522, 277, 432, 204, 481, 511,
	230, 459, 0, 0, 554, 206, 509, 478, 374, 311,
	312, 205, 0, 433, 256, 281, 246, 395, 506, 507,
	244, 555, 219, 532, 211, 0, 531, 388, 501, 510,
	375, 364, 210, 508, 373, 363, 319, 338, 339, 268,
	294, 426, 357, 427, 295, 384, 383, 385, 199, 520,
	0, 200, 0, 474, 521, 556, 225, 226, 228, 0,
	267, 271, 279, 282, 290, 291, 300, 350, 399, 425,
	421, 429, 0, 496, 514, 526, 536, 542, 543, 545,
	546, 547, 548, 549, 551, 550, 387, 298, 470, 318,
	355, 0, 0, 405, 448, 231, 518, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 365, 461, 515,
	320, 332, 335, 325, 344, 0, 345, 321, 322, 327,
	329, 330, 331, 336, 337, 341, 347, 239, 202, 371,
	379, 495, 299, 207, 208, 209, 488, 489, 490, 491,
	529, 530, 534, 438, 439, 440, 441, 280, 524, 296,
	444, 443, 316, 317, 0, 191, 212, 351, 0, 430,
	276, 553, 528, 523, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 293, 297, 303, 304, 307, 313, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 431,
	436, 450, 451, 452, 453, 454, 457, 458, 463, 464,
	465, 466, 467, 475, 476, 480, 503, 505, 517, 535,
	540, 456, 288, 289, 423, 424, 287, 512, 541, 0,
	360, 0, 0, 362, 269, 292, 305, 0, 527, 477,
	218, 442, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 309, 372, 380, 409, 414, 284, 259, 235,
	435, 232, 460, 483, 484, 485, 487, 376, 254, 413,
	0, 377, 358, 493, 494, 301, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 349, 255, 0, 0, 410, 0, 197, 0,
	462, 242, 359, 356, 500, 270, 261, 257, 240, 302,
	366, 408, 482, 402, 0, 353, 0, 0, 472, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 238, 310, 196, 393,
	473, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 334, 343, 342, 323, 324, 326, 328, 333,
	340, 346, 0, 0, 0, 0, 0, 253, 306, 260,
	252, 497, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 382, 245, 0,
	0, 0, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 315, 192, 216, 0, 0, 392, 437,
	449, 0, 0, 0, 243, 0, 447, 406, 516, 224,
	272, 434, 412, 445, 419, 275, 0, 0, 446, 354,
	502, 428, 513, 538, 539, 251, 386, 525, 486, 533,
	552, 217, 248, 400, 479, 519, 469, 378, 498, 499,
	314, 468, 283, 195, 352, 544, 215, 455, 233, 222,
	504, 522, 277, 432, 204, 481, 511, 230, 459, 0,
	0, 554, 206, 509, 478, 374, 311, 312, 205, 0,
	433, 256, 281, 246, 395, 506, 507, 244, 555, 219,
	532, 211, 0, 531, 388, 501, 510, 375, 364, 210,
	508, 373, 363, 319, 338, 339, 268, 294, 426, 357,
	427, 295, 384, 383, 385, 199, 520, 0, 200, 0,
	474, 521, 556, 225, 226, 228, 0, 267, 271, 279,
	282, 290, 291, 300, 350, 399, 425, 421, 429, 0,
	496, 514, 526, 536, 542, 543, 545, 546, 547, 548,
	549, 551, 550, 387, 298, 470, 318, 355, 0, 0,
	405, 448, 231, 518, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 365, 461, 515, 320, 332, 335,
	325, 344, 0, 345, 321, 322, 327, 329, 330, 331,
	336, 337, 341, 347, 239, 202, 371, 379, 495, 299,
	207, 208, 209, 488, 489, 490, 491, 529, 530, 534,
	438, 439, 440, 441, 280, 524, 296, 444, 443, 316,
	317, 0, 191, 212, 351, 0, 430, 276, 553, 528,
	523, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 293, 297,
	303, 304, 307, 313, 361, 367, 368, 369, 370, 3317,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 431, 436, 450, 451,
	452, 453, 454, 457, 458, 463, 464, 465, 466, 467,
	475, 476, 480, 503, 505, 517, 535, 540, 456, 288,
	289, 423, 424, 287, 512, 541, 0, 360, 0, 0,
	362, 269, 292, 305, 0, 527, 477, 218, 442, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 309,
	372, 380, 409, 414, 284, 259, 235, 435, 232, 460,
	483, 484, 485, 487, 376, 254, 413, 0, 377, 358,
	493, 494, 301, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 349,
	255, 0, 0, 410, 0, 197, 0, 462, 242, 359,
	356, 500, 270, 261, 257, 240, 302, 366, 408, 482,
	402, 0, 353, 0, 0, 472, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 238, 310, 196, 393, 473, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 334,
	343, 342, 323, 324, 326, 328, 333, 340, 346, 0,
	0, 0, 0, 0, 253, 306, 260, 252, 497, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 382, 245, 0, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	315, 192, 216, 0, 0, 392, 437, 449, 0, 0,
	0, 243, 0, 447, 406, 516, 224, 272, 434, 412,
	445, 419, 275, 0, 0, 446, 354, 502, 428, 513,
	538, 539, 251, 386, 525, 486, 533, 552, 217, 248,
	400, 479, 519, 469, 378, 498, 499, 314, 468, 283,
	195, 352, 544, 215, 455, 233, 222, 504, 522, 277,
	432, 204, 481, 511, 230, 459, 0, 0, 554, 206,
	509, 478, 374, 311, 312, 205, 0, 433, 256, 281,
	246, 395, 506, 507, 244, 555, 219, 532, 211, 0,
	531, 388, 501, 510, 375, 364, 210, 508, 373, 363,
	319, 338, 339, 268, 294, 426, 357, 427, 295, 384,
	383, 385, 199, 520, 0, 200, 0, 474, 521, 556,
	225, 226, 228, 0, 267, 271, 279, 282, 290, 291,
	300, 350, 399, 425, 421, 429, 0, 496, 514, 526,
	536, 542, 543, 545, 546, 547, 548, 549, 551, 550,
	387, 298, 470, 318, 355, 0, 0, 405, 448, 231,
	518, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 365, 461, 515, 320, 332, 335, 325, 344, 0,
	345, 321, 322, 327, 329, 330, 331, 336, 337, 341,
	347, 239, 202, 371, 379, 495, 299, 207, 208, 209,
	488, 489, 490, 491, 529, 530, 534, 438, 439, 440,
	441, 280, 524, 296, 444, 443, 316, 317, 0, 191,
	212, 351, 0, 430, 276, 553, 528, 523, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 293, 297, 303, 304, 307,
	313, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 431, 436, 450, 451, 452, 453, 454,
	457, 458, 463, 464, 465, 466, 467, 475, 476, 480,
	503, 505, 517, 535, 540, 456, 288, 289, 423, 424,
	287, 512, 541, 0, 360, 0, 0, 362, 269, 292,
	305, 0, 527, 477, 218, 442, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 309, 372, 380, 409,
	414, 284, 259, 235, 435, 232, 460, 483, 484, 485,
	487, 376, 254, 413, 0, 377, 358, 493, 494, 301,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 349, 255, 0, 0,
	410, 0, 197, 0, 462, 242, 359, 356, 500, 270,
	261, 257, 240, 302, 366, 408, 482, 402, 0, 353,
	0, 0, 472, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	238, 310, 196, 393, 473, 274, 0, 0, 0, 0,
	188, 2844, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 334, 343, 342, 323,
	324, 326, 328, 333, 340, 346, 0, 0, 0, 0,
	0, 253, 306, 260, 252, 497, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 382, 245, 0, 0, 0, 0, 537, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 315, 192, 216,
	0, 0, 392, 437, 449, 0, 0, 0, 243, 0,
	447, 406, 516, 224, 272, 434, 412, 445, 419, 275,
	0, 0, 446, 354, 502, 428, 513, 538, 539, 251,
	386, 525, 486, 533, 552, 217, 248, 400, 479, 519,
	469, 378, 498, 499, 314, 468, 283, 195, 352, 544,
	215, 455, 233, 222, 504, 522, 277, 432, 204, 481,
	511, 230, 459, 0, 0, 554, 206, 509, 478, 374,
	311, 312, 205, 0, 433, 256, 281, 246, 395, 506,
	507, 244, 555, 219, 532, 211, 0, 531, 388, 501,
	510, 375, 364, 210, 508, 373, 363, 319, 338, 339,
	268, 294, 426, 357, 427, 295, 384, 383, 385, 199,
	520, 0, 200, 0, 474, 521, 556, 225, 226, 228,
	0, 267, 271, 279, 282, 290, 291, 300, 350, 399,
	425, 421, 429, 0, 496, 514, 526, 536, 542, 543,
	545, 546, 547, 548, 549, 551, 550, 387, 298, 470,
	318, 355, 0, 0, 405, 448, 231, 518, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 365, 461,
	515, 320, 332, 335, 325, 344, 0, 345, 321, 322,
	327, 329, 330, 331, 336, 337, 341, 347, 239, 202,
	371, 379, 495, 299, 207, 208, 209, 488, 489, 490,
	491, 529, 530, 534, 438, 439, 440, 441, 280, 524,
	296, 444, 443, 316, 317, 0, 191, 212, 351, 0,
	430, 276, 553, 528, 523, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 293, 297, 303, 304, 307, 313, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	431, 436, 450, 451, 452, 453, 454, 457, 458, 463,
	464, 465, 466, 467, 475, 476, 480, 503, 505, 517,
	535, 540, 456, 288, 289, 423, 424, 287, 512, 541,
	0, 360, 0, 0, 362, 269, 292, 305, 0, 527,
	477, 218, 442, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 309, 372, 380, 409, 414, 284, 259,
	235, 435, 232, 460, 483, 484, 485, 487, 376, 254,
	413, 0, 377, 358, 493, 494, 301, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 349, 255, 0, 0, 410, 0, 197,
	0, 462, 242, 359, 356, 500, 270, 261, 257, 240,
	302, 366, 408, 482, 402, 0, 353, 0, 0, 472,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 238, 310, 196,
	393, 473, 274, 0, 0, 0, 0, 188, 2315, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 334, 343, 342, 323, 324, 326, 328,
	333, 340, 346, 0, 0, 0, 0, 0, 253, 306,
	260, 252, 497, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 382, 245,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 315, 192, 216, 0, 0, 392,
	437, 449, 0, 0, 0, 243, 0, 447, 406, 516,
	224, 272, 434, 412, 445, 419, 275, 0, 0, 446,
	354, 502, 428, 513, 538, 539, 251, 386, 525, 486,
	533, 552, 217, 248, 400, 479, 519, 469, 378, 498,
	499, 314, 468, 283, 195, 352, 544, 215, 455, 233,
	222, 504, 522, 277, 432, 204, 481, 511, 230, 459,
	0, 0, 554, 206, 509, 478, 374, 311, 312, 205,
	0, 433, 256, 281, 246, 395, 506, 507, 244, 555,
	219, 532, 211, 0, 531, 388, 501, 510, 375, 364,
	210, 508, 373, 363, 319, 338, 339, 268, 294, 426,
	357, 427, 295, 384, 383, 385, 199, 520, 0, 200,
	0, 474, 521, 556, 225, 226, 228, 0, 267, 271,
	279, 282, 290, 291, 300, 350, 399, 425, 421, 429,
	0, 496, 514, 526, 536, 542, 543, 545, 546, 547,
	548, 549, 551, 550, 387, 298, 470, 318, 355, 0,
	0, 405, 448, 231, 518, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 365, 461, 515, 320, 332,
	335, 325, 344, 0, 345, 321, 322, 327, 329, 330,
	331, 336, 337, 341, 347, 239, 202, 371, 379, 495,
	299, 207, 208, 209, 488, 489, 490, 491, 529, 530,
	534, 438, 439, 440, 441, 280, 524, 296, 444, 443,
	316, 317, 0, 191, 212, 351, 0, 430, 276, 553,
	528, 523, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 293,
	297, 303, 304, 307, 313, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 431, 436, 450,
	451, 452, 453, 454, 457, 458, 463, 464, 465, 466,
	467, 475, 476, 480, 503, 505, 517, 535, 540, 456,
	288, 289, 423, 424, 287, 512, 541, 0, 360, 0,
	0, 362, 269, 292, 305, 0, 527, 477, 218, 442,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	309, 372, 380, 409, 414, 284, 259, 235, 435, 232,
	460, 483, 484, 485, 487, 376, 254, 413, 0, 0,
	358, 493, 494, 301,
}

var yyPact = [...]int{
	4812, -1000, -438, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2223, 2248, -1000, -1000,
	-1000, -1000, 2376, -1000, 874, 1935, -1000, 2188, 3655, -1000,
	45404, 576, -1000, 44130, 574, 385, 45404, -1000, 207, -1000,
	174, 45404, 211, 43493, -1000, -1000, -322, 19914, 2136, 69,
	68, 45404, -1000, -1000, -1000, -1000, 2331, 1881, -1000, 384,
	-1000, -1000, -1000, -1000, -1000, -1000, 42856, -1000, -1000, -1000,
	2199, 2182, 2385, 765, 2111, -1000, 2271, 1881, -1000, 19914,
	2321, 2240, 19277, -1000, 19277, 497, -1000, -1000, 15445, -1000,
	-1000, 26294, 45404, 32664, 309, -1000, 2188, -1000, -1000, -1000,
	111, -1000, 358, 1842, -1000, 1837, -1000, 670, 694, 396,
	501, 498, 395, 394, 391, 388, 387, 386, 383, 382,
	389, -1000, 794, 794, -125, -135, 3753, 462, 476, 476,
	798, 551, 2161, 2159, -1000, -1000, 794, 794, 794, 347,
	794, 794, 794, 794, 331, 328, 794, 794, 794, 794,
	794, 794, 794, 794, 794, 794, 794, 794, 794, 794,
	794, 794, 794, 513, 2188, 308, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 45404, 254, 45404, -1000,
	653, 45404, 926, 926, 113, 926, 926, 926, 926, 210,
	692, 65, -1000, 199, 314, 182, 299, 937, 330, -1000,
	-1000, 288, 937, 1381, -1000, 774, 164, -1000, 926, 926,
	-1000, 12877, 196, 12877, 12877, -1000, 2180, -1000, -1000, -1000,
	-1000, 1273, -1000, 519, -1000, -1000, -1000, -1000, 45404, 42219,
	376, 832, -1000, -1000, -1000, 85, -1000, -1000, 1503, 1076,
	19914, 1093, -1000, 1128, 718, -1000, -1000, -1000, -1000, -1000,
	604, 20551, 20551, 20551, 20551, -1000, -1000, 1637, 1637, 1637,
	1637, 20551, 1637, -1000, 1637, 1637, 1637, 19914, 1637, 1637,
	1637, -1000, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, -1000, -1000, -1000,
	1637, 651, 1637, 1637, 1637, 1637, 1637, -1000, -1000, -1000,
	-1000, 20551, 1637, 1637, 1637, 1637, 1637, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 23741, -1000, 17366, 1637, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45404,
	-1000, 1637, 226, 45404, 45404, 344, 2271, 1881, -1000, 2331,
	2295, 384, -1000, 2572, 1636, 1562, 1388, 1881, 1716, 45404,
	-1000, 1859, -1000, -1000, -1000, 2057, 1394, 1379, -1000, -1000,
	-1000, -1000, 1833, 19914, -1000, -1000, 2369, -1000, 23104, 648,
	952, 2362, 41582, -1000, 497, 497, 1786, 14803, 17, -1000,
	-1000, -1000, 830, 30116, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2180, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1845, 45404,
	-1000, -1000, 1468, 1264, -1000, 1933, -1000, 1831, -1000, 1875,
	19914, 1953, 573, 1264, 563, 562, 560, -1000, -25, -1000,
	-1000, -1000, -1000, -1000, -1000, 794, 794, 794, -1000, 362,
	2318, 3655, 4085, -1000, -1000, -1000, 40945, 1928, 1264, -1000,
	1925, -1000, 900, 565, 675, 675, 1264, -1000, -1000, 45404,
	1264, 898, 890, 1264, 1264, 45404, 45404, -1000, 40308, -1000,
	39671, 39034, 1217, 45404, 38397, 37760, 37123, 36486, 35849, -1000,
	2014, -1000, 1945, -1000, -1000, -1000, 45404, 1264, 1264, 45404,
	45404, 45404, 45404, 1264, -1000, -1000, 335, -1000, -1000, 1216,
	1212, 1178, 794, 794, 1176, 1366, 1348, 1346, 794, 794,
	1172, 1343, 31390, 1338, 290, 1163, 1155, 1154, 1204, 1337,
	204, 1336, 1174, 1082, 1143, 45404, 1919, 45404, -1000, 284,
	741, 488, 826, 2188, 2134, 1763, 516, 572, 1264, 493,
	493, 45404, -1000, 13519, -1000, -1000, 1334, 19914, -1000, 940,
	937, 937, -1000, -1000, -1000, -1000, -1000, -1000, 926, 45404,
	940, -1000, -1000, -1000, 937, 926, 45404, 926, 926, 926,
	926, 937, 937, 937, 926, 45404, 45404, 45404, 45404, 45404,
	45404, 45404, 45404, 45404, 12877, 774, 926, -330, -1000, 1328,
	-1000, 2040, -1000, -1000, -1000, -1000, -1000, -1000, 12877, 12877,
	-1000, -1000, -1000, -1000, 200, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -69, 1741, 35212, -1000, -337, -339,
	-345, -348, -1000, -1000, -1000, -351, -352, -1000, -1000, -1000,
	19914, 19914, 19914, 19914, -166, -1000, 877, 20551, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 167, 870, 20551, 20551, 20551,
	20551, 20551, 20551, 20551, 20551, 20551, 20551, 20551, 20551, 20551,
	20551, 20551, -1000, -1000, 28205, 6475, 6475, 718, 718, 718,
	718, -1000, 19277, 19914, 19914, 718, -1000, 1264, 19277, 19277,
	19914, 837, 1076, 45404, -1000, 1388, -1000, -1000, -1000, 1218,
	-1000, 893, 2165, 2165, 2165, 2165, 19914, 19914, 19914, 19914,
	19914, 19914, 19914, 19914, 19914, 19914, 2165, 45404, 45404, 212,
	19914, 19914, 19914, 19914, 19914, 19914, 16087, 19914, 19914, 19914,
	1388, 19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914,
	19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914,
	19914, 19914, 19914, 19914, 19914, 19914, 19914, 19914, 1388, 19914,
	1836, 19914, 19914, 19277, 13519, 19277, 19277, 19277, 19277, 19277,
	34575, -1000, -1000, -1000, -1000, -1000, 19914, 19914, 19914, 19914,
	19914, 19914, 19914, 19914, 1388, 19914, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 640, 1750, 1536, 1679, 19914, -1000, 1718,
	-1000, -152, 25657, 19914, 1327, 2350, 1964, 45404, -1000, -1000,
	-1000, 2271, -1000, 2271, 1750, 2459, 2027, 19277, -1000, -1000,
	2459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1509,
	-1000, 45404, 1716, 2233, 45404, 2049, 1326, 528, -1000, 19914,
	19914, 1703, -1000, 1296, 45404, -1000, -166, -1000, 33938, -1000,
	-1000, 12235, -1000, 45404, 356, 45404, -1000, 25020, 33301, 14161,
	17, -1000, 14161, 1641, -1000, 38, 28, 16724, 708, -1000,
	-1000, -1000, 3753, 21825, 1482, 708, 129, -1000, -1000, -1000,
	1875, -1000, 1875, 1875, 1875, 1875, 528, 528, 528, 528,
	-1000, -1000, -1000, -1000, -1000, 1914, 1908, -1000, 1875, 1875,
	1875, 1875, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1906,
	1906, 1906, 1884, 1884, 442, -1000, 19914, 357, 32664, 2198,
	1137, 1469, 284, 495, 1961, 1264, 1264, 1264, 495, -1000,
	1444, 1377, 1367, -1000, -421, 1671, -1000, -1000, 2317, -1000,
	-1000, 734, 920, 916, 751, 45404, 251, 348, -1000, 434,
	-1000, 32664, 1264, 889, 675, 1264, -1000, 1264, -1000, -1000,
	-1000, -1000, -1000, 1264, -1000, -1000, 1668, -1000, 1818, 964,
	913, 923, 912, 1668, -1000, -1000, -93, 1668, -1000, 1668,
	-1000, 1668, -1000, 1668, -1000, 1668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 789, 233, -212, 45404, 251,
	505, -1000, 500, 28205, -1000, -1000, -1000, 28205, 28205, -1000,
	-1000, -1000, -1000, 1323, 1314, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -410, 45404, -1000, 276, 825, 341,
	374, 327, 45404, 234, 2262, 2247, 2246, 301, 324, 45404,
	45404, 493, 2008, 45404, 2212, 45404, -1000, -1000, -1000, -1000,
	-1000, 1076, 45404, -1000, -1000, 926, 926, -1000, -1000, 45404,
	926, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 926,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 45404, -1000, -1000, -1000, -1000,
	45404, -1000, -1000, -1000, -1000, -1000, 105, 36, 369, -1000,
	-1000, -1000, -1000, -1000, 2268, -1000, 1076, 876, 869, -1000,
	1637, -1000, -1000, 1019, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 167, 20551, 20551, 20551, 1383, 527, 995, 981, 1029,
	957, 957, 925, 925, 722, 722, 722, 722, 722, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1302, -1000, 1824,
	-1000, 1356, 1279, 1388, 1824, 1824, 1560, 844, -1000, 19914,
	1388, -1000, -1000, 1388, 1388, 1388, 19914, -1000, -1000, 19914,
	19914, 19914, 19914, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
	1469, 1469, 1469, 19914, 1663, 1653, 2348, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1037, 1469,
	1469, 1469, 1469, 1469, 19914, 1739, -1000, -1000, -1000, 2430,
	1469, 1469, -1000, 1469, 2409, 2401, 1388, 1503, 1388, 1646,
	-1000, 2389, 1469, 2382, 2377, 2370, 1165, 2307, 2282, 2206,
	1469, 1469, 1469, 1761, 2178, 2115, 2110, 2098, 2094, 2075,
	2048, 2035, 2020, 1469, -168, 1469, 1388, -1000, -1000, -1000,
	-1000, 2016, 1756, 1388, 1644, 1637, 639, -1000, 1824, 1388,
	1388, 1824, 1824, -1000, 2012, 1949, 1939, 1926, 1917, 1911,
	1469, 1469, -1000, 1469, 13519, 1388, -1000, 1679, 45404, -1000,
	-317, -1000, 20, 715, 1637, -1000, 31390, 1388, -1000, 6412,
	-1000, 46678, -1000, -1000, -1000, -1000, -1000, 29479, 1899, 2459,
	-1000, -1000, 1637, 1784, -1000, -1000, 528, 87, 28842, 701,
	701, 139, 1076, 1076, 19914, -1000, -1000, -1000, -1000, -1000,
	-1000, 632, 2332, 353, 1637, -1000, 1675, 2559, -1000, -1000,
	-1000, 2225, 22467, -1000, 1637, 1637, 45404, 1888, 1819, -1000,
	631, -1000, 1641, 17, 16, -1000, -1000, -1000, -1000, 1076,
	-1000, 1309, 381, 2976, -1000, 422, -1000, -1000, -1000, -1000,
	2148, 101, -1000, -1000, -1000, 225, 528, -1000, -1000, -1000,
	-1000, -1000, -1000, 1301, 1301, -1000, -1000, -1000, -1000, -1000,
	1134, -1000, -1000, -1000, 1118, -1000, -1000, 1870, 1990, 357,
	-1000, -1000, 794, 1300, -1000, -1000, 2154, 794, 794, 45404,
	-1000, -1000, 1452, 2198, 276, 45404, 847, 2006, -1000, 1961,
	1961, 1961, 45404, -1000, -1000, -1000, -1000, -1000, -1000, -412,
	83, 428, -1000, -1000, -1000, 451, 45404, 1782, -1000, 244,
	-1000, 1429, -1000, 45404, -1000, 1776, 1902, 1264, 1264, -1000,
	-1000, -1000, 45404, 1637, -1000, -1000, -1000, -1000, 569, 2186,
	306, -1000, -1000, -185, -1000, -1000, 251, 244, 45404, 1264,
	708, -1000, -1000, -1000, -1000, -1000, -413, 1770, 557, 245,
	326, 45404, 45404, 45404, 45404, 45404, 595, -1000, -1000, -1000,
	-1000, 217, -1000, -1000, 217, -1000, -1000, -1000, -1000, 307,
	499, -1000, 45404, 45404, 656, -1000, -1000, -1000, 937, -1000,
	-1000, 937, -1000, -1000, -1000, -1000, -1000, 2176, 45404, 32,
	-371, -1000, -366, 19914, -1000, -1000, -1000, -1000, 1285, 482,
	995, 20551, 20551, 19277, -87, 679, 679, 28205, -1000, -1000,
	-1000, 19914, 19914, 799, -1000, 19914, 1042, -1000, -1000, -1000,
	-1000, 1679, 1469, 1469, 1469, 1469, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1581, 19914, 19914, 19914,
	1388, 345, -1000, -1000, -1000, -1000, -1000, 2344, -1000, 19914,
	19914, -1000, -1000, -1000, 19914, 19914, -1000, -1000, 19914, 19914,
	-1000, 19914, 19914, 21188, 1388, 21188, 19914, 19914, 21188, -1000,
	-1000, -1000, -1000, 21188, 19914, 19914, 19914, 19914, 19914, 19914,
	19914, 19914, 19914, -1000, -1000, 32664, 100, -168, 1836, 100,
	1836, -1000, 19277, 13519, -1000, -1000, -1000, -1000, -1000, 19914,
	19914, 19914, 19914, 19914, 19914, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 715, -1000, 675, 675, 675, 45404,
	-1000, -1000, -1000, -1000, -1000, -1000, 1627, 2260, -1000, 2076,
	2068, 2338, 2332, -1000, 25020, 2459, -1000, -1000, 45404, -308,
	-1000, 2124, 2143, 701, 701, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11593, 2271, 19914, 2005, 45404, 170, -1000, 24383,
	45404, 45404, 25020, 25020, 25020, 25020, 25020, -1000, 2034, 2024,
	-1000, 2046, 2025, 2058, 45404, -1000, 1758, 1388, 2295, 22467,
	384, 19914, 26931, 1559, 25020, -1000, -1000, 25020, 45404, 10951,
	-1000, -1000, 26, 19, -1000, -1000, -1000, -1000, 3753, -1000,
	-1000, 338, 2222, 2142, -1000, -1000, -1000, -1000, -1000, 1754,
	-1000, 1728, 1585, 1689, 233, -1000, 1950, 2173, 794, 794,
	-1000, 1109, -1000, 1264, 1268, 1266, -1000, -1000, -1000, 502,
	-1000, 2205, 45404, 2004, 1998, 1997, -1000, -432, 1088, 1897,
	1916, 19914, 1896, 2314, 1553, 45404, -1000, -1000, 45404, -1000,
	278, -1000, 357, 45404, -1000, -1000, -1000, 348, 45404, -1000,
	6285, -1000, -1000, -1000, 244, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 45404, 264, -1000, 1891, 1140, -1000, -1000, 1846,
	-1000, -1000, -1000, -1000, 242, 316, 219, 1258, 219, -1000,
	45404, 617, 1990, 45404, -1000, -1000, -1000, 926, 926, -1000,
	-1000, 2172, -1000, 1264, 1469, 20551, 20551, -1000, 718, -1000,
	1637, -148, 1875, 1875, -1000, 1875, 1884, -1000, 1875, 163,
	1875, 153, 1875, -1000, -1000, -148, 1388, 1752, 1304, -1000,
	1076, 19914, -1000, -1000, -1000, -1000, -1000, -32, 1904, 1894,
	1469, -1000, 1874, 1873, 19914, 1469, 1469, 1469, 1469, -1000,
	1076, 1165, 1879, 1595, -1000, -1000, -1000, -1000, 1577, 1469,
	1863, -263, 1388, 1684, 1684, 1684, 1684, 1684, 1679, 1679,
	1679, 1679, 45404, -1000, -168, -1000, -1000, -204, -206, -1000,
	1388, -168, 1570, 1388, -1000, 1748, 1693, 1857, 1583, 1469,
	1743, -1000, 2265, 2265, 2265, 1657, 46041, 45404, -1000, -1000,
	-1000, -1000, 2332, 2325, 1566, -1000, -1000, 87, 464, -1000,
	2102, 2143, -1000, 2313, 2090, 2312, -1000, -1000, -1000, -1000,
	-1000, 1076, -1000, 2190, 1443, -1000, 822, 1507, -1000, -1000,
	18640, 1661, 2064, 621, 1657, 1588, 2559, 1991, 1996, 2483,
	-1000, -1000, -1000, -1000, 2023, -1000, 2000, -1000, -1000, 1859,
	-1000, -1000, 1536, 1388, 1551, 356, 25020, 1467, 1467, -1000,
	609, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 941, 6231,
	2384, -1000, 1249, -1000, 1246, 209, 1059, -1000, -1000, 794,
	794, -1000, 888, 886, -1000, 45404, 1869, -1000, 528, 1247,
	528, 1057, -1000, 1044, -1000, -1000, -1000, -1000, 1854, 1981,
	-1000, -1000, -1000, -1000, 45404, -1000, -1000, 45404, 45404, 45404,
	1868, 2311, -1000, 19914, 1865, 813, 1851, 45404, 45404, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	461, 794, -385, 321, 320, 794, 794, 794, -433, -1000,
	-1000, 1651, 1607, -1000, -119, -1000, 19914, -1000, -1000, -1000,
	1106, 1106, -1000, 1859, -1000, -1000, -1000, 1419, -1000, -1000,
	-95, 45404, 45404, 45404, 45404, -1000, 1003, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 718,
	20551, 1388, -1000, -1000, 528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1388, -1000, 19914, -1000, 19914, -1000, 1076, 2271,
	1240, 19914, 19914, -1000, 1043, 1015, 1469, -1000, -1000, -1000,
	-1000, 1388, 21188, -1000, 21188, -1000, 19914, 243, 679, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1388,
	351, -1000, -1000, -1000, -1000, 2334, -1000, 1388, 19914, -1000,
	-1000, 19914, -1000, 19914, 19914, -1000, 19914, -1000, 19914, 1637,
	2150, 1637, 1637, 26931, -1000, -1000, 2325, 2309, 2290, 2084,
	2086, 2086, 2102, -1000, 2289, 2288, -1000, 1239, 2286, 1235,
	885, -1000, 45404, 19914, 170, -1000, 375, 45404, 170, 45404,
	-1000, 2283, -1000, -1000, 19914, 1862, -1000, 19914, -1000, -1000,
	-1000, -1000, -1000, -1000, 6475, 2332, 1467, -1000, -1000, 732,
	-1000, 19914, -1000, -1000, -1000, 5481, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1234, 1232, -1000, -1000, 1861, 19914,
	-1000, -1000, -1000, 1411, 1403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1859, -1000, -1000, -1000, -1000, 348, -417,
	1778, 45404, 986, -1000, 1604, 1553, 337, 170, 1229, 794,
	794, 794, 968, 965, 31390, 1597, -1000, 45404, 371, -1000,
	348, -1000, -142, -144, 1469, -1000, -1000, 2219, -1000, -1000,
	13519, -1000, -1000, 1856, 1903, -1000, -1000, -1000, 340, -1000,
	-1000, -1000, 1469, 1469, 1388, -1000, 1469, 1469, 1397, 1390,
	-1000, -1000, 1595, -1000, 1579, -1000, 243, 1388, 1982, -1000,
	-1000, 6475, -1000, -1000, 2283, 2281, 100, -1000, -1000, 259,
	100, 1076, 1573, 1469, 1538, 1492, 1469, 27568, -1000, 2276,
	2273, 32027, 32027, 715, 2309, -175, 19914, 19914, 2082, 1135,
	-1000, -1000, -1000, -1000, 1226, 1223, -1000, 1222, -1000, 2372,
	-1000, 1076, -1000, 170, -1000, 597, 1507, -1000, 2271, 1076,
	45404, 1076, 89, 2283, -1000, 1469, -1000, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
	-1000, -1000, 45404, 1771, -1000, -1000, 2215, 1591, 80, -1000,
	1575, -1000, -1000, 152, -1000, 19914, -1000, 31390, 1221, 1095,
	-1000, -1000, -1000, -1000, -433, -1000, -1000, -1000, -1000, -1000,
	-1000, 384, 1540, -1000, 785, 45404, 45404, 1388, 334, -106,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19914,
	-1000, 1388, 1975, -1000, -264, -1000, -393, 19914, -168, -1000,
	-1000, -168, -1000, 19914, -1000, -1000, 19914, -1000, 19914, -1000,
	1533, -1000, -1000, -1000, -1000, -1000, 1533, 1533, -1000, -175,
	-1000, 1535, -1000, 45404, 1076, 1503, -1000, 989, -1000, -1000,
	-1000, -1000, -1000, 45404, 1507, 45404, -1000, 1514, 1388, 1637,
	2271, -1000, 1494, -1000, 384, -1000, 1855, 1916, -1000, -1000,
	-1000, 18003, -1000, -1000, -1000, -1000, -1000, 218, -94, 13519,
	10309, 1427, -1000, -1000, 2039, -91, -111, 1165, -1000, -358,
	-1000, -1000, -1000, -1000, 230, -1000, -1000, 1503, -1000, -1000,
	1424, 1393, 1325, 30753, -1000, -1000, -1000, -1000, -175, -1000,
	-1000, 2214, -1000, -1000, 1488, -1000, -1000, 26931, 44767, -1000,
	-85, 310, -94, 19914, 1848, 1388, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -3, -1000, -1000, -1000, -1000, -1000,
	1846, -1000, 1995, -1000, 1388, -1000, 173, -377, -190, -196,
	-1000, -1000, -1000, 19914, -1000, 19914, -1000, 19914, -1000, -1000,
	-1000, 45404, 1637, -1000, 1418, -1000, 4406, -217, 1972, -1000,
	-35, -1000, -1000, -1000, 933, 966, -1000, -1000, -1000, -1000,
	-1000, -1000, 1765, 45404, -1000, 424, -1000, -1000, -95, -97,
	-1000, 860, -1000, -1000, -1000, -1000, -1000, 1270, 1098, 1469,
	-1000, 45404, -1000, 44767, -211, 708, 6475, -1000, 1970, 1880,
	2354, -1000, -1000, -1000, -1000, -1000, -1000, -435, 1410, 281,
	-1000, -118, 173, -1000, 19914, -1000, 19914, -1000, 1388, -1000,
	-1000, 2203, 89, -1000, 2356, -1000, 2333, 697, 697, -1000,
	961, -435, -1000, -112, -1000, 1469, 1469, -1000, -218, -1000,
	-1000, -1000, -1000, -1000, 438, 1014, -1000, -1000, -1000, -1000,
	-1000, -1000, 6475, -1000, -1000, -1000, 216, 216, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2840, 2839, 32, 2, 44, 43, 2838, 41, 120,
	194, 31, 218, 123, 2837, 2836, 2835, 2834, 2833, 2832,
	2831, 233, 231, 230, 2830, 2828, 2826, 2825, 2824, 2823,
	2822, 2821, 2820, 2819, 228, 179, 195, 2818, 2817, 2816,
	145, 190, 104, 107, 197, 2815, 2814, 95, 2813, 2812,
	2810, 216, 212, 206, 813, 2809, 213, 133, 66, 2807,
	2805, 2801, 2800, 2799, 2798, 2797, 2796, 2795, 2793, 2791,
	2789, 2786, 2785, 2784, 2783, 2782, 321, 2781, 2780, 21,
	2774, 97, 2772, 2768, 2767, 2766, 13, 2765, 2764, 15,
	46, 2761, 2759, 47, 2756, 2751, 2746, 2745, 2744, 17,
	2738, 27, 2736, 39, 2729, 2726, 152, 2723, 2721, 2715,
	45, 2713, 2712, 2711, 2710, 2706, 2705, 2704, 165, 2703,
	2697, 2696, 192, 198, 2694, 2693, 189, 126, 129, 2690,
	2679, 125, 204, 2675, 143, 2674, 2673, 2668, 172, 2666,
	4021, 2664, 2663, 83, 80, 2659, 77, 2658, 2657, 7,
	96, 81, 16, 24, 14, 2655, 2654, 82, 106, 2653,
	138, 2652, 115, 90, 2651, 136, 146, 2650, 2649, 18,
	5, 2648, 1, 4, 6, 84, 2646, 2645, 140, 2644,
	2643, 2642, 122, 2641, 2640, 2318, 2638, 108, 157, 127,
	93, 2634, 55, 76, 2633, 2630, 2622, 2621, 2620, 68,
	2619, 2617, 2615, 164, 49, 181, 2613, 60, 52, 70,
	158, 2608, 40, 99, 2605, 160, 162, 2604, 2603, 78,
	50, 48, 2600, 116, 155, 150, 59, 111, 163, 2599,
	2597, 71, 94, 2594, 2592, 2591, 2590, 182, 2589, 2586,
	89, 2585, 69, 2584, 205, 2583, 23, 2582, 67, 58,
	2581, 88, 144, 86, 33, 2580, 215, 2576, 73, 183,
	153, 178, 2575, 2574, 2573, 2572, 193, 341, 2570, 2567,
	135, 184, 166, 173, 105, 2565, 343, 2564, 2562, 118,
	2862, 6182, 2561, 28, 180, 2558, 2557, 7106, 170, 53,
	22, 2546, 191, 2536, 2535, 2534, 199, 186, 130, 1171,
	74, 2533, 2530, 85, 19, 2529, 2519, 2511, 2507, 2505,
	2504, 103, 38, 37, 36, 202, 92, 10, 124, 185,
	91, 2502, 2493, 2478, 147, 102, 2477, 177, 176, 151,
	131, 2475, 187, 168, 134, 2474, 132, 35, 2472, 2471,
	2466, 2462, 110, 2461, 2460, 2456, 2455, 175, 167, 148,
	100, 2453, 101, 141, 171, 174, 65, 2452, 63, 2450,
	2448, 34, 196, 30, 2447, 12, 75, 79, 29, 128,
	159, 2442, 0, 2441, 20, 188, 347, 169, 2435, 2433,
	8, 9, 11, 2430, 2429, 2422, 2416, 161, 2410, 2407,
	2406, 2404, 26, 61, 25, 3, 142, 98, 2402, 2401,
	4967, 846, 156, 2398, 207,
}

//line sql.y:7680
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 398, 399, 399, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 372, 372,
	372, 375, 375, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	402, 402, 180, 180, 178, 178, 179, 179, 251, 251,
	24, 25, 25, 261, 261, 260, 260, 260, 262, 262,
	262, 262, 299, 299, 26, 26, 26, 26, 26, 124,
	124, 374, 374, 373, 365, 365, 364, 364, 363, 371,
	371, 370, 370, 369, 38, 39, 48, 48, 48, 48,
	49, 50, 376, 376, 338, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 340, 340, 326, 326, 339, 339, 339, 339, 339,
	339, 339, 325, 325, 135, 135, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 391, 391, 391, 390, 390, 230, 230,
	230, 230, 230, 230, 230, 230, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 392, 392, 392, 392, 304, 304, 304,
	304, 307, 307, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 306, 306, 306, 306, 306, 308, 308, 308,
	308, 308, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 310, 310,
	310, 310, 310, 310, 310, 310, 324, 324, 311, 311,
	319, 319, 320, 320, 320, 321, 321, 321, 322, 322,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 318,
	318, 317, 317, 317, 327, 352, 352, 351, 351, 349,
	349, 349, 349, 349, 349, 349, 349, 336, 336, 346,
	346, 346, 346, 346, 335, 335, 331, 331, 331, 332,
	332, 333, 333, 330, 330, 334, 334, 348, 348, 347,
	347, 328, 328, 329, 329, 354, 393, 393, 393, 393,
	393, 394, 394, 355, 383, 385, 385, 385, 384, 384,
	381, 382, 380, 380, 380, 380, 380, 81, 81, 81,
	274, 274, 275, 275, 344, 344, 343, 343, 343, 345,
	345, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 269, 269, 269, 379, 379, 379, 379, 379,
	379, 378, 378, 378, 341, 341, 341, 377, 377, 57,
	57, 213, 213, 396, 396, 397, 397, 397, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 357, 357, 58, 58, 3, 3, 168,
	170, 171, 171, 169, 169, 169, 169, 169, 169, 60,
	60, 59, 59, 173, 172, 174, 174, 174, 1, 1,
	2, 2, 4, 4, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 323, 323, 323, 356,
	356, 358, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 360, 360, 360, 61, 61, 361,
	312, 313, 314, 5, 6, 337, 359, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	268, 268, 277, 277, 267, 267, 292, 292, 292, 270,
	270, 270, 271, 271, 389, 389, 389, 264, 264, 64,
	64, 64, 66, 66, 67, 68, 68, 294, 294, 295,
	295, 69, 70, 82, 82, 82, 82, 82, 82, 105,
	105, 105, 15, 15, 15, 15, 78, 78, 78, 14,
	14, 65, 65, 72, 386, 386, 387, 388, 388, 388,
	388, 73, 75, 31, 31, 31, 31, 31, 31, 130,
	130, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 125, 125, 125, 119, 119, 403, 76,
	77, 77, 123, 123, 123, 116, 116, 116, 122, 122,
	122, 16, 16, 17, 250, 250, 18, 18, 127, 127,
	129, 129, 129, 129, 129, 131, 131, 131, 131, 131,
	131, 131, 126, 126, 128, 128, 128, 128, 285, 285,
	285, 284, 284, 162, 162, 164, 163, 163, 165, 165,
	166, 166, 166, 166, 211, 211, 188, 188, 248, 248,
	246, 246, 247, 247, 249, 249, 249, 249, 252, 252,
	167, 167, 167, 167, 175, 175, 176, 176, 177, 177,
	293, 293, 290, 290, 290, 289, 289, 181, 181, 181,
	183, 182, 182, 182, 182, 184, 184, 186, 186, 185,
	185, 187, 192, 192, 191, 191, 189, 189, 189, 189,
	190, 190, 190, 190, 193, 193, 140, 140, 140, 140,
	140, 140, 140, 155, 155, 155, 155, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 237, 237,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 149, 83, 83, 83,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	86, 86, 141, 141, 88, 88, 87, 87, 206, 206,
	282, 282, 89, 90, 90, 93, 93, 92, 91, 91,
	97, 97, 94, 94, 96, 96, 95, 98, 98, 99,
	100, 100, 265, 265, 194, 194, 202, 202, 202, 202,
	195, 195, 195, 195, 195, 195, 195, 203, 203, 203,
	210, 204, 204, 200, 200, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 160, 160, 160, 160, 218, 218, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 148, 148, 161, 161, 161, 161,
	301, 301, 368, 368, 367, 367, 366, 366, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 404,
	404, 315, 315, 315, 315, 201, 201, 201, 201, 201,
	121, 121, 121, 121, 121, 298, 298, 298, 302, 302,
	302, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 303, 303, 216, 216,
	117, 117, 214, 214, 215, 217, 217, 212, 212, 212,
	197, 197, 197, 219, 219, 220, 220, 101, 102, 102,
	103, 103, 221, 221, 223, 222, 222, 224, 225, 225,
	225, 226, 226, 227, 227, 227, 47, 47, 47, 47,
	47, 42, 42, 42, 42, 43, 43, 43, 43, 132,
	132, 132, 132, 134, 134, 133, 133, 79, 79, 80,
	80, 80, 138, 138, 139, 139, 139, 136, 136, 137,
	137, 244, 244, 228, 228, 228, 235, 235, 235, 231,
	231, 233, 233, 233, 234, 234, 234, 232, 241, 241,
	243, 243, 242, 242, 238, 238, 239, 239, 240, 240,
	240, 236, 236, 196, 196, 196, 196, 196, 245, 245,
	245, 245, 253, 253, 207, 207, 209, 209, 208, 208,
	159, 254, 254, 258, 255, 255, 259, 259, 259, 259,
	259, 256, 256, 257, 257, 286, 286, 286, 263, 263,
	276, 276, 272, 272, 273, 273, 266, 266, 278, 278,
	278, 74, 205, 205, 353, 353, 350, 281, 281, 283,
	283, 287, 287, 291, 291, 288, 288, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 400, 401, 296, 297, 297, 297,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 7, 7,
	6, 2, 2, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 4, 8, 6, 8,
	6, 5, 4, 2, 2, 1, 2, 2, 2, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 8, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 4, 7, 8,
	6, 5, 6, 8, 11, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 9, 6, 9,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	0, 2, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -398, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -400,
	11, 438, 256, 255, 28, -12, 498, 86, -399, 646,
	-244, -228, 22, 33, 29, -227, -223, -123, -228, 20,
	18, 7, -76, -403, -76, -76, 12, 13, -76, -338,
	-340, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -362, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 498, 501, -345, 223, 229, 230,
	225, 439, 123, 122, 75, -342, 361, 531, 616, -56,
	618, 102, 104, 617, 44, 235, 619, 620, 621, 538,
	622, 244, 623, 624, 625, 626, 632, 580, 633, 634,
	635, 124, 7, -76, -291, -287, -372, -280, 89, 90,
	91, 495, 247, 529, 530, 296, 81, 41, 504, 358,
	361, 531, 468, 616, 307, 321, 315, 473, 474, 475,
	342, 334, 496, 532, 505, 299, 248, 284, 610, 332,
	132, 618, 302, 533, 262, 366, 367, 534, 368, 102,
	310, 405, 631, 301, 535, 629, 104, 617, 79, 467,
	51, 613, 44, 257, 330, 231, 326, 619, 285, 536,
	507, 278, 123, 120, 638, 36, 324, 50, 30, 628,
	122, 49, 620, 147, 537, 621, 538, 370, 349, 604,
	48, 371, 263, 539, 84, 268, 500, 305, 612, 372,
	487, 325, 373, 295, 627, 228, 540, 596, 592, 593,
	374, 375, 605, 541, 350, 354, 489, 542, 397, 472,
	376, 645, 52, 543, 544, 606, 121, 545, 78, 622,
	80, 319, 320, 546, 293, 246, 492, 493, 399, 346,
	450, 457, 458, 108, 109, 453, 110, 459, 111, 460,
	461, 462, 451, 112, 105, 452, 463, 464, 347, 348,
	113, 465, 107, 106, 454, 456, 114, 466, 244, 35,
	377, 497, 297, 58, 272, 400, 46, 352, 642, 45,
	600, 547, 603, 345, 341, 447, 53, 548, 549, 550,
	551, 469, 623, 344, 318, 340, 637, 4, 290, 470,
	624, 62, 230, 356, 355, 357, 279, 396, 337, 552,
	553, 554, 251, 82, 555, 327, 21, 556, 557, 378,
	286, 558, 56, 559, 560, 403, 260, 561, 54, 625,
	39, 562, 265, 639, 626, 563, 564, 565, 566, 267,
	567, 380, 568, 594, 595, 379, 351, 353, 274, 381,
	499, 569, 306, 323, 264, 630, 570, 252, 483, 484,
	485, 486, 611, 491, 490, 266, 271, 259, 404, 253,
	571, 572, 573, 574, 575, 300, 591, 576, 577, 311,
	632, 448, 43, 578, 579, 580, 581, 582, 294, 289,
	398, 407, 61, 83, 363, 583, 584, 609, 317, 287,
	585, 308, 55, 633, 634, 635, 281, 636, 476, 477,
	478, 479, 9, 643, 644, 471, 383, 124, 291, 292,
	47, 338, 273, 586, 303, 587, 328, 329, 343, 316,
	339, 309, 597, 275, 384, 449, 261, 588, 406, 288,
	359, 364, 304, 503, 488, 280, 385, 608, 502, 480,
	481, 336, 333, 282, 482, 589, 386, 236, 276, 277,
	590, 598, 387, 388, 298, 389, 390, 391, 392, 393,
	395, 394, 283, 501, 314, 331, 365, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 446, 234, -76, 234, -185,
	-287, 234, -256, 367, -277, 369, 382, 377, 387, 375,
	-268, 378, 380, 274, -389, 397, 234, 384, 222, 370,
	379, 388, 389, 298, 395, 390, 394, 283, 391, 392,
	393, -372, 174, 621, 636, 132, 335, 374, 372, 398,
	600, -287, 309, -294, 314, -281, -372, -280, 312, -185,
	-82, 596, 226, -296, -296, -125, 600, 602, -204, -140,
	140, -155, -158, -146, -150, -198, -199, -200, -201, -156,
	-212, 163, 164, 171, 141, -210, -159, 26, 494, 440,
	439, 174, 31, -149, 68, 69, 442, 143, 57, 415,
	416, -157, 410, 417, 412, 467, 469, 470, 471, 468,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	472, 444, 445, 115, 446, 105, 107, 106, 447, 448,
	449, 489, 492, 493, 491, 490, 347, 348, 450, 451,
	452, 108, 109, 110, 111, 112, 113, 114, 453, 456,
	454, 455, 457, 458, 459, 464, 465, 460, 461, 462,
	463, 466, -85, -97, 520, 519, -98, -147, -148, -161,
	-281, -287, 239, 409, 233, 169, 438, -151, -144, -8,
	-208, 217, 408, 413, 414, 418, 411, 506, 508, 523,
	524, 526, 511, 516, 515, 518, 483, 484, 485, 486,
	487, 488, 592, 593, 594, 595, -372, -280, -153, -152,
	-194, 92, 98, 103, 99, -395, 116, -400, 614, 93,
	94, 95, 96, 97, 117, 118, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 44, 383,
	383, -185, -76, -76, -76, -76, -221, -123, -223, -10,
	-8, -400, 8, -76, -8, -9, -13, -34, -36, 525,
	-35, -287, -228, -244, 12, 159, 42, 50, -226, -227,
	-12, -8, -140, 19, 23, 24, -128, 165, -140, -287,
	-77, -128, -266, 238, -76, -76, -255, -299, 309, -259,
	398, 397, -283, -257, -281, -279, -256, 396, 227, 23,
	139, 25, 27, 142, 174, 127, 19, 143, 37, 229,
	335, 245, 173, 241, 439, 222, 72, 506, 410, 412,
	408, 415, 441, 442, 409, 369, 31, 13, 508, 28,
	255, 24, 38, 167, 224, 146, 509, 258, 26, 256,
	115, 118, 511, 22, 75, 250, 14, 243, 40, 16,
	512, 513, 17, 239, 238, 159, 235, 70, 11, 217,
	29, 155, 66, 514, 134, 515, 516, 517, 518, 128,
	68, 156, 20, 640, 413, 414, 33, 601, 494, 269,
	169, 73, 59, 602, 140, 411, 519, 520, 116, 521,
	119, 76, 607, 136, 18, 71, 42, 522, 270, 523,
	240, 641, 524, 401, 525, 157, 225, 438, 69, 158,
	614, 526, 615, 233, 382, 8, 443, 32, 254, 242,
	126, 67, 527, 234, 145, 444, 445, 237, 129, 117,
	7, 133, 34, 12, 74, 77, 416, 417, 418, 57,
	125, 498, 144, 15, 528, 402, 138, 132, -339, 156,
	-325, -329, -281, 249, -355, 245, -185, -348, -347, -281,
	-400, -124, -276, 235, 243, 242, 133, -376, 136, 291,
	409, 233, -51, -52, -53, -256, 173, 620, -106, 266,
	270, 87, 87, -329, -328, -327, -377, 270, 249, -354,
	-346, 241, 250, -335, 242, 243, -330, 235, 134, -377,
	-330, 240, 250, 245, 249, 270, 270, 124, 270, 124,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 265,
	-336, 148, -336, 502, 502, -342, -377, 245, 235, -377,
	-377, 241, -278, -330, 237, 25, 237, 35, 35, -336,
	-336, -336, -256, 173, -336, -336, -336, -336, 278, 278,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, 234, -376, -132,
	394, 298, 81, -54, 280, -37, -185, -276, 235, 236,
	-376, 267, -185, 218, -185, -270, 156, 15, -270, -267,
	383, 381, 368, 373, -270, -270, -270, -270, 281, 366,
	-331, 235, 35, 246, 383, 281, 366, 281, 282, 281,
	282, 376, 386, 281, -292, 14, 159, 409, 371, 375,
	274, 234, 275, 236, 385, 282, -292, 93, -271, 156,
	383, 277, -270, -270, -297, -400, -283, 335, -372, 603,
	-297, -297, 32, 90, 237, -281, -78, -281, 93, -15,
	-11, -22, -21, -23, 148, -130, 383, -118, 174, 621,
	604, 605, 606, 603, 380, 611, 609, 607, 281, 608,
	87, 136, 138, 139, 4, -140, 155, -195, 148, 149,
	150, 151, 152, 153, 154, 159, 140, 142, 156, -237,
	137, 160, 161, 162, 163, 164, 165, 166, 168, 167,
	169, 170, 157, 158, 173, 220, 221, -150, -150, -150,
	-150, -210, -400, -400, -400, -150, -265, -400, -400, -400,
	-400, -216, -140, -400, -404, -400, -404, -404, -315, -400,
	-315, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -400, 218, -400, -400, -400, -400, -400,
	-150, -315, -315, -315, -315, -315, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, 103, 98, 92, -212,
	99, 93, -281, -287, -8, -9, -204, -400, -296, -386,
	-387, -188, -185, -400, 298, -281, -281, 267, -226, -12,
	-8, -221, -227, -223, -8, -76, -116, -129, 63, 64,
	-131, 24, 38, 67, 65, 23, -401, 88, -401, -244,
	-401, 87, -36, -248, 86, 61, 43, 93, 93, 87,
	21, -222, -224, -140, 14, -285, 4, -284, 25, -281,
	93, 218, 101, 14, -186, 29, -185, -266, -266, 87,
	309, -259, -299, -261, -260, 399, 401, 148, -286, -281,
	93, 31, 88, 87, -185, -304, -307, -309, -308, -310,
	-305, -306, 332, 333, 174, 336, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 349, 32, 257, 328, 329,
	330, 331, 350, 351, 352, 353, 354, 355, 356, 357,
	315, 334, 496, 316, 317, 318, 319, 320, 321, 323,
	324, 325, 326, 327, -375, -372, 86, 88, 87, -311,
	86, -140, -132, 234, -372, 235, 235, 235, -76, 438,
	-336, -336, -336, 265, 19, -44, -41, -362, 18, -40,
	-41, 227, 120, 121, 224, 86, -325, 86, -334, -375,
	-372, 86, 134, 240, 133, -333, -330, -333, -334, -372,
	-212, -372, 134, 134, -372, -372, -252, -281, -252, -252,
	23, -252, 23, -252, 23, 95, -281, -252, 23, -252,
	23, -252, 23, -252, 23, -252, 23, 31, 78, 79,
	80, 31, 82, 83, 84, -212, -372, -372, -212, -325,
	-212, -185, -372, -256, 95, 95, 95, -336, -336, 95,
	93, 93, 93, -336, -336, 95, 93, -289, -287, 93,
	93, -378, 251, 295, 297, 95, 95, 95, 95, 31,
	93, -379, 31, 628, 627, 629, 630, 631, 93, 95,
	31, 95, 31, 95, -281, 86, -185, -138, 285, 222,
	224, 227, 76, 93, 299, 303, 304, 148, 44, 87,
	237, 234, -372, -272, 239, -272, -281, -288, -287, -279,
	93, -140, -332, 14, 159, -292, -292, -270, -185, -332,
	-292, -270, -185, -270, -270, -270, -270, -292, -292, -292,
	-270, -287, -287, -185, -185, -185, -185, -185, -185, -185,
	-297, -271, -270, 603, 93, -264, 14, 76, -297, -297,
	-295, 312, 346, 597, 598, 599, 87, 498, -178, -185,
	603, 603, 603, 603, 603, 603, -140, -140, -140, -140,
	521, -202, 116, 140, 117, 118, -158, -203, -208, -210,
	100, 159, 142, 156, -237, -146, -150, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-298, -281, 93, 174, -154, -153, 99, -395, -154, -126,
	-128, -140, -140, -372, -126, -126, -140, -214, -215, 144,
	-212, -401, -401, 95, 99, 165, -122, 24, 38, -122,
	-122, -122, -122, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -122, -281, -281, -115, -114, 420, 421,
	422, 423, 425, 426, 427, 430, 431, 435, 436, 419,
	437, 424, 429, 432, 433, 434, 428, 331, -140, -140,
	-140, -140, -140, -140, -83, -140, 127, 128, 129, -140,
	-140, -140, -401, -140, -140, -140, -205, -204, -371, -370,
	-369, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -401, -140, -160, -144, 95, -372,
	99, -140, -140, -127, -126, -283, -288, -279, -126, -127,
	-127, -126, -126, -281, -140, -140, -140, -140, -140, -140,
	-140, -140, -401, -140, 218, -244, -401, -204, 87, -388,
	401, 402, 601, -290, 270, -289, 25, -205, 93, 14,
	-250, 77, -281, -226, -226, 63, 64, 59, -126, -131,
	-401, -35, 25, -246, -281, 62, 93, -316, -256, 358,
	359, 174, -140, -140, 87, -225, 27, 28, -185, -284,
	165, -288, -185, -251, 270, -185, -163, -165, -166, -167,
	-188, -211, -400, -168, 517, 514, 14, -178, -179, -187,
	-287, -259, -261, 87, 400, 402, 403, 76, 119, -140,
	-317, 173, -344, -343, -342, -325, -327, -328, -329, 88,
	-317, -321, 364, 363, -311, -311, -311, -311, -311, -316,
	-316, -316, -316, 86, 86, -311, -311, -311, -311, -319,
	86, -319, -319, -320, 86, -320, -355, -140, -352, -351,
	-349, -350, 244, 102, 590, 546, 498, 538, 580, 77,
	-347, -225, 95, -401, -138, -273, 239, -353, -350, -372,
	-372, -372, -273, -372, 93, -372, 93, -372, 93, -107,
	-58, -1, 640, 641, 642, 87, 19, -326, -325, -57,
	295, -358, -359, 270, -354, -348, -334, 134, -333, -334,
	-334, -372, 87, 29, 124, 124, 124, 124, 498, 224,
	32, -274, 537, 140, 590, 546, -325, -57, 237, 237,
	-298, -298, -298, 93, 93, -269, 636, -178, -134, 287,
	148, 276, 276, 234, 234, 289, -185, 300, 302, 301,
	299, 303, 304, 23, 23, 23, 288, 290, 292, 278,
	-185, -185, -272, 76, -180, -185, 26, -287, -185, -270,
	-270, -185, -270, -270, -185, -281, -118, 401, 87, 498,
	22, -119, 22, -400, 116, 117, 118, -203, -146, -150,
	-146, 139, 258, 87, -401, 25, 87, 77, -401, -401,
	-401, 87, 14, -217, -215, 146, -140, -401, -401, -401,
	-401, -204, -140, -140, -140, -140, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -204, 87, 87, 14,
	-302, 25, -401, -401, -401, -401, -401, -216, -401, 14,
	87, -401, -401, -401, 87, 87, -401, -401, 87, 87,
	-401, 87, 87, 87, -368, 87, 87, 87, 87, -401,
	-401, -401, -401, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, -401, -90, 522, -401, -401, 87, -401,
	87, -401, -400, 218, -401, -401, -401, -401, -401, 87,
	87, 87, 87, 87, 87, -401, -401, -401, -283, -401,
	-387, 600, 402, -192, -191, -189, 74, 238, 75, -400,
	-289, -401, -154, 90, -247, 90, -246, -197, -281, 95,
	99, -228, -162, -164, 14, -131, -210, 88, 87, -316,
	-232, -238, -267, -281, 93, 174, -318, 174, -318, 358,
	359, -224, 218, -193, 15, -196, 32, 57, -11, -400,
	-400, 32, 87, -181, -183, -182, -184, 66, 70, 72,
	67, 68, 69, 73, -293, 25, -163, -9, -8, -400,
	-400, -400, -185, -178, -402, 14, 77, -402, 87, 218,
	-260, -262, 404, 401, 407, -372, 93, -106, 87, -342,
	-329, -229, -135, 40, -322, 365, -316, 505, -316, -324,
	93, -324, 95, 95, 88, -47, -42, -43, 33, 81,
	-349, -336, 93, 39, -336, -336, -281, 88, -225, -134,
	-185, 140, 76, -353, -353, -353, -287, -2, 639, 645,
	134, 86, 368, 18, -246, 87, 88, -213, 296, 88,
	-108, -281, 88, 86, -334, -334, -281, -400, 234, 31,
	31, 590, 546, 537, -57, -213, -212, -372, -317, 638,
	637, 88, 236, 294, -139, 415, -136, 93, 89, -185,
	-185, -185, -185, -185, 227, 224, -396, 305, -396, 279,
	237, -178, -185, 87, -81, 253, 248, -292, -292, 33,
	-185, 401, 612, 610, -140, 139, 258, -158, -150, -128,
	495, -300, 174, 332, 257, 330, 326, 346, 337, 363,
	328, 364, 325, 324, 323, -300, -298, -140, -140, 147,
	-140, 145, -401, -401, -401, -401, -401, -221, -140, -140,
	-140, -401, 174, 332, 14, -140, -140, -140, -140, -369,
	-140, -140, -140, -367, -366, -154, -212, -401, -367, -140,
	-140, -366, -366, -370, -370, -370, -370, -370, -204, -204,
	-204, -204, -400, -281, -93, -92, -91, 573, 238, -90,
	-160, -93, -160, -127, -283, -140, -140, -140, -140, -140,
	-140, -189, -330, -330, -330, -252, 87, -263, 22, 14,
	57, 57, -162, -193, -163, -131, -281, -235, 596, -241,
	46, -239, -240, 47, -236, 48, 56, -318, -318, 165,
	-226, -140, -253, 76, -254, -258, -212, -207, -209, -208,
	-400, -245, -401, -281, -252, -254, -165, -166, -166, -165,
	-166, 66, 66, 66, 71, 66, 71, 66, -182, -287,
	-401, -401, -9, -9, -140, -290, 77, -163, -163, -187,
	-287, 165, 401, 405, 406, -342, -394, 116, 140, 31,
	76, 361, 102, -392, 173, 534, 585, 590, 546, 538,
	580, -393, 240, 133, 134, 252, 25, 41, 88, 87,
	88, 87, 88, 87, -275, -274, -43, -42, -336, -336,
	95, -372, 93, 93, 236, 26, -185, 76, 76, 76,
	-109, 643, 95, 86, -3, 81, -140, 86, 19, -325,
	-212, -360, -312, -361, -313, -314, -5, -6, -337, -112,
	57, 102, -61, 44, 235, 623, 624, 124, -400, 636,
	-352, -246, -356, -358, -185, -143, -400, -142, -144, -151,
	163, 164, -213, -185, -133, 285, 293, 86, -137, 90,
	-374, 77, 276, 361, 276, -397, 306, 93, -397, -185,
	-81, -47, -185, -270, -270, 33, -372, -401, -158, -150,
	-400, -303, 504, -311, -311, -311, -320, -311, 320, -311,
	320, -311, -303, -401, 87, -401, 22, -401, -140, -117,
	443, 87, 87, -401, 86, 86, -140, -401, -401, -401,
	-401, -368, 87, -401, 87, -401, 87, -301, 591, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -89,
	-282, -281, -90, 555, 555, -401, -90, -218, 87, -401,
	-401, 87, -401, 87, 87, -401, 87, -401, 87, -190,
	22, -190, -190, -401, 90, -185, -193, -219, 16, -232,
	51, 338, -243, -242, 55, 47, -240, 19, 49, 19,
	30, -253, 87, 148, 87, -401, -401, 87, 57, 218,
	-401, -193, -176, -175, 76, 77, -177, 76, -175, 66,
	66, -248, -401, -401, 87, -251, -163, -193, -193, 218,
	116, -400, -145, -157, -143, 12, 93, 93, -372, -391,
	627, 628, 31, 95, -336, -336, 134, 134, -185, 86,
	-316, 93, -316, 95, 95, 31, 82, 83, 84, 31,
	78, 79, 80, -185, -185, -185, -185, -357, 86, 19,
	-140, 86, 148, 88, -246, -246, 272, 159, -336, 621,
	278, 278, -336, -336, -336, -111, -110, 643, 88, -401,
	87, -323, 498, 501, -140, -152, -152, -248, 88, -365,
	498, -373, -281, -281, -281, -281, 95, 97, -146, -401,
	-316, -401, -140, -140, -226, 93, -140, -140, 95, 95,
	-401, -401, -367, -366, -140, -401, -173, -172, -174, 604,
	116, 31, -300, -401, -206, 270, -96, -95, -94, 14,
	-401, -140, -140, -140, -140, -140, -140, -400, 66, 18,
	16, -400, -400, -290, -219, -220, 17, 19, -233, 53,
	-231, 52, -231, -242, 19, 19, 93, 19, 93, 134,
	-258, -140, -209, 57, -11, -281, -207, -281, -221, -140,
	86, -140, -154, -193, -193, -140, -199, 467, 469, 470,
	471, 468, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 472, 446, 105, 107, 106, 447, 448, 449,
	489, 492, 493, 491, 490, 347, 348, 450, 451, 452,
	108, 109, 110, 111, 112, 113, 114, 453, 456, 454,
	457, 458, 459, 464, 465, 460, 461, 462, 463, 466,
	483, 484, 485, 486, 487, 488, 592, 593, 594, 595,
	93, 93, 86, -140, 88, 88, -248, -356, -58, 88,
	-246, 95, 88, 273, -208, -400, 93, -336, -336, -336,
	95, 95, -289, -401, 87, -281, -393, -358, 502, 502,
	-401, 25, -364, -363, -283, 86, 77, -121, 159, 498,
	-401, -401, -401, -401, -401, 88, 88, -401, -401, 87,
	-401, -172, -174, -401, 76, -154, -221, 19, -93, 295,
	297, -93, -401, 87, -401, -401, 87, -401, 87, -401,
	-249, -401, -281, 240, 19, 19, -249, -249, -192, -220,
	-103, -102, -101, 528, -140, -204, -234, 54, 76, 119,
	93, 93, 93, 12, -207, 218, -226, -246, -170, 368,
	-221, -401, -246, 88, 25, 88, 645, 134, 88, -208,
	-120, -400, 269, -289, 93, 93, -110, -113, -11, 87,
	148, -246, -185, -401, 496, 73, 499, -140, -401, 76,
	509, 604, -88, -87, -84, 615, 641, -204, -90, -90,
	-140, -140, -140, 87, -401, -401, -401, -103, 87, -100,
	-99, -281, 76, 119, -254, -281, 88, -401, -400, -226,
	88, -230, -11, 86, -3, 269, -312, -361, -313, -314,
	-5, -6, -337, -79, 498, -363, -341, -283, 93, 95,
	88, 62, 497, 500, -368, -86, 142, 613, 588, -141,
	-152, -149, -401, 87, -401, 87, -401, 87, -281, 240,
	-101, 87, 25, -290, -171, -169, -281, 552, -384, -383,
	494, -394, -390, 116, 140, 102, -392, 590, 546, 125,
	126, -79, -140, 86, -401, -80, 284, 600, -374, 62,
	-401, -86, 614, 566, 540, 566, 540, -140, -140, -140,
	-99, -400, -401, 87, 22, -304, -60, 563, -381, -382,
	76, -385, 374, 562, 583, 116, 93, 88, -246, 245,
	-365, 498, 139, -401, 87, -401, 87, -401, -89, -169,
	559, -317, -154, -382, 76, -381, 76, 13, 12, -4,
	644, 88, 286, 499, -86, -140, -140, -401, -59, 26,
	-170, -380, 253, 248, 251, 32, -380, 95, -4, 500,
	-401, -401, 563, 247, 31, 116, -154, -173, -172, -172,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 828,
	828, 828, 0, 828, 0, 0, 828, -2, -2, 828,
	1423, 0, 828, 0, 0, -2, 760, 762, 0, 764,
	-2, 0, 0, 773, 1963, 1963, 823, 0, 0, 0,
	0, 0, 828, 828, 828, 828, 1282, 48, 828, 0,
	83, 84, 779, 780, 781, 63, 0, 1961, 1, 3,
	69, 73, 0, 0, 0, 56, 1291, 0, 76, 0,
	0, 832, 0, 830, 0, 1406, 828, 828, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 574, 501, 553, 499, 538, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	1408, 0, 0, 0, 535, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1309, 153, 1424, 1421, 1422, 38, 39,
	40, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 0, 1400, 0, 687,
	929, 0, 749, 749, 0, 749, 749, 749, 749, 0,
	0, 0, 699, 0, 0, 0, 0, 746, 0, 715,
	716, 0, 746, 0, 722, 752, 0, 727, 749, 749,
	730, 1964, 0, 1964, 1964, 1391, 0, 743, 741, 755,
	756, 759, 763, 0, 768, 771, 1417, 1418, 0, 786,
	47, 1672, 778, 791, 792, 0, 824, 825, 43, 1071,
	0, 951, 956, 967, 982, 983, 984, 985, 986, 988,
	989, 0, 0, 0, 0, 994, 995, 0, 0, 0,
	0, 0, 1052, 1003, 0, 0, 0, 1258, 0, 1219,
	1219, 1085, 1219, 1221, 1221, 1624, 1756, 1764, 1880, 1587,
	1592, 1593, 1594, 1873, 1874, 1875, 1876, 1914, 1915, 1919,
	1684, 0, 0, 0, 1960, 1719, 1727, 1728, 1750, 1846,
	1900, 1681, 1701, 1702, 1828, 1829, 1723, 1724, 1705, 1717,
	1720, 1708, 1709, 1711, 1713, 1718, 1725, 1731, 1710, 1730,
	1729, 0, 1706, 1707, 1712, 1722, 1726, 1714, 1715, 1716,
	1721, 1732, 0, 0, 0, 0, 0, 1160, 1161, 1162,
	1267, 0, 0, 0, 0, 0, 0, 273, 274, 1070,
	1380, 0, 1221, 1221, 1221, 1221, 1221, 1012, 1013, 1014,
	1015, 1016, 1040, 1041, 1047, 1048, 1823, 1824, 1825, 1826,
	1665, 1909, 1673, 1674, 1808, 1809, -2, -2, 219, 220,
	221, 222, 223, 224, 225, 0, 215, 0, 0, 278,
	279, 275, 276, 277, 1054, 1055, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 1963, 0,
	801, 0, 0, 0, 0, 0, 1291, 0, 1283, 1282,
	61, 0, 828, -2, 0, 0, 0, 0, 45, 0,
	50, 888, 75, 74, 1331, 0, 0, 0, 57, 1292,
	65, 67, 1293, 0, 833, 834, 0, 864, 868, 0,
	829, 0, 0, 1407, 1406, 1406, 100, 0, 1896, 1384,
	-2, -2, 0, 0, 1419, 1420, 1393, -2, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, -2, 0, 0,
	165, 166, 0, 41, 404, 0, 161, 0, 397, 338,
	0, 1309, 0, 0, 0, 0, 0, 828, 0, 1401,
	142, 143, 150, 151, 152, 377, 377, 377, 550, 0,
	0, 153, 153, 508, 509, 510, 0, 0, -2, 402,
	0, 488, 0, 0, 391, 391, 395, 393, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 378, 0, 548, 549, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 1410, 0, 525, 526, 0,
	0, 0, 377, 377, 0, 0, 0, 0, 377, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 1322,
	0, 0, 0, -2, 0, 679, 0, 0, 0, 1402,
	1402, 0, 686, 0, 688, 689, 0, 0, 690, 0,
	746, 746, 744, 745, 692, 693, 694, 695, 749, 0,
	0, 386, 387, 388, 746, 749, 0, 749, 749, 749,
	749, 746, 746, 746, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 752, 749, 0, 723, 0,
	724, 725, 728, 729, 731, 1965, 1966, 1439, 1964, 1964,
	735, 739, 1392, 761, 769, 772, 789, 787, 788, 790,
	782, 783, 784, 785, 0, 803, 804, 809, 0, 0,
	0, 0, 815, 816, 817, 0, 0, 820, 821, 822,
	0, 0, 0, 0, 0, 949, 0, 0, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 968, 969, 0, 0, 0, 990, 991, 992,
	993, 996, 0, 0, 0, 1001, 1002, 0, 0, 0,
	0, 0, 1259, 0, 1083, 0, 1084, 1086, 1087, 0,
	1088, 838, 838, 838, 838, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 848, 0, 0, 848, 848, 0, 0,
	0, 208, 209, 210, 211, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 227, 228, 229,
	230, 280, 1267, 0, 1070, 0, 0, 0, 44, 793,
	794, 0, 912, 1412, 0, 0, 844, 0, 55, 64,
	66, 1291, 59, 1291, 0, 850, 0, 0, -2, -2,
	851, 857, 858, 859, 860, 861, 52, 1962, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 350, 1334, 0,
	0, 1284, 1285, 1288, 0, 865, 1762, 869, 0, 871,
	872, 0, 831, 0, 98, 0, 928, 0, 0, 0,
	1896, 1390, 0, 102, 103, 0, 0, 0, 361, 1395,
	1396, 1397, -2, 384, 0, 361, 345, 288, 289, 290,
	338, 292, 338, 338, 338, 338, 350, 350, 350, 350,
	321, 322, 323, 324, 325, 0, 0, 307, 338, 338,
	338, 338, 328, 329, 330, 331, 332, 333, 334, 335,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 340,
	340, 340, 342, 342, 0, 42, 0, 365, 0, 1288,
	0, 0, 1322, 1404, 1414, 0, 0, 0, 1404, 120,
	0, 0, 0, 551, 585, 502, 539, 552, 0, 505,
	506, -2, 0, 0, 487, 0, 489, 0, 385, 0,
	-2, 0, 395, 0, 391, 395, 392, 395, 383, 396,
	529, 530, 531, 0, 533, 534, 615, 898, 0, 0,
	0, 0, 0, 621, 622, 623, 0, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 540, 541, 542,
	543, 544, 545, 546, 547, 0, 0, 0, 0, 489,
	0, 536, 0, 0, 441, 442, 443, 0, 0, 446,
	447, 448, 449, 0, 0, 452, 453, 454, 915, 916,
	455, 456, 481, 482, 483, 457, 458, 459, 460, 461,
	462, 463, 475, 476, 477, 478, 479, 480, 464, 465,
	466, 467, 468, 469, 472, 0, 135, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 0, 0, 0, 0, 847, 930, 1425, 1426,
	750, 751, 0, 389, 390, 749, 749, 696, 736, 0,
	749, 700, 737, 701, 703, 702, 704, 717, 718, 749,
	707, 747, 748, 708, 709, 710, 711, 712, 713, 714,
	732, 719, 720, 721, 753, 0, 757, 758, 733, 734,
	0, 770, 774, 775, 776, 777, 0, 0, 806, 94,
	811, 812, 813, 814, 826, 819, 1072, 946, 947, 948,
	0, 950, 953, 0, 1056, 1058, 955, 957, 1067, 1068,
	1069, 0, 0, 0, 0, 0, 961, 965, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	987, 1235, 1236, 1237, 1004, 281, 282, 0, 1005, 0,
	862, 0, 0, 0, 0, 0, 0, 1265, 1262, 0,
	0, 1220, 1222, 0, 0, 0, 0, 839, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1238, 0,
	0, 0, 0, 0, 1258, 0, 1007, 1008, 1009, 0,
	0, 0, 1121, 0, 0, 0, 0, 1413, 0, 130,
	131, 0, 0, 0, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 1164, 1165,
	1166, 0, 0, 0, 849, 1268, 0, -2, 0, 0,
	0, 0, 0, 1006, 0, 0, 0, 0, 0, 0,
	0, 0, 1188, 0, 0, 0, 1378, 0, 0, 796,
	797, 799, 0, 932, 0, 913, 0, 0, 802, 0,
	843, 0, 846, 58, 60, 855, 856, 0, 873, 852,
	54, 49, 0, 0, 890, 1332, 350, 1354, 0, 359,
	359, 356, 1294, 1295, 0, 1287, 1289, 1290, 77, 870,
	866, 0, 944, 0, 0, 927, 0, 876, 878, 879,
	880, 910, 0, 883, 0, 0, 0, 0, 0, 96,
	929, 1385, 101, 0, 0, 106, 107, 1386, 1387, 1388,
	1389, 0, 574, -2, 436, 167, 169, 170, 171, 162,
	-2, 348, 346, 347, 291, 350, 350, 315, 316, 317,
	318, 319, 320, 0, 0, 308, 309, 310, 311, 302,
	0, 303, 304, 305, 0, 306, 403, 0, 1296, 366,
	367, 369, 377, 0, 372, 373, 0, 377, 377, 0,
	398, 399, 0, 1288, 1313, 0, 0, 0, 1415, 1414,
	1414, 1414, 0, 155, 156, 157, 158, 159, 160, 610,
	0, 0, 586, 608, 609, 153, 0, 0, 163, 491,
	490, 0, 642, 0, 401, 0, 0, 395, 395, 380,
	381, 532, 0, 0, 617, 618, 619, 620, 0, 0,
	0, 518, 430, 0, 519, 520, 489, 491, 0, 0,
	361, 444, 445, 450, 451, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 493, 572, 569, 493, 573, 1310, 1311, 1312, 0,
	0, 680, 0, 0, 427, 92, 1403, 685, 746, 706,
	738, 746, 698, 705, 726, 766, 810, 0, 0, 0,
	0, 818, 0, 0, 954, 1057, 1059, 958, 0, 962,
	966, 0, 0, 0, 0, 0, 0, 0, 1053, 1075,
	1076, 0, 0, 0, 1263, 0, 0, 1082, 1223, 1224,
	1089, 0, 0, 0, 0, 0, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1282, 0, 0, 0,
	0, 0, 1110, 1111, 1112, 1113, 1114, 0, 1116, 0,
	0, 1119, 1120, 1122, 0, 0, 1125, 1126, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 1139,
	1140, 1141, 1142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 1154, 0, 1035, 0, 0, 1035,
	0, 1073, 848, 0, 1225, 1226, 1227, 1228, 1229, 0,
	0, 0, 0, 0, 0, 1186, 1187, 1189, 1268, 1379,
	795, 798, 800, 886, 933, 934, 0, 0, 0, 0,
	914, 1411, 841, 842, 845, -2, 0, 0, 1270, 0,
	0, 873, 944, 874, 0, 853, 51, 889, 0, 1336,
	1335, 1348, 1361, 359, 359, 353, 354, 360, 355, 357,
	358, 1286, 0, 1291, 0, 1372, 0, 0, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 0, 0,
	920, 0, 0, 0, 0, 911, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 362, 363, 144, 153, 438,
	168, 411, 0, 0, 287, 349, 312, 313, 314, 0,
	336, 0, 0, 0, 432, 116, 1300, 1299, 377, 377,
	368, 0, 371, 0, 0, 0, 1416, 339, 400, 0,
	134, 0, 0, 0, 0, 0, 140, 580, 0, 0,
	587, 0, 0, 0, 500, 0, 511, 512, 0, 614,
	-2, 676, 365, 0, 379, 382, 899, 0, 0, 513,
	0, 516, 517, 431, 491, 522, 523, 537, 524, 473,
	474, 471, 0, 0, 1323, 1324, 1329, 1327, 1328, 121,
	558, 560, 559, 563, 0, 0, 495, 0, 495, 556,
	0, 427, 1296, 0, 684, 428, 429, 749, 749, 805,
	95, 0, 808, 0, 0, 0, 0, 959, 963, 863,
	0, 1256, 338, 338, 1243, 338, 342, 1246, 338, 1248,
	338, 1251, 338, 1254, 1255, 1256, 0, 0, 0, 1081,
	1266, 0, 1090, 1091, 1092, 1093, 1094, 1260, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 132,
	133, 1192, 0, 0, 1194, 1196, 1197, 1131, 1193, 0,
	0, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 1034, 0, 1036, 1037, 0, 0, 1156,
	0, 0, 1167, 0, 1269, 0, 0, 0, 0, 0,
	0, 935, 940, 940, 940, 0, 0, 0, 1398, 1399,
	1271, 1272, 944, 1273, 875, 854, 891, 1354, 0, 1347,
	0, -2, 1356, 0, 0, 0, 1362, 351, 352, 867,
	78, 945, 81, 0, 1372, 1381, 0, 1363, 1374, 1376,
	0, 0, 0, 1368, 0, 944, 877, 906, 908, 0,
	903, 918, 919, 921, 0, 923, 0, 925, 926, 888,
	882, 884, 0, 0, 0, 98, 0, 944, 944, 97,
	0, 931, 108, 109, 110, 437, 172, 177, 0, 0,
	0, 182, 0, 184, 0, 0, 0, 189, 190, 377,
	377, 412, 0, 284, 286, 0, 0, 175, 350, 0,
	350, 0, 343, 0, 413, 433, 1297, 1298, 0, 0,
	370, 374, 375, 376, 0, 1405, 136, 0, 0, 0,
	583, 0, 611, 0, 0, 0, 0, 0, 0, 164,
	492, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	0, 377, 0, 0, 0, 377, 377, 377, 0, 668,
	364, 0, 0, 639, 636, 514, 0, 213, 214, 216,
	0, 0, 521, 888, 1314, 1315, 1316, 0, 1326, 1330,
	124, 0, 0, 0, 0, 570, 0, 494, 571, 681,
	682, 683, 93, 691, 697, 807, 827, 952, 960, 964,
	0, 0, 1257, 1241, 350, 1244, 1245, 1247, 1249, 1250,
	1252, 1253, 0, 1000, 0, 1078, 0, 1080, 1264, 1291,
	0, 0, 0, 1108, 0, 0, 0, 1117, 1118, 1123,
	1124, 0, 0, 1130, 0, 1132, 0, 0, 0, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 0,
	1028, 1031, 1155, 1038, 1039, 1044, 1158, 0, 0, 1074,
	1169, 0, 1174, 0, 0, 1180, 0, 1184, 0, 0,
	0, 0, 0, 912, -2, 62, 1273, 1275, 0, 1341,
	1339, 1339, 1349, 1350, 0, 0, 1357, 0, 0, 0,
	0, 82, 0, 0, 0, 1377, 0, 0, 0, 0,
	99, 1282, 900, 907, 0, 0, 901, 0, 902, 922,
	924, 881, -2, 885, 0, 944, 944, 88, 89, 0,
	178, 0, 180, 206, 207, 0, 183, 185, 186, 187,
	193, 194, 195, 188, 0, 0, 283, 285, 0, 0,
	326, 337, 327, 0, 0, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 888, 137, 138, 139, 575, 0, 585,
	0, 0, 0, 578, 0, 503, 0, 0, 0, 377,
	377, 377, 0, 0, 0, 0, 653, 0, 0, 616,
	0, 624, 0, 0, 0, 217, 218, 0, 1325, 557,
	0, 122, 123, 0, 0, 562, 496, 497, 1230, 998,
	1242, 999, 0, 0, 0, 1261, 0, 0, 0, 0,
	1115, 1128, 0, 1195, 0, 1135, 0, 0, 0, 605,
	606, 0, 1191, 1033, 1282, 0, 1035, 1045, 1046, 0,
	1035, 1168, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 0, 0, 932, 1275, 1280, 0, 0, 1344, 0,
	1337, 1340, 1338, 1351, 0, 0, 1358, 0, 1360, 0,
	1382, 1383, 1375, 0, 1367, 1370, 1366, 1369, 1291, 904,
	0, 909, 0, 1282, 87, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 0, 0, 341, 344, 0, 0, 0, 576,
	0, 588, 579, 0, 666, 0, 670, 0, 0, 0,
	673, 674, 675, 652, 0, 656, 405, 640, 637, 638,
	515, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	1077, 1079, 1105, 1106, 1107, 1239, 1240, 1129, 1133, 0,
	1136, 0, 0, 1137, 0, 607, 1024, 0, 0, 1042,
	1043, 0, 1170, 0, 1175, 1176, 0, 1181, 0, 1185,
	0, 937, 894, 895, 942, 943, 0, 0, 887, 1280,
	80, 1281, 1278, 0, 1276, 1274, 1333, 0, 1342, 1343,
	1352, 1353, 1359, 0, 1365, 0, 85, 0, 0, 0,
	1291, 179, 0, 198, 0, 584, 0, 587, 577, 664,
	665, 0, 677, 669, 671, 672, 654, -2, 1317, 0,
	0, 0, 564, 997, 0, 0, 0, 1192, 1138, 0,
	603, 604, 1032, 1025, 0, 1010, 1011, 1029, 1157, 1159,
	0, 0, 0, 0, 936, 938, 939, 79, 0, 1277,
	1050, 0, 1345, 1346, 1373, 1371, 905, 912, 0, 86,
	418, 411, 1317, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 554, 1319, 127, 128, 484, 485, 486,
	121, 1231, 0, 1234, 0, 1026, 0, 0, 0, 0,
	1022, 1023, 1171, 0, 1177, 0, 1182, 0, 896, 897,
	1279, 0, 0, 589, 0, 591, 0, -2, 406, 419,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 678, 0, 1320, 1321, 124, 1232,
	1134, 0, 1017, 1018, 1019, 1020, 1021, 0, 0, 0,
	1051, 1030, 590, 0, 0, 361, 0, 600, 407, 408,
	0, 414, 415, 416, 417, 201, 202, 612, 0, 0,
	561, 0, 0, 1172, 0, 1178, 0, 1183, 0, 592,
	593, 601, 0, 409, 0, 410, 0, 0, 0, 581,
	0, 612, 1318, 0, 1027, 0, 0, 1049, 0, 602,
	598, 420, 422, 423, 0, 0, 421, 613, 582, 1233,
	1173, 1179, 0, 424, 425, 426, 594, 595, 596, 597,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 646,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:654
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:660
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:666
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:670
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:679
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:689
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:695
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:896
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:900
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:934
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:944
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:948
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:954
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:967
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:989
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:993
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:999
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1003
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1007
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1013
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1017
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1021
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1025
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1031
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1035
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1047
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1054
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1067
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1083
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1098
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1103
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1109
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1129
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1135
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1145
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1151
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1158
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1165
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1175
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1180
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1187
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1194
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1205
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1216
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1222
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1226
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1230
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1258
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1262
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1272
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1282
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1288
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1292
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1298
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1308
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1313
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1322
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1346
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1355
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1427
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1457
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1463
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1467
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1471
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1477
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1481
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1807
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1811
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1815
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1821
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1825
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1835
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1839
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1846
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1850
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1854
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1858
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2095
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2104
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2112
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2122
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2143
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2147
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2188
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2217
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2226
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2232
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2242
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2246
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2251
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2255
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2259
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2263
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2271
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2287
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2291
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2295
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2299
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2303
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2370
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2380
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2384
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2390
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2394
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2400
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2404
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2410
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2416
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2420
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2424
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2428
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2441
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2447
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2453
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2459
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2463
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2467
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2472
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2476
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2482
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2488
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2494
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2498
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2502
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2538
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2542
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2551
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2557
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2571
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2765
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2783
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2787
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2796
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2800
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2804
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2812
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2818
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2960
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3200
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3209
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3217
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3226
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3233
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3245
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3254
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3269
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3283
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3287
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3293
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3299
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3305
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3315
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3319
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3325
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3343
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3367
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3373
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3379
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3383
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3387
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3393
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3397
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3402
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3406
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3411
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3415
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3421
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3425
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3429
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3524
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3539
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3543
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3548
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3553
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3558
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3563
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3568
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3574
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3580
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3585
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3591
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3597
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3607
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3612
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3616
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3621
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3626
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3631
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3636
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3642
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3648
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3655
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3662
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3669
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3687
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3693
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3699
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3705
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3711
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3717
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3729
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3751
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3755
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = "extended "
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4039
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4057
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4061
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4071
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4140
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4145
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4162
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4166
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4170
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4174
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4178
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4182
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = yyDollar[1].str
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4259
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4269
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4275
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4279
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4283
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4287
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4398
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			setAllowComments(yylex, true)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4416
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.strs = nil
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4426
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = SQLCacheStr
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4466
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4472
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4476
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4497
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4516
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4521
		{
			yyVAL.strs = nil
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4537
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = SQLCacheStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = DistinctStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = StraightJoinHint
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4573
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4583
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4587
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4591
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4595
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4600
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4620
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4624
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4630
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4636
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4640
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4650
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4654
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4658
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4662
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4668
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4672
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4678
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4682
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4691
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4697
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4707
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4711
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4717
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4721
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4735
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4752
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4756
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4760
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4764
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4772
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4782
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4787
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4813
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4817
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4821
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4827
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4833
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4837
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4841
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4845
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4855
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4894
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4900
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4910
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4914
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4918
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4922
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4927
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4931
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4935
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4939
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5221
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5225
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5229
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5235
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5239
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5246
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5250
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5254
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5258
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5262
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5268
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5272
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5276
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5280
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5284
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5303
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5309
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5313
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5322
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5327
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5336
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5342
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5346
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5358
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5364
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5368
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5374
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5378
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5384
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5388
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5400
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5406
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5410
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5416
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5422
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5426
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5442
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5446
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5453
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5457
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5461
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5465
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5471
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5475
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5479
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5483
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5487
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5491
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5495
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5505
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5509
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5516
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5522
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5526
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6030
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6039
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6045
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6049
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6059
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6067
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6071
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6075
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6083
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6087
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6091
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6095
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6099
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6103
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6107
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6113
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6117
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6121
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6125
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6129
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6133
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6137
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6141
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6145
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6200
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6204
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6208
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6212
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6216
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6244
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6304
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6308
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6332
		{
			yyVAL.str = string("")
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6336
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6342
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6346
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6352
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6367
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6371
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6375
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6404
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6419
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6425
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6429
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6438
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6447
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6453
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6459
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6463
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6469
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6474
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6478
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6482
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6491
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6497
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6501
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6505
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6510
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6514
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6518
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6522
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6526
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6533
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6537
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6541
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6545
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6551
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6555
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6559
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6563
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = ""
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6576
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6580
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6585
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6589
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6599
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6604
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6608
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6613
		{
			yyVAL.str = "cascaded"
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6617
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6630
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6636
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6642
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6648
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6657
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6661
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6666
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6670
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6676
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6680
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6686
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6690
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6694
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = ""
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6703
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6707
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6712
		{
			yyVAL.str = ""
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6716
		{
			yyVAL.str = " header"
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6721
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6725
		{
			yyVAL.str = " manifest on"
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6729
		{
			yyVAL.str = " manifest off"
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6734
		{
			yyVAL.str = ""
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6738
		{
			yyVAL.str = " overwrite on"
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = " overwrite off"
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6748
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6753
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6757
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6767
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6773
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6777
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6782
		{
			yyVAL.str = ""
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6786
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6796
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6806
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6810
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6815
		{
			yyVAL.str = ""
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6819
		{
			yyVAL.str = " optionally"
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6832
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6836
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6840
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6844
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6848
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6854
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6858
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6862
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6866
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6875
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6881
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6885
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6891
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6895
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6901
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6905
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6910
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6920
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6924
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6930
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6936
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6940
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6946
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6950
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6954
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6958
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6962
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6970
		{
			yyVAL.str = "charset"
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7007
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7017
		{
			yyVAL.empty = struct{}{}
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7019
		{
			yyVAL.empty = struct{}{}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7021
		{
			yyVAL.empty = struct{}{}
		}
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7025
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7034
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7041
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7045
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7055
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7062
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7068
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7072
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7078
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7082
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7089
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7650
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7659
		{
			decNesting(yylex)
		}
	case 1963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7664
		{
			skipToEnd(yylex)
		}
	case 1964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7669
		{
			skipToEnd(yylex)
		}
	case 1965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7673
		{
			skipToEnd(yylex)
		}
	case 1966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7677
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
