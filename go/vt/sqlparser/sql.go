// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const BEGIN = 57636
const START = 57637
const TRANSACTION = 57638
const COMMIT = 57639
const ROLLBACK = 57640
const SAVEPOINT = 57641
const RELEASE = 57642
const WORK = 57643
const CONSISTENT = 57644
const SNAPSHOT = 57645
const BIT = 57646
const TINYINT = 57647
const SMALLINT = 57648
const MEDIUMINT = 57649
const INT = 57650
const INTEGER = 57651
const BIGINT = 57652
const INTNUM = 57653
const REAL = 57654
const DOUBLE = 57655
const FLOAT_TYPE = 57656
const DECIMAL_TYPE = 57657
const NUMERIC = 57658
const TIME = 57659
const TIMESTAMP = 57660
const DATETIME = 57661
const YEAR = 57662
const CHAR = 57663
const VARCHAR = 57664
const BOOL = 57665
const CHARACTER = 57666
const VARBINARY = 57667
const NCHAR = 57668
const TEXT = 57669
const TINYTEXT = 57670
const MEDIUMTEXT = 57671
const LONGTEXT = 57672
const BLOB = 57673
const TINYBLOB = 57674
const MEDIUMBLOB = 57675
const LONGBLOB = 57676
const JSON = 57677
const JSON_SCHEMA_VALID = 57678
const JSON_SCHEMA_VALIDATION_REPORT = 57679
const ENUM = 57680
const GEOMETRY = 57681
const POINT = 57682
const LINESTRING = 57683
const POLYGON = 57684
const GEOMCOLLECTION = 57685
const GEOMETRYCOLLECTION = 57686
const MULTIPOINT = 57687
const MULTILINESTRING = 57688
const MULTIPOLYGON = 57689
const ASCII = 57690
const UNICODE = 57691
const NULLX = 57692
const AUTO_INCREMENT = 57693
const APPROXNUM = 57694
const SIGNED = 57695
const UNSIGNED = 57696
const ZEROFILL = 57697
const CODE = 57698
const COLLATION = 57699
const COLUMNS = 57700
const DATABASES = 57701
const ENGINES = 57702
const EVENT = 57703
const EXTENDED = 57704
const FIELDS = 57705
const FULL = 57706
const FUNCTION = 57707
const GTID_EXECUTED = 57708
const KEYSPACES = 57709
const OPEN = 57710
const PLUGINS = 57711
const PRIVILEGES = 57712
const PROCESSLIST = 57713
const SCHEMAS = 57714
const TABLES = 57715
const TRIGGERS = 57716
const USER = 57717
const VGTID_EXECUTED = 57718
const VITESS_KEYSPACES = 57719
const VITESS_METADATA = 57720
const VITESS_MIGRATIONS = 57721
const VITESS_REPLICATION_STATUS = 57722
const VITESS_SHARDS = 57723
const VITESS_TABLETS = 57724
const VITESS_TARGET = 57725
const VSCHEMA = 57726
const VITESS_THROTTLED_APPS = 57727
const NAMES = 57728
const GLOBAL = 57729
const SESSION = 57730
const ISOLATION = 57731
const LEVEL = 57732
const READ = 57733
const WRITE = 57734
const ONLY = 57735
const REPEATABLE = 57736
const COMMITTED = 57737
const UNCOMMITTED = 57738
const SERIALIZABLE = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_DATE = 57742
const NOW = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const CURRENT_USER = 57747
const UTC_DATE = 57748
const UTC_TIME = 57749
const UTC_TIMESTAMP = 57750
const DAY = 57751
const DAY_HOUR = 57752
const DAY_MICROSECOND = 57753
const DAY_MINUTE = 57754
const DAY_SECOND = 57755
const HOUR = 57756
const HOUR_MICROSECOND = 57757
const HOUR_MINUTE = 57758
const HOUR_SECOND = 57759
const MICROSECOND = 57760
const MINUTE = 57761
const MINUTE_MICROSECOND = 57762
const MINUTE_SECOND = 57763
const MONTH = 57764
const QUARTER = 57765
const SECOND = 57766
const SECOND_MICROSECOND = 57767
const YEAR_MONTH = 57768
const WEEK = 57769
const REPLACE = 57770
const CONVERT = 57771
const CAST = 57772
const SUBSTR = 57773
const SUBSTRING = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const WEIGHT_STRING = 57778
const LTRIM = 57779
const RTRIM = 57780
const TRIM = 57781
const JSON_ARRAY = 57782
const JSON_OBJECT = 57783
const JSON_QUOTE = 57784
const JSON_DEPTH = 57785
const JSON_TYPE = 57786
const JSON_LENGTH = 57787
const JSON_VALID = 57788
const JSON_ARRAY_APPEND = 57789
const JSON_ARRAY_INSERT = 57790
const JSON_INSERT = 57791
const JSON_MERGE = 57792
const JSON_MERGE_PATCH = 57793
const JSON_MERGE_PRESERVE = 57794
const JSON_REMOVE = 57795
const JSON_REPLACE = 57796
const JSON_SET = 57797
const JSON_UNQUOTE = 57798
const COUNT = 57799
const AVG = 57800
const MAX = 57801
const MIN = 57802
const SUM = 57803
const GROUP_CONCAT = 57804
const BIT_AND = 57805
const BIT_OR = 57806
const BIT_XOR = 57807
const STD = 57808
const STDDEV = 57809
const STDDEV_POP = 57810
const STDDEV_SAMP = 57811
const VAR_POP = 57812
const VAR_SAMP = 57813
const VARIANCE = 57814
const REGEXP_INSTR = 57815
const REGEXP_LIKE = 57816
const REGEXP_REPLACE = 57817
const REGEXP_SUBSTR = 57818
const ExtractValue = 57819
const UpdateXML = 57820
const GET_LOCK = 57821
const RELEASE_LOCK = 57822
const RELEASE_ALL_LOCKS = 57823
const IS_FREE_LOCK = 57824
const IS_USED_LOCK = 57825
const LOCATE = 57826
const POSITION = 57827
const MATCH = 57828
const AGAINST = 57829
const BOOLEAN = 57830
const LANGUAGE = 57831
const WITH = 57832
const QUERY = 57833
const EXPANSION = 57834
const WITHOUT = 57835
const VALIDATION = 57836
const UNUSED = 57837
const ARRAY = 57838
const BYTE = 57839
const CUME_DIST = 57840
const DESCRIPTION = 57841
const DENSE_RANK = 57842
const EMPTY = 57843
const EXCEPT = 57844
const FIRST_VALUE = 57845
const GROUPING = 57846
const GROUPS = 57847
const JSON_TABLE = 57848
const LAG = 57849
const LAST_VALUE = 57850
const LATERAL = 57851
const LEAD = 57852
const NTH_VALUE = 57853
const NTILE = 57854
const OF = 57855
const OVER = 57856
const PERCENT_RANK = 57857
const RANK = 57858
const RECURSIVE = 57859
const ROW_NUMBER = 57860
const SYSTEM = 57861
const WINDOW = 57862
const ACTIVE = 57863
const ADMIN = 57864
const AUTOEXTEND_SIZE = 57865
const BUCKETS = 57866
const CLONE = 57867
const COLUMN_FORMAT = 57868
const COMPONENT = 57869
const DEFINITION = 57870
const ENFORCED = 57871
const ENGINE_ATTRIBUTE = 57872
const EXCLUDE = 57873
const FOLLOWING = 57874
const GET_MASTER_PUBLIC_KEY = 57875
const HISTOGRAM = 57876
const HISTORY = 57877
const INACTIVE = 57878
const INVISIBLE = 57879
const LOCKED = 57880
const MASTER_COMPRESSION_ALGORITHMS = 57881
const MASTER_PUBLIC_KEY_PATH = 57882
const MASTER_TLS_CIPHERSUITES = 57883
const MASTER_ZSTD_COMPRESSION_LEVEL = 57884
const NESTED = 57885
const NETWORK_NAMESPACE = 57886
const NOWAIT = 57887
const NULLS = 57888
const OJ = 57889
const OLD = 57890
const OPTIONAL = 57891
const ORDINALITY = 57892
const ORGANIZATION = 57893
const OTHERS = 57894
const PARTIAL = 57895
const PATH = 57896
const PERSIST = 57897
const PERSIST_ONLY = 57898
const PRECEDING = 57899
const PRIVILEGE_CHECKS_USER = 57900
const PROCESS = 57901
const RANDOM = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const REUSE = 57909
const ROLE = 57910
const SECONDARY = 57911
const SECONDARY_ENGINE = 57912
const SECONDARY_ENGINE_ATTRIBUTE = 57913
const SECONDARY_LOAD = 57914
const SECONDARY_UNLOAD = 57915
const SIMPLE = 57916
const SKIP = 57917
const SRID = 57918
const THREAD_PRIORITY = 57919
const TIES = 57920
const UNBOUNDED = 57921
const VCPU = 57922
const VISIBLE = 57923
const RETURNING = 57924
const FORMAT_BYTES = 57925
const FORMAT_PICO_TIME = 57926
const PS_CURRENT_THREAD_ID = 57927
const PS_THREAD_ID = 57928
const GTID_SUBSET = 57929
const GTID_SUBTRACT = 57930
const WAIT_FOR_EXECUTED_GTID_SET = 57931
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57932
const FORMAT = 57933
const TREE = 57934
const VITESS = 57935
const TRADITIONAL = 57936
const VTEXPLAIN = 57937
const LOCAL = 57938
const LOW_PRIORITY = 57939
const NO_WRITE_TO_BINLOG = 57940
const LOGS = 57941
const ERROR = 57942
const GENERAL = 57943
const HOSTS = 57944
const OPTIMIZER_COSTS = 57945
const USER_RESOURCES = 57946
const SLOW = 57947
const CHANNEL = 57948
const RELAY = 57949
const EXPORT = 57950
const CURRENT = 57951
const ROW = 57952
const ROWS = 57953
const AVG_ROW_LENGTH = 57954
const CONNECTION = 57955
const CHECKSUM = 57956
const DELAY_KEY_WRITE = 57957
const ENCRYPTION = 57958
const ENGINE = 57959
const INSERT_METHOD = 57960
const MAX_ROWS = 57961
const MIN_ROWS = 57962
const PACK_KEYS = 57963
const PASSWORD = 57964
const FIXED = 57965
const DYNAMIC = 57966
const COMPRESSED = 57967
const REDUNDANT = 57968
const COMPACT = 57969
const ROW_FORMAT = 57970
const STATS_AUTO_RECALC = 57971
const STATS_PERSISTENT = 57972
const STATS_SAMPLE_PAGES = 57973
const STORAGE = 57974
const MEMORY = 57975
const DISK = 57976
const PARTITIONS = 57977
const LINEAR = 57978
const RANGE = 57979
const LIST = 57980
const SUBPARTITION = 57981
const SUBPARTITIONS = 57982
const HASH = 57983

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 156,
	659, 156,
	-2, 164,
	-1, 50,
	135, 164,
	176, 164,
	341, 164,
	-2, 514,
	-1, 57,
	36, 760,
	238, 760,
	249, 760,
	284, 774,
	285, 774,
	-2, 762,
	-1, 62,
	240, 798,
	-2, 796,
	-1, 116,
	237, 1445,
	-2, 130,
	-1, 118,
	1, 157,
	659, 157,
	-2, 164,
	-1, 129,
	136, 400,
	243, 400,
	-2, 503,
	-1, 148,
	135, 164,
	176, 164,
	341, 164,
	-2, 523,
	-1, 800,
	87, 1462,
	-2, 1316,
	-1, 801,
	87, 1463,
	221, 1467,
	-2, 1317,
	-1, 802,
	221, 1466,
	-2, 39,
	-1, 882,
	60, 867,
	-2, 882,
	-1, 968,
	248, 40,
	253, 40,
	-2, 411,
	-1, 1053,
	1, 571,
	659, 571,
	-2, 164,
	-1, 1347,
	221, 1467,
	-2, 1317,
	-1, 1495,
	60, 868,
	-2, 887,
	-1, 1496,
	60, 869,
	-2, 888,
	-1, 1547,
	135, 164,
	176, 164,
	341, 164,
	-2, 450,
	-1, 1626,
	136, 400,
	243, 400,
	-2, 503,
	-1, 1635,
	248, 41,
	253, 41,
	-2, 412,
	-1, 1993,
	221, 1471,
	-2, 1465,
	-1, 1994,
	221, 1467,
	-2, 1463,
	-1, 2094,
	135, 164,
	176, 164,
	341, 164,
	-2, 451,
	-1, 2101,
	26, 185,
	-2, 187,
	-1, 2464,
	78, 95,
	88, 95,
	-2, 946,
	-1, 2532,
	634, 687,
	-2, 661,
	-1, 2699,
	50, 1413,
	-2, 1407,
	-1, 3351,
	634, 687,
	-2, 675,
	-1, 3439,
	23, 1824,
	33, 1824,
	177, 1824,
	260, 1824,
	321, 1824,
	322, 1824,
	323, 1824,
	324, 1824,
	325, 1824,
	326, 1824,
	327, 1824,
	329, 1824,
	330, 1824,
	331, 1824,
	332, 1824,
	333, 1824,
	334, 1824,
	335, 1824,
	336, 1824,
	337, 1824,
	338, 1824,
	339, 1824,
	340, 1824,
	342, 1824,
	344, 1824,
	345, 1824,
	346, 1824,
	347, 1824,
	348, 1824,
	349, 1824,
	350, 1824,
	351, 1824,
	352, 1824,
	355, 1824,
	356, 1824,
	357, 1824,
	358, 1824,
	359, 1824,
	361, 1824,
	362, 1824,
	363, 1824,
	364, 1824,
	505, 1824,
	-2, 619,
}

const yyPrivate = 57344

const yyLast = 47343

var yyAct = [...]int{
	1503, 3510, 3099, 3521, 3100, 811, 3098, 3332, 3416, 804,
	3479, 3437, 674, 3480, 2926, 3069, 2042, 1550, 803, 1860,
	3382, 654, 3405, 2848, 2091, 2751, 2758, 3316, 3264, 2808,
	5, 2813, 2810, 2022, 2809, 2807, 2812, 2811, 2799, 3314,
	2364, 3056, 1116, 2712, 3128, 875, 2828, 2024, 3304, 2398,
	2715, 2658, 2766, 2161, 656, 2827, 2965, 2713, 2716, 3133,
	2959, 2593, 764, 766, 1510, 2437, 684, 2830, 2985, 2065,
	2710, 765, 2062, 2046, 2700, 2424, 1984, 2951, 1065, 930,
	2529, 2497, 771, 2124, 2149, 2129, 2577, 1118, 2449, 2498,
	1604, 1000, 652, 770, 2854, 1955, 39, 2499, 2192, 157,
	2079, 2066, 2400, 38, 1094, 1651, 2067, 1856, 1875, 899,
	2416, 898, 877, 1497, 40, 2569, 2148, 2131, 1814, 143,
	2170, 2054, 2491, 958, 2209, 963, 1539, 2466, 1633, 2069,
	1981, 1519, 1477, 2430, 666, 1359, 94, 1879, 649, 1833,
	1287, 1276, 1750, 1989, 937, 969, 1640, 966, 2146, 98,
	1732, 938, 99, 964, 934, 965, 1538, 1754, 1524, 916,
	2120, 918, 889, 1951, 1343, 1319, 886, 1108, 1990, 79,
	2047, 661, 976, 879, 10, 883, 101, 9, 8, 1759,
	1599, 161, 1114, 121, 93, 884, 119, 120, 126, 1049,
	127, 87, 1625, 911, 901, 887, 885, 660, 100, 3341,
	78, 2522, 1367, 1363, 92, 3511, 2163, 2164, 2165, 3367,
	3057, 2796, 2163, 2520, 906, 910, 2207, 643, 2552, 2551,
	1288, 3049, 89, 1717, 1473, 820, 821, 822, 590, 89,
	892, 122, 3012, 3463, 2818, 3368, 2585, 1002, 2586, 931,
	1888, 902, 1954, 128, 908, 908, 3363, 2252, 1005, 629,
	1019, 1020, 1021, 1821, 1024, 1025, 1026, 1027, 3103, 3362,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 876, 979, 893,
	878, 926, 925, 623, 1820, 644, 820, 821, 822, 1819,
	2816, 3103, 900, 955, 648, 2, 1818, 1006, 1009, 1010,
	122, 1288, 954, 980, 1817, 953, 952, 89, 629, 2019,
	2020, 1816, 1790, 3458, 2396, 1504, 2822, 646, 2696, 647,
	1304, 2818, 184, 2196, 956, 1013, 1836, 1298, 2542, 2426,
	947, 942, 1022, 3531, 2815, 3417, 2662, 105, 106, 107,
	3483, 110, 3478, 3501, 116, 3102, 123, 185, 145, 3423,
	585, 2931, 623, 2930, 3467, 3465, 3447, 2545, 3363, 166,
	3317, 642, 2194, 89, 2365, 1826, 2873, 2195, 122, 3260,
	871, 872, 873, 874, 3445, 3259, 882, 2816, 3102, 3466,
	3464, 1004, 3062, 3451, 3452, 3063, 3492, 1003, 3270, 3461,
	156, 2768, 2769, 3081, 620, 2261, 144, 1278, 3446, 924,
	768, 769, 3269, 2822, 913, 914, 3070, 3346, 1298, 80,
	3423, 3406, 82, 80, 3413, 163, 2189, 3080, 164, 1865,
	3442, 653, 623, 2893, 1614, 2559, 2560, 2819, 946, 2397,
	1294, 948, 2747, 1286, 80, 80, 2584, 132, 133, 155,
	154, 183, 606, 623, 1320, 2475, 2748, 2749, 2474, 2086,
	2087, 2476, 2258, 2085, 604, 1301, 2568, 1302, 1303, 2440,
	2259, 1540, 2140, 1541, 2050, 1111, 2870, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1329, 1328, 1330, 1331, 924, 768,
	769, 1799, 1800, 3146, 2441, 2134, 1084, 89, 1052, 624,
	869, 89, 868, 3333, 601, 1072, 1277, 2523, 2767, 2487,
	1073, 2104, 2103, 615, 2253, 2254, 2256, 2255, 2433, 2434,
	2770, 1294, 89, 89, 2819, 2021, 1048, 623, 611, 2627,
	2962, 1072, 623, 2881, 1089, 1090, 1073, 2879, 951, 3484,
	943, 1085, 623, 2250, 1071, 1078, 1070, 945, 944, 637,
	149, 130, 152, 137, 129, 2850, 150, 151, 623, 1798,
	3485, 951, 167, 1058, 1059, 1802, 635, 641, 624, 2855,
	1536, 173, 138, 2222, 2218, 2220, 2221, 2219, 2223, 2224,
	3292, 2570, 3293, 1023, 1481, 1110, 141, 139, 134, 135,
	136, 140, 2530, 1707, 2171, 1061, 949, 2843, 131, 2215,
	2050, 591, 2555, 593, 607, 2844, 626, 142, 625, 597,
	2210, 595, 599, 608, 600, 1733, 594, 3513, 605, 949,
	1105, 596, 609, 610, 613, 616, 617, 618, 614, 612,
	1086, 603, 627, 1091, 1079, 1087, 1088, 1708, 624, 1709,
	1093, 2133, 1054, 1092, 2851, 2572, 2230, 3051, 2231, 3459,
	2232, 3050, 951, 1047, 2216, 1738, 2233, 1029, 1028, 624,
	2852, 2214, 2048, 2049, 2212, 3244, 989, 3047, 2174, 1293,
	1290, 1291, 1292, 1297, 1299, 1296, 3107, 1295, 987, 2063,
	1068, 960, 1074, 1075, 1076, 1077, 2661, 1289, 998, 184,
	2628, 997, 158, 1618, 1337, 1338, 1339, 1340, 959, 996,
	2525, 995, 960, 2213, 1351, 1112, 1113, 1355, 999, 1334,
	917, 994, 993, 123, 992, 145, 991, 1051, 950, 986,
	1484, 927, 921, 919, 1334, 1106, 166, 2770, 3490, 3525,
	3340, 935, 2521, 624, 3532, 3419, 972, 1101, 624, 1103,
	935, 950, 2259, 1345, 933, 935, 971, 1639, 624, 1751,
	1293, 1290, 1291, 1292, 1297, 1299, 1296, 156, 1295, 2147,
	912, 2576, 1082, 144, 624, 3418, 184, 2557, 1289, 2573,
	153, 2200, 817, 978, 2199, 2193, 1747, 1100, 1102, 817,
	3046, 1279, 163, 1016, 1269, 164, 2789, 978, 2048, 2049,
	123, 957, 1537, 2554, 2589, 2524, 3419, 1612, 1611, 1305,
	927, 921, 919, 166, 1627, 1628, 155, 154, 183, 2273,
	1008, 2489, 990, 1341, 1270, 1271, 971, 1050, 1610, 3450,
	1007, 2871, 2963, 2540, 988, 1748, 3418, 1015, 1360, 2401,
	2403, 146, 950, 1608, 147, 2820, 2821, 589, 584, 2191,
	628, 1719, 1718, 1720, 1721, 1722, 2480, 3329, 2824, 2567,
	3010, 3011, 2566, 3101, 1638, 83, 2999, 817, 3079, 163,
	2544, 621, 164, 3449, 159, 1737, 2981, 1741, 2594, 1739,
	1740, 171, 1742, 1743, 977, 2431, 622, 118, 1098, 1335,
	1336, 2471, 1099, 2436, 2373, 183, 3101, 1868, 977, 2260,
	1528, 1436, 1104, 981, 971, 1505, 1507, 1365, 983, 1366,
	1369, 2137, 984, 982, 2543, 2579, 1063, 149, 1629, 152,
	2578, 1626, 179, 150, 151, 2092, 1097, 88, 1334, 167,
	1471, 88, 2820, 2821, 2579, 2915, 1060, 1057, 173, 2578,
	1472, 920, 1069, 1331, 1488, 2824, 2746, 1095, 978, 978,
	895, 2138, 88, 88, 1760, 113, 1109, 3523, 2136, 3354,
	3524, 2596, 3522, 160, 165, 162, 168, 169, 170, 172,
	174, 175, 176, 177, 1081, 1889, 1067, 1001, 3042, 178,
	180, 181, 182, 2975, 2211, 1083, 1811, 1744, 1542, 1890,
	1487, 2613, 2139, 1880, 1491, 1442, 1443, 1444, 1445, 1446,
	879, 1880, 2135, 2290, 1472, 2402, 167, 1485, 2513, 1489,
	1302, 1303, 1490, 98, 3493, 173, 99, 1304, 1478, 1303,
	920, 3142, 3017, 1734, 3016, 1735, 2178, 114, 1736, 1465,
	2606, 2605, 2604, 2598, 1648, 2602, 1647, 2597, 1304, 2595,
	101, 1637, 978, 2190, 2600, 2188, 1828, 1830, 1831, 977,
	977, 1014, 2183, 2599, 3486, 1011, 971, 974, 975, 158,
	935, 2186, 1520, 1645, 968, 972, 1631, 1615, 1616, 1617,
	1829, 2601, 2603, 989, 1053, 1322, 1323, 1324, 1325, 1326,
	1327, 1329, 1328, 1330, 1331, 967, 987, 2183, 1486, 1506,
	1680, 2187, 3533, 1683, 1096, 1685, 3000, 876, 891, 1606,
	1702, 1761, 1624, 3527, 1509, 1475, 1304, 878, 3252, 1986,
	1684, 3251, 1653, 978, 1654, 1838, 1656, 1658, 1887, 1066,
	1662, 1664, 1666, 1668, 1670, 1643, 2185, 1533, 1534, 1839,
	1332, 1333, 1837, 3242, 1692, 1693, 158, 153, 3384, 3092,
	1698, 1699, 1642, 977, 2265, 2266, 2267, 3322, 981, 971,
	3091, 1607, 1301, 983, 1302, 1303, 629, 984, 982, 1324,
	1325, 1326, 1327, 1329, 1328, 1330, 1331, 1641, 1641, 1634,
	1622, 1756, 1620, 1301, 1621, 1302, 1303, 1764, 985, 3534,
	3024, 1986, 2615, 3385, 1768, 1983, 1770, 1771, 1772, 1773,
	3497, 1504, 3323, 1777, 1985, 1762, 1763, 1492, 146, 1504,
	3023, 147, 820, 821, 822, 1789, 1885, 1688, 815, 1767,
	3076, 3013, 3077, 2797, 977, 1886, 1774, 1775, 1776, 2785,
	971, 974, 975, 1752, 935, 2495, 1758, 2847, 968, 972,
	2494, 159, 1326, 1327, 1329, 1328, 1330, 1331, 171, 2143,
	1728, 1301, 1727, 1302, 1303, 1320, 1304, 1725, 1316, 1714,
	1317, 1712, 1711, 1710, 1700, 122, 1694, 954, 1691, 1320,
	953, 952, 1690, 1613, 1318, 1332, 1333, 1315, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330, 1331, 179,
	1766, 2329, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329,
	1328, 1330, 1331, 1788, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1329, 1328, 1330, 1331, 1689, 1726, 1787, 159, 1304,
	1660, 1724, 1273, 1713, 1536, 171, 3487, 1320, 3349, 2588,
	160, 165, 162, 168, 169, 170, 172, 174, 175, 176,
	177, 1504, 1504, 1807, 3007, 629, 178, 180, 181, 182,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330,
	1331, 2478, 629, 1304, 2159, 2158, 179, 2157, 2156, 3348,
	1842, 1863, 1863, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1306, 2155, 2154, 3326, 1861, 1861, 1864, 2055, 2056, 1513,
	2327, 1301, 3325, 1302, 1303, 1883, 2422, 3512, 1304, 1884,
	1300, 1504, 3342, 3495, 1504, 1304, 39, 160, 165, 162,
	168, 169, 170, 172, 174, 175, 176, 177, 1320, 3324,
	2272, 104, 3247, 178, 180, 181, 182, 3231, 1834, 95,
	1832, 3230, 103, 1947, 102, 1514, 97, 3141, 1345, 3139,
	96, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328,
	1330, 1331, 3474, 1504, 1301, 1881, 1302, 1303, 1300, 1504,
	3278, 1979, 95, 2422, 3412, 2422, 3392, 2422, 3388, 1822,
	1823, 1824, 1825, 96, 3375, 1504, 3060, 3339, 1471, 79,
	1835, 1795, 1796, 3488, 3255, 1504, 2008, 1810, 1472, 3273,
	1808, 1809, 2422, 3243, 104, 1504, 2974, 3088, 1301, 1470,
	1302, 1303, 1504, 1505, 2015, 103, 1469, 102, 1468, 1991,
	3060, 1504, 1840, 2422, 3058, 3277, 97, 3021, 1869, 1870,
	3006, 2183, 1504, 1872, 2856, 908, 908, 1877, 1504, 2979,
	1504, 1882, 2853, 1301, 1982, 1302, 1303, 2039, 2788, 1867,
	1301, 2787, 1302, 1303, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1993, 1874, 1876, 2504, 1930, 1931,
	1932, 1933, 1934, 1935, 1937, 1304, 1942, 2492, 1944, 1945,
	1946, 1467, 1948, 1949, 1950, 1504, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 2205,
	1980, 1991, 1987, 1988, 908, 2101, 908, 908, 908, 908,
	908, 98, 1996, 1997, 99, 2204, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 1992, 2009, 2010, 2011, 2012, 2013,
	2032, 98, 2033, 2045, 99, 2467, 1995, 2144, 2027, 1998,
	1999, 2038, 1891, 1892, 1893, 1894, 1993, 2338, 1504, 3429,
	1504, 1941, 2778, 2777, 2774, 2775, 1905, 2073, 2096, 2774,
	2773, 1952, 1791, 908, 1757, 2110, 2111, 2112, 2113, 2446,
	1504, 2259, 2553, 892, 2026, 1723, 2105, 2095, 2106, 2107,
	2108, 2109, 1715, 2077, 2418, 2051, 2052, 2014, 1603, 2534,
	2527, 2528, 2467, 2037, 2116, 2117, 2118, 2119, 2468, 97,
	1301, 2040, 1302, 1303, 2099, 97, 1304, 1705, 2470, 2172,
	1304, 2090, 2126, 1701, 2058, 1697, 2060, 2132, 1320, 1304,
	1696, 2287, 2422, 2421, 2083, 2082, 1695, 2081, 1304, 2016,
	2283, 1504, 2098, 1515, 2097, 1952, 926, 925, 1866, 1504,
	2169, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328,
	1330, 1331, 1304, 1603, 1602, 2468, 2142, 2283, 1548, 1547,
	1300, 1107, 3235, 3234, 1504, 2259, 2438, 3068, 2531, 1841,
	2128, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 2127, 2141, 2122, 2123, 2145, 2438,
	3427, 1504, 2153, 2197, 2286, 2754, 2177, 2509, 2711, 2180,
	103, 2181, 2184, 3425, 1504, 2741, 2100, 979, 1304, 2974,
	2175, 2176, 3301, 1504, 2976, 2259, 2179, 3380, 1304, 2127,
	2445, 3353, 2422, 2446, 2935, 2776, 2201, 2684, 2084, 2325,
	2202, 2203, 980, 2283, 2338, 2198, 3299, 1504, 2446, 2314,
	2755, 1301, 1641, 1302, 1303, 1301, 2313, 1302, 1303, 2183,
	1943, 2800, 2166, 2053, 1301, 1508, 1302, 1303, 3025, 2017,
	2183, 2974, 1866, 1301, 2757, 1302, 1303, 1812, 1797, 1300,
	1746, 2243, 2244, 1535, 881, 2446, 2246, 962, 961, 2208,
	89, 3455, 2752, 3395, 3266, 2247, 1304, 1301, 1511, 1302,
	1303, 2270, 3296, 1504, 3232, 3153, 1304, 3041, 2276, 2768,
	2769, 2501, 2281, 1504, 1304, 2284, 2753, 2285, 3038, 3026,
	3027, 3028, 2292, 2500, 3019, 1304, 2294, 2295, 2296, 2898,
	2897, 2236, 1605, 2888, 2125, 2845, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2802, 2798, 2535, 2759,
	2121, 2277, 1676, 1301, 2115, 1302, 1303, 2114, 1730, 1636,
	1834, 1632, 89, 1301, 1601, 1302, 1303, 115, 1052, 2849,
	2275, 2501, 2318, 2319, 2320, 2321, 2322, 3267, 2324, 2249,
	3282, 1504, 2326, 2140, 1304, 2030, 2331, 2332, 3507, 2333,
	2950, 1504, 2336, 2257, 2337, 3505, 1993, 1304, 2340, 1504,
	1929, 1304, 2344, 1677, 1678, 1679, 2349, 2350, 2351, 2352,
	3337, 3481, 1835, 2986, 2987, 1793, 2767, 2268, 3361, 2363,
	3287, 2366, 2367, 2989, 2794, 1304, 2793, 2792, 2770, 2369,
	2371, 1301, 2711, 1302, 1303, 2514, 2374, 2375, 2376, 2377,
	2378, 1301, 1304, 1302, 1303, 2237, 2992, 2385, 2386, 1301,
	2387, 1302, 1303, 2390, 2392, 2039, 2289, 2394, 2991, 2291,
	1301, 2730, 1302, 1303, 1304, 2729, 1992, 2406, 2943, 1504,
	2298, 2299, 2300, 2301, 1863, 2733, 3357, 1794, 2731, 3268,
	2734, 2940, 1504, 2732, 1512, 2938, 1504, 1861, 2407, 1921,
	1910, 1911, 1912, 1913, 1923, 1914, 1915, 1916, 1928, 1924,
	1917, 1918, 1925, 1926, 1927, 1919, 1920, 1922, 2044, 2903,
	1504, 2036, 2323, 2405, 2980, 1360, 2689, 3029, 3321, 1301,
	1672, 1302, 1303, 1304, 2688, 3132, 2886, 1504, 2735, 3134,
	2455, 2456, 1301, 2442, 1302, 1303, 1301, 1304, 1302, 1303,
	2970, 2756, 1304, 2967, 2698, 2408, 1304, 2410, 2393, 1504,
	896, 2966, 1304, 2297, 1745, 867, 1304, 2772, 897, 2423,
	1301, 1304, 1302, 1303, 3030, 3031, 3032, 1673, 1674, 1675,
	2312, 2485, 2505, 2701, 2703, 1889, 1304, 1301, 2864, 1302,
	1303, 2461, 2704, 2317, 1272, 1018, 97, 1478, 2500, 1890,
	2395, 1017, 2419, 3123, 2582, 3122, 39, 2280, 2278, 1301,
	95, 1302, 1303, 2541, 2972, 2460, 123, 2279, 2462, 2055,
	2056, 96, 3519, 2790, 2415, 1472, 2420, 1304, 2240, 3434,
	2488, 2490, 3239, 2432, 2526, 2435, 2391, 1504, 3338, 3262,
	2370, 1504, 1520, 2771, 2481, 2465, 2353, 1504, 1304, 2229,
	2345, 1504, 95, 3121, 2459, 1304, 2469, 2041, 2228, 97,
	2227, 2472, 2226, 96, 2225, 2132, 1517, 2479, 1301, 1304,
	1302, 1303, 2482, 904, 905, 2503, 2550, 2952, 2263, 1304,
	2506, 2507, 1301, 102, 1302, 1303, 1304, 1301, 2493, 1302,
	1303, 1301, 3309, 1302, 1303, 1304, 3308, 1301, 2502, 1302,
	1303, 1301, 1304, 1302, 1303, 3290, 1301, 2687, 1302, 1303,
	2269, 2994, 2271, 2548, 1304, 2686, 2510, 2515, 2516, 2517,
	2511, 1301, 104, 1302, 1303, 1304, 2760, 3140, 104, 2547,
	2764, 3138, 1516, 103, 103, 102, 1624, 2763, 3137, 103,
	3043, 102, 3130, 1304, 97, 2591, 3039, 2971, 2617, 2618,
	2619, 2620, 2621, 2945, 2969, 2803, 2167, 2536, 2537, 2960,
	1304, 1619, 1301, 2941, 1302, 1303, 104, 2626, 2546, 903,
	2913, 2765, 1304, 3129, 3508, 2438, 2761, 103, 3111, 2909,
	2418, 2762, 2629, 1301, 2315, 1302, 1303, 2496, 3509, 3508,
	1301, 2607, 1302, 1303, 2571, 2028, 1529, 2580, 2895, 1521,
	2581, 108, 109, 3509, 1301, 2574, 1302, 1303, 2622, 2894,
	3327, 3005, 894, 3, 1301, 2590, 1302, 1303, 91, 1,
	1275, 1301, 1274, 1302, 1303, 3009, 3444, 2891, 602, 2018,
	1301, 1476, 1302, 1303, 3482, 3440, 3441, 1301, 2608, 1302,
	1303, 1716, 2610, 1706, 2389, 3071, 1953, 3263, 2806, 1301,
	2173, 1302, 1303, 2587, 3037, 2130, 2388, 970, 2663, 148,
	1301, 2093, 1302, 1303, 2094, 3408, 2668, 112, 928, 111,
	973, 2665, 908, 1080, 2168, 2611, 2612, 3061, 1301, 2614,
	1302, 1303, 2616, 2486, 2637, 2631, 2102, 1554, 1552, 1553,
	1982, 1551, 1982, 1556, 2720, 1301, 1555, 1302, 1303, 2872,
	2316, 2914, 2623, 2624, 2625, 1801, 636, 1301, 2458, 1302,
	1303, 630, 2738, 186, 2630, 1543, 1522, 2632, 2633, 2634,
	2927, 1012, 592, 2635, 2636, 2779, 2206, 1956, 2638, 2668,
	1304, 2640, 2691, 598, 2642, 2643, 2644, 2645, 2692, 2723,
	1352, 1792, 2646, 1956, 1956, 1956, 1956, 1956, 2740, 2664,
	2685, 2666, 2679, 2473, 2714, 923, 915, 2609, 2029, 2714,
	2683, 908, 2073, 2409, 922, 3240, 2667, 2719, 2669, 2670,
	2671, 2672, 2673, 2674, 2717, 2964, 2690, 2675, 2676, 2697,
	2677, 2699, 2678, 2693, 2425, 2702, 2742, 883, 2695, 2743,
	2073, 2073, 2073, 2073, 2073, 3320, 2736, 884, 2724, 2708,
	2722, 2727, 2826, 3131, 2725, 2726, 3393, 2728, 885, 1756,
	2073, 2705, 2706, 2073, 2384, 2483, 2639, 1518, 2641, 2934,
	98, 2744, 2288, 99, 2680, 2681, 2682, 2709, 1878, 1304,
	2750, 1342, 2070, 3106, 2652, 2653, 2654, 2655, 2866, 2782,
	1827, 658, 2783, 2784, 2805, 2780, 2781, 2647, 2648, 2649,
	2650, 2651, 2739, 1304, 657, 2834, 655, 2804, 2883, 2884,
	2885, 2868, 2887, 2889, 2833, 1301, 801, 1302, 1303, 2132,
	2825, 2411, 2439, 1307, 805, 2399, 2896, 2840, 1304, 1530,
	2450, 2900, 2901, 2902, 2904, 2905, 2906, 2907, 1304, 2448,
	2908, 2447, 2910, 2911, 2912, 2238, 2078, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2860, 2988, 2862,
	2863, 2859, 2801, 2383, 2984, 2932, 2857, 3436, 2936, 189,
	2937, 2939, 189, 2942, 2944, 634, 2946, 2947, 2948, 2949,
	640, 2867, 2877, 2072, 2955, 2874, 2875, 2382, 2876, 2068,
	189, 2878, 2417, 2880, 1304, 2882, 2592, 756, 755, 2929,
	667, 1304, 659, 651, 754, 189, 2933, 753, 3002, 2832,
	3420, 2556, 2381, 1304, 1301, 2846, 1302, 1303, 2558, 2977,
	2978, 2484, 2380, 2982, 2842, 1285, 1304, 1494, 645, 941,
	640, 189, 640, 2869, 1304, 3344, 2262, 2892, 1301, 1304,
	1302, 1303, 1493, 1304, 2451, 2454, 2455, 2456, 2452, 1304,
	2453, 2457, 1908, 1304, 2890, 1909, 2958, 1304, 3351, 2953,
	2954, 2956, 2814, 1301, 3055, 1302, 1303, 2795, 2899, 2532,
	2160, 2961, 65, 1301, 2968, 1302, 1303, 43, 2379, 3315,
	3381, 1304, 752, 2973, 749, 2368, 3108, 3109, 3110, 2983,
	2659, 1304, 2660, 3364, 3365, 1304, 2990, 2362, 748, 3366,
	1936, 1304, 2993, 1282, 3457, 1304, 1803, 90, 2997, 2998,
	2361, 2996, 34, 2995, 33, 1304, 32, 2834, 2360, 3044,
	3045, 3003, 3004, 2359, 31, 1304, 2833, 2358, 3059, 1301,
	30, 1302, 1303, 2357, 25, 2073, 1301, 2356, 1302, 1303,
	24, 2355, 23, 22, 21, 3065, 3066, 3020, 1301, 3022,
	1302, 1303, 27, 20, 19, 18, 3014, 3015, 2817, 3477,
	1304, 1301, 3518, 1302, 1303, 2354, 117, 52, 49, 1301,
	3078, 1302, 1303, 3082, 1301, 2348, 1302, 1303, 1301, 2347,
	1302, 1303, 47, 125, 1301, 2346, 1302, 1303, 1301, 2343,
	1302, 1303, 1301, 124, 1302, 1303, 50, 46, 1055, 2342,
	3093, 44, 1304, 29, 28, 17, 3067, 16, 3048, 2341,
	1304, 15, 3052, 3053, 3054, 3097, 1301, 14, 1302, 1303,
	13, 12, 11, 7, 6, 37, 1301, 3105, 1302, 1303,
	1301, 36, 1302, 1303, 35, 3112, 1301, 3040, 1302, 1303,
	1301, 1806, 1302, 1303, 2339, 26, 4, 2519, 2162, 3083,
	1301, 0, 1302, 1303, 0, 0, 0, 0, 0, 0,
	1301, 0, 1302, 1303, 0, 0, 1502, 1498, 0, 0,
	3064, 0, 2451, 2454, 2455, 2456, 2452, 3104, 2453, 2457,
	0, 1499, 2986, 2987, 0, 0, 2335, 0, 0, 3126,
	0, 0, 0, 0, 2334, 1301, 0, 1302, 1303, 0,
	1863, 0, 0, 0, 3087, 0, 2034, 2035, 1501, 3147,
	1500, 0, 0, 1861, 3155, 0, 0, 0, 0, 3127,
	0, 3136, 0, 3135, 0, 3084, 0, 3085, 1304, 3151,
	3086, 3149, 3143, 3089, 3090, 3145, 0, 1301, 2714, 1302,
	1303, 0, 3094, 1304, 0, 1301, 0, 1302, 1303, 1304,
	0, 0, 3096, 1304, 0, 0, 3254, 0, 3241, 2717,
	3159, 3156, 3157, 2717, 0, 3261, 816, 0, 0, 81,
	0, 0, 39, 0, 3113, 0, 0, 3114, 0, 3115,
	3116, 0, 3117, 0, 3118, 3271, 3272, 0, 3274, 3119,
	3275, 3276, 0, 3238, 3237, 3279, 3280, 3281, 3236, 3283,
	3286, 3284, 3253, 3285, 0, 0, 0, 3258, 0, 1863,
	0, 3257, 2330, 3265, 3144, 3295, 3297, 3298, 3300, 3302,
	3303, 3305, 1861, 3288, 0, 3152, 0, 2328, 3154, 0,
	3245, 0, 0, 2293, 3095, 0, 0, 2282, 0, 0,
	3158, 3248, 3249, 3250, 0, 0, 880, 0, 81, 0,
	0, 0, 3289, 0, 1502, 1498, 0, 0, 3233, 3335,
	3291, 0, 0, 1301, 3294, 1302, 1303, 880, 0, 1499,
	3331, 0, 3313, 3310, 3311, 0, 3312, 0, 1301, 0,
	1302, 1303, 940, 0, 1301, 0, 1302, 1303, 1301, 0,
	1302, 1303, 0, 0, 1495, 1496, 1501, 3328, 1500, 0,
	0, 189, 3334, 189, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	0, 0, 0, 0, 0, 0, 640, 0, 640, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3336,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 189,
	0, 0, 0, 3330, 0, 0, 0, 0, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3355, 0, 3360, 1347, 0, 0, 0,
	0, 0, 0, 3352, 0, 0, 3347, 3350, 0, 0,
	0, 0, 0, 0, 0, 3376, 0, 0, 0, 0,
	0, 3377, 3378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3343, 0, 0,
	0, 0, 3370, 3389, 0, 3371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3379, 0, 3319, 39, 0, 0, 3414,
	3415, 0, 0, 0, 0, 0, 0, 0, 0, 3394,
	0, 3386, 0, 3424, 3426, 3428, 3421, 0, 0, 3422,
	3396, 3399, 3407, 3404, 3401, 0, 3400, 3398, 3403, 3402,
	0, 2714, 0, 0, 0, 0, 3265, 3409, 3456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3432, 0,
	0, 0, 3358, 0, 0, 0, 0, 3453, 0, 3443,
	3448, 0, 0, 3435, 0, 0, 3462, 3421, 1347, 0,
	3422, 0, 39, 0, 0, 3372, 3460, 3473, 3373, 0,
	3374, 0, 0, 0, 0, 1355, 3391, 0, 0, 0,
	0, 0, 0, 0, 3471, 0, 3476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3494,
	3496, 3498, 3489, 0, 0, 0, 3491, 0, 0, 0,
	0, 0, 0, 1863, 0, 189, 3500, 3499, 0, 640,
	640, 3506, 0, 3504, 0, 0, 1861, 3503, 0, 0,
	3517, 3502, 3514, 3421, 0, 189, 3422, 3359, 0, 0,
	0, 3520, 0, 3526, 3528, 3369, 3529, 3530, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 189, 0,
	0, 0, 0, 0, 3454, 0, 0, 1863, 3537, 3538,
	640, 3285, 3536, 0, 0, 0, 189, 0, 0, 0,
	1861, 3535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3468, 0, 3469, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 640, 640, 0, 640, 0, 640, 640, 0,
	640, 640, 640, 640, 640, 640, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 1347, 640, 1347, 189,
	0, 0, 0, 0, 3515, 0, 3516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	189, 0, 0, 0, 0, 0, 1115, 0, 1115, 1115,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 640, 3475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 0, 880, 1344, 1349, 1350, 0,
	1353, 0, 1354, 1356, 1357, 1358, 0, 1361, 1362, 1364,
	1364, 0, 1364, 1368, 1368, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	0, 0, 0, 0, 1435, 0, 1437, 1438, 1439, 1440,
	1441, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	1368, 1368, 1368, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1559, 0, 0, 0,
	0, 0, 0, 0, 1474, 640, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1480, 0, 0,
	0, 0, 0, 880, 0, 0, 0, 880, 0, 0,
	0, 640, 0, 880, 0, 0, 0, 0, 0, 1572,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 1588, 1589, 1590, 1591, 1592, 1593, 0, 1594, 1595,
	1596, 1597, 1598, 1573, 1574, 1575, 1576, 1557, 1558, 1586,
	0, 1560, 0, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 0, 1994, 1570, 1577, 1578, 1579, 1580, 0,
	1581, 1582, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 189, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 640, 0, 0, 1994, 189, 0, 189, 0,
	189, 189, 3177, 3179, 3178, 3196, 3197, 3198, 3199, 3200,
	3201, 3202, 706, 0, 0, 640, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 1587, 0, 183, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 123, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 640, 0, 0, 0, 640,
	640, 0, 1627, 1628, 155, 154, 183, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 1115, 0, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 81,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 189, 0, 0, 189, 0, 189,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 3183, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 619, 3191, 3192, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 149, 1629, 152, 640, 1626,
	0, 150, 151, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 639, 0, 639, 0, 0, 0, 0, 772,
	0, 685, 776, 687, 773, 774, 0, 683, 686, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 705, 3176, 3180, 3181,
	3182, 3193, 3194, 3195, 3203, 3205, 737, 3204, 3206, 3207,
	3208, 3211, 3212, 3213, 3214, 3209, 3210, 3215, 3160, 3164,
	3161, 3162, 3163, 3175, 3165, 3166, 3167, 3168, 3169, 3170,
	3171, 3172, 3173, 3174, 3216, 3217, 3218, 3219, 3220, 3221,
	3186, 3190, 3189, 3187, 3188, 3184, 3185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 777,
	0, 778, 0, 0, 782, 0, 0, 0, 784, 783,
	0, 785, 751, 750, 0, 0, 779, 780, 0, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 189, 153, 0, 0, 0, 0,
	0, 0, 189, 0, 3222, 3223, 3224, 3225, 3226, 3227,
	3228, 3229, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 179, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 189, 0, 0, 146, 0, 0, 147,
	0, 0, 0, 940, 0, 0, 0, 0, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 0,
	0, 0, 0, 0, 178, 180, 181, 182, 0, 159,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1559, 640, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 189,
	189, 189, 189, 189, 178, 180, 181, 182, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 640, 0, 0,
	1585, 1588, 1589, 1590, 1591, 1592, 1593, 0, 1594, 1595,
	1596, 1597, 1598, 1573, 1574, 1575, 1576, 1557, 1558, 1586,
	0, 1560, 0, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 2274, 0, 1570, 1577, 1578, 1579, 1580, 0,
	1581, 1582, 1583, 1584, 640, 0, 0, 80, 41, 42,
	82, 0, 0, 0, 0, 0, 0, 0, 639, 1268,
	639, 639, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 45, 71, 72, 0, 69, 73, 0, 0, 0,
	639, 0, 640, 0, 70, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 1347, 2372, 0,
	640, 640, 1347, 189, 189, 189, 189, 189, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 189, 0, 189, 1587, 0, 189, 189, 189, 0,
	2404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 880, 0,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2443,
	2444, 189, 0, 0, 0, 0, 0, 0, 2071, 0,
	0, 880, 2463, 0, 640, 0, 0, 1347, 0, 0,
	1346, 0, 640, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 48, 51, 54, 53, 56, 0, 68,
	0, 189, 77, 74, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 189, 0, 57, 85, 84, 0, 0,
	66, 67, 55, 0, 0, 0, 0, 0, 75, 76,
	0, 639, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 59,
	60, 2539, 61, 62, 63, 64, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 639, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 1346, 1646,
	0, 0, 1649, 1650, 639, 639, 0, 639, 0, 639,
	639, 0, 639, 639, 639, 639, 639, 639, 0, 0,
	0, 0, 0, 0, 0, 1346, 1681, 1682, 1346, 639,
	1346, 0, 1687, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 639, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	639, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 640,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 640, 640, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2718, 0,
	81, 0, 0, 2071, 2071, 2071, 2071, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 640, 0, 640, 2823,
	0, 0, 0, 0, 0, 0, 0, 639, 639, 2831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 640, 0, 0,
	0, 0, 1871, 0, 639, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 639, 0, 0, 0,
	1117, 0, 1117, 1117, 0, 0, 0, 640, 0, 0,
	0, 640, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 0, 1986, 0, 0, 819, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 3001, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 189, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 189, 0, 0, 639, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 1347, 0, 640, 0, 0, 2150,
	2151, 2152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 640, 0, 0, 0, 639, 1644, 0, 0, 1644,
	0, 1644, 0, 1482, 1483, 0, 0, 2182, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3120, 1526,
	3124, 3125, 639, 0, 0, 0, 0, 639, 0, 0,
	0, 639, 639, 0, 1544, 0, 0, 0, 0, 0,
	0, 0, 0, 2718, 0, 81, 0, 2718, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 640, 0, 0, 0, 0, 1652, 1652, 0, 1652,
	0, 1652, 1652, 0, 1661, 1652, 1652, 1652, 1652, 1652,
	0, 0, 0, 0, 3246, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 639, 0, 0,
	0, 0, 0, 2718, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3345, 0, 0, 0, 758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 588, 0, 0, 0, 639, 0, 0, 0, 1117,
	1117, 0, 0, 0, 0, 0, 639, 0, 0, 588,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	3390, 0, 0, 0, 890, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 909, 909, 0, 0, 0, 0, 0, 0, 0,
	588, 2477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 1907, 0,
	0, 3472, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 639, 587, 0, 0, 1644, 1644, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 0, 0, 1346, 2549,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 1117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 932,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 639, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 1346,
	0, 0, 639, 639, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 0, 0, 0, 1857,
	0, 0, 0, 1857, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 1346,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 588, 0, 0, 588, 0, 0, 89, 0,
	0, 818, 2251, 0, 0, 806, 819, 820, 821, 822,
	807, 0, 0, 808, 809, 2865, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	815, 823, 824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 0, 0, 0, 1348, 0, 2835, 2836, 0,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 0, 0, 1056, 0, 1062, 0, 0, 1064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3008, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 639, 0, 0, 0, 0, 2412, 0, 0,
	0, 0, 0, 0, 0, 2838, 2839, 0, 2427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 639, 639,
	639, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 776,
	0, 773, 774, 0, 0, 588, 775, 0, 0, 0,
	0, 2508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 2533, 0, 0, 0, 0,
	0, 0, 0, 0, 2538, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 639, 0,
	639, 0, 1348, 0, 0, 1348, 0, 1348, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	639, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 1857, 0, 0, 0, 588, 639, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 639,
	0, 1778, 1779, 588, 588, 588, 588, 588, 588, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 639, 639, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 2657, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2694, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 1769, 0, 1117, 0, 0,
	0, 0, 0, 0, 2721, 1652, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 932, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 1346, 0, 639, 0,
	0, 0, 909, 909, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 909, 1755, 909, 909, 909, 909, 909, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2928, 0, 0,
	0, 0, 639, 89, 0, 0, 818, 0, 0, 0,
	806, 819, 820, 821, 822, 807, 0, 0, 808, 809,
	0, 810, 0, 0, 639, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 823, 824, 0, 0,
	909, 639, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 1755, 588, 0, 588, 0, 588,
	2080, 0, 2835, 2836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 0, 0, 0, 0,
	0, 0, 0, 2043, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3072, 3073, 3074, 3075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 2061, 0,
	2064, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 2839, 818, 0, 0, 0, 0, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 588, 0, 0, 588, 0, 2241, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	3148, 0, 3150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 1348, 0, 1755, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 2234, 2235, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 2242, 0,
	0, 0, 0, 0, 0, 2245, 0, 0, 0, 0,
	0, 3306, 0, 0, 0, 3306, 3306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 1117, 1117, 0, 0, 0, 2518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 588,
	588, 588, 588, 0, 0, 2464, 0, 0, 0, 0,
	0, 0, 0, 0, 3383, 0, 0, 0, 0, 0,
	0, 0, 588, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 2928, 0, 3438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 0, 0, 0, 2512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2561, 2562, 2563, 2564, 2565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 0, 0, 0, 1815, 2575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 1348, 588, 588, 588, 588, 588, 0, 0, 0,
	0, 0, 0, 0, 2737, 0, 0, 0, 0, 0,
	1703, 0, 588, 0, 0, 588, 2745, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2829,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2858, 0, 0, 2861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 588, 588,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3033, 0,
	0, 3034, 3035, 3036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 381, 0, 0, 0, 1251, 1236,
	498, 0, 1179, 1254, 1148, 1167, 1264, 1170, 1173, 1215,
	1127, 1193, 400, 1164, 1120, 1152, 1122, 1159, 1123, 1150,
	1181, 258, 1147, 1238, 1197, 1253, 351, 255, 1129, 1153,
	414, 1169, 196, 1217, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 1260, 355,
	1203, 0, 477, 385, 0, 1703, 0, 1183, 1242, 1191,
	1229, 1178, 1216, 1137, 1202, 1255, 1165, 1212, 1256, 310,
	238, 312, 195, 397, 478, 274, 3356, 0, 0, 0,
	3410, 629, 0, 0, 0, 0, 3411, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 1161, 1209,
	1250, 1162, 1211, 253, 308, 260, 252, 503, 1261, 1241,
	1126, 1190, 1249, 0, 0, 219, 1252, 1185, 0, 1214,
	0, 1267, 1121, 1205, 0, 1124, 1128, 1263, 1245, 1156,
	263, 0, 0, 0, 0, 0, 0, 0, 1182, 1192,
	1226, 1230, 1176, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 1201, 0, 0, 0, 1133, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1136, 0, 1155, 1227, 0,
	1119, 285, 1130, 386, 245, 0, 1234, 1244, 1177, 543,
	1248, 1175, 1174, 1221, 1134, 1240, 1168, 350, 1132, 317,
	191, 215, 0, 1166, 396, 442, 454, 1239, 1151, 1160,
	243, 1158, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 1200, 1219, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 1131, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 1146, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1235,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 1224, 1266,
	409, 453, 230, 524, 476, 1141, 1145, 1139, 1206, 1140,
	1195, 1196, 1142, 1257, 1258, 1259, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 1228, 1135, 0, 1143, 1144,
	1237, 1246, 1247, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1199, 190, 211, 353, 1262, 435, 276,
	561, 534, 529, 197, 213, 1138, 250, 1149, 1157, 0,
	1163, 1171, 1172, 1184, 1186, 1187, 1188, 1189, 1207, 1208,
	1210, 1218, 1220, 1223, 1225, 1232, 1243, 1265, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 1198, 1204, 366, 269, 292, 307,
	1213, 533, 482, 217, 447, 278, 241, 1231, 1233, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1194, 1222, 361, 499, 500, 303, 381,
	0, 0, 0, 1251, 1236, 498, 0, 1179, 1254, 1148,
	1167, 1264, 1170, 1173, 1215, 1127, 1193, 400, 1164, 1120,
	1152, 1122, 1159, 1123, 1150, 1181, 258, 1147, 1238, 1197,
	1253, 351, 255, 1129, 1153, 414, 1169, 196, 1217, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1260, 355, 1203, 0, 477, 385, 0,
	0, 0, 1183, 1242, 1191, 1229, 1178, 1216, 1137, 1202,
	1255, 1165, 1212, 1256, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1161, 1209, 1250, 1162, 1211, 253, 308,
	260, 252, 503, 1261, 1241, 1126, 1190, 1249, 0, 0,
	219, 1252, 1185, 0, 1214, 0, 1267, 1121, 1205, 0,
	1124, 1128, 1263, 1245, 1156, 263, 0, 0, 0, 0,
	0, 0, 0, 1182, 1192, 1226, 1230, 1176, 0, 0,
	0, 0, 0, 2746, 0, 1154, 0, 1201, 0, 0,
	0, 1133, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	1136, 0, 1155, 1227, 0, 1119, 285, 1130, 386, 245,
	0, 1234, 1244, 1177, 543, 1248, 1175, 1174, 1221, 1134,
	1240, 1168, 350, 1132, 317, 191, 215, 0, 1166, 396,
	442, 454, 1239, 1151, 1160, 243, 1158, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1200, 1219, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 1131, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 1146, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 1235, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 1224, 1266, 409, 453, 230, 524, 476,
	1141, 1145, 1139, 1206, 1140, 1195, 1196, 1142, 1257, 1258,
	1259, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	1228, 1135, 0, 1143, 1144, 1237, 1246, 1247, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 1199, 190,
	211, 353, 1262, 435, 276, 561, 534, 529, 197, 213,
	1138, 250, 1149, 1157, 0, 1163, 1171, 1172, 1184, 1186,
	1187, 1188, 1189, 1207, 1208, 1210, 1218, 1220, 1223, 1225,
	1232, 1243, 1265, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 1198,
	1204, 366, 269, 292, 307, 1213, 533, 482, 217, 447,
	278, 241, 1231, 1233, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 1194, 1222,
	361, 499, 500, 303, 381, 0, 0, 0, 1251, 1236,
	498, 0, 1179, 1254, 1148, 1167, 1264, 1170, 1173, 1215,
	1127, 1193, 400, 1164, 1120, 1152, 1122, 1159, 1123, 1150,
	1181, 258, 1147, 1238, 1197, 1253, 351, 255, 1129, 1153,
	414, 1169, 196, 1217, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 1260, 355,
	1203, 0, 477, 385, 0, 0, 0, 1183, 1242, 1191,
	1229, 1178, 1216, 1137, 1202, 1255, 1165, 1212, 1256, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 1161, 1209,
	1250, 1162, 1211, 253, 308, 260, 252, 503, 1261, 1241,
	1126, 1190, 1249, 0, 0, 219, 1252, 1185, 0, 1214,
	0, 1267, 1121, 1205, 0, 1124, 1128, 1263, 1245, 1156,
	263, 0, 0, 0, 0, 0, 0, 0, 1182, 1192,
	1226, 1230, 1176, 0, 0, 0, 0, 0, 2707, 0,
	1154, 0, 1201, 0, 0, 0, 1133, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1136, 0, 1155, 1227, 0,
	1119, 285, 1130, 386, 245, 0, 1234, 1244, 1177, 543,
	1248, 1175, 1174, 1221, 1134, 1240, 1168, 350, 1132, 317,
	191, 215, 0, 1166, 396, 442, 454, 1239, 1151, 1160,
	243, 1158, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 1200, 1219, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 1131, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 1146, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1235,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 1224, 1266,
	409, 453, 230, 524, 476, 1141, 1145, 1139, 1206, 1140,
	1195, 1196, 1142, 1257, 1258, 1259, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 1228, 1135, 0, 1143, 1144,
	1237, 1246, 1247, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1199, 190, 211, 353, 1262, 435, 276,
	561, 534, 529, 197, 213, 1138, 250, 1149, 1157, 0,
	1163, 1171, 1172, 1184, 1186, 1187, 1188, 1189, 1207, 1208,
	1210, 1218, 1220, 1223, 1225, 1232, 1243, 1265, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 1198, 1204, 366, 269, 292, 307,
	1213, 533, 482, 217, 447, 278, 241, 1231, 1233, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1194, 1222, 361, 499, 500, 303, 381,
	0, 0, 0, 1251, 1236, 498, 0, 1179, 1254, 1148,
	1167, 1264, 1170, 1173, 1215, 1127, 1193, 400, 1164, 1120,
	1152, 1122, 1159, 1123, 1150, 1181, 258, 1147, 1238, 1197,
	1253, 351, 255, 1129, 1153, 414, 1169, 196, 1217, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1260, 355, 1203, 0, 477, 385, 0,
	0, 0, 1183, 1242, 1191, 1229, 1178, 1216, 1137, 1202,
	1255, 1165, 1212, 1256, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1161, 1209, 1250, 1162, 1211, 253, 308,
	260, 252, 503, 1261, 1241, 1126, 1190, 1249, 0, 0,
	219, 1252, 1185, 0, 1214, 0, 1267, 1121, 1205, 0,
	1124, 1128, 1263, 1245, 1156, 263, 0, 0, 0, 0,
	0, 0, 0, 1182, 1192, 1226, 1230, 1176, 0, 0,
	0, 0, 0, 2059, 0, 1154, 0, 1201, 0, 0,
	0, 1133, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	1136, 0, 1155, 1227, 0, 1119, 285, 1130, 386, 245,
	0, 1234, 1244, 1177, 543, 1248, 1175, 1174, 1221, 1134,
	1240, 1168, 350, 1132, 317, 191, 215, 0, 1166, 396,
	442, 454, 1239, 1151, 1160, 243, 1158, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1200, 1219, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 1131, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 1146, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 1235, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 1224, 1266, 409, 453, 230, 524, 476,
	1141, 1145, 1139, 1206, 1140, 1195, 1196, 1142, 1257, 1258,
	1259, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	1228, 1135, 0, 1143, 1144, 1237, 1246, 1247, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 1199, 190,
	211, 353, 1262, 435, 276, 561, 534, 529, 197, 213,
	1138, 250, 1149, 1157, 0, 1163, 1171, 1172, 1184, 1186,
	1187, 1188, 1189, 1207, 1208, 1210, 1218, 1220, 1223, 1225,
	1232, 1243, 1265, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 1198,
	1204, 366, 269, 292, 307, 1213, 533, 482, 217, 447,
	278, 241, 1231, 1233, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 1194, 1222,
	361, 499, 500, 303, 381, 0, 0, 0, 1251, 1236,
	498, 0, 1179, 1254, 1148, 1167, 1264, 1170, 1173, 1215,
	1127, 1193, 400, 1164, 1120, 1152, 1122, 1159, 1123, 1150,
	1181, 258, 1147, 1238, 1197, 1253, 351, 255, 1129, 1153,
	414, 1169, 196, 1217, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 1260, 355,
	1203, 0, 477, 385, 0, 0, 0, 1183, 1242, 1191,
	1229, 1178, 1216, 1137, 1202, 1255, 1165, 1212, 1256, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 1161, 1209,
	1250, 1162, 1211, 253, 308, 260, 252, 503, 1261, 1241,
	1126, 1190, 1249, 0, 0, 219, 1252, 1185, 0, 1214,
	0, 1267, 1121, 1205, 0, 1124, 1128, 1263, 1245, 1156,
	263, 0, 0, 0, 0, 0, 0, 0, 1182, 1192,
	1226, 1230, 1176, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 1201, 0, 0, 0, 1133, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1136, 0, 1155, 1227, 0,
	1119, 285, 1130, 386, 245, 0, 1234, 1244, 1177, 543,
	1248, 1175, 1174, 1221, 1134, 1240, 1168, 350, 1132, 317,
	191, 215, 0, 1166, 396, 442, 454, 1239, 1151, 1160,
	243, 1158, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 1200, 1219, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 1131, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 1146, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1235,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 1224, 1266,
	409, 453, 230, 524, 476, 1141, 1145, 1139, 1206, 1140,
	1195, 1196, 1142, 1257, 1258, 1259, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 1228, 1135, 0, 1143, 1144,
	1237, 1246, 1247, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1199, 190, 211, 353, 1262, 435, 276,
	561, 534, 529, 197, 213, 1138, 250, 1149, 1157, 0,
	1163, 1171, 1172, 1184, 1186, 1187, 1188, 1189, 1207, 1208,
	1210, 1218, 1220, 1223, 1225, 1232, 1243, 1265, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 1198, 1204, 366, 269, 292, 307,
	1213, 533, 482, 217, 447, 278, 241, 1231, 1233, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1194, 1222, 361, 499, 500, 303, 381,
	0, 0, 0, 1251, 1236, 498, 0, 1179, 1254, 1148,
	1167, 1264, 1170, 1173, 1215, 1127, 1193, 400, 1164, 1120,
	1152, 1122, 1159, 1123, 1150, 1181, 258, 1147, 1238, 1197,
	1253, 351, 255, 1129, 1153, 414, 1169, 196, 1217, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1260, 355, 1203, 0, 477, 385, 0,
	0, 0, 1183, 1242, 1191, 1229, 1178, 1216, 1137, 1202,
	1255, 1165, 1212, 1256, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1161, 1209, 1250, 1162, 1211, 253, 308,
	260, 252, 503, 1261, 1241, 1126, 1190, 1249, 0, 0,
	219, 1252, 1185, 0, 1214, 0, 1267, 1121, 1205, 0,
	1124, 1128, 1263, 1245, 1156, 263, 0, 0, 0, 0,
	0, 0, 0, 1182, 1192, 1226, 1230, 1176, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 1201, 0, 0,
	0, 1133, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	1136, 0, 1155, 1227, 0, 1119, 285, 1130, 386, 245,
	0, 1234, 1244, 1177, 543, 1248, 1175, 1174, 1221, 1134,
	1240, 1168, 350, 1132, 317, 191, 215, 0, 1166, 396,
	442, 454, 1239, 1151, 1160, 243, 1158, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1200, 1219, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 1131, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 1146, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 1235, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 1224, 1266, 409, 453, 230, 524, 476,
	1141, 1145, 1139, 1206, 1140, 1195, 1196, 1142, 1257, 1258,
	1259, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	1228, 1135, 0, 1143, 1144, 1237, 1246, 1247, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 1199, 190,
	211, 353, 1262, 435, 276, 561, 534, 529, 197, 213,
	1138, 250, 1149, 1157, 0, 1163, 1171, 1172, 1184, 1186,
	1187, 1188, 1189, 1207, 1208, 1210, 1218, 1220, 1223, 1225,
	1232, 1243, 1265, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 1198,
	1204, 366, 269, 292, 307, 1213, 533, 482, 217, 447,
	278, 241, 1231, 1233, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 1194, 1222,
	361, 499, 500, 303, 381, 0, 0, 0, 1251, 1236,
	498, 0, 1179, 1254, 1148, 1167, 1264, 1170, 1173, 1215,
	1127, 1193, 400, 1164, 1120, 1152, 1122, 1159, 1123, 1150,
	1181, 258, 1147, 1238, 1197, 1253, 351, 255, 1129, 1153,
	414, 1169, 196, 1217, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 1260, 355,
	1203, 0, 477, 385, 0, 0, 0, 1183, 1242, 1191,
	1229, 1178, 1216, 1137, 1202, 1255, 1165, 1212, 1256, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 1161, 1209,
	1250, 1162, 1211, 253, 308, 260, 252, 503, 1261, 1241,
	1126, 1190, 1249, 0, 0, 219, 1252, 1185, 0, 1214,
	0, 1267, 1121, 1205, 0, 1124, 1128, 1263, 1245, 1156,
	263, 0, 0, 0, 0, 0, 0, 0, 1182, 1192,
	1226, 1230, 1176, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 1201, 0, 0, 0, 1133, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1136, 0, 1155, 1227, 0,
	1119, 285, 1130, 386, 245, 0, 1234, 1244, 1177, 543,
	1248, 1175, 1174, 1221, 1134, 1240, 1168, 350, 1132, 317,
	191, 215, 0, 1166, 396, 442, 454, 1239, 1151, 1160,
	243, 1158, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 1200, 1219, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 1131, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 1146, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1235,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 1224, 1266,
	409, 453, 230, 524, 476, 1141, 1145, 1139, 1206, 1140,
	1195, 1196, 1142, 1257, 1258, 1259, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 1228, 1135, 0, 1143, 1144,
	1237, 1246, 1247, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1199, 190, 211, 353, 1262, 435, 276,
	561, 534, 529, 197, 213, 1138, 250, 1149, 1157, 0,
	1163, 1171, 1172, 1184, 1186, 1187, 1188, 1189, 1207, 1208,
	1210, 1218, 1220, 1223, 1225, 1232, 1243, 1265, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 1198, 1204, 366, 269, 292, 307,
	1213, 533, 482, 217, 447, 278, 241, 1231, 1233, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1194, 1222, 361, 499, 500, 303, 381,
	0, 0, 0, 1251, 1236, 498, 0, 1179, 1254, 1148,
	1167, 1264, 1170, 1173, 1215, 1127, 1193, 400, 1164, 1120,
	1152, 1122, 1159, 1123, 1150, 1181, 258, 1147, 1238, 1197,
	1253, 351, 255, 1129, 1153, 414, 1169, 196, 1217, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1260, 355, 1203, 0, 477, 385, 0,
	0, 0, 1183, 1242, 1191, 1229, 1178, 1216, 1137, 1202,
	1255, 1165, 1212, 1256, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1161, 1209, 1250, 1162, 1211, 253, 308,
	260, 252, 503, 1261, 1241, 1126, 1190, 1249, 0, 0,
	219, 1252, 1185, 0, 1214, 0, 1267, 1121, 1205, 0,
	1124, 1128, 1263, 1245, 1156, 263, 0, 0, 0, 0,
	0, 0, 0, 1182, 1192, 1226, 1230, 1176, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 1201, 0, 0,
	0, 1133, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 0,
	1136, 0, 1155, 1227, 0, 1119, 285, 1130, 386, 245,
	0, 1234, 1244, 1177, 543, 1248, 1175, 1174, 1221, 1134,
	1240, 1168, 350, 1132, 317, 191, 215, 0, 1166, 396,
	442, 454, 1239, 1151, 1160, 243, 1158, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1200, 1219, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 1131, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 1146, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 1235, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 1224, 1266, 409, 453, 230, 524, 476,
	1141, 1145, 1139, 1206, 1140, 1195, 1196, 1142, 1257, 1258,
	1259, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	1228, 1135, 0, 1143, 1144, 1237, 1246, 1247, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 1199, 190,
	211, 353, 1262, 435, 276, 561, 534, 529, 197, 213,
	1138, 250, 1149, 1157, 0, 1163, 1171, 1172, 1184, 1186,
	1187, 1188, 1189, 1207, 1208, 1210, 1218, 1220, 1223, 1225,
	1232, 1243, 1265, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 1198,
	1204, 366, 269, 292, 307, 1213, 533, 482, 217, 447,
	278, 241, 1231, 1233, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 1194, 1222,
	361, 499, 500, 303, 381, 0, 0, 0, 0, 0,
	498, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 668, 0, 0,
	0, 258, 673, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 680, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 676,
	677, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	818, 802, 768, 769, 806, 819, 820, 821, 822, 807,
	0, 228, 808, 809, 235, 810, 0, 767, 708, 710,
	709, 727, 728, 729, 730, 731, 732, 733, 706, 815,
	823, 824, 0, 253, 308, 260, 252, 503, 0, 0,
	1938, 1939, 1940, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 650, 665, 0, 679, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 663, 0, 0,
	0, 0, 762, 0, 664, 0, 0, 672, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 761, 0, 0, 543,
	0, 0, 759, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	812, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 813, 814, 244, 563, 714, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 722, 723, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 772, 760, 685, 776, 687,
	773, 774, 682, 683, 686, 775, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 763, 671, 670, 0, 678,
	0, 704, 705, 707, 711, 712, 713, 724, 725, 726,
	734, 736, 737, 735, 738, 739, 740, 743, 744, 745,
	746, 741, 742, 747, 688, 692, 689, 690, 691, 703,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	786, 787, 788, 789, 790, 791, 717, 721, 720, 718,
	719, 715, 716, 669, 190, 211, 353, 0, 435, 276,
	561, 534, 529, 197, 213, 777, 250, 778, 0, 0,
	782, 0, 0, 0, 784, 783, 0, 785, 751, 750,
	0, 0, 779, 780, 0, 781, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	792, 793, 794, 795, 796, 797, 798, 799, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 817, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 381, 0, 361, 499, 500, 303, 498,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 668, 0, 0, 0,
	258, 673, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 680, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 676, 677,
	0, 0, 0, 0, 0, 0, 2088, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 89, 0, 0, 818,
	802, 768, 769, 806, 819, 820, 821, 822, 807, 0,
	228, 808, 809, 235, 810, 0, 767, 708, 710, 709,
	727, 728, 729, 730, 731, 732, 733, 706, 815, 823,
	824, 2089, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 650, 665, 0, 679, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 663, 0, 0, 0,
	0, 762, 0, 664, 0, 0, 672, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 761, 0, 0, 543, 0,
	0, 759, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 812,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 813, 814, 244, 563, 714, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 722, 723, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 772, 760, 685, 776, 687, 773,
	774, 682, 683, 686, 775, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 763, 671, 670, 0, 678, 0,
	704, 705, 707, 711, 712, 713, 724, 725, 726, 734,
	736, 737, 735, 738, 739, 740, 743, 744, 745, 746,
	741, 742, 747, 688, 692, 689, 690, 691, 703, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 786,
	787, 788, 789, 790, 791, 717, 721, 720, 718, 719,
	715, 716, 669, 190, 211, 353, 0, 435, 276, 561,
	534, 529, 197, 213, 777, 250, 778, 0, 0, 782,
	0, 0, 0, 784, 783, 0, 785, 751, 750, 0,
	0, 779, 780, 0, 781, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 792,
	793, 794, 795, 796, 797, 798, 799, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 817, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 0, 381, 361, 499, 500, 303, 80, 498,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 668, 0, 0, 0,
	258, 673, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 680, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 676, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 89, 0, 0, 818,
	802, 768, 769, 806, 819, 820, 821, 822, 807, 0,
	228, 808, 809, 235, 810, 0, 767, 708, 710, 709,
	727, 728, 729, 730, 731, 732, 733, 706, 815, 823,
	824, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 650, 665, 0, 679, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 663, 0, 0, 0,
	0, 762, 0, 664, 0, 0, 672, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 761, 0, 0, 543, 0,
	0, 759, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 812,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 813, 814, 244, 563, 714, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 722, 723, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 772, 760, 685, 776, 687, 773,
	774, 682, 683, 686, 775, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 763, 671, 670, 0, 678, 0,
	704, 705, 707, 711, 712, 713, 724, 725, 726, 734,
	736, 737, 735, 738, 739, 740, 743, 744, 745, 746,
	741, 742, 747, 688, 692, 689, 690, 691, 703, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 786,
	787, 788, 789, 790, 791, 717, 721, 720, 718, 719,
	715, 716, 669, 190, 211, 353, 88, 435, 276, 561,
	534, 529, 197, 213, 777, 250, 778, 0, 0, 782,
	0, 0, 0, 784, 783, 0, 785, 751, 750, 0,
	0, 779, 780, 0, 781, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 792,
	793, 794, 795, 796, 797, 798, 799, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 817, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 668, 0, 0, 0, 258,
	673, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 680, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 676, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 818, 802,
	768, 769, 806, 819, 820, 821, 822, 807, 0, 228,
	808, 809, 235, 810, 0, 767, 708, 710, 709, 727,
	728, 729, 730, 731, 732, 733, 706, 815, 823, 824,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 650, 665, 0, 679, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 663, 0, 0, 0, 0,
	762, 0, 664, 0, 0, 672, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 761, 0, 0, 543, 0, 0,
	759, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 812, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	3397, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 560, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 203,
	487, 517, 229, 464, 0, 0, 562, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 813, 814, 244, 563, 714, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 722, 723, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	564, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 557,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 353, 0, 435, 276, 561, 534,
	529, 197, 213, 777, 250, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 792, 793,
	794, 795, 796, 797, 798, 799, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 817, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 668, 0, 0, 0, 258, 673,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 680, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 89, 0, 1504, 818, 802, 768,
	769, 806, 819, 820, 821, 822, 807, 0, 228, 808,
	809, 235, 810, 0, 767, 708, 710, 709, 727, 728,
	729, 730, 731, 732, 733, 706, 815, 823, 824, 0,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	650, 665, 0, 679, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 663, 0, 0, 0, 0, 762,
	0, 664, 0, 0, 672, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 761, 0, 0, 543, 0, 0, 759,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 812, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 560, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 203, 487,
	517, 229, 464, 0, 0, 562, 237, 484, 205, 515,
	483, 378, 313, 314, 204, 0, 438, 256, 281, 246,
	399, 813, 814, 244, 563, 714, 538, 210, 0, 537,
	392, 507, 516, 379, 368, 209, 514, 377, 367, 321,
	722, 723, 268, 294, 430, 360, 431, 293, 295, 388,
	387, 389, 198, 526, 0, 199, 0, 479, 527, 564,
	224, 225, 227, 0, 267, 271, 279, 282, 290, 291,
	300, 352, 403, 429, 425, 434, 0, 502, 520, 532,
	542, 548, 549, 551, 552, 553, 554, 555, 557, 556,
	391, 298, 475, 320, 358, 0, 0, 409, 453, 230,
	524, 476, 772, 760, 685, 776, 687, 773, 774, 682,
	683, 686, 775, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 763, 671, 670, 0, 678, 0, 704, 705,
	707, 711, 712, 713, 724, 725, 726, 734, 736, 737,
	735, 738, 739, 740, 743, 744, 745, 746, 741, 742,
	747, 688, 692, 689, 690, 691, 703, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 786, 787, 788,
	789, 790, 791, 717, 721, 720, 718, 719, 715, 716,
	669, 190, 211, 353, 0, 435, 276, 561, 534, 529,
	197, 213, 777, 250, 778, 0, 0, 782, 0, 0,
	0, 784, 783, 0, 785, 751, 750, 0, 0, 779,
	780, 0, 781, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 249, 264, 266, 273, 286, 297, 305, 306,
	309, 315, 365, 371, 372, 373, 374, 393, 394, 395,
	398, 401, 402, 405, 407, 408, 411, 415, 419, 420,
	421, 422, 424, 426, 436, 441, 455, 456, 457, 458,
	459, 462, 463, 468, 469, 470, 471, 472, 480, 481,
	486, 509, 511, 523, 541, 546, 461, 792, 793, 794,
	795, 796, 797, 798, 799, 287, 518, 547, 0, 0,
	363, 0, 0, 366, 269, 292, 307, 0, 533, 482,
	217, 447, 278, 241, 817, 0, 202, 236, 220, 247,
	262, 265, 311, 376, 384, 413, 418, 284, 259, 234,
	440, 231, 465, 489, 490, 491, 493, 380, 254, 417,
	381, 0, 361, 499, 500, 303, 498, 0, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 668, 0, 0, 0, 258, 673, 0,
	0, 0, 351, 255, 0, 0, 414, 0, 196, 0,
	467, 242, 362, 359, 506, 270, 261, 257, 240, 304,
	370, 412, 488, 406, 680, 355, 0, 0, 477, 385,
	0, 0, 0, 0, 0, 676, 677, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 238, 312, 195, 397,
	478, 274, 0, 89, 0, 0, 818, 802, 768, 769,
	806, 819, 820, 821, 822, 807, 0, 228, 808, 809,
	235, 810, 0, 767, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 815, 823, 824, 0, 253,
	308, 260, 252, 503, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 907, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 386,
	245, 0, 761, 0, 0, 543, 0, 0, 759, 0,
	0, 0, 0, 350, 0, 317, 191, 215, 0, 0,
	396, 442, 454, 0, 0, 0, 812, 0, 452, 410,
	522, 223, 272, 439, 416, 450, 423, 275, 0, 0,
	451, 357, 508, 433, 519, 544, 545, 251, 390, 531,
	492, 539, 560, 216, 248, 404, 485, 525, 474, 382,
	504, 505, 316, 473, 283, 194, 354, 550, 214, 460,
	356, 232, 221, 510, 528, 277, 437, 203, 487, 517,
	229, 464, 0, 0, 562, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	813, 814, 244, 563, 714, 538, 210, 0, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 722,
	723, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 564, 224,
	225, 227, 0, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 0, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 557, 556, 391,
	298, 475, 320, 358, 0, 0, 409, 453, 230, 524,
	476, 772, 760, 685, 776, 687, 773, 774, 682, 683,
	686, 775, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 763, 671, 670, 0, 678, 0, 704, 705, 707,
	711, 712, 713, 724, 725, 726, 734, 736, 737, 735,
	738, 739, 740, 743, 744, 745, 746, 741, 742, 747,
	688, 692, 689, 690, 691, 703, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 786, 787, 788, 789,
	790, 791, 717, 721, 720, 718, 719, 715, 716, 669,
	190, 211, 353, 0, 435, 276, 561, 534, 529, 197,
	213, 777, 250, 778, 0, 0, 782, 0, 0, 0,
	784, 783, 0, 785, 751, 750, 0, 0, 779, 780,
	0, 781, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 792, 793, 794, 795,
	796, 797, 798, 799, 287, 518, 547, 0, 0, 363,
	0, 0, 366, 269, 292, 307, 0, 533, 482, 217,
	447, 278, 241, 817, 0, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 381,
	0, 361, 499, 500, 303, 498, 0, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 668, 0, 0, 0, 258, 673, 0, 0,
	0, 351, 255, 0, 0, 414, 0, 196, 0, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 680, 355, 0, 0, 477, 385, 0,
	0, 0, 0, 0, 676, 677, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 238, 312, 195, 397, 478,
	274, 0, 89, 0, 0, 818, 802, 768, 769, 806,
	819, 820, 821, 822, 807, 0, 228, 808, 809, 235,
	810, 0, 767, 708, 710, 709, 727, 728, 729, 730,
	731, 732, 733, 706, 815, 823, 824, 0, 253, 308,
	260, 252, 503, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 650, 665,
	0, 679, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 663, 0, 0, 0, 0, 762, 0, 664,
	0, 0, 672, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 386, 245,
	0, 761, 0, 0, 543, 0, 0, 759, 0, 0,
	0, 0, 350, 0, 317, 191, 215, 0, 0, 396,
	442, 454, 0, 0, 0, 812, 0, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 0, 0, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 813,
	814, 244, 563, 714, 538, 210, 0, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 722, 723,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 0, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 0, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 0, 0, 409, 453, 230, 524, 476,
	772, 760, 685, 776, 687, 773, 774, 682, 683, 686,
	775, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	763, 671, 670, 0, 678, 0, 704, 705, 707, 711,
	712, 713, 724, 725, 726, 734, 736, 737, 735, 738,
	739, 740, 743, 744, 745, 746, 741, 742, 747, 688,
	692, 689, 690, 691, 703, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 786, 787, 788, 789, 790,
	791, 717, 721, 720, 718, 719, 715, 716, 669, 190,
	211, 353, 0, 435, 276, 561, 534, 529, 197, 213,
	777, 250, 778, 0, 0, 782, 0, 0, 0, 784,
	783, 0, 785, 751, 750, 0, 0, 779, 780, 0,
	781, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 792, 793, 794, 795, 796,
	797, 798, 799, 287, 518, 547, 0, 0, 363, 0,
	0, 366, 269, 292, 307, 0, 533, 482, 217, 447,
	278, 241, 817, 0, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 381, 0,
	361, 499, 500, 303, 498, 0, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 668, 0, 0, 0, 258, 673, 0, 0, 0,
	351, 255, 0, 0, 414, 0, 196, 0, 467, 242,
	362, 359, 506, 270, 261, 257, 240, 304, 370, 412,
	488, 406, 680, 355, 0, 0, 477, 385, 0, 0,
	0, 0, 0, 676, 677, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 238, 312, 195, 397, 478, 274,
	0, 89, 0, 0, 818, 802, 768, 769, 806, 819,
	820, 821, 822, 807, 0, 228, 808, 809, 235, 810,
	0, 767, 708, 710, 709, 727, 728, 729, 730, 731,
	732, 733, 706, 815, 823, 824, 0, 253, 308, 260,
	252, 503, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	679, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 663, 0, 0, 0, 0, 762, 0, 664, 0,
	0, 672, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 386, 245, 0,
	761, 0, 0, 543, 0, 0, 759, 0, 0, 0,
	0, 350, 0, 317, 191, 215, 0, 0, 396, 442,
	454, 0, 0, 0, 812, 0, 452, 410, 522, 223,
	272, 439, 416, 450, 423, 275, 0, 0, 451, 357,
	508, 433, 519, 544, 545, 251, 390, 531, 492, 539,
	560, 216, 248, 404, 485, 525, 474, 382, 504, 505,
	316, 473, 283, 194, 354, 550, 214, 460, 356, 232,
	221, 510, 528, 277, 437, 203, 487, 517, 229, 464,
	0, 0, 562, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 813, 814,
	244, 563, 714, 538, 210, 0, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 722, 723, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 564, 224, 225, 227,
	0, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 0, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 557, 556, 391, 298, 475,
	320, 358, 0, 0, 409, 453, 230, 524, 476, 772,
	760, 685, 776, 687, 773, 774, 682, 683, 686, 775,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 763,
	671, 670, 0, 678, 0, 704, 705, 707, 711, 712,
	713, 724, 725, 726, 734, 736, 737, 735, 738, 739,
	740, 743, 744, 745, 746, 741, 742, 747, 688, 692,
	689, 690, 691, 703, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 786, 787, 788, 789, 790, 791,
	717, 721, 720, 718, 719, 715, 716, 669, 190, 211,
	353, 0, 435, 276, 561, 534, 529, 197, 213, 777,
	250, 778, 0, 0, 782, 0, 0, 0, 784, 783,
	0, 785, 751, 750, 0, 0, 779, 780, 0, 781,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 792, 793, 794, 795, 796, 797,
	798, 799, 287, 518, 547, 0, 0, 363, 0, 0,
	366, 269, 292, 307, 0, 533, 482, 217, 447, 278,
	241, 817, 0, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 381, 0, 361,
	499, 500, 303, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 351,
	255, 0, 0, 414, 0, 196, 0, 467, 242, 362,
	359, 506, 270, 261, 257, 240, 304, 370, 412, 488,
	406, 0, 355, 0, 0, 477, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 238, 312, 195, 397, 478, 274, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 336, 345, 344, 325, 326, 328, 330, 335, 342,
	348, 0, 0, 0, 0, 0, 253, 308, 260, 252,
	503, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 386, 245, 0, 0,
	0, 977, 543, 0, 0, 0, 0, 0, 974, 975,
	350, 935, 317, 191, 215, 968, 972, 396, 442, 454,
	0, 0, 0, 243, 0, 452, 410, 522, 223, 272,
	439, 416, 450, 423, 275, 0, 0, 451, 357, 508,
	433, 519, 544, 545, 251, 390, 531, 492, 539, 560,
	216, 248, 404, 485, 525, 474, 382, 504, 505, 316,
	473, 283, 194, 354, 550, 214, 460, 356, 232, 221,
	510, 528, 277, 437, 203, 487, 517, 229, 464, 0,
	0, 562, 237, 484, 205, 515, 483, 378, 313, 314,
	204, 0, 438, 256, 281, 246, 399, 512, 513, 244,
	563, 218, 538, 210, 0, 537, 392, 507, 516, 379,
	368, 209, 514, 377, 367, 321, 340, 341, 268, 294,
	430, 360, 431, 293, 295, 388, 387, 389, 198, 526,
	0, 199, 0, 479, 527, 564, 224, 225, 227, 0,
	267, 271, 279, 282, 290, 291, 300, 352, 403, 429,
	425, 434, 0, 502, 520, 532, 542, 548, 549, 551,
	552, 553, 554, 555, 557, 556, 391, 298, 475, 320,
	358, 0, 0, 409, 453, 230, 524, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 369, 466, 521,
	322, 334, 337, 327, 346, 0, 347, 323, 324, 329,
	331, 332, 333, 338, 339, 343, 349, 239, 201, 375,
	383, 501, 299, 206, 207, 208, 494, 495, 496, 497,
	535, 536, 540, 443, 444, 445, 446, 280, 530, 296,
	449, 448, 318, 319, 364, 432, 0, 190, 211, 353,
	0, 435, 276, 561, 534, 529, 197, 213, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 249, 264,
	266, 273, 286, 297, 305, 306, 309, 315, 365, 371,
	372, 373, 374, 393, 394, 395, 398, 401, 402, 405,
	407, 408, 411, 415, 419, 420, 421, 422, 424, 426,
	436, 441, 455, 456, 457, 458, 459, 462, 463, 468,
	469, 470, 471, 472, 480, 481, 486, 509, 511, 523,
	541, 546, 461, 288, 289, 427, 428, 301, 302, 558,
	559, 287, 518, 547, 0, 0, 363, 0, 0, 366,
	269, 292, 307, 0, 533, 482, 217, 447, 278, 241,
	0, 0, 202, 236, 220, 247, 262, 265, 311, 376,
	384, 413, 418, 284, 259, 234, 440, 231, 465, 489,
	490, 491, 493, 380, 254, 417, 381, 0, 361, 499,
	500, 303, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 351, 255,
	0, 0, 414, 0, 196, 0, 467, 242, 362, 359,
	506, 270, 261, 257, 240, 304, 370, 412, 488, 406,
	0, 355, 0, 0, 477, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 238, 312, 195, 397, 478, 274, 0, 0,
	0, 0, 1467, 802, 0, 0, 1464, 0, 0, 0,
	0, 1462, 0, 228, 1463, 1461, 235, 1466, 0, 767,
	336, 345, 344, 325, 326, 328, 330, 335, 342, 348,
	0, 0, 0, 0, 0, 253, 308, 260, 252, 503,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 386, 245, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 317, 191, 215, 0, 0, 396, 442, 454, 0,
	0, 0, 243, 0, 452, 410, 522, 223, 272, 439,
	416, 450, 423, 275, 0, 0, 451, 357, 508, 433,
	519, 544, 545, 251, 390, 531, 492, 539, 560, 216,
	248, 404, 485, 525, 474, 382, 504, 505, 316, 473,
	283, 194, 354, 550, 214, 460, 356, 232, 221, 510,
	528, 277, 437, 203, 487, 517, 229, 464, 0, 0,
	562, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 563,
	218, 538, 210, 0, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 564, 224, 225, 227, 0, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 0, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 557, 556, 391, 298, 475, 320, 358,
	0, 0, 409, 453, 230, 524, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 0, 190, 211, 353, 0,
	435, 276, 561, 534, 529, 197, 213, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 558, 559,
	287, 518, 547, 0, 0, 363, 0, 0, 366, 269,
	292, 307, 0, 533, 482, 217, 447, 278, 241, 0,
	0, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 0, 381, 361, 499, 500,
	303, 80, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 351, 255,
	0, 0, 414, 0, 196, 0, 467, 242, 362, 359,
	506, 270, 261, 257, 240, 304, 370, 412, 488, 406,
	0, 355, 0, 0, 477, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 238, 312, 195, 397, 478, 274, 0, 89,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	336, 345, 344, 325, 326, 328, 330, 335, 342, 348,
	0, 0, 0, 0, 0, 253, 308, 260, 252, 503,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 386, 245, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 317, 191, 215, 0, 0, 396, 442, 454, 0,
	0, 0, 243, 0, 452, 410, 522, 223, 272, 439,
	416, 450, 423, 275, 0, 0, 451, 357, 508, 433,
	519, 544, 545, 251, 390, 531, 492, 539, 560, 216,
	248, 404, 485, 525, 474, 382, 504, 505, 316, 473,
	283, 194, 354, 550, 214, 460, 356, 232, 221, 510,
	528, 277, 437, 203, 487, 517, 229, 464, 0, 0,
	562, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 563,
	218, 538, 210, 0, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 564, 224, 225, 227, 0, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 0, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 557, 556, 391, 298, 475, 320, 358,
	0, 0, 409, 453, 230, 524, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 0, 190, 211, 353, 88,
	435, 276, 561, 534, 529, 197, 213, 0, 250, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 558, 559,
	287, 518, 547, 0, 0, 363, 0, 0, 366, 269,
	292, 307, 0, 533, 482, 217, 447, 278, 241, 0,
	0, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 1523, 0, 361, 499, 500,
	303, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 1525, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 351, 255, 0,
	0, 414, 0, 196, 0, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 0,
	355, 0, 0, 477, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 238, 312, 195, 397, 478, 274, 0, 0, 0,
	0, 1527, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 0,
	0, 0, 0, 0, 253, 308, 260, 252, 503, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	1301, 0, 1302, 1303, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 386, 245, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	317, 191, 215, 0, 0, 396, 442, 454, 0, 0,
	0, 243, 0, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 0, 0, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 560, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 203, 487, 517, 229, 464, 0, 0, 562,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 563, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 564, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 557, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 561, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 558, 559, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 0, 381, 361, 499, 500, 303,
	80, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 351, 255, 0,
	0, 414, 0, 196, 0, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 0,
	355, 0, 0, 477, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 238, 312, 195, 397, 478, 274, 0, 89, 0,
	1504, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 0,
	0, 0, 0, 0, 253, 308, 260, 252, 503, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 386, 245, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	317, 191, 215, 0, 0, 396, 442, 454, 0, 0,
	0, 243, 0, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 0, 0, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 560, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 203, 487, 517, 229, 464, 0, 0, 562,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 563, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 564, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 557, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 88, 435,
	276, 561, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 558, 559, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 0, 435, 276,
	561, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 381, 0, 361, 499, 500, 303, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 2025, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 1704,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 2023, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 563, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 561,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 558, 559, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 350, 935, 317, 191, 215,
	933, 0, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 560, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 203,
	487, 517, 229, 464, 0, 0, 562, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 512, 513, 244, 563, 218, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 340, 341, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	564, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 557,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 369, 466, 521, 322, 334, 337, 327, 346,
	0, 347, 323, 324, 329, 331, 332, 333, 338, 339,
	343, 349, 239, 201, 375, 383, 501, 299, 206, 207,
	208, 494, 495, 496, 497, 535, 536, 540, 443, 444,
	445, 446, 280, 530, 296, 449, 448, 318, 319, 364,
	432, 0, 190, 211, 353, 0, 435, 276, 561, 534,
	529, 197, 213, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 288, 289,
	427, 428, 301, 302, 558, 559, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 0, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 2025, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 0, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 0, 0, 0, 1704, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 336, 345, 344, 325, 326,
	328, 330, 335, 342, 348, 0, 0, 0, 0, 0,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 243, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 560, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 203, 487,
	517, 229, 464, 0, 0, 562, 237, 484, 205, 515,
	483, 378, 313, 314, 204, 0, 438, 256, 281, 246,
	399, 512, 513, 244, 563, 218, 538, 210, 0, 537,
	392, 507, 516, 379, 368, 209, 514, 377, 367, 321,
	340, 341, 268, 294, 430, 360, 431, 293, 295, 388,
	387, 389, 198, 526, 0, 199, 0, 479, 527, 564,
	224, 225, 227, 0, 267, 271, 279, 282, 290, 291,
	300, 352, 403, 429, 425, 434, 0, 502, 520, 532,
	542, 548, 549, 551, 552, 553, 554, 555, 557, 556,
	391, 298, 475, 320, 358, 0, 0, 409, 453, 230,
	524, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 369, 466, 521, 322, 334, 337, 327, 346, 0,
	347, 323, 324, 329, 331, 332, 333, 338, 339, 343,
	349, 239, 201, 375, 383, 501, 299, 206, 207, 208,
	494, 495, 496, 497, 535, 536, 540, 443, 444, 445,
	446, 280, 530, 296, 449, 448, 318, 319, 364, 432,
	0, 190, 211, 353, 0, 435, 276, 561, 534, 529,
	197, 213, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 249, 264, 266, 273, 286, 297, 305, 306,
	309, 315, 365, 371, 372, 373, 374, 393, 394, 395,
	398, 401, 402, 405, 407, 408, 411, 415, 419, 420,
	421, 422, 424, 426, 436, 441, 455, 456, 457, 458,
	459, 462, 463, 468, 469, 470, 471, 472, 480, 481,
	486, 509, 511, 523, 541, 546, 461, 288, 289, 427,
	428, 301, 302, 558, 559, 287, 518, 547, 0, 0,
	363, 0, 0, 366, 269, 292, 307, 0, 533, 482,
	217, 447, 278, 241, 0, 0, 202, 236, 220, 247,
	262, 265, 311, 376, 384, 413, 418, 284, 259, 234,
	440, 231, 465, 489, 490, 491, 493, 380, 254, 417,
	381, 0, 361, 499, 500, 303, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 351, 255, 0, 0, 414, 0, 196, 0,
	467, 242, 362, 359, 506, 270, 261, 257, 240, 304,
	370, 412, 488, 406, 0, 355, 0, 0, 477, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 238, 312, 195, 397,
	478, 274, 0, 0, 0, 1504, 0, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 336, 345, 344, 325, 326, 328,
	330, 335, 342, 348, 0, 0, 0, 0, 0, 253,
	308, 260, 252, 503, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 386,
	245, 0, 0, 0, 0, 543, 0, 0, 0, 3307,
	0, 0, 0, 350, 0, 317, 191, 215, 0, 0,
	396, 442, 454, 0, 0, 0, 243, 0, 452, 410,
	522, 223, 272, 439, 416, 450, 423, 275, 0, 0,
	451, 357, 508, 433, 519, 544, 545, 251, 390, 531,
	492, 539, 560, 216, 248, 404, 485, 525, 474, 382,
	504, 505, 316, 473, 283, 194, 354, 550, 214, 460,
	356, 232, 221, 510, 528, 277, 437, 203, 487, 517,
	229, 464, 0, 0, 562, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 563, 218, 538, 210, 0, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 564, 224,
	225, 227, 0, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 0, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 557, 556, 391,
	298, 475, 320, 358, 0, 0, 409, 453, 230, 524,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 0,
	190, 211, 353, 0, 435, 276, 561, 534, 529, 197,
	213, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 558, 559, 287, 518, 547, 0, 0, 363,
	0, 0, 366, 269, 292, 307, 0, 533, 482, 217,
	447, 278, 241, 0, 0, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 381,
	0, 361, 499, 500, 303, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 351, 255, 0, 0, 414, 0, 196, 0, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 0, 355, 0, 0, 477, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 1858, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 0, 0, 0, 0, 0, 253, 308,
	260, 252, 503, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 386, 245,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 317, 191, 215, 0, 0, 396,
	442, 454, 0, 0, 0, 243, 0, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 0, 0, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 0, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 0, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 0, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 0, 0, 409, 453, 230, 524, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 0, 190,
	211, 353, 0, 435, 276, 561, 534, 529, 197, 213,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 0,
	0, 366, 269, 292, 307, 0, 533, 482, 217, 447,
	278, 241, 0, 0, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 381, 0,
	361, 499, 500, 303, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	351, 255, 0, 0, 414, 0, 196, 0, 467, 242,
	362, 359, 506, 270, 261, 257, 240, 304, 370, 412,
	488, 406, 0, 355, 0, 0, 477, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 238, 312, 195, 397, 478, 274,
	0, 0, 0, 0, 2428, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 336, 345, 344, 325, 326, 328, 330, 335,
	342, 348, 0, 0, 0, 0, 0, 253, 308, 260,
	252, 503, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 386, 245, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 317, 191, 215, 0, 0, 396, 442,
	454, 0, 0, 0, 243, 0, 452, 410, 522, 223,
	272, 439, 416, 450, 423, 275, 0, 0, 451, 357,
	508, 433, 519, 544, 545, 251, 390, 531, 492, 539,
	560, 216, 248, 404, 485, 525, 474, 382, 504, 505,
	316, 473, 283, 194, 354, 550, 214, 460, 356, 232,
	221, 510, 528, 277, 437, 203, 487, 517, 229, 464,
	0, 0, 562, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 512, 513,
	244, 563, 218, 538, 210, 0, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 340, 341, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 564, 224, 225, 227,
	0, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 0, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 557, 556, 391, 298, 475,
	320, 358, 0, 0, 409, 453, 230, 524, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 369, 466,
	521, 322, 334, 337, 327, 346, 0, 347, 323, 324,
	329, 331, 332, 333, 338, 339, 343, 349, 239, 201,
	375, 383, 501, 299, 206, 207, 208, 494, 495, 496,
	497, 535, 536, 540, 443, 444, 445, 446, 280, 530,
	296, 449, 448, 318, 319, 364, 432, 0, 190, 211,
	353, 0, 435, 276, 561, 534, 529, 197, 213, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 288, 289, 427, 428, 301, 302,
	558, 559, 287, 518, 547, 0, 0, 363, 0, 0,
	366, 269, 292, 307, 0, 533, 482, 217, 447, 278,
	241, 0, 0, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 381, 0, 361,
	499, 500, 303, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 351,
	255, 0, 0, 414, 0, 196, 0, 467, 242, 362,
	359, 506, 270, 261, 257, 240, 304, 370, 412, 488,
	406, 0, 355, 0, 0, 477, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 238, 312, 195, 397, 478, 274, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 2413,
	0, 0, 0, 0, 228, 0, 0, 235, 2414, 0,
	0, 336, 345, 344, 325, 326, 328, 330, 335, 342,
	348, 0, 0, 0, 0, 0, 253, 308, 260, 252,
	503, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 386, 245, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 317, 191, 215, 0, 0, 396, 442, 454,
	0, 0, 0, 243, 0, 452, 410, 522, 223, 272,
	439, 416, 450, 423, 275, 0, 0, 451, 357, 508,
	433, 519, 544, 545, 251, 390, 531, 492, 539, 560,
	216, 248, 404, 485, 525, 474, 382, 504, 505, 316,
	473, 283, 194, 354, 550, 214, 460, 356, 232, 221,
	510, 528, 277, 437, 203, 487, 517, 229, 464, 0,
	0, 562, 237, 484, 205, 515, 483, 378, 313, 314,
	204, 0, 438, 256, 281, 246, 399, 512, 513, 244,
	563, 218, 538, 210, 0, 537, 392, 507, 516, 379,
	368, 209, 514, 377, 367, 321, 340, 341, 268, 294,
	430, 360, 431, 293, 295, 388, 387, 389, 198, 526,
	0, 199, 0, 479, 527, 564, 224, 225, 227, 0,
	267, 271, 279, 282, 290, 291, 300, 352, 403, 429,
	425, 434, 0, 502, 520, 532, 542, 548, 549, 551,
	552, 553, 554, 555, 557, 556, 391, 298, 475, 320,
	358, 0, 0, 409, 453, 230, 524, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 369, 466, 521,
	322, 334, 337, 327, 346, 0, 347, 323, 324, 329,
	331, 332, 333, 338, 339, 343, 349, 239, 201, 375,
	383, 501, 299, 206, 207, 208, 494, 495, 496, 497,
	535, 536, 540, 443, 444, 445, 446, 280, 530, 296,
	449, 448, 318, 319, 364, 432, 0, 190, 211, 353,
	0, 435, 276, 561, 534, 529, 197, 213, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 249, 264,
	266, 273, 286, 297, 305, 306, 309, 315, 365, 371,
	372, 373, 374, 393, 394, 395, 398, 401, 402, 405,
	407, 408, 411, 415, 419, 420, 421, 422, 424, 426,
	436, 441, 455, 456, 457, 458, 459, 462, 463, 468,
	469, 470, 471, 472, 480, 481, 486, 509, 511, 523,
	541, 546, 461, 288, 289, 427, 428, 301, 302, 558,
	559, 287, 518, 547, 0, 0, 363, 0, 0, 366,
	269, 292, 307, 0, 533, 482, 217, 447, 278, 241,
	0, 0, 202, 236, 220, 247, 262, 265, 311, 376,
	384, 413, 418, 284, 259, 234, 440, 231, 465, 489,
	490, 491, 493, 380, 254, 417, 381, 0, 361, 499,
	500, 303, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 1546, 0, 0, 0, 351, 255,
	0, 0, 414, 0, 196, 0, 467, 242, 362, 359,
	506, 270, 261, 257, 240, 304, 370, 412, 488, 406,
	0, 355, 0, 0, 477, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 238, 312, 195, 397, 478, 274, 0, 0,
	0, 0, 1545, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	336, 345, 344, 325, 326, 328, 330, 335, 342, 348,
	0, 0, 0, 0, 0, 253, 308, 260, 252, 503,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 386, 245, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 317, 191, 215, 0, 0, 396, 442, 454, 0,
	0, 0, 243, 0, 452, 410, 522, 223, 272, 439,
	416, 450, 423, 275, 0, 0, 451, 357, 508, 433,
	519, 544, 545, 251, 390, 531, 492, 539, 560, 216,
	248, 404, 485, 525, 474, 382, 504, 505, 316, 473,
	283, 194, 354, 550, 214, 460, 356, 232, 221, 510,
	528, 277, 437, 203, 487, 517, 229, 464, 0, 0,
	562, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 563,
	218, 538, 210, 0, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 564, 224, 225, 227, 0, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 0, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 557, 556, 391, 298, 475, 320, 358,
	0, 0, 409, 453, 230, 524, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 0, 190, 211, 353, 0,
	435, 276, 561, 534, 529, 197, 213, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 558, 559,
	287, 518, 547, 0, 0, 363, 0, 0, 366, 269,
	292, 307, 0, 533, 482, 217, 447, 278, 241, 0,
	0, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 381, 0, 361, 499, 500,
	303, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 351, 255, 0,
	0, 414, 0, 196, 0, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 0,
	355, 0, 0, 477, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 238, 312, 195, 397, 478, 274, 0, 0, 0,
	0, 0, 631, 632, 633, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 0,
	0, 0, 0, 0, 253, 308, 260, 252, 503, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 386, 245, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	317, 191, 215, 0, 0, 396, 442, 454, 0, 0,
	0, 243, 0, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 0, 0, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 560, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 203, 487, 517, 229, 464, 0, 0, 562,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 563, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 564, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 557, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 561, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 558, 559, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 3431, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 0, 435, 276,
	561, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 381, 0, 361, 499, 500, 303, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 1704,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 563, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 561,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 558, 559, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 0, 0, 543, 0, 0,
	0, 3307, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 560, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 203,
	487, 517, 229, 464, 0, 0, 562, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 512, 513, 244, 563, 218, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 340, 341, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	564, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 557,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 369, 466, 521, 322, 334, 337, 327, 346,
	0, 347, 323, 324, 329, 331, 332, 333, 338, 339,
	343, 349, 239, 201, 375, 383, 501, 299, 206, 207,
	208, 494, 495, 496, 497, 535, 536, 540, 443, 444,
	445, 446, 280, 530, 296, 449, 448, 318, 319, 364,
	432, 0, 190, 211, 353, 0, 435, 276, 561, 534,
	529, 197, 213, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 288, 289,
	427, 428, 301, 302, 558, 559, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 0, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 0, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 89, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 336, 345, 344, 325, 326,
	328, 330, 335, 342, 348, 0, 0, 0, 0, 0,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 243, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 560, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 203, 487,
	517, 229, 464, 0, 0, 562, 237, 484, 205, 515,
	483, 378, 313, 314, 204, 0, 438, 256, 281, 246,
	399, 512, 513, 244, 563, 218, 538, 210, 0, 537,
	392, 507, 516, 379, 368, 209, 514, 377, 367, 321,
	340, 341, 268, 294, 430, 360, 431, 293, 295, 388,
	387, 389, 198, 526, 0, 199, 0, 479, 527, 564,
	224, 225, 227, 0, 267, 271, 279, 282, 290, 291,
	300, 352, 403, 429, 425, 434, 0, 502, 520, 532,
	542, 548, 549, 551, 552, 553, 554, 555, 557, 556,
	391, 298, 475, 320, 358, 0, 0, 409, 453, 230,
	524, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 369, 466, 521, 322, 334, 337, 327, 346, 0,
	347, 323, 324, 329, 331, 332, 333, 338, 339, 343,
	349, 239, 201, 375, 383, 501, 299, 206, 207, 208,
	494, 495, 496, 497, 535, 536, 540, 443, 444, 445,
	446, 280, 530, 296, 449, 448, 318, 319, 364, 432,
	0, 190, 211, 353, 0, 435, 276, 561, 534, 529,
	197, 213, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 249, 264, 266, 273, 286, 297, 305, 306,
	309, 315, 365, 371, 372, 373, 374, 393, 394, 395,
	398, 401, 402, 405, 407, 408, 411, 415, 419, 420,
	421, 422, 424, 426, 436, 441, 455, 456, 457, 458,
	459, 462, 463, 468, 469, 470, 471, 472, 480, 481,
	486, 509, 511, 523, 541, 546, 461, 288, 289, 427,
	428, 301, 302, 558, 559, 287, 518, 547, 0, 0,
	363, 0, 0, 366, 269, 292, 307, 0, 533, 482,
	217, 447, 278, 241, 0, 0, 202, 236, 220, 247,
	262, 265, 311, 376, 384, 413, 418, 284, 259, 234,
	440, 231, 465, 489, 490, 491, 493, 380, 254, 417,
	381, 0, 361, 499, 500, 303, 498, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 351, 255, 0, 0, 414, 0, 196, 0,
	467, 242, 362, 359, 506, 270, 261, 257, 240, 304,
	370, 412, 488, 406, 0, 355, 0, 0, 477, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 238, 312, 195, 397,
	478, 274, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 336, 345, 344, 325, 326, 328,
	330, 335, 342, 348, 0, 0, 0, 0, 0, 253,
	308, 260, 252, 503, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 386,
	245, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 317, 191, 215, 0, 0,
	396, 442, 454, 0, 0, 0, 243, 0, 452, 410,
	522, 223, 272, 439, 416, 450, 423, 275, 0, 0,
	451, 357, 508, 433, 519, 544, 545, 251, 390, 531,
	492, 539, 560, 216, 248, 404, 485, 525, 474, 382,
	504, 505, 316, 473, 283, 194, 354, 550, 214, 460,
	356, 232, 221, 510, 528, 277, 437, 203, 487, 517,
	229, 464, 0, 0, 562, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 563, 218, 538, 210, 0, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 564, 224,
	225, 227, 0, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 0, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 557, 556, 391,
	298, 475, 320, 358, 0, 0, 409, 453, 230, 524,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 0,
	190, 211, 353, 0, 435, 276, 561, 534, 529, 197,
	213, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 558, 559, 287, 518, 547, 0, 0, 363,
	0, 0, 366, 269, 292, 307, 0, 533, 482, 217,
	447, 278, 241, 0, 0, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 381,
	0, 361, 499, 500, 303, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 351, 255, 0, 0, 414, 0, 196, 0, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 0, 355, 0, 0, 477, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 1527, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 0, 0, 0, 0, 0, 253, 308,
	260, 252, 503, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 386, 245,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 317, 191, 215, 0, 0, 396,
	442, 454, 0, 0, 0, 243, 0, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 0, 0, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 0, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 0, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 0, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 0, 0, 409, 453, 230, 524, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 0, 190,
	211, 353, 0, 435, 276, 561, 534, 529, 197, 213,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 0,
	0, 366, 269, 292, 307, 0, 533, 482, 217, 447,
	278, 241, 0, 0, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 381, 0,
	361, 499, 500, 303, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	351, 255, 0, 0, 414, 0, 196, 0, 467, 242,
	362, 359, 506, 270, 261, 257, 240, 304, 370, 412,
	488, 406, 0, 355, 0, 0, 477, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 238, 312, 195, 397, 478, 274,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 336, 345, 344, 325, 326, 328, 330, 335,
	342, 348, 0, 0, 0, 0, 0, 253, 308, 260,
	252, 503, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 386, 245, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 317, 191, 215, 0, 0, 396, 442,
	454, 0, 0, 0, 243, 0, 452, 410, 522, 223,
	272, 439, 416, 450, 423, 275, 0, 0, 451, 357,
	508, 433, 519, 544, 545, 251, 390, 531, 492, 539,
	560, 216, 248, 404, 485, 525, 474, 382, 504, 505,
	316, 473, 283, 194, 354, 550, 214, 460, 356, 232,
	221, 510, 528, 277, 437, 203, 487, 517, 229, 464,
	0, 0, 562, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 512, 513,
	244, 563, 218, 538, 210, 0, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 340, 341, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 564, 224, 225, 227,
	0, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 0, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 557, 556, 391, 298, 475,
	320, 358, 0, 0, 409, 453, 230, 524, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 369, 466,
	521, 322, 334, 337, 327, 346, 0, 347, 323, 324,
	329, 331, 332, 333, 338, 339, 343, 349, 239, 201,
	375, 383, 501, 299, 206, 207, 208, 494, 495, 496,
	497, 535, 536, 540, 443, 444, 445, 446, 280, 530,
	296, 449, 448, 318, 319, 364, 432, 0, 190, 211,
	353, 0, 435, 276, 561, 534, 529, 197, 213, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 288, 289, 427, 428, 301, 302,
	558, 559, 287, 518, 547, 0, 0, 363, 0, 0,
	366, 269, 292, 307, 0, 533, 482, 217, 447, 278,
	241, 0, 0, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 381, 0, 361,
	499, 500, 303, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 351,
	255, 0, 0, 414, 0, 196, 0, 467, 242, 362,
	359, 506, 270, 261, 257, 240, 304, 370, 412, 488,
	406, 0, 355, 0, 0, 477, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 238, 312, 195, 397, 478, 274, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 336, 345, 344, 325, 326, 328, 330, 335, 342,
	348, 0, 0, 0, 0, 0, 253, 308, 260, 252,
	503, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 386, 245, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 317, 191, 215, 0, 0, 396, 442, 454,
	0, 0, 0, 243, 0, 452, 410, 522, 223, 272,
	439, 416, 450, 423, 275, 0, 0, 451, 357, 508,
	433, 519, 544, 545, 251, 390, 531, 492, 539, 560,
	216, 248, 404, 485, 525, 474, 382, 504, 505, 316,
	473, 283, 194, 354, 550, 214, 460, 356, 232, 221,
	510, 528, 277, 437, 203, 487, 517, 229, 464, 0,
	0, 562, 237, 484, 205, 515, 483, 378, 313, 314,
	204, 0, 438, 256, 281, 246, 399, 512, 513, 244,
	563, 218, 538, 210, 0, 537, 392, 507, 516, 379,
	368, 209, 514, 377, 367, 321, 340, 341, 268, 294,
	430, 360, 431, 293, 295, 388, 387, 389, 198, 526,
	0, 199, 0, 479, 527, 564, 224, 225, 227, 0,
	267, 271, 279, 282, 290, 291, 300, 352, 403, 429,
	425, 434, 0, 502, 520, 532, 542, 548, 549, 551,
	552, 553, 554, 555, 557, 556, 391, 298, 475, 320,
	358, 0, 0, 409, 453, 230, 524, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 369, 466, 521,
	322, 334, 337, 327, 346, 0, 347, 323, 324, 329,
	331, 332, 333, 338, 339, 343, 349, 239, 201, 375,
	383, 501, 299, 206, 207, 208, 494, 495, 496, 497,
	535, 536, 540, 443, 444, 445, 446, 280, 530, 296,
	449, 448, 318, 319, 364, 432, 0, 190, 211, 353,
	1813, 435, 276, 561, 534, 529, 197, 213, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 249, 264,
	266, 273, 286, 297, 305, 306, 309, 315, 365, 371,
	372, 373, 374, 393, 394, 395, 398, 401, 402, 405,
	407, 408, 411, 415, 419, 420, 421, 422, 424, 426,
	436, 441, 455, 456, 457, 458, 459, 462, 463, 468,
	469, 470, 471, 472, 480, 481, 486, 509, 511, 523,
	541, 546, 461, 288, 289, 427, 428, 301, 302, 558,
	559, 287, 518, 547, 0, 0, 363, 0, 0, 366,
	269, 292, 307, 0, 533, 482, 217, 447, 278, 241,
	0, 0, 202, 236, 220, 247, 262, 265, 311, 376,
	384, 413, 418, 284, 259, 234, 440, 231, 465, 489,
	490, 491, 493, 380, 254, 417, 381, 0, 361, 499,
	500, 303, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 351, 255,
	0, 0, 414, 0, 196, 0, 467, 242, 362, 359,
	506, 270, 261, 257, 240, 304, 370, 412, 488, 406,
	0, 355, 0, 0, 477, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 238, 312, 195, 397, 478, 274, 0, 0,
	0, 0, 1805, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	336, 345, 344, 325, 326, 328, 330, 335, 342, 348,
	0, 0, 0, 0, 0, 253, 308, 260, 252, 503,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 386, 245, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 317, 191, 215, 0, 0, 396, 442, 454, 0,
	0, 0, 243, 0, 452, 410, 522, 223, 272, 439,
	416, 450, 423, 275, 0, 0, 451, 357, 508, 433,
	519, 544, 545, 251, 390, 531, 492, 539, 560, 216,
	248, 404, 485, 525, 474, 382, 504, 505, 316, 473,
	283, 194, 354, 550, 214, 460, 356, 232, 221, 510,
	528, 277, 437, 203, 487, 517, 229, 464, 0, 0,
	562, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 563,
	218, 538, 210, 0, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 564, 224, 225, 227, 0, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 0, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 557, 556, 391, 298, 475, 320, 358,
	0, 0, 409, 453, 230, 524, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 0, 190, 211, 353, 0,
	435, 276, 561, 534, 529, 197, 213, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 558, 559,
	287, 518, 547, 0, 0, 363, 0, 0, 366, 269,
	292, 307, 0, 533, 482, 217, 447, 278, 241, 0,
	0, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 381, 0, 361, 499, 500,
	303, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 1671, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 351, 255, 0,
	0, 414, 0, 196, 0, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 0,
	355, 0, 0, 477, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 238, 312, 195, 397, 478, 274, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 0,
	0, 0, 0, 0, 253, 308, 260, 252, 503, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 386, 245, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	317, 191, 215, 0, 0, 396, 442, 454, 0, 0,
	0, 243, 0, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 0, 0, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 560, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 203, 487, 517, 229, 464, 0, 0, 562,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 563, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 564, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 557, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 561, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 558, 559, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1669, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 0, 435, 276,
	561, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 381, 0, 361, 499, 500, 303, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 1667, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 563, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 561,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 558, 559, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 1665, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 560, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 203,
	487, 517, 229, 464, 0, 0, 562, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 512, 513, 244, 563, 218, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 340, 341, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	564, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 557,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 369, 466, 521, 322, 334, 337, 327, 346,
	0, 347, 323, 324, 329, 331, 332, 333, 338, 339,
	343, 349, 239, 201, 375, 383, 501, 299, 206, 207,
	208, 494, 495, 496, 497, 535, 536, 540, 443, 444,
	445, 446, 280, 530, 296, 449, 448, 318, 319, 364,
	432, 0, 190, 211, 353, 0, 435, 276, 561, 534,
	529, 197, 213, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 288, 289,
	427, 428, 301, 302, 558, 559, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 0, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 1663, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 0, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 336, 345, 344, 325, 326,
	328, 330, 335, 342, 348, 0, 0, 0, 0, 0,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 243, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 560, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 203, 487,
	517, 229, 464, 0, 0, 562, 237, 484, 205, 515,
	483, 378, 313, 314, 204, 0, 438, 256, 281, 246,
	399, 512, 513, 244, 563, 218, 538, 210, 0, 537,
	392, 507, 516, 379, 368, 209, 514, 377, 367, 321,
	340, 341, 268, 294, 430, 360, 431, 293, 295, 388,
	387, 389, 198, 526, 0, 199, 0, 479, 527, 564,
	224, 225, 227, 0, 267, 271, 279, 282, 290, 291,
	300, 352, 403, 429, 425, 434, 0, 502, 520, 532,
	542, 548, 549, 551, 552, 553, 554, 555, 557, 556,
	391, 298, 475, 320, 358, 0, 0, 409, 453, 230,
	524, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 369, 466, 521, 322, 334, 337, 327, 346, 0,
	347, 323, 324, 329, 331, 332, 333, 338, 339, 343,
	349, 239, 201, 375, 383, 501, 299, 206, 207, 208,
	494, 495, 496, 497, 535, 536, 540, 443, 444, 445,
	446, 280, 530, 296, 449, 448, 318, 319, 364, 432,
	0, 190, 211, 353, 0, 435, 276, 561, 534, 529,
	197, 213, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 249, 264, 266, 273, 286, 297, 305, 306,
	309, 315, 365, 371, 372, 373, 374, 393, 394, 395,
	398, 401, 402, 405, 407, 408, 411, 415, 419, 420,
	421, 422, 424, 426, 436, 441, 455, 456, 457, 458,
	459, 462, 463, 468, 469, 470, 471, 472, 480, 481,
	486, 509, 511, 523, 541, 546, 461, 288, 289, 427,
	428, 301, 302, 558, 559, 287, 518, 547, 0, 0,
	363, 0, 0, 366, 269, 292, 307, 0, 533, 482,
	217, 447, 278, 241, 0, 0, 202, 236, 220, 247,
	262, 265, 311, 376, 384, 413, 418, 284, 259, 234,
	440, 231, 465, 489, 490, 491, 493, 380, 254, 417,
	381, 0, 361, 499, 500, 303, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	1659, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 351, 255, 0, 0, 414, 0, 196, 0,
	467, 242, 362, 359, 506, 270, 261, 257, 240, 304,
	370, 412, 488, 406, 0, 355, 0, 0, 477, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 238, 312, 195, 397,
	478, 274, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 336, 345, 344, 325, 326, 328,
	330, 335, 342, 348, 0, 0, 0, 0, 0, 253,
	308, 260, 252, 503, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 386,
	245, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 317, 191, 215, 0, 0,
	396, 442, 454, 0, 0, 0, 243, 0, 452, 410,
	522, 223, 272, 439, 416, 450, 423, 275, 0, 0,
	451, 357, 508, 433, 519, 544, 545, 251, 390, 531,
	492, 539, 560, 216, 248, 404, 485, 525, 474, 382,
	504, 505, 316, 473, 283, 194, 354, 550, 214, 460,
	356, 232, 221, 510, 528, 277, 437, 203, 487, 517,
	229, 464, 0, 0, 562, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 563, 218, 538, 210, 0, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 564, 224,
	225, 227, 0, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 0, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 557, 556, 391,
	298, 475, 320, 358, 0, 0, 409, 453, 230, 524,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 0,
	190, 211, 353, 0, 435, 276, 561, 534, 529, 197,
	213, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 558, 559, 287, 518, 547, 0, 0, 363,
	0, 0, 366, 269, 292, 307, 0, 533, 482, 217,
	447, 278, 241, 0, 0, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 381,
	0, 361, 499, 500, 303, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 1657,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 351, 255, 0, 0, 414, 0, 196, 0, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 0, 355, 0, 0, 477, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 0, 0, 0, 0, 0, 253, 308,
	260, 252, 503, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 386, 245,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 317, 191, 215, 0, 0, 396,
	442, 454, 0, 0, 0, 243, 0, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 0, 0, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 0, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 0, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 0, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 0, 0, 409, 453, 230, 524, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 0, 190,
	211, 353, 0, 435, 276, 561, 534, 529, 197, 213,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 0,
	0, 366, 269, 292, 307, 0, 533, 482, 217, 447,
	278, 241, 0, 0, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 381, 0,
	361, 499, 500, 303, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 1655, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	351, 255, 0, 0, 414, 0, 196, 0, 467, 242,
	362, 359, 506, 270, 261, 257, 240, 304, 370, 412,
	488, 406, 0, 355, 0, 0, 477, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 238, 312, 195, 397, 478, 274,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 336, 345, 344, 325, 326, 328, 330, 335,
	342, 348, 0, 0, 0, 0, 0, 253, 308, 260,
	252, 503, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 386, 245, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 317, 191, 215, 0, 0, 396, 442,
	454, 0, 0, 0, 243, 0, 452, 410, 522, 223,
	272, 439, 416, 450, 423, 275, 0, 0, 451, 357,
	508, 433, 519, 544, 545, 251, 390, 531, 492, 539,
	560, 216, 248, 404, 485, 525, 474, 382, 504, 505,
	316, 473, 283, 194, 354, 550, 214, 460, 356, 232,
	221, 510, 528, 277, 437, 203, 487, 517, 229, 464,
	0, 0, 562, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 512, 513,
	244, 563, 218, 538, 210, 0, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 340, 341, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 564, 224, 225, 227,
	0, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 0, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 557, 556, 391, 298, 475,
	320, 358, 0, 0, 409, 453, 230, 524, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 369, 466,
	521, 322, 334, 337, 327, 346, 0, 347, 323, 324,
	329, 331, 332, 333, 338, 339, 343, 349, 239, 201,
	375, 383, 501, 299, 206, 207, 208, 494, 495, 496,
	497, 535, 536, 540, 443, 444, 445, 446, 280, 530,
	296, 449, 448, 318, 319, 364, 432, 0, 190, 211,
	353, 0, 435, 276, 561, 534, 529, 197, 213, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 288, 289, 427, 428, 301, 302,
	558, 559, 287, 518, 547, 0, 0, 363, 0, 0,
	366, 269, 292, 307, 0, 533, 482, 217, 447, 278,
	241, 0, 0, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 381, 0, 361,
	499, 500, 303, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 351,
	255, 0, 0, 414, 0, 196, 0, 467, 242, 362,
	359, 506, 270, 261, 257, 240, 304, 370, 412, 488,
	406, 0, 355, 0, 0, 477, 385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 238, 312, 195, 397, 478, 274, 0,
	1630, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 336, 345, 344, 325, 326, 328, 330, 335, 342,
	348, 0, 0, 0, 0, 0, 253, 308, 260, 252,
	503, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 386, 245, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 317, 191, 215, 0, 0, 396, 442, 454,
	0, 0, 0, 243, 0, 452, 410, 522, 223, 272,
	439, 416, 450, 423, 275, 0, 0, 451, 357, 508,
	433, 519, 544, 545, 251, 390, 531, 492, 539, 560,
	216, 248, 404, 485, 525, 474, 382, 504, 505, 316,
	473, 283, 194, 354, 550, 214, 460, 356, 232, 221,
	510, 528, 277, 437, 203, 487, 517, 229, 464, 0,
	0, 562, 237, 484, 205, 515, 483, 378, 313, 314,
	204, 0, 438, 256, 281, 246, 399, 512, 513, 244,
	563, 218, 538, 210, 0, 537, 392, 507, 516, 379,
	368, 209, 514, 377, 367, 321, 340, 341, 268, 294,
	430, 360, 431, 293, 295, 388, 387, 389, 198, 526,
	0, 199, 0, 479, 527, 564, 224, 225, 227, 0,
	267, 271, 279, 282, 290, 291, 300, 352, 403, 429,
	425, 434, 0, 502, 520, 532, 542, 548, 549, 551,
	552, 553, 554, 555, 557, 556, 391, 298, 475, 320,
	358, 0, 0, 409, 453, 230, 524, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 369, 466, 521,
	322, 334, 337, 327, 346, 0, 347, 323, 324, 329,
	331, 332, 333, 338, 339, 343, 349, 239, 201, 375,
	383, 501, 299, 206, 207, 208, 494, 495, 496, 497,
	535, 536, 540, 443, 444, 445, 446, 280, 530, 296,
	449, 448, 318, 319, 364, 432, 0, 190, 211, 353,
	0, 435, 276, 561, 534, 529, 197, 213, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 249, 264,
	266, 273, 286, 297, 305, 306, 309, 315, 365, 371,
	372, 373, 374, 393, 394, 395, 398, 401, 402, 405,
	407, 408, 411, 415, 419, 420, 421, 422, 424, 426,
	436, 441, 455, 456, 457, 458, 459, 462, 463, 468,
	469, 470, 471, 472, 480, 481, 486, 509, 511, 523,
	541, 546, 461, 288, 289, 427, 428, 301, 302, 558,
	559, 287, 518, 547, 0, 0, 363, 0, 0, 366,
	269, 292, 307, 0, 533, 482, 217, 447, 278, 241,
	0, 0, 202, 236, 220, 247, 262, 265, 311, 376,
	384, 413, 418, 284, 259, 234, 440, 231, 465, 489,
	490, 491, 493, 380, 254, 417, 381, 0, 361, 499,
	500, 303, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 1531, 258, 0, 0, 0, 0, 351, 255,
	0, 0, 414, 0, 196, 0, 467, 242, 362, 359,
	506, 270, 261, 257, 240, 304, 370, 412, 488, 406,
	0, 355, 0, 0, 477, 385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 238, 312, 195, 397, 478, 274, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	336, 345, 344, 325, 326, 328, 330, 335, 342, 348,
	0, 0, 0, 0, 0, 253, 308, 260, 252, 503,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 386, 245, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 317, 191, 215, 0, 0, 396, 442, 454, 0,
	0, 0, 243, 0, 452, 410, 522, 223, 272, 439,
	416, 450, 423, 275, 0, 0, 451, 357, 508, 433,
	519, 544, 545, 251, 390, 531, 492, 539, 560, 216,
	248, 404, 485, 525, 474, 382, 504, 505, 316, 473,
	283, 194, 354, 550, 214, 460, 356, 232, 221, 510,
	528, 277, 437, 203, 487, 517, 229, 464, 0, 0,
	562, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 563,
	218, 538, 210, 0, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 564, 224, 225, 227, 0, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 0, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 557, 556, 391, 298, 475, 320, 358,
	0, 0, 409, 453, 230, 524, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 0, 190, 211, 353, 0,
	435, 276, 561, 534, 529, 197, 213, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 558, 559,
	287, 518, 547, 0, 0, 363, 0, 0, 366, 269,
	292, 307, 0, 533, 482, 217, 447, 278, 241, 0,
	0, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 381, 0, 361, 499, 500,
	303, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 351, 255, 0,
	0, 414, 0, 196, 0, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 0,
	355, 0, 0, 477, 385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 238, 312, 195, 397, 478, 274, 0, 89, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 0,
	0, 0, 0, 0, 253, 308, 260, 252, 503, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 386, 245, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	317, 191, 215, 0, 0, 396, 442, 454, 0, 0,
	0, 243, 0, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 0, 0, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 560, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 203, 487, 517, 229, 464, 0, 0, 562,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 563, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 564, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 557, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 561, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 558, 559, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 560, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 203, 487, 517, 229, 464, 0, 0, 562, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 563, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 564, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 557, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 0, 435, 276,
	561, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 558, 559, 1283, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 381, 0, 361, 499, 500, 303, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 560, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	203, 487, 517, 229, 464, 0, 0, 562, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 563, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 564, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	557, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 561,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 888, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 558, 559, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 586, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 560, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 203,
	487, 517, 229, 464, 0, 0, 562, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 512, 513, 244, 563, 218, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 340, 341, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	564, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 557,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 369, 466, 521, 322, 334, 337, 327, 346,
	0, 347, 323, 324, 329, 331, 332, 333, 338, 339,
	343, 349, 239, 201, 375, 383, 501, 299, 206, 207,
	208, 494, 495, 496, 497, 535, 536, 540, 443, 444,
	445, 446, 280, 530, 296, 449, 448, 318, 319, 364,
	432, 0, 190, 211, 353, 0, 435, 276, 561, 534,
	529, 197, 213, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 288, 289,
	427, 428, 301, 302, 558, 559, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 0, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 0, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 336, 345, 344, 325, 326,
	328, 330, 335, 342, 348, 0, 0, 0, 0, 0,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 243, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 560, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 203, 487,
	517, 229, 464, 0, 0, 562, 237, 484, 205, 515,
	483, 378, 313, 314, 204, 0, 438, 256, 281, 246,
	399, 512, 513, 244, 563, 218, 538, 210, 0, 537,
	392, 507, 516, 379, 368, 209, 514, 377, 367, 321,
	340, 341, 268, 294, 430, 360, 431, 293, 295, 388,
	387, 389, 198, 526, 0, 199, 0, 479, 527, 564,
	224, 225, 227, 0, 267, 271, 279, 282, 290, 291,
	300, 352, 403, 429, 425, 434, 0, 502, 520, 532,
	542, 548, 549, 551, 552, 553, 554, 555, 557, 556,
	391, 298, 475, 320, 358, 0, 0, 409, 453, 230,
	524, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 369, 466, 521, 322, 334, 337, 327, 346, 0,
	347, 323, 324, 329, 331, 332, 333, 338, 339, 343,
	349, 239, 201, 375, 383, 501, 299, 206, 207, 208,
	494, 495, 496, 497, 535, 536, 540, 443, 444, 445,
	446, 280, 530, 296, 449, 448, 318, 319, 364, 432,
	0, 190, 211, 353, 0, 435, 276, 561, 534, 529,
	197, 213, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 249, 264, 266, 273, 286, 297, 305, 306,
	309, 315, 365, 371, 372, 373, 374, 3439, 394, 395,
	398, 401, 402, 405, 407, 408, 411, 415, 419, 420,
	421, 422, 424, 426, 436, 441, 455, 456, 457, 458,
	459, 462, 463, 468, 469, 470, 471, 472, 480, 481,
	486, 509, 511, 523, 541, 546, 461, 288, 289, 427,
	428, 301, 302, 558, 559, 287, 518, 547, 0, 0,
	363, 0, 0, 366, 269, 292, 307, 0, 533, 482,
	217, 447, 278, 241, 0, 0, 202, 236, 220, 247,
	262, 265, 311, 376, 384, 413, 418, 284, 259, 234,
	440, 231, 465, 489, 490, 491, 493, 380, 254, 417,
	381, 0, 361, 499, 500, 303, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 351, 255, 0, 0, 414, 0, 196, 0,
	467, 242, 362, 359, 506, 270, 261, 257, 240, 304,
	370, 412, 488, 406, 0, 355, 0, 0, 477, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 238, 312, 195, 397,
	478, 274, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 336, 345, 344, 325, 326, 328,
	330, 335, 342, 348, 0, 0, 0, 0, 0, 253,
	308, 260, 252, 503, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 386,
	245, 0, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 317, 191, 215, 0, 0,
	396, 442, 454, 0, 0, 0, 243, 0, 452, 410,
	522, 223, 272, 439, 416, 450, 423, 275, 0, 0,
	451, 357, 508, 433, 519, 544, 545, 251, 390, 531,
	492, 539, 560, 216, 248, 404, 485, 525, 474, 382,
	504, 505, 316, 473, 283, 194, 354, 550, 214, 460,
	356, 232, 221, 510, 528, 277, 437, 203, 487, 517,
	229, 464, 0, 0, 562, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 563, 218, 538, 210, 0, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 564, 224,
	225, 227, 0, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 0, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 557, 556, 391,
	298, 475, 320, 358, 0, 0, 409, 453, 230, 524,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 0,
	190, 211, 353, 0, 435, 276, 561, 534, 529, 197,
	213, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 558, 559, 287, 518, 547, 0, 0, 363,
	0, 0, 366, 269, 292, 307, 0, 533, 482, 217,
	447, 278, 241, 0, 0, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 381,
	0, 361, 499, 500, 303, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 351, 255, 0, 0, 414, 0, 196, 0, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 0, 355, 0, 0, 477, 385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 0, 0, 0, 0, 0, 253, 308,
	260, 252, 503, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 386, 245,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 317, 191, 215, 0, 0, 396,
	442, 454, 0, 0, 0, 243, 0, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 0, 0, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 560, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 203, 487, 517, 229,
	464, 0, 0, 562, 237, 484, 205, 515, 483, 378,
	313, 314, 204, 0, 438, 256, 281, 246, 399, 512,
	513, 244, 563, 218, 538, 210, 0, 537, 392, 507,
	516, 379, 368, 209, 514, 377, 367, 321, 340, 341,
	268, 294, 430, 360, 431, 293, 295, 388, 387, 389,
	198, 526, 0, 199, 0, 479, 527, 564, 224, 225,
	227, 0, 267, 271, 279, 282, 290, 291, 300, 352,
	403, 429, 425, 434, 0, 502, 520, 532, 542, 548,
	549, 551, 552, 553, 554, 555, 557, 556, 391, 298,
	475, 320, 358, 0, 0, 409, 453, 230, 524, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 369,
	466, 521, 322, 334, 337, 327, 346, 0, 347, 323,
	324, 329, 331, 332, 333, 338, 339, 343, 349, 239,
	201, 375, 383, 501, 299, 206, 207, 208, 494, 495,
	496, 497, 535, 536, 540, 443, 444, 445, 446, 280,
	530, 296, 449, 448, 318, 319, 364, 432, 0, 190,
	211, 353, 0, 435, 276, 561, 534, 529, 197, 213,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	249, 264, 266, 273, 286, 297, 305, 306, 309, 315,
	365, 371, 372, 373, 374, 393, 394, 395, 398, 401,
	402, 405, 407, 408, 411, 415, 419, 420, 421, 422,
	424, 426, 436, 441, 455, 456, 457, 458, 459, 462,
	463, 468, 469, 470, 471, 472, 480, 481, 486, 509,
	511, 523, 541, 546, 461, 288, 289, 427, 428, 301,
	302, 558, 559, 287, 518, 547, 0, 0, 363, 0,
	0, 366, 269, 292, 307, 0, 533, 482, 217, 447,
	278, 241, 0, 0, 202, 236, 220, 247, 262, 265,
	311, 376, 384, 413, 418, 284, 259, 234, 440, 231,
	465, 489, 490, 491, 493, 380, 254, 417, 381, 0,
	361, 499, 500, 303, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	351, 255, 0, 0, 414, 0, 196, 0, 467, 242,
	362, 359, 506, 270, 261, 257, 240, 304, 370, 412,
	488, 406, 0, 355, 0, 0, 477, 385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 238, 312, 195, 397, 478, 274,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 336, 345, 344, 325, 326, 328, 330, 335,
	342, 348, 0, 0, 0, 0, 0, 253, 308, 260,
	252, 503, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 386, 245, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 317, 191, 215, 0, 0, 396, 442,
	454, 0, 0, 0, 243, 0, 452, 410, 522, 223,
	272, 439, 416, 450, 423, 275, 0, 0, 451, 357,
	508, 433, 519, 544, 545, 251, 390, 531, 492, 539,
	560, 216, 248, 404, 485, 525, 474, 382, 504, 505,
	316, 473, 283, 194, 354, 550, 214, 460, 356, 232,
	221, 510, 528, 277, 437, 203, 487, 517, 229, 464,
	0, 0, 562, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 512, 513,
	244, 563, 218, 538, 210, 0, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 340, 341, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 564, 224, 225, 227,
	0, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 0, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 557, 556, 391, 298, 475,
	320, 358, 0, 0, 409, 453, 230, 524, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 369, 466,
	521, 322, 334, 337, 327, 346, 0, 347, 323, 324,
	329, 331, 332, 333, 338, 339, 343, 349, 239, 201,
	375, 383, 501, 299, 206, 207, 208, 494, 495, 496,
	497, 535, 536, 540, 443, 444, 445, 446, 280, 530,
	296, 449, 448, 318, 319, 364, 432, 0, 190, 211,
	353, 0, 435, 276, 561, 534, 529, 197, 213, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 288, 289, 427, 428, 301, 302,
	558, 559, 287, 518, 547, 0, 0, 363, 0, 0,
	366, 269, 292, 307, 0, 533, 482, 217, 447, 278,
	241, 0, 0, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 0, 0, 361,
	499, 500, 303,
}

var yyPact = [...]int{
	-1000, -1000, 4938, -1000, -455, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2179, 2264,
	-1000, -1000, -1000, -1000, 2338, -1000, 848, 1840, -1000, 2134,
	314, -1000, 46684, 591, -1000, 44088, 590, 217, 29161, -1000,
	243, -1000, 221, 45386, 241, -1000, -1000, -1000, -296, 18775,
	2070, 102, 100, 46684, -1000, -1000, -1000, -1000, 2308, 1835,
	-1000, 404, -1000, -1000, -1000, -1000, -1000, -1000, 43439, -1000,
	978, -1000, -1000, 2116, 2137, 2349, 768, 2067, -1000, 2212,
	1835, -1000, 18775, 2299, 2199, 18126, 18126, 509, -1000, -1000,
	387, -1000, -1000, 24618, 46684, 31757, 292, -1000, 2134, -1000,
	-1000, -1000, 148, -1000, 419, 1760, -1000, 1759, -1000, 792,
	885, 436, 541, 529, 433, 431, 429, 428, 418, 416,
	408, 405, 430, -1000, 806, 806, -124, -130, 4079, 562,
	492, 492, 791, 533, 2115, 2109, -1000, -1000, 806, 806,
	806, 397, 806, 806, 806, 806, 367, 366, 806, 806,
	806, 806, 806, 806, 806, 806, 806, 806, 806, 806,
	806, 806, 806, 806, 806, 406, 2134, 349, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46684, 315, 46684, -1000, 675, 46684,
	940, 940, 146, 940, 940, 940, 940, 251, 716, 96,
	-1000, 247, 341, 240, 346, 912, 490, -1000, -1000, 325,
	912, 1641, -1000, 777, 185, -1000, 940, 940, -1000, 12260,
	158, 12260, 12260, -1000, 2111, -1000, -1000, -1000, -1000, -1000,
	1200, -1000, -1000, -1000, -1000, -11, 531, -1000, -1000, -1000,
	-1000, 45386, 42790, -1000, -1000, 43, -1000, -1000, 1642, 993,
	18775, 1192, -1000, 1085, 732, -1000, -1000, -1000, -1000, -1000,
	646, -1000, 19424, 19424, 19424, 19424, -1000, -1000, 1763, 42141,
	1763, 1763, 19424, 1763, -1000, 19424, 1763, 1763, 1763, 18775,
	1763, 1763, 1763, 1763, -1000, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, -1000, -1000, -1000, -1000, 1763, 660, 1763,
	1763, 1763, 1763, 1763, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1763, 1763, 1763, 1763, 1763, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20722, 1388, 1386, 1379, -1000, 16179, 1763, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46684, -1000,
	1763, 273, 45386, 45386, 440, 2212, 1835, -1000, 2308, 2270,
	404, -1000, 3130, 1456, 1376, 1223, 1835, 1737, 46684, -1000,
	1771, -1000, -1000, -1000, -1000, 1982, 1315, 1613, -1000, -1000,
	-1000, -1000, 2194, 18775, -1000, -1000, 2334, -1000, 22021, 659,
	2331, 41492, -1000, 509, 509, 1755, 469, 55, -1000, -1000,
	-1000, -1000, 817, 28512, -1000, -1000, -1000, -1000, 1640, 46684,
	-1000, -1000, 4579, 1045, -1000, 1837, -1000, 1635, -1000, 1805,
	18775, 1846, 586, 1045, 570, 550, 549, -1000, -21, -1000,
	-1000, -1000, -1000, -1000, -1000, 806, 806, 806, -1000, 415,
	2291, 314, 4189, -1000, -1000, -1000, 40843, 1834, 1045, -1000,
	1832, -1000, 884, 601, 626, 626, 1045, -1000, -1000, 46035,
	1045, 879, 877, 1045, 1045, 45386, 45386, -1000, 40194, -1000,
	39545, 38896, 1194, 45386, 38247, 37598, 36949, 36300, 35651, -1000,
	2048, -1000, 1880, -1000, -1000, -1000, 46035, 1045, 1045, 46035,
	45386, 46035, 46684, 1045, -1000, -1000, 382, -1000, -1000, 1189,
	1146, 1142, 806, 806, 1140, 1606, 1600, 1595, 806, 806,
	1138, 1593, 30459, 1587, 329, 1137, 1136, 1135, 1197, 1562,
	191, 1555, 1195, 1190, 1124, 45386, 1831, 46684, -1000, 317,
	778, 555, 816, 2134, 2069, 1752, 526, 578, 1045, 497,
	497, 45386, -1000, 14225, -1000, -1000, 1544, 18775, -1000, 919,
	912, 912, -1000, -1000, -1000, -1000, -1000, -1000, 940, 46684,
	919, -1000, -1000, -1000, 912, 940, 46684, 940, 940, 940,
	940, 912, 912, 912, 940, 46684, 46684, 46684, 46684, 46684,
	46684, 46684, 46684, 46684, 12260, 777, 940, -304, -1000, 1542,
	-1000, 1960, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12260, 12260,
	-1000, -1000, -1000, -1000, -1000, 1750, -1000, 230, 72, 239,
	-1000, 35002, 400, 815, -1000, 1749, 34353, -1000, -305, -312,
	-320, -327, -1000, -1000, -1000, -332, -363, -1000, -1000, -1000,
	18775, 18775, 18775, 18775, -165, -1000, 907, 19424, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 220, 950, 19424, 19424, 19424,
	19424, 19424, 19424, 19424, 19424, 19424, 19424, 19424, 19424, 19424,
	19424, 19424, -1000, -1000, 26565, 7932, 7932, 732, 732, 732,
	732, -1000, -85, 1744, 46035, -1000, -1000, -1000, 656, 18775,
	18775, 732, -1000, 1045, 16179, 33704, 18126, 18126, 18775, 826,
	993, 46035, 18775, -1000, 1223, -1000, -1000, -1000, 1090, -1000,
	930, 2110, 2110, 2110, 2110, 18775, 18775, 18775, 18775, 18775,
	18775, 18775, 18775, 18775, 18775, 2110, 45386, 45386, 1623, 18775,
	18775, 18775, 18775, 18775, 18775, 14880, 18775, 18775, 19424, 18775,
	18775, 18775, 1223, 18775, 18775, 18775, 18775, 18775, 18775, 18775,
	18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775,
	18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775, 18775,
	1223, 18775, 1069, 18775, 18775, 18126, 13570, 18126, 18126, 18126,
	18126, 18126, -1000, -1000, -1000, -1000, -1000, 18775, 18775, 18775,
	18775, 18775, 18775, 18775, 18775, 1223, 18775, 18775, 18775, 18775,
	18775, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1383, 1409, 1340, 18775, -1000, 1741, -1000, -99, 23969,
	18775, 1518, 2330, 1867, 45386, -1000, -1000, -1000, 2212, -1000,
	2212, 1383, 2942, 2011, 18126, -1000, -1000, 2942, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1645, -1000, 46684, 1737,
	2181, 45386, 2005, 1513, 413, -1000, 18775, 18775, 1735, -1000,
	1329, 46684, -1000, -165, -1000, 33055, -1000, -1000, 11605, 46684,
	396, 46684, -1000, 23320, 32406, 308, -1000, 55, 1710, -1000,
	46, 40, 15529, 729, -1000, -1000, -1000, 4079, 20073, 1687,
	729, 131, -1000, -1000, -1000, 1805, -1000, 1805, 1805, 1805,
	1805, 413, 413, 413, 413, -1000, -1000, -1000, -1000, -1000,
	1830, 1827, -1000, 1805, 1805, 1805, 1805, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1823, 1823, 1823, 1807, 1807, 487,
	-1000, 18775, 384, 31757, 2141, 1123, 1222, 317, 507, 1865,
	1045, 1045, 1045, 507, -1000, 1261, 1247, 1244, -1000, -447,
	1734, -1000, -1000, 2286, -1000, -1000, 956, 939, 926, 640,
	45386, 286, 385, -1000, 473, -1000, 31757, 1045, 869, 626,
	1045, -1000, 1045, -1000, -1000, -1000, -1000, -1000, 1045, -1000,
	-1000, 1731, -1000, 1742, 979, 914, 944, 898, 1731, -1000,
	-1000, -91, 1731, -1000, 1731, -1000, 1731, -1000, 1731, -1000,
	1731, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	796, 219, -231, 45386, 286, 524, -1000, 521, 26565, -1000,
	-1000, -1000, 26565, 26565, -1000, -1000, -1000, -1000, 1495, 1479,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -433,
	46684, -1000, 310, 813, 375, 414, 352, 46684, 261, 2190,
	2188, 2186, 2184, 2175, 345, 365, 46684, 46684, 497, 1928,
	46684, 2151, 46684, -1000, -1000, -1000, -1000, -1000, 993, 46684,
	-1000, -1000, 940, 940, -1000, -1000, 46684, 940, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 940, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46684, -1000, -1000, -1000, -1000, -11, 213, -1000,
	-1000, 45386, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -105, 124, 44, 372, -1000, -1000, -1000, -1000, -1000,
	2205, -1000, 993, 849, 857, -1000, 1763, -1000, -1000, 1005,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 220, 19424, 19424,
	19424, 1248, 538, 1548, 1111, 891, 973, 973, 1044, 1044,
	750, 750, 750, 750, 750, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1451, -1000, 1763, 46035, 1620, 13570, 2132,
	2079, 1223, 3049, -1000, 1612, -1000, 1612, 1676, 834, -1000,
	18775, 1223, 3045, -1000, -1000, 1223, 1223, 1223, 18775, -1000,
	-1000, 18775, 18775, 18775, 18775, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 18775, 1728, 1721, 2319, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2117, 1222, 1222, 1222, 1222, 1222, 18775, 1784, -1000, -1000,
	-1000, 1282, 3039, 1099, 3024, 1222, 1222, -1000, 1222, 2906,
	2898, 1223, 1642, 1223, 1716, -1000, 2856, 1222, 2821, 2811,
	2801, 2112, 2797, 2791, 2787, 1222, 1222, 1222, 2108, 2777,
	2753, 2749, 2745, 2739, 2735, 2730, 2722, 2709, 1222, -167,
	1222, 1223, -1000, -1000, -1000, -1000, -1000, 2697, 2102, 1223,
	1715, 1763, 653, -1000, -1000, 1612, 1223, 1223, 1612, 1612,
	2690, 2634, 2624, 2599, 2575, 2476, 1222, 1222, -1000, 1222,
	2318, 2306, 2098, 2020, 1223, -1000, 1340, 46684, -1000, -299,
	-1000, 20, 744, 1763, -1000, 30459, 1223, -1000, 5710, -1000,
	997, -1000, -1000, -1000, -1000, -1000, 27863, 1639, 2942, -1000,
	-1000, 1763, 1604, -1000, -1000, 413, 120, 27214, 688, 688,
	143, 993, 993, 18775, -1000, -1000, -1000, -1000, -1000, -1000,
	652, 2309, 426, 1763, -1000, 1757, 2677, -1000, -1000, -1000,
	2178, 21372, -1000, -1000, 1763, 1763, 46684, 1647, 1590, -1000,
	650, -1000, 1203, 1710, 55, 37, -1000, -1000, -1000, -1000,
	993, -1000, 1241, 398, 748, -1000, 482, -1000, -1000, -1000,
	-1000, 2090, 127, -1000, -1000, -1000, 287, 413, -1000, -1000,
	-1000, -1000, -1000, -1000, 1447, 1447, -1000, -1000, -1000, -1000,
	-1000, 1114, -1000, -1000, -1000, 1109, -1000, -1000, 2248, 1849,
	384, -1000, -1000, 806, 1437, -1000, -1000, 2092, 806, 806,
	45386, -1000, -1000, 1678, 2141, 310, 46684, 845, 1918, -1000,
	1865, 1865, 1865, 46684, -1000, -1000, -1000, -1000, -1000, -1000,
	-439, 64, 410, -1000, -1000, -1000, 671, 45386, 1572, -1000,
	283, -1000, 1649, -1000, 45386, -1000, 1570, 1821, 1045, 1045,
	-1000, -1000, -1000, 45386, 1763, -1000, -1000, -1000, -1000, 576,
	2131, 296, -1000, -1000, -189, -1000, -1000, 286, 283, 46035,
	1045, 729, -1000, -1000, -1000, -1000, -1000, -432, 1553, 544,
	295, 335, 46684, 46684, 46684, 46684, 46684, 612, -1000, -1000,
	58, -1000, -1000, 262, -1000, -1000, -1000, -1000, 262, -1000,
	-1000, -1000, -1000, 353, 519, -1000, 46684, 46684, 663, -1000,
	-1000, -1000, 912, -1000, -1000, 912, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2120, 46684,
	28, -389, -1000, -385, 18775, -1000, -1000, -1000, -1000, 1157,
	523, 1548, 19424, 19424, 19424, -1000, -1000, -1000, 681, 681,
	26565, -1000, 18775, 18126, -1000, -1000, 18775, 18775, 821, -1000,
	18775, 1014, -1000, 18775, -1000, -1000, -1000, 1340, 1222, 1222,
	1222, 1222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1751, 18775, 18775, 18775, 1223, 342, -1000, -1000,
	-1000, -1000, -1000, 2317, -1000, 18775, -1000, 26565, 18775, 18775,
	18775, -1000, -1000, -1000, 18775, 18775, -1000, -1000, 18775, 18775,
	-1000, 18775, 18775, 18775, -1000, 18775, 18775, 18775, 18775, -1000,
	-1000, -1000, -1000, 18775, 18775, 18775, 18775, 18775, 18775, 18775,
	18775, 18775, 18775, -1000, -1000, 31757, 95, -167, 1069, 95,
	1069, -1000, 18126, 12915, -1000, -1000, -1000, -1000, -1000, 18775,
	18775, 18775, 18775, 18775, 18775, -1000, -1000, -1000, 18775, 18775,
	-1000, 18775, -1000, 18775, -1000, -1000, -1000, -1000, -1000, 744,
	-1000, 626, 626, 626, 45386, -1000, -1000, -1000, -1000, 1709,
	-1000, 2242, -1000, 2026, 2018, 2315, 2309, -1000, 23320, 2942,
	-1000, -1000, 45386, -290, -1000, 2057, 2085, 688, 688, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10950, 2212, 18775, 1915,
	46035, 142, -1000, 22671, 45386, 46035, 23320, 23320, 23320, 23320,
	23320, -1000, 1958, 1954, -1000, 1971, 1968, 2021, 46684, -1000,
	1383, 1551, -1000, 18775, 25267, 1697, 23320, -1000, -1000, 23320,
	46684, 10295, -1000, -1000, 24, 34, -1000, -1000, -1000, -1000,
	4079, -1000, -1000, 1733, 2167, 2075, -1000, -1000, -1000, -1000,
	-1000, 1541, -1000, 1536, 1707, 1534, 219, -1000, 1789, 2114,
	806, 806, -1000, 1103, -1000, 1045, 1421, 1418, -1000, -1000,
	-1000, 537, -1000, 2146, 46684, 1910, 1909, 1907, -1000, -445,
	1097, 1820, 1739, 18775, 1819, 2285, 1704, 45386, -1000, -1000,
	46035, -1000, 276, -1000, 384, 45386, -1000, -1000, -1000, 385,
	46684, -1000, 7686, -1000, -1000, -1000, 283, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46684, 299, -1000, 1808, 1115, -1000,
	-1000, 1851, -1000, -1000, -1000, -1000, 266, 371, 1412, 249,
	1404, 249, -1000, 46684, 644, 1849, 46684, -1000, -1000, -1000,
	940, 940, -1000, -1000, 2104, -1000, 1045, 1222, 19424, 19424,
	-1000, 732, 304, -147, 1805, 1805, -1000, 1805, 1807, -1000,
	1805, 201, 1805, 197, 1805, -1000, -1000, 1223, 1223, 1340,
	-1000, 1998, 1870, -1000, 993, 18775, 2289, -1000, -1000, -1000,
	-1000, -1000, -27, 2271, 2260, 1222, -1000, 1803, 1802, 18775,
	1222, 1223, 1981, 1222, 1222, 1222, 1222, -1000, 993, 1340,
	2241, 1340, 1222, 1222, 2232, 316, 1222, 1529, 1529, 1529,
	1529, 1529, 1340, 1340, 1340, 1340, 45386, -1000, -167, -1000,
	-1000, -210, -212, -1000, 1223, -167, 1706, 1223, -1000, 1957,
	1953, 2225, 1940, 1222, 2215, 1222, 1222, 1222, 1862, -1000,
	2204, 2204, 2204, 1403, 997, 46684, -1000, -1000, -1000, -1000,
	2309, 2292, 1705, -1000, -1000, 120, 468, -1000, 2055, 2085,
	-1000, 2284, 2050, 2277, -1000, -1000, -1000, -1000, -1000, 993,
	-1000, 2133, 1691, -1000, 812, 1696, -1000, -1000, 17477, 1411,
	2016, 635, 1403, 1743, 2677, 1896, 1906, 2905, -1000, -1000,
	-1000, -1000, 1951, -1000, 1939, -1000, -1000, 1771, -1000, 2173,
	396, 23320, 1720, 1720, -1000, 625, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 957, 6821, 2348, -1000, 1400, -1000, 1224,
	200, 1095, -1000, -1000, 806, 806, -1000, 867, 865, -1000,
	46684, 1797, -1000, 413, 1397, 413, 1084, -1000, 1064, -1000,
	-1000, -1000, -1000, 1796, 2045, -1000, -1000, -1000, -1000, 46684,
	-1000, -1000, 46684, 46684, 46684, 1791, 2276, -1000, 18775, 1780,
	807, 2201, 45386, 45386, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 495, 806, -413, 360, 356,
	806, 806, 806, -446, -1000, -1000, 1395, 1392, -1000, -125,
	-1000, 18775, -1000, -1000, -1000, 1086, 1086, 1388, 1386, 1379,
	-1000, 1771, -1000, -1000, -1000, 1648, -1000, -1000, -101, 45386,
	45386, 45386, 45386, -1000, -1000, 1094, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 732, 1223,
	343, -115, 1223, -1000, -1000, 413, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18775, -1000, 18775, -1000,
	993, 18775, 2212, 1377, 18775, 18775, -1000, 1034, 1023, 1222,
	-1000, -1000, -1000, 18775, -1000, -1000, -1000, -1000, -1000, 18775,
	-1000, -1000, -1000, 18775, 226, 681, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1223, 393, -1000, -1000,
	-1000, -1000, 2313, -1000, 1223, 18775, -1000, -1000, 18775, -1000,
	18775, 18775, -1000, 18775, -1000, 18775, -1000, -1000, -1000, -1000,
	18775, 1763, 2136, 1763, 1763, 25267, -1000, -1000, 2292, 2305,
	2272, 2031, 2036, 2036, 2055, -1000, 2268, 2261, -1000, 1319,
	2257, 1317, 864, -1000, 46035, 18775, 142, -1000, 425, 45386,
	142, 45386, -1000, 2265, -1000, -1000, 18775, 1778, -1000, 18775,
	-1000, -1000, -1000, -1000, 7932, 2309, 1720, -1000, -1000, 758,
	-1000, 18775, -1000, -1000, -1000, 4044, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1311, 1307, -1000, -1000, 1777, 18775,
	-1000, -1000, -1000, 1644, 1643, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1771, -1000, -1000, -1000, -1000, 385, -441,
	2093, 45386, 1017, -1000, 1374, 1704, 379, 142, 1302, 806,
	806, 806, 995, 992, 30459, 1366, -1000, 45386, 462, -1000,
	385, -1000, -136, -142, 1222, -1000, -1000, 2163, -1000, -1000,
	12915, -1000, -1000, 1767, 1859, -1000, -1000, -1000, -1000, 1976,
	-104, -121, -1000, -1000, 1222, 1222, 1371, 1223, -1000, 1222,
	1222, 1396, 1341, -1000, 1222, 1340, 1852, -1000, 226, 1223,
	1903, -1000, -1000, 7932, -1000, -1000, 2265, 2235, 95, -1000,
	-1000, 272, 95, 993, 1774, 1222, 1718, 1694, 1222, 1222,
	25916, -1000, 2226, 2222, 31108, 31108, 744, 2305, -177, 18775,
	18775, 2023, 1050, -1000, -1000, -1000, -1000, 1299, 1272, -1000,
	1263, -1000, 2347, -1000, 993, -1000, 142, -1000, 616, 1696,
	-1000, 2212, 993, 45386, 993, 118, 2265, -1000, 1222, -1000,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	-1000, -1000, 45386, 1881, -1000, -1000, 2162, 1358, 62, -1000,
	1283, 1704, -1000, -1000, 135, -1000, 18775, -1000, 30459, 1249,
	1208, -1000, -1000, -1000, -1000, -446, -1000, -1000, -1000, -1000,
	-1000, -1000, 404, 1703, -1000, 788, 45386, 46684, -1000, 1973,
	-1000, -1000, -1000, 18775, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18775, -1000, 1223, 1901, -1000, -259, -1000, -419,
	18775, -167, -1000, -1000, -167, -1000, 18775, -1000, -1000, 18775,
	-1000, 18775, -1000, -1000, 1356, -1000, -1000, -1000, -1000, -1000,
	1356, 1356, -1000, -177, -1000, 1699, -1000, 45386, 993, 1642,
	-1000, 1041, -1000, -1000, -1000, -1000, -1000, 46035, 1696, 45386,
	-1000, 1349, 1223, 1763, 2212, -1000, 1347, -1000, 404, -1000,
	1766, 1739, -1000, -1000, -1000, 16828, -1000, -1000, -1000, -1000,
	-1000, 189, -96, 12915, 9640, 1345, -1000, -93, 1222, 1340,
	-1000, -371, -1000, -1000, -1000, -1000, 190, -1000, -1000, 1642,
	-1000, -1000, 1685, 1672, 1531, 29810, -1000, -1000, -1000, -1000,
	-177, -1000, -1000, 2153, -1000, -1000, 1378, -1000, -1000, 25267,
	44737, -1000, -83, 255, -96, 18775, 1764, 1223, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26, -1000, -1000, -1000,
	-1000, -1000, 1851, -119, -1000, -1000, -1000, 129, -394, -194,
	-195, -1000, -1000, 19424, -1000, 18775, -1000, 18775, -1000, 18775,
	-1000, -1000, -1000, 45386, 1763, -1000, 1334, -1000, 3699, -229,
	1894, -1000, -41, -1000, -1000, -1000, 915, 1206, -1000, -1000,
	-1000, -1000, -1000, -1000, 1364, 45386, -1000, 470, -1000, -1000,
	-101, -123, 852, -1000, -1000, -1000, -1000, -1000, 1285, 1082,
	1222, -1000, 45386, -1000, 44737, -224, 729, 7932, -1000, 1878,
	1871, 2325, -1000, -1000, -1000, -1000, -1000, -1000, -452, 1278,
	318, -1000, -1000, 129, -1000, 18775, -1000, 18775, -1000, 1223,
	-1000, -1000, 2145, 118, -1000, 2340, -1000, 2310, 686, 686,
	-1000, 987, -452, -1000, -1000, 1222, 1222, -1000, -238, -1000,
	-1000, -1000, -1000, -1000, 474, 1040, -1000, -1000, -1000, -1000,
	-1000, 7932, -1000, -1000, -1000, 259, 259, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2948, 2947, 38, 1, 37, 36, 2946, 93, 103,
	200, 30, 191, 114, 2945, 2941, 2934, 2931, 2925, 2924,
	2923, 178, 177, 174, 2922, 2921, 2920, 2917, 2911, 2907,
	2905, 2904, 2903, 2901, 166, 162, 195, 2898, 2897, 2896,
	119, 192, 89, 97, 190, 2893, 2883, 81, 2882, 2868,
	2867, 187, 186, 183, 867, 2866, 181, 120, 53, 2862,
	2859, 2858, 2855, 2854, 2853, 2852, 2844, 2843, 2842, 2840,
	2834, 2830, 2824, 2816, 2814, 2812, 295, 2807, 2806, 22,
	2804, 86, 2803, 2800, 2799, 2798, 8, 2794, 2793, 14,
	40, 2792, 2790, 51, 2788, 2787, 2786, 2784, 2782, 20,
	2780, 27, 2779, 39, 2777, 2772, 123, 2770, 2769, 2767,
	41, 2764, 2762, 2758, 2755, 2752, 2742, 2737, 140, 2736,
	2735, 2733, 240, 198, 2729, 2728, 168, 143, 108, 2727,
	2725, 113, 189, 2724, 124, 2721, 2718, 2715, 150, 2711,
	138, 2710, 2709, 67, 71, 2708, 421, 2707, 2704, 12,
	21, 62, 9, 18, 19, 2703, 2702, 66, 92, 2700,
	130, 2698, 2697, 110, 69, 2692, 101, 106, 2689, 2683,
	11, 7, 2667, 2, 6, 4, 68, 2664, 2658, 118,
	2646, 2645, 2641, 88, 2639, 2630, 6458, 2629, 100, 129,
	102, 77, 2625, 49, 65, 2624, 2623, 2622, 2621, 2606,
	54, 2604, 2591, 2590, 139, 224, 163, 2583, 50, 82,
	58, 134, 2582, 63, 80, 197, 164, 2581, 2578, 137,
	135, 2572, 2569, 60, 44, 45, 2567, 112, 131, 121,
	111, 109, 136, 2565, 2556, 59, 75, 2553, 2545, 2538,
	2535, 165, 2534, 2531, 74, 2529, 56, 2525, 184, 2517,
	16, 64, 2515, 48, 171, 2514, 76, 2513, 2508, 72,
	105, 70, 43, 2506, 156, 161, 126, 170, 2505, 2503,
	57, 2500, 2491, 2490, 193, 329, 2483, 2476, 78, 167,
	142, 148, 98, 2475, 331, 2472, 2471, 87, 2616, 5110,
	2470, 42, 158, 2466, 2465, 6315, 157, 47, 33, 2463,
	104, 2461, 2458, 2456, 2455, 217, 182, 107, 159, 61,
	2451, 2450, 2449, 17, 2446, 2443, 2441, 2439, 2438, 2437,
	90, 35, 34, 32, 202, 73, 24, 133, 160, 83,
	2436, 2433, 2427, 122, 79, 2424, 155, 153, 125, 172,
	2423, 179, 146, 128, 2420, 91, 31, 2419, 2418, 2417,
	2415, 99, 2414, 2411, 2409, 2407, 151, 144, 117, 84,
	2405, 85, 116, 145, 154, 55, 2404, 46, 2400, 2398,
	29, 188, 28, 2397, 15, 95, 242, 2396, 4338, 180,
	2395, 23, 330, 147, 2393, 2391, 3, 10, 13, 2386,
	2385, 2384, 2381, 132, 2379, 2378, 2376, 2375, 26, 52,
	25, 5, 115, 94, 2372, 2370, 141, 2369, 2368, 3066,
	0, 127, 2363, 203,
}

//line sql.y:7919
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 407, 408, 408, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 378,
	379, 379, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 411, 411, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 263, 263, 265, 265, 265, 265, 255, 255,
	255, 25, 25, 264, 264, 266, 266, 266, 269, 269,
	269, 269, 308, 308, 308, 26, 26, 26, 26, 26,
	124, 124, 381, 381, 380, 374, 374, 373, 373, 372,
	377, 377, 376, 376, 375, 38, 39, 48, 48, 48,
	48, 49, 50, 382, 382, 347, 55, 55, 54, 54,
	54, 54, 54, 54, 56, 56, 52, 52, 51, 51,
	53, 53, 349, 349, 335, 335, 348, 348, 348, 348,
	348, 348, 348, 334, 334, 135, 135, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 397, 397, 397, 396, 396, 234,
	234, 234, 234, 234, 234, 234, 234, 145, 145, 157,
	157, 157, 157, 157, 143, 143, 144, 142, 142, 142,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 156,
	156, 152, 152, 152, 153, 153, 153, 154, 154, 398,
	398, 398, 398, 313, 313, 313, 313, 316, 316, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 315, 315,
	315, 315, 315, 317, 317, 317, 317, 317, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 333, 333, 320, 320, 328, 328, 329, 329,
	329, 330, 330, 330, 331, 331, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 327, 327, 326, 326, 326,
	336, 361, 361, 360, 360, 358, 358, 358, 358, 358,
	358, 358, 358, 345, 345, 355, 355, 355, 355, 355,
	344, 344, 340, 340, 340, 341, 341, 342, 342, 339,
	339, 343, 343, 357, 357, 356, 356, 337, 337, 338,
	338, 363, 399, 399, 399, 399, 399, 400, 400, 364,
	389, 391, 391, 391, 390, 390, 387, 388, 386, 386,
	386, 386, 386, 81, 81, 81, 282, 282, 283, 283,
	353, 353, 352, 352, 352, 354, 354, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 277, 277,
	277, 385, 385, 385, 385, 385, 385, 384, 384, 384,
	350, 350, 350, 383, 383, 57, 57, 214, 214, 402,
	402, 403, 403, 403, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 46, 46, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 366, 366, 58, 58, 3, 3, 169,
	171, 172, 172, 170, 170, 170, 170, 170, 170, 60,
	60, 59, 59, 174, 173, 175, 175, 175, 1, 1,
	2, 2, 4, 4, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 332, 332, 332, 365,
	365, 367, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 369, 369, 369, 61, 61, 370,
	321, 322, 323, 5, 6, 346, 368, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	276, 276, 285, 285, 275, 275, 300, 300, 300, 278,
	278, 278, 279, 279, 395, 395, 395, 272, 272, 64,
	64, 64, 301, 301, 301, 301, 66, 66, 404, 404,
	405, 405, 406, 406, 406, 67, 68, 68, 303, 303,
	304, 304, 69, 70, 82, 82, 82, 82, 82, 82,
	82, 105, 105, 105, 15, 15, 15, 15, 78, 78,
	78, 14, 14, 65, 65, 72, 392, 392, 393, 394,
	394, 394, 394, 73, 75, 31, 31, 31, 31, 31,
	31, 130, 130, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 125, 125, 125, 119, 119,
	412, 76, 77, 77, 123, 123, 123, 116, 116, 116,
	122, 122, 122, 16, 16, 17, 258, 258, 18, 18,
	127, 127, 129, 129, 129, 129, 129, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 128, 128, 128, 128,
	293, 293, 293, 292, 292, 163, 163, 165, 164, 164,
	166, 166, 167, 167, 167, 167, 212, 212, 189, 189,
	251, 251, 252, 252, 250, 250, 257, 257, 253, 253,
	253, 253, 260, 260, 168, 168, 168, 168, 176, 176,
	177, 177, 178, 178, 302, 302, 298, 298, 298, 297,
	297, 182, 182, 182, 184, 183, 183, 183, 183, 185,
	185, 187, 187, 186, 186, 188, 193, 193, 192, 192,
	190, 190, 190, 190, 191, 191, 191, 191, 194, 194,
	140, 140, 140, 140, 140, 140, 140, 155, 155, 155,
	155, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 241, 241, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 149, 217, 217, 216, 216, 83, 83, 83,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	86, 86, 141, 141, 88, 88, 87, 87, 207, 207,
	290, 290, 89, 90, 90, 93, 93, 92, 91, 91,
	97, 97, 94, 94, 96, 96, 95, 98, 98, 99,
	100, 100, 273, 273, 195, 195, 203, 203, 203, 203,
	196, 196, 196, 196, 196, 196, 196, 204, 204, 204,
	211, 205, 205, 201, 201, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 160, 160, 160, 160, 222, 222, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 148, 148, 161, 161, 161, 161, 162, 162,
	162, 162, 162, 162, 162, 310, 310, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 413, 413,
	324, 324, 324, 324, 202, 202, 202, 202, 202, 121,
	121, 121, 121, 121, 307, 307, 307, 311, 311, 311,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 312, 312, 220, 220, 117,
	117, 218, 218, 219, 221, 221, 213, 213, 213, 213,
	215, 215, 198, 198, 198, 223, 223, 224, 224, 101,
	102, 102, 103, 103, 225, 225, 227, 226, 226, 228,
	229, 229, 229, 230, 230, 231, 231, 231, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	43, 132, 132, 132, 132, 134, 134, 133, 133, 79,
	79, 80, 80, 80, 138, 138, 139, 139, 139, 136,
	136, 137, 137, 248, 248, 232, 232, 232, 239, 239,
	239, 235, 235, 237, 237, 237, 238, 238, 238, 236,
	245, 245, 247, 247, 246, 246, 242, 242, 243, 243,
	244, 244, 244, 240, 240, 197, 197, 197, 197, 197,
	249, 249, 249, 249, 261, 261, 208, 208, 210, 210,
	209, 209, 159, 262, 262, 270, 267, 267, 268, 268,
	294, 294, 294, 271, 271, 284, 284, 280, 280, 281,
	281, 274, 274, 286, 286, 286, 74, 206, 206, 362,
	362, 359, 289, 289, 291, 291, 295, 295, 299, 299,
	296, 296, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 409, 410, 305, 306, 306,
	306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 6, 12, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	0, 1, 1, 3, 3, 6, 4, 7, 8, 8,
	8, 6, 3, 1, 1, 5, 0, 1, 1, 1,
	1, 2, 2, 2, 0, 1, 4, 4, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 3, 3,
	2, 2, 4, 4, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 2, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 6, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 1, 6,
	3, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 4, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 4, 6,
	6, 6, 8, 6, 6, 4, 4, 3, 4, 6,
	6, 4, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 6, 5, 9, 6, 9, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -407, -76, -412, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 311,
	312, 314, 315, 316, 317, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -409, 12, 445, 259, 258, 29, -12, 507, 87,
	-77, -408, 659, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -347, -349, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -371, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 507, 510, -354, 226,
	232, 233, 228, 446, 126, 125, 76, -351, 368, 540,
	629, -56, 631, 101, 104, 630, 45, 238, 632, 633,
	634, 547, 635, 247, 636, 637, 638, 639, 645, 588,
	646, 647, 648, 127, 8, -76, -299, -295, 91, -288,
	504, 250, 538, 539, 299, 82, 42, 513, 365, 368,
	540, 475, 629, 311, 327, 321, 480, 481, 482, 348,
	340, 505, 541, 514, 302, 251, 287, 623, 338, 135,
	631, 306, 542, 265, 373, 374, 543, 375, 101, 314,
	412, 644, 305, 544, 642, 104, 630, 319, 80, 474,
	52, 626, 45, 260, 336, 234, 332, 632, 288, 545,
	516, 281, 126, 123, 651, 37, 330, 51, 31, 641,
	125, 50, 633, 150, 546, 634, 547, 377, 355, 617,
	49, 378, 266, 548, 85, 271, 509, 309, 625, 379,
	494, 331, 380, 298, 640, 231, 549, 608, 600, 601,
	381, 382, 618, 360, 356, 361, 496, 550, 404, 479,
	383, 604, 605, 658, 53, 551, 552, 619, 124, 553,
	79, 635, 81, 325, 326, 554, 296, 249, 499, 500,
	406, 352, 457, 464, 465, 111, 112, 460, 113, 466,
	114, 467, 468, 469, 458, 115, 108, 459, 470, 471,
	353, 354, 116, 472, 110, 109, 461, 463, 117, 473,
	247, 36, 384, 506, 300, 59, 304, 275, 407, 47,
	358, 655, 46, 613, 501, 555, 616, 351, 347, 454,
	54, 556, 557, 558, 559, 476, 636, 350, 324, 346,
	650, 4, 293, 477, 637, 63, 233, 363, 362, 364,
	282, 403, 343, 560, 561, 562, 254, 83, 563, 333,
	22, 564, 565, 385, 289, 566, 57, 567, 568, 410,
	263, 569, 55, 638, 40, 570, 268, 652, 639, 571,
	572, 573, 574, 270, 575, 387, 576, 602, 603, 386,
	357, 359, 502, 277, 388, 508, 577, 310, 329, 267,
	643, 578, 255, 490, 491, 492, 493, 624, 498, 497,
	269, 274, 262, 411, 256, 579, 580, 581, 582, 583,
	303, 599, 584, 585, 315, 645, 455, 44, 586, 587,
	588, 589, 590, 297, 292, 405, 414, 62, 84, 370,
	591, 592, 622, 323, 320, 290, 593, 312, 56, 646,
	647, 648, 284, 649, 483, 484, 485, 486, 10, 656,
	657, 478, 390, 127, 294, 295, 48, 344, 276, 594,
	307, 595, 334, 335, 349, 322, 345, 313, 609, 278,
	391, 456, 264, 596, 413, 291, 366, 371, 308, 512,
	495, 283, 392, 621, 511, 487, 488, 342, 339, 285,
	489, 597, 393, 239, 279, 280, 598, 610, 394, 395,
	301, 396, 397, 398, 399, 400, 402, 401, 606, 607,
	286, 510, 318, 337, 372, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 453, 237, -76, 237, -186, -295, 237,
	-267, 374, -285, 376, 389, 384, 394, 382, -276, 385,
	387, 277, -395, 404, 237, 391, 225, 377, 386, 395,
	396, 301, 402, 397, 401, 286, 398, 399, 400, -378,
	177, 634, 649, 135, 341, 381, 379, 405, 613, 91,
	-301, 91, 92, 93, -288, 313, -303, 318, -289, -378,
	-288, 316, -76, -305, -305, -125, 613, 615, -205, -140,
	143, -155, -158, -146, -150, -199, -200, -201, -202, -156,
	-215, -254, 166, 167, 174, 144, -211, -159, 27, 503,
	447, 446, 177, 32, -149, 220, 69, 70, 449, 146,
	58, 12, 422, 423, -157, 417, 424, 419, 474, 476,
	477, 478, 475, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 479, 451, 452, 118, 453, 108, 110,
	109, 454, 455, 456, 338, 501, 502, 496, 499, 500,
	498, 497, 353, 354, 457, 458, 459, 111, 112, 113,
	114, 115, 116, 117, 460, 463, 461, 462, 464, 465,
	466, 471, 472, 467, 468, 469, 470, 473, -85, -97,
	529, 528, -98, -147, -148, -161, -162, -289, -295, 242,
	416, 236, 172, 445, -151, -144, -213, 107, 92, 93,
	-8, -209, 415, 420, 421, 425, 418, 515, 517, 532,
	533, 535, 520, 525, 524, 527, 490, 491, 492, 493,
	494, 495, 600, 601, 602, 603, 604, 605, 606, 607,
	-378, -288, 91, -153, -152, -195, 94, 99, 102, 103,
	105, -401, 260, 334, 335, 119, -409, 627, 90, 95,
	96, 97, 98, 120, 121, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 45, 390, 390,
	-186, -76, -76, -76, -76, -225, -123, -227, -10, -8,
	-409, 9, -76, -8, -9, -13, -34, -36, 534, -35,
	-295, 100, -232, -248, 13, 162, 43, 51, -230, -231,
	-12, -8, -140, 20, 24, 25, -128, 168, -140, -295,
	-128, -274, 241, -76, -76, -263, -308, 313, -265, 405,
	613, 404, -255, -268, 91, -254, -267, 403, -348, 159,
	-334, -338, -289, 252, -364, 248, -186, -357, -356, -289,
	-409, -124, -284, 238, 246, 245, 136, -382, 139, 294,
	416, 236, -51, -52, -53, -267, 176, 633, -106, 269,
	273, 88, 88, -338, -337, -336, -383, 273, 252, -363,
	-355, 244, 253, -344, 245, 246, -339, 238, 137, -383,
	-339, 243, 253, 248, 252, 273, 273, 127, 273, 127,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 268,
	-345, 151, -345, 511, 511, -351, -383, 248, 238, -383,
	-383, 244, -286, -339, 240, 26, 240, 36, 36, -345,
	-345, -345, -267, 176, -345, -345, -345, -345, 281, 281,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, 237, -382, -132,
	401, 301, 82, -54, 283, -37, -186, -284, 238, 239,
	-382, 270, -186, 221, -186, -278, 159, 16, -278, -275,
	390, 388, 375, 380, -278, -278, -278, -278, 284, 373,
	-340, 238, 36, 249, 390, 284, 373, 284, 285, 284,
	285, 383, 393, 284, -300, 15, 162, 416, 378, 382,
	277, 237, 278, 239, 392, 285, -300, 90, -279, 159,
	390, 280, -278, -278, -306, -409, -291, -289, -287, 230,
	24, 142, 26, 28, 145, 177, 130, 20, 146, 38,
	232, 341, 248, 176, 244, 446, 225, 73, 515, 417,
	419, 415, 422, 448, 449, 416, 376, 32, 14, 517,
	29, 258, 25, 39, 170, 227, 149, 518, 261, 27,
	259, 118, 121, 520, 23, 76, 253, 15, 246, 41,
	17, 521, 522, 18, 242, 241, 162, 238, 71, 12,
	220, 30, 158, 67, 523, 137, 524, 525, 526, 527,
	131, 69, 159, 21, 653, 420, 421, 34, 614, 503,
	272, 172, 74, 60, 615, 143, 418, 528, 529, 119,
	530, 122, 77, 620, 139, 19, 72, 43, 531, 273,
	532, 243, 654, 533, 408, 534, 160, 228, 445, 70,
	161, 627, 535, 628, 236, 389, 9, 450, 33, 257,
	245, 129, 68, 536, 237, 148, 451, 452, 240, 132,
	120, 8, 136, 35, 13, 75, 78, 423, 424, 425,
	58, 128, 507, 147, 16, 537, 409, 141, -378, 616,
	-306, -306, 33, 92, -404, -405, -406, 507, 408, 240,
	-289, -186, -82, 608, 229, -130, 390, -118, 177, 634,
	617, 618, 619, 616, 387, 624, 622, 620, 284, 621,
	88, 139, 141, 142, 4, -140, 158, -196, 151, 152,
	153, 154, 155, 156, 157, 162, 143, 145, 159, -241,
	140, 163, 164, 165, 166, 167, 168, 169, 171, 170,
	172, 173, 160, 161, 176, 223, 224, -150, -150, -150,
	-150, -211, -217, -216, -409, -213, -378, -288, -295, -409,
	-409, -150, -273, -409, -409, -150, -409, -409, -409, -220,
	-140, -409, -409, -413, -409, -413, -413, -324, -409, -324,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, 221, -409, -409, -409,
	-409, -409, -324, -324, -324, -324, -324, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, 103, 99, 102, 94, -215, 105, 90, 90, 90,
	90, -8, -9, -205, -409, -305, -392, -393, -189, -186,
	-409, 301, -289, -289, 270, -230, -12, -8, -225, -231,
	-227, -8, -76, -116, -129, 64, 65, -131, 25, 39,
	68, 66, 24, -410, 89, -410, -248, -410, 88, -36,
	-251, 87, 62, 44, 90, 90, 88, 22, -226, -228,
	-140, 15, -293, 4, -292, 26, -289, 90, 221, 15,
	-187, 30, -186, -274, -274, 88, 91, 313, -264, -266,
	406, 408, 151, -294, -289, 90, 32, 89, 88, -186,
	-313, -316, -318, -317, -319, -314, -315, 338, 339, 177,
	342, 344, 345, 346, 347, 348, 349, 350, 351, 352,
	355, 33, 260, 334, 335, 336, 337, 356, 357, 358,
	359, 361, 362, 363, 364, 321, 340, 505, 322, 323,
	324, 325, 326, 327, 329, 330, 331, 332, 333, -379,
	-378, 87, 89, 88, -320, 87, -140, -132, 237, -378,
	238, 238, 238, -76, 445, -345, -345, -345, 268, 20,
	-44, -41, -371, 19, -40, -41, 230, 123, 124, 227,
	87, -334, 87, -343, -379, -378, 87, 137, 243, 136,
	-342, -339, -342, -343, -378, -213, -378, 137, 137, -378,
	-378, -260, -289, -260, -260, 24, -260, 24, -260, 24,
	96, -289, -260, 24, -260, 24, -260, 24, -260, 24,
	-260, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-213, -378, -378, -213, -334, -213, -186, -378, -267, 96,
	96, 96, -345, -345, 96, 90, 90, 90, -345, -345,
	96, 90, -297, -295, 90, 90, -384, 254, 298, 300,
	96, 96, 96, 96, 32, 90, -385, 32, 641, 640,
	642, 643, 644, 90, 96, 32, 96, 32, 96, -289,
	87, -186, -138, 288, 225, 227, 230, 77, 90, 304,
	305, 302, 307, 308, 151, 45, 88, 240, 237, -378,
	-280, 242, -280, -289, -296, -295, -287, 90, -140, -341,
	15, 162, -300, -300, -278, -186, -341, -300, -278, -186,
	-278, -278, -278, -278, -300, -300, -300, -278, -295, -295,
	-186, -186, -186, -186, -186, -186, -186, -306, -279, -278,
	616, 90, -272, 15, 77, -306, -306, 88, 319, 409,
	410, -304, 316, -78, -289, 90, -15, -11, -22, -21,
	-23, 151, 88, 507, -179, -186, 616, 616, 616, 616,
	616, 616, -140, -140, -140, -140, 530, -203, 119, 143,
	120, 121, -158, -204, -209, -211, 106, 162, 145, 159,
	-241, -146, -150, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -307, -289, 90, 177,
	-154, -153, 105, -401, -154, 504, 88, -216, 221, -140,
	-140, -378, -140, -289, -126, -128, -126, -140, -218, -219,
	147, -213, -140, -410, -410, 96, 105, 168, -122, 25,
	39, -122, -122, -122, -122, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -122, -289, -289, -115, -114,
	427, 428, 429, 430, 432, 433, 434, 437, 438, 442,
	443, 426, 444, 431, 436, 439, 440, 441, 435, 337,
	-140, -140, -140, -140, -140, -140, -83, -140, 130, 131,
	132, -205, -140, -146, -140, -140, -140, -410, -140, -140,
	-140, -206, -205, -377, -376, -375, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -410,
	-140, -160, -144, 96, -256, 105, 92, -140, -140, -127,
	-126, -291, -296, -287, -288, -126, -127, -127, -126, -126,
	-140, -140, -140, -140, -140, -140, -140, -140, -410, -140,
	-140, -140, -140, -140, -248, -410, -205, 88, -394, 408,
	409, 614, -298, 273, -297, 26, -206, 90, 15, -258,
	78, -289, -230, -230, 64, 65, 60, -126, -131, -410,
	-35, 26, -250, -289, 63, 90, -325, -267, 365, 366,
	177, -140, -140, 88, -229, 28, 29, -186, -292, 168,
	-296, -186, -259, 273, -186, -164, -166, -167, -168, -189,
	-212, -409, -169, -8, 526, 523, 15, -179, -180, -188,
	-295, -265, -308, -264, 88, 407, 409, 410, 77, 122,
	-140, -326, 176, -353, -352, -351, -334, -336, -337, -338,
	89, -326, -330, 371, 370, -320, -320, -320, -320, -320,
	-325, -325, -325, -325, 87, 87, -320, -320, -320, -320,
	-328, 87, -328, -328, -329, 87, -329, -364, -140, -361,
	-360, -358, -359, 247, 101, 598, 554, 507, 547, 588,
	78, -356, -229, 96, -410, -138, -281, 242, -362, -359,
	-378, -378, -378, -281, 91, 90, 91, 90, 91, 90,
	-107, -58, -1, 653, 654, 655, 88, 20, -335, -334,
	-57, 298, -367, -368, 273, -363, -357, -343, 137, -342,
	-343, -343, -378, 88, 30, 127, 127, 127, 127, 507,
	227, 33, -282, 546, 143, 598, 554, -334, -57, 240,
	240, -307, -307, -307, 90, 90, -277, 649, -179, -134,
	290, 151, 279, 279, 237, 237, 292, -186, 303, 306,
	304, 305, 302, 307, 308, 24, 24, 24, 24, 24,
	291, 293, 295, 281, -186, -186, -280, 77, -181, -186,
	27, -295, -186, -278, -278, -186, -278, -278, -186, -406,
	320, -289, 352, 609, 610, 612, 611, -118, 408, 88,
	507, 23, -119, 23, -409, 119, 120, 121, -204, -146,
	-150, -146, 142, 261, -409, -213, -410, -291, 26, 88,
	78, -410, 88, 88, -410, -410, 88, 15, -221, -219,
	149, -140, -410, 88, -410, -410, -410, -205, -140, -140,
	-140, -140, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -205, 88, 88, 15, -311, 26, -410, -410,
	-410, -410, -410, -220, -410, 15, -410, 78, 88, 162,
	88, -410, -410, -410, 88, 88, -410, -410, 88, 88,
	-410, 88, 88, 88, -410, 88, 88, 88, 88, -410,
	-410, -410, -410, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -410, -90, 531, -410, -410, 88, -410,
	88, -410, -409, 221, -410, -410, -410, -410, -410, 88,
	88, 88, 88, 88, 88, -410, -410, -410, 88, 88,
	-410, 88, -410, 88, -410, -393, 613, 409, -193, -192,
	-190, 75, 241, 76, -409, -297, -410, -154, -256, -257,
	-256, -198, -289, 96, 105, -232, -163, -165, 15, -131,
	-211, 89, 88, -325, -236, -242, -275, -289, 90, 177,
	-327, 177, -327, 365, 366, -228, 221, -194, 16, -197,
	33, 58, -11, -409, -409, 33, 88, -182, -184, -183,
	-185, 67, 71, 73, 68, 69, 70, 74, -302, 26,
	-8, -164, -8, -409, -186, -179, -411, 15, 78, -411,
	88, 221, -266, -269, 411, 408, 414, -378, 90, -106,
	88, -351, -338, -233, -135, 41, -331, 372, -325, 514,
	-325, -333, 90, -333, 96, 96, 89, -47, -42, -43,
	34, 82, -358, -345, 90, 40, -345, -345, -289, 89,
	-229, -134, -186, 143, 77, -362, -362, -362, -295, -2,
	652, 658, 137, 87, 375, 19, -250, 88, 89, -214,
	299, 89, -108, -289, 89, 87, -343, -343, -289, -409,
	237, 32, 32, 598, 554, 546, -57, -214, -213, -378,
	-326, 651, 650, 89, 239, 297, -139, 422, -136, 90,
	91, -186, -186, -186, -186, -186, 230, 227, 398, -402,
	309, -402, 282, 240, -179, -186, 88, -81, 256, 251,
	-300, -300, 34, -186, 408, 625, 623, -140, 142, 261,
	-158, -150, -146, -309, 177, 338, 260, 336, 332, 352,
	343, 370, 334, 371, 331, 330, 329, -309, -307, -205,
	-128, -140, -140, 150, -140, 148, -140, -410, -410, -410,
	-410, -410, -225, -140, -140, -140, -410, 177, 338, 15,
	-140, -307, -140, -140, -140, -140, -140, -375, -140, -205,
	-140, -205, -140, -140, -140, -140, -140, -376, -376, -376,
	-376, -376, -205, -205, -205, -205, -409, -289, -93, -92,
	-91, 581, 241, -90, -160, -93, -160, -127, -291, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -190,
	-339, -339, -339, -260, 88, -271, 23, 15, 58, 58,
	-163, -194, -164, -131, -289, -239, 608, -245, 47, -243,
	-244, 48, -240, 49, 57, -327, -327, 168, -230, -140,
	-261, 77, -262, -270, -213, -208, -210, -209, -409, -249,
	-410, -289, -260, -262, -166, -167, -167, -166, -167, 67,
	67, 67, 72, 67, 72, 67, -183, -295, -410, -140,
	-298, 78, -164, -164, -188, -295, 168, 408, 412, 413,
	-351, -400, 119, 143, 32, 77, 368, 101, -398, 176,
	543, 593, 598, 554, 547, 588, -399, 243, 136, 137,
	255, 26, 42, 89, 88, 89, 88, 89, 88, -283,
	-282, -43, -42, -345, -345, 96, -378, 90, 90, 239,
	27, -186, 77, 77, 77, -109, 656, 96, 87, -3,
	82, -140, 87, 20, -334, -213, -369, -321, -370, -322,
	-323, -5, -6, -346, -112, 58, 101, -61, 45, 238,
	636, 637, 127, -409, 649, -361, -250, -365, -367, -186,
	-143, -409, -142, -144, -151, 166, 167, 260, 334, 335,
	-214, -186, -133, 288, 296, 87, -137, 92, -381, 78,
	279, 368, 279, 90, -403, 310, 90, -403, -186, -81,
	-47, -186, -278, -278, 34, -378, -410, -158, -150, -121,
	162, 507, -312, 513, -320, -320, -320, -329, -320, 326,
	-320, 326, -320, -410, -410, -410, 88, -410, 23, -410,
	-140, 88, -117, 450, 88, 88, -410, 87, 87, -140,
	-410, -410, -410, 88, -410, -410, -410, -410, -410, 88,
	-410, -410, -410, 88, -310, 599, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -89, -290, -289, -90,
	563, 563, -410, -90, -222, 88, -410, -410, 88, -410,
	88, 88, -410, 88, -410, 88, -410, -410, -410, -410,
	88, -191, 23, -191, -191, -410, -256, -186, -194, -223,
	17, -236, 52, 344, -247, -246, 56, 48, -244, 20,
	50, 20, 31, -261, 88, 151, 88, -410, -410, 88,
	58, 221, -410, -194, -177, -176, 77, 78, -178, 77,
	-176, 67, 67, -251, 88, -259, -164, -194, -194, 221,
	119, -409, -145, -157, -143, 13, 90, 90, -378, -397,
	640, 641, 32, 96, -345, -345, 137, 137, -186, 87,
	-325, 90, -325, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -186, -186, -186, -186, -366, 87, 20,
	-140, 87, 151, 89, -250, -250, 275, 162, -345, 634,
	281, 281, -345, -345, -345, -111, -110, 656, 89, -410,
	88, -332, 507, 510, -140, -152, -152, -251, 89, -374,
	507, -380, -289, -289, -289, -289, 96, 98, -410, 505,
	74, 508, -410, -325, -140, -140, -140, -230, 90, -140,
	-140, 96, 96, -410, -140, -205, -140, -410, -174, -173,
	-175, 617, 119, 32, -309, -410, -207, 273, -96, -95,
	-94, 15, -410, -140, -140, -140, -140, -140, -140, -140,
	-409, 67, 19, 17, -409, -409, -298, -223, -224, 18,
	20, -237, 54, -235, 53, -235, -246, 20, 20, 90,
	20, 90, 137, -270, -140, -210, 58, -11, -289, -208,
	-289, -225, -140, 87, -140, -154, -194, -194, -140, -200,
	474, 476, 477, 478, 475, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 479, 453, 108, 110, 109,
	454, 455, 456, 338, 501, 502, 496, 499, 500, 498,
	497, 353, 354, 457, 458, 459, 111, 112, 113, 114,
	115, 116, 117, 460, 463, 461, 464, 465, 466, 471,
	472, 467, 468, 469, 470, 473, 490, 491, 492, 493,
	494, 495, 600, 601, 602, 603, 604, 605, 606, 607,
	90, 90, 87, -140, 89, 89, -251, -365, -58, 89,
	-252, -250, 96, 89, 276, -209, -409, 90, -345, -345,
	-345, 96, 96, -297, -410, 88, -289, -399, -367, 511,
	511, -410, 26, -373, -372, -291, 87, 78, 63, 506,
	509, -410, -410, 88, -410, -410, -410, 89, 89, -410,
	-410, -410, 88, -410, -173, -175, -410, 77, -154, -225,
	20, -93, 298, 300, -93, -410, 88, -410, -410, 88,
	-410, 88, -410, -410, -253, -410, -289, 243, 20, 20,
	-253, -253, -193, -224, -103, -102, -101, 537, -140, -205,
	-238, 55, 77, 122, 90, 90, 90, 13, -208, 221,
	-230, -250, -171, 375, -225, -410, -250, 89, 26, 89,
	658, 137, 89, -209, -120, -409, 272, -297, 90, 90,
	-110, -113, -11, 88, 151, -250, -186, 63, -140, -205,
	-410, 77, 518, 617, -88, -87, -84, 628, 654, -205,
	-90, -90, -140, -140, -140, 88, -410, -410, -410, -103,
	88, -100, -99, -289, 77, 122, -262, -289, 89, -410,
	-409, -230, 89, -234, -11, 87, -3, 272, -321, -370,
	-322, -323, -5, -6, -346, -79, 507, -372, -350, -291,
	90, 96, 89, 507, -410, -410, -86, 145, 626, 596,
	-141, -152, -149, 220, -410, 88, -410, 88, -410, 88,
	-289, 243, -101, 88, 26, -298, -172, -170, -289, 560,
	-390, -389, 503, -400, -396, 119, 143, 101, -398, 598,
	554, 128, 129, -79, -140, 87, -410, -80, 287, 613,
	-381, 508, -86, 627, 574, 549, 574, 549, -140, -140,
	-140, -99, -409, -410, 88, 23, -313, -60, 571, -387,
	-388, 77, -391, 381, 570, 591, 119, 90, 89, -250,
	248, -374, 509, 142, -410, 88, -410, 88, -410, -89,
	-170, 567, -326, -154, -388, 77, -387, 77, 14, 13,
	-4, 657, 89, 289, -86, -140, -140, -410, -59, 27,
	-171, -386, 256, 251, 254, 33, -386, 96, -4, -410,
	-410, 571, 250, 32, 119, -154, -174, -173, -173,
}

var yyDef = [...]int{
	860, -2, -2, 862, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 860, 860, 860, 0, 860, 0, 0, 860, -2,
	-2, 860, 1468, 0, 860, 0, 0, -2, 780, 786,
	0, 795, -2, 0, 0, 860, 2017, 2017, 855, 0,
	0, 0, 0, 0, 860, 860, 860, 860, 1334, 49,
	860, 0, 84, 85, 811, 812, 813, 64, 0, 2015,
	861, 1, 3, 70, 74, 0, 0, 0, 57, 1343,
	0, 77, 0, 0, 864, 0, 0, 1451, 860, 860,
	0, 125, 126, 0, 0, 0, -2, 129, -2, 158,
	159, 160, 0, 165, 594, 517, 569, 515, 554, -2,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 393, 393, 0, 0, -2, 503,
	503, 503, 1453, 0, 0, 0, 551, 455, 393, 393,
	393, 0, 393, 393, 393, 393, 0, 0, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 1361, 164, 1469, 1466, 1467,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 0, 1445, 0, 707, 963, 0,
	769, 769, 0, 769, 769, 769, 769, 0, 0, 0,
	719, 0, 0, 0, 0, 766, 0, 735, 736, 0,
	766, 0, 742, 772, 0, 747, 769, 769, 750, 2018,
	0, 2018, 2018, 1436, 0, 763, 761, 775, 776, 39,
	779, 782, 783, 784, 785, 788, 0, 799, 802, 1462,
	1463, 0, 804, 823, 824, 0, 856, 857, 44, 1111,
	0, 985, 990, 1001, 1016, 1017, 1018, 1019, 1020, 1022,
	1023, 1024, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 1092, 1038, 0, 0, 0, 0, 1307,
	0, 0, 1268, 1268, 1126, 1268, 1270, 1270, 1670, 1806,
	1814, 1932, 1632, 1637, 1638, 1639, 1925, 1926, 1927, 1928,
	1966, 1967, 1971, 1730, 0, 0, 0, 2014, 1767, 1775,
	1776, 1800, 1897, 1952, 1649, 1795, 1863, 1727, 1749, 1750,
	1879, 1880, 1771, 1772, 1753, 1765, 1768, 1756, 1757, 1759,
	1761, 1766, 1773, 1779, 1758, 1778, 1777, 0, 1754, 1755,
	1760, 1770, 1774, 1762, 1763, 1764, 1769, 1780, 0, 0,
	0, 0, 0, 1207, 1208, 1209, 1210, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 1320, 1321, 42, 43,
	1110, 1432, 1270, 1270, 1270, 1270, 1270, 1052, 1053, 1054,
	1055, 1056, 1080, 1081, 1087, 1088, 1874, 1875, 1876, 1877,
	1711, 1961, 1719, 1720, 1858, 1859, 1732, 1733, 1989, 1990,
	-2, -2, -2, 230, 231, 232, 233, 234, 235, 236,
	237, 0, 1674, 1943, 1944, 226, 0, 0, 294, 295,
	291, 292, 293, 1094, 1095, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 2017, 0, 833,
	0, 0, 0, 0, 0, 1343, 0, 1335, 1334, 62,
	0, 860, -2, 0, 0, 0, 0, 46, 0, 51,
	920, 863, 76, 75, 1383, 0, 0, 0, 58, 1344,
	66, 68, 1345, 0, 865, 866, 0, 896, 900, 0,
	0, 0, 1452, 1451, 1451, 101, 0, 0, 102, 122,
	123, 124, 0, 0, 108, 109, 1438, 1439, 0, 0,
	176, 177, 0, 40, 420, 0, 172, 0, 413, 354,
	0, 1361, 0, 0, 0, 0, 0, 860, 0, 1446,
	153, 154, 161, 162, 163, 393, 393, 393, 566, 0,
	0, 164, 164, 524, 525, 526, 0, 0, -2, 418,
	0, 504, 0, 0, 407, 407, 411, 409, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 394, 0, 564, 565, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 1454, 1455, 0, 541, 542, 0,
	0, 0, 393, 393, 0, 0, 0, 0, 393, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 1374,
	0, 0, 0, -2, 0, 699, 0, 0, 0, 1447,
	1447, 0, 706, 0, 708, 709, 0, 0, 710, 0,
	766, 766, 764, 765, 712, 713, 714, 715, 769, 0,
	0, 402, 403, 404, 766, 769, 0, 769, 769, 769,
	769, 766, 766, 766, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 772, 769, 0, 743, 0,
	744, 745, 748, 749, 751, 2019, 2020, 1464, 1465, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 2018, 2018,
	755, 759, 1437, 781, 787, 789, 790, 0, 0, 800,
	803, 818, 48, 1718, 810, 835, 836, 841, 0, 0,
	0, 0, 847, 848, 849, 0, 0, 852, 853, 854,
	0, 0, 0, 0, 0, 983, 0, 0, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 1003, 0, 0, 0, 1025, 1026, 1027,
	1028, 1031, 0, 1043, 0, 1045, 1316, -2, 0, 0,
	0, 1036, 1037, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 1124, 0, 1125, 1127, 1128, 0, 1129,
	870, 870, 870, 870, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1457, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 0, 0, 880, 880,
	0, 0, 219, 220, 221, 222, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 239, 240, 241, 242, 243, 296, 244, 245,
	246, 1110, 0, 0, 0, 45, 825, 826, 0, 946,
	1457, 0, 0, 876, 0, 56, 65, 67, 1343, 60,
	1343, 0, 882, 0, 0, -2, -2, 883, 889, 890,
	891, 892, 893, 53, 2016, 54, 0, 73, 0, 47,
	0, 0, 0, 0, 366, 1386, 0, 0, 1336, 1337,
	1340, 0, 897, 1812, 901, 0, 903, 904, 0, 0,
	99, 0, 962, 0, 0, 0, 110, 0, 112, 113,
	0, 0, 0, 377, 1440, 1441, 1442, -2, 400, 0,
	377, 361, 304, 305, 306, 354, 308, 354, 354, 354,
	354, 366, 366, 366, 366, 337, 338, 339, 340, 341,
	0, 0, 323, 354, 354, 354, 354, 344, 345, 346,
	347, 348, 349, 350, 351, 309, 310, 311, 312, 313,
	314, 315, 316, 317, 356, 356, 356, 358, 358, 0,
	41, 0, 381, 0, 1340, 0, 0, 1374, 1449, 1459,
	0, 0, 0, 1449, 131, 0, 0, 0, 567, 605,
	518, 555, 568, 0, 521, 522, -2, 0, 0, 503,
	0, 505, 0, 401, 0, -2, 0, 411, 0, 407,
	411, 408, 411, 399, 412, 545, 546, 547, 0, 549,
	550, 635, 932, 0, 0, 0, 0, 0, 641, 642,
	643, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 505, 0, 552, 0, 0, 457,
	458, 459, 0, 0, 462, 463, 464, 465, 0, 0,
	468, 469, 470, 949, 950, 471, 472, 497, 498, 499,
	473, 474, 475, 476, 477, 478, 479, 491, 492, 493,
	494, 495, 496, 480, 481, 482, 483, 484, 485, 488,
	0, 146, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 0,
	0, 0, 0, 879, 964, 1470, 1471, 770, 771, 0,
	405, 406, 769, 769, 716, 756, 0, 769, 720, 757,
	721, 723, 722, 724, 737, 738, 769, 727, 767, 768,
	728, 729, 730, 731, 732, 733, 734, 752, 739, 740,
	741, 773, 0, 777, 778, 753, 754, 0, 0, 793,
	794, 0, 801, 821, 819, 820, 822, 814, 815, 816,
	817, 0, 0, 0, 838, 95, 843, 844, 845, 846,
	858, 851, 1112, 980, 981, 982, 0, 984, 987, 0,
	1096, 1098, 989, 991, 1107, 1108, 1109, 0, 0, 0,
	0, 0, 995, 999, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1021, 1284, 1285, 1286,
	1040, 297, 298, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 1111, 1042, 0, 894, 0, 0, 1314, 1311,
	0, 0, 0, 1269, 1271, 0, 0, 0, 0, 871,
	872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1287, 0, 0, 0, 0, 0, 1307, 0, 1047, 1048,
	1049, 0, 0, 0, 0, 0, 0, 1167, 0, 0,
	0, 0, 1458, 0, 141, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 1212, 1213, 1214, 38, 0, 0, 0,
	881, 1318, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 0,
	0, 0, 0, 0, 0, 1430, 0, 0, 828, 829,
	831, 0, 966, 0, 947, 0, 0, 834, 0, 875,
	0, 878, 59, 61, 887, 888, 0, 905, 884, 55,
	50, 0, 0, 924, 1384, 366, 1406, 0, 375, 375,
	372, 1346, 1347, 0, 1339, 1341, 1342, 78, 902, 898,
	0, 978, 0, 0, 961, 0, 908, 910, 911, 912,
	944, 0, 915, 916, 0, 0, 0, 0, 0, 97,
	963, 103, 0, 111, 0, 0, 116, 117, 104, 105,
	106, 107, 0, 594, -2, 452, 178, 180, 181, 182,
	173, -2, 364, 362, 363, 307, 366, 366, 331, 332,
	333, 334, 335, 336, 0, 0, 324, 325, 326, 327,
	318, 0, 319, 320, 321, 0, 322, 419, 0, 1348,
	382, 383, 385, 393, 0, 388, 389, 0, 393, 393,
	0, 414, 415, 0, 1340, 1365, 0, 0, 0, 1460,
	1459, 1459, 1459, 0, 166, 167, 168, 169, 170, 171,
	630, 0, 0, 606, 628, 629, 164, 0, 0, 174,
	507, 506, 0, 662, 0, 417, 0, 0, 411, 411,
	396, 397, 548, 0, 0, 637, 638, 639, 640, 0,
	0, 0, 534, 446, 0, 535, 536, 505, 507, 0,
	0, 377, 460, 461, 466, 467, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 582,
	583, 586, 588, 509, 592, 585, 587, 589, 509, 593,
	1362, 1363, 1364, 0, 0, 700, 0, 0, 443, 93,
	1448, 705, 766, 726, 758, 766, 718, 725, 746, 791,
	792, 797, 805, 806, 807, 808, 809, 842, 0, 0,
	0, 0, 850, 0, 0, 988, 1097, 1099, 992, 0,
	996, 1000, 0, 0, 0, 1046, 1044, 1318, 0, 0,
	0, 1093, 0, 0, 1115, 1116, 0, 0, 0, 1312,
	0, 0, 1122, 0, 1272, 1273, 1130, 0, 0, 0,
	0, 0, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1334, 0, 0, 0, 0, 0, 1151, 1152,
	1153, 1154, 1155, 0, 1157, 0, 1158, 0, 0, 0,
	0, 1165, 1166, 1168, 0, 0, 1171, 1172, 0, 0,
	1173, 0, 0, 0, 1177, 0, 0, 0, 0, 1186,
	1187, 1188, 1189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1200, 1201, 0, 1075, 0, 0, 1075,
	0, 1113, 880, 0, 1274, 1275, 1276, 1277, 1278, 0,
	0, 0, 0, 0, 0, 1234, 1235, 1237, 0, 0,
	1240, 0, 1242, 0, 1431, 827, 830, 832, 918, 967,
	968, 0, 0, 0, 0, 948, 1456, 873, 874, 877,
	926, 0, 1322, 0, 0, 905, 978, 906, 0, 885,
	52, 921, 0, 1388, 1387, 1400, 1413, 375, 375, 369,
	370, 376, 371, 373, 374, 1338, 0, 1343, 0, 1424,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 954, 0, 0, 0, 0, 945,
	916, 0, 917, 0, -2, 0, 0, 91, 92, 0,
	0, 0, 114, 115, 0, 0, 121, 378, 379, 155,
	164, 454, 179, 427, 0, 0, 303, 365, 328, 329,
	330, 0, 352, 0, 0, 0, 448, 127, 1352, 1351,
	393, 393, 384, 0, 387, 0, 0, 0, 1461, 355,
	416, 0, 145, 0, 0, 0, 0, 0, 151, 600,
	0, 0, 607, 0, 0, 0, 516, 0, 527, 528,
	0, 634, -2, 696, 381, 0, 395, 398, 933, 0,
	0, 529, 0, 532, 533, 447, 507, 538, 539, 553,
	540, 489, 490, 487, 0, 0, 1375, 1376, 1381, 1379,
	1380, 132, 574, 576, 575, 579, 0, 0, 0, 511,
	0, 511, 572, 0, 443, 1348, 0, 704, 444, 445,
	769, 769, 837, 96, 0, 840, 0, 0, 0, 0,
	993, 997, 1279, 1305, 354, 354, 1292, 354, 358, 1295,
	354, 1297, 354, 1300, 354, 1303, 1304, 0, 0, 0,
	895, 0, 0, 1121, 1315, 0, 0, 1131, 1132, 1133,
	1134, 1135, 1309, 0, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1070, 1074, 0, 1076,
	1077, 0, 0, 1203, 0, 0, 1215, 0, 1319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 969,
	974, 974, 974, 0, 0, 0, 1443, 1444, 1323, 1324,
	978, 1325, 907, 886, 925, 1406, 0, 1399, 0, -2,
	1408, 0, 0, 0, 1414, 367, 368, 899, 79, 979,
	82, 0, 1424, 1433, 0, 1415, 1426, 1428, 0, 0,
	0, 1420, 0, 978, 909, 940, 942, 0, 937, 952,
	953, 955, 0, 957, 0, 959, 960, 920, 914, 0,
	99, 0, 978, 978, 98, 0, 965, 118, 119, 120,
	453, 183, 188, 0, 0, 0, 193, 0, 195, 0,
	0, 0, 200, 201, 393, 393, 428, 0, 300, 302,
	0, 0, 186, 366, 0, 366, 0, 359, 0, 429,
	449, 1349, 1350, 0, 0, 386, 390, 391, 392, 0,
	1450, 147, 0, 0, 0, 603, 0, 631, 0, 0,
	0, 0, 0, 0, 175, 508, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 0, 393, 0, 0, 0,
	393, 393, 393, 0, 688, 380, 0, 0, 659, 656,
	530, 0, 224, 225, 227, 0, 0, 0, 0, 0,
	537, 920, 1366, 1367, 1368, 0, 1378, 1382, 135, 0,
	0, 0, 0, 584, 590, 0, 510, 591, 701, 702,
	703, 94, 711, 717, 839, 859, 986, 994, 998, 0,
	0, 0, 0, 1306, 1290, 366, 1293, 1294, 1296, 1298,
	1299, 1301, 1302, 1034, 1035, 1039, 0, 1118, 0, 1120,
	1313, 0, 1343, 0, 0, 0, 1149, 0, 0, 0,
	1160, 1159, 1161, 0, 1163, 1164, 1169, 1170, 1174, 0,
	1176, 1178, 1179, 0, 0, 0, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 0, 1068, 1071, 1202,
	1078, 1079, 1084, 1205, 0, 0, 1114, 1217, 0, 1222,
	0, 0, 1228, 0, 1232, 0, 1238, 1239, 1241, 1243,
	0, 0, 0, 0, 0, 946, 927, 63, 1325, 1327,
	0, 1393, 1391, 1391, 1401, 1402, 0, 0, 1409, 0,
	0, 0, 0, 83, 0, 0, 0, 1429, 0, 0,
	0, 0, 100, 1334, 934, 941, 0, 0, 935, 0,
	936, 956, 958, 913, 0, 978, 978, 89, 90, 0,
	189, 0, 191, 217, 218, 0, 194, 196, 197, 198,
	204, 205, 206, 199, 0, 0, 299, 301, 0, 0,
	342, 353, 343, 0, 0, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 920, 148, 149, 150, 595, 0, 605,
	0, 922, 0, 598, 0, 519, 0, 0, 0, 393,
	393, 393, 0, 0, 0, 0, 673, 0, 0, 636,
	0, 644, 0, 0, 0, 228, 229, 0, 1377, 573,
	0, 133, 134, 0, 0, 578, 512, 513, 1032, 0,
	0, 0, 1033, 1291, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 1156, 0, 0, 0, 1182, 0, 0,
	0, 625, 626, 0, 1246, 1073, 1334, 0, 1075, 1085,
	1086, 0, 1075, 1216, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 0, 966, 1327, 1332, 0,
	0, 1396, 0, 1389, 1392, 1390, 1403, 0, 0, 1410,
	0, 1412, 0, 1434, 1435, 1427, 0, 1419, 1422, 1418,
	1421, 1343, 938, 0, 943, 0, 1334, 88, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 203, 0, 0, 357, 360, 0, 0, 0, 596,
	0, 923, 608, 599, 0, 686, 0, 690, 0, 0,
	0, 693, 694, 695, 672, 0, 676, 421, 660, 657,
	658, 531, 0, 136, 137, 0, 0, 0, 1280, 0,
	1283, 1117, 1119, 0, 1146, 1147, 1148, 1288, 1289, 1162,
	1175, 1180, 0, 1183, 0, 0, 1184, 0, 627, 1064,
	0, 0, 1082, 1083, 0, 1218, 0, 1223, 1224, 0,
	1229, 0, 1233, 1244, 0, 971, 928, 929, 976, 977,
	0, 0, 919, 1332, 81, 1333, 1330, 0, 1328, 1326,
	1385, 0, 1394, 1395, 1404, 1405, 1411, 0, 1417, 0,
	86, 0, 0, 0, 1343, 190, 0, 209, 0, 604,
	0, 607, 597, 684, 685, 0, 697, 689, 691, 692,
	674, -2, 1369, 0, 0, 0, 580, 1281, 0, 0,
	1185, 0, 623, 624, 1072, 1065, 0, 1050, 1051, 1069,
	1204, 1206, 0, 0, 0, 0, 970, 972, 973, 80,
	0, 1329, 1090, 0, 1397, 1398, 1425, 1423, 939, 946,
	0, 87, 434, 427, 1369, 0, 0, 0, 677, 678,
	679, 680, 681, 682, 683, 570, 1371, 138, 139, 500,
	501, 502, 132, 0, 1123, 1181, 1066, 0, 0, 0,
	0, 1062, 1063, 0, 1219, 0, 1225, 0, 1230, 0,
	930, 931, 1331, 0, 0, 609, 0, 611, 0, -2,
	422, 435, 0, 184, 210, 211, 0, 0, 214, 215,
	216, 207, 208, 128, 0, 0, 698, 0, 1372, 1373,
	135, 0, 0, 1057, 1058, 1059, 1060, 1061, 0, 0,
	0, 1091, 1070, 610, 0, 0, 377, 0, 620, 423,
	424, 0, 430, 431, 432, 433, 212, 213, 632, 0,
	0, 577, 1282, 0, 1220, 0, 1226, 0, 1231, 0,
	612, 613, 621, 0, 425, 0, 426, 0, 0, 0,
	601, 0, 632, 1370, 1067, 0, 0, 1089, 0, 622,
	618, 436, 438, 439, 0, 0, 437, 633, 602, 1221,
	1227, 0, 440, 441, 442, 614, 615, 616, 617,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 659,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:651
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:657
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:678
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:682
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:688
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:700
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:704
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:723
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:930
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:934
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:968
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1001
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1013
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1023
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1027
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1031
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1035
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1041
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1045
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1049
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1055
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1065
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1069
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1075
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1079
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1083
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.str = RepeatableReadStr
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.str = ReadCommittedStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.str = SerializableStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1107
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1111
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1115
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1121
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1127
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1134
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1143
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1163
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1178
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1183
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1209
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1231
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1238
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1245
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1267
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1274
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1285
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1296
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1306
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1310
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1328
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1332
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1338
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1342
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1352
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1368
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1372
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1378
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1388
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1393
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1426
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1435
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = ""
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1457
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1537
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1543
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1547
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1551
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1557
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1561
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1566
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1570
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1575
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1655
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Armscii8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = ASCIIStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Big5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = UBinaryStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Cp1250Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Cp1251Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Cp1256Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Cp1257Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Cp850Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Cp852Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp866Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp932Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Dec8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = EucjpmsStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = EuckrStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Gb18030Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Gb2312Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = GbkStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Geostd8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = GreekStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = HebrewStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Hp8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = Keybcs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = Koi8rStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Koi8uStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Latin1Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Latin2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Latin5Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Latin7Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = MacceStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = MacromanStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = SjisStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Swe7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Tis620Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Ucs2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = UjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Utf16Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Utf16leStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Utf32Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = Utf8Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Utf8mb4Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1907
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1911
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1915
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1946
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1950
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1954
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2195
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2317
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2326
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2332
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2342
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2346
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2351
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2355
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2359
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2363
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2367
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2371
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2377
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2387
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2391
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2395
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2399
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2403
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = yyDollar[2].str
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = "key"
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2470
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2480
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2484
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2490
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2494
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2500
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2504
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2510
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2516
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2520
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2524
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2528
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2532
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2541
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2547
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2553
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2559
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2563
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2567
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2572
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2576
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2582
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2588
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2594
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2598
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2602
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2606
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2610
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2629
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2633
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2642
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2651
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2657
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2671
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2675
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2814
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2856
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2865
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2883
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2887
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2896
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2900
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2904
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2912
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2918
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2922
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3060
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3064
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3327
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3336
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3344
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3353
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3360
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3372
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3381
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3396
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3401
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3410
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3414
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3420
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3426
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3432
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3442
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3446
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3452
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3458
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3464
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3470
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3494
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3500
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3506
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3510
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3514
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3520
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3524
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3529
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3533
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3538
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3542
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3548
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3552
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3556
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3560
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3564
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3568
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3572
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3576
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3580
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3584
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3588
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3592
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3596
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3637
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3651
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3666
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3670
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3675
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3680
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3685
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3690
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3695
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3707
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3718
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3724
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3734
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3739
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3743
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3748
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3753
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3758
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3763
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3769
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3775
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3782
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3789
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3796
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3814
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3820
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3826
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3832
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3838
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3844
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3856
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3878
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3882
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = "extended "
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4150
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4166
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4174
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4184
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4188
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4198
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4275
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4281
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4291
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4295
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4299
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4326
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4343
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4347
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4351
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4355
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4359
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4363
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4367
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4391
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4418
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4422
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4444
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4454
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4460
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4464
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4468
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4472
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4478
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4575
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4579
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4583
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4597
		{
			setAllowComments(yylex, true)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = nil
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4617
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4625
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = SQLCacheStr
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4657
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4661
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4680
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4686
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4690
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4699
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4712
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4720
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.str = SQLCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = DistinctStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = DistinctStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = StraightJoinHint
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4756
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4766
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4770
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4774
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4778
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4803
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4807
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4813
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4819
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4833
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4837
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4841
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4845
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4851
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4855
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4861
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4865
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4874
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4883
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4889
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4899
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4909
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4913
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4927
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4944
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4948
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4952
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4956
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4962
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4964
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4968
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4974
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4979
		{
			yyVAL.empty = struct{}{}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.empty = struct{}{}
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4984
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4992
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5005
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5009
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5013
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5019
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5025
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5029
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5033
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5037
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5043
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5047
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5057
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5071
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5077
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5086
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5092
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5096
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5102
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5106
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5110
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5114
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5119
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5123
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5127
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5131
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5242
		{
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5421
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5425
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5431
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5435
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5441
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5445
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5449
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5455
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5459
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5466
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5470
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5474
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5478
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5482
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5488
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5492
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5496
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5500
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5504
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5523
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5529
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5533
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5542
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5547
		{
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5556
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5562
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5566
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5578
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5584
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5588
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5594
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5598
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5604
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5608
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5620
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5626
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5630
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5636
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5642
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5646
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = ""
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5662
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5666
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5673
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5677
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5681
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5685
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5691
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5695
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5699
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5703
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5707
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5711
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5715
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5721
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5725
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5729
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5736
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5742
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6308
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6316
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6320
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6324
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6328
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6332
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6336
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6340
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6344
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6348
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6352
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6356
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6362
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6366
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6370
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6374
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6378
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6382
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6386
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6390
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6394
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6449
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6453
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6457
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6461
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6465
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6471
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6489
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6499
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6503
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6511
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6515
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6521
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6525
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6529
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6533
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6537
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6541
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6545
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6549
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6553
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6557
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6567
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6581
		{
			yyVAL.str = string("")
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6585
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6591
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6595
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6601
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6616
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6620
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6624
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6628
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6667
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6682
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6688
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6692
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6701
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6710
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6716
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6722
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6726
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6732
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6737
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6741
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6745
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6754
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6760
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6764
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6768
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6777
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6781
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6785
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6789
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6796
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6800
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6804
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6808
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6814
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6818
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6822
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6826
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6831
		{
			yyVAL.str = ""
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6839
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6843
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6848
		{
			yyVAL.str = ""
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6852
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6867
		{
			yyVAL.str = ""
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6871
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6876
		{
			yyVAL.str = "cascaded"
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6880
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6893
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6899
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6905
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6911
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6920
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = ""
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6933
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6939
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6943
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6949
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6953
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6957
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = ""
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6970
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6975
		{
			yyVAL.str = ""
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6979
		{
			yyVAL.str = " header"
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6984
		{
			yyVAL.str = ""
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6988
		{
			yyVAL.str = " manifest on"
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6992
		{
			yyVAL.str = " manifest off"
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6997
		{
			yyVAL.str = ""
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7001
		{
			yyVAL.str = " overwrite on"
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7005
		{
			yyVAL.str = " overwrite off"
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7011
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7016
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7020
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7030
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7036
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7040
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7045
		{
			yyVAL.str = ""
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7049
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7055
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7059
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7069
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7073
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7078
		{
			yyVAL.str = ""
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7082
		{
			yyVAL.str = " optionally"
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7095
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7099
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7103
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7107
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7111
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7117
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7121
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7125
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7129
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7138
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7144
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7148
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7154
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7158
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7164
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7168
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7173
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7183
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7187
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7193
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7200
		{
			yyVAL.str = "charset"
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7214
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7218
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7232
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7237
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7247
		{
			yyVAL.empty = struct{}{}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7249
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7251
		{
			yyVAL.empty = struct{}{}
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7255
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7264
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7271
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7275
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7285
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7292
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7302
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7308
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7312
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7319
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7889
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7898
		{
			decNesting(yylex)
		}
	case 2017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7903
		{
			skipToEnd(yylex)
		}
	case 2018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7908
		{
			skipToEnd(yylex)
		}
	case 2019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7912
		{
			skipToEnd(yylex)
		}
	case 2020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7916
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
