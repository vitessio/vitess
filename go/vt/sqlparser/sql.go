// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const MANUAL = 58016
const PARALLEL = 58017
const QUALIFY = 58018
const TABLESAMPLE = 58019
const OUT = 58020
const INOUT = 58021
const FORMAT_BYTES = 58022
const FORMAT_PICO_TIME = 58023
const PS_CURRENT_THREAD_ID = 58024
const PS_THREAD_ID = 58025
const GTID_SUBSET = 58026
const GTID_SUBTRACT = 58027
const WAIT_FOR_EXECUTED_GTID_SET = 58028
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58029
const FORMAT = 58030
const TREE = 58031
const VITESS = 58032
const TRADITIONAL = 58033
const VTEXPLAIN = 58034
const VEXPLAIN = 58035
const PLAN = 58036
const LOCAL = 58037
const LOW_PRIORITY = 58038
const NO_WRITE_TO_BINLOG = 58039
const LOGS = 58040
const ERROR = 58041
const GENERAL = 58042
const HOSTS = 58043
const OPTIMIZER_COSTS = 58044
const USER_RESOURCES = 58045
const SLOW = 58046
const CHANNEL = 58047
const RELAY = 58048
const EXPORT = 58049
const CURRENT = 58050
const ROW = 58051
const ROWS = 58052
const AVG_ROW_LENGTH = 58053
const CONNECTION = 58054
const CHECKSUM = 58055
const DELAY_KEY_WRITE = 58056
const ENCRYPTION = 58057
const ENGINE = 58058
const INSERT_METHOD = 58059
const MAX_ROWS = 58060
const MIN_ROWS = 58061
const PACK_KEYS = 58062
const PASSWORD = 58063
const FIXED = 58064
const DYNAMIC = 58065
const COMPRESSED = 58066
const REDUNDANT = 58067
const COMPACT = 58068
const ROW_FORMAT = 58069
const STATS_AUTO_RECALC = 58070
const STATS_PERSISTENT = 58071
const STATS_SAMPLE_PAGES = 58072
const STORAGE = 58073
const MEMORY = 58074
const DISK = 58075
const PARTITIONS = 58076
const LINEAR = 58077
const RANGE = 58078
const LIST = 58079
const SUBPARTITION = 58080
const SUBPARTITIONS = 58081
const HASH = 58082

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 50,
	17, 50,
	-2, 40,
	-1, 53,
	1, 165,
	758, 165,
	-2, 173,
	-1, 54,
	149, 173,
	191, 173,
	364, 173,
	-2, 533,
	-1, 62,
	38, 794,
	254, 794,
	265, 794,
	300, 808,
	301, 808,
	-2, 796,
	-1, 67,
	256, 832,
	-2, 830,
	-1, 129,
	1, 166,
	758, 166,
	-2, 173,
	-1, 140,
	150, 418,
	259, 418,
	-2, 522,
	-1, 159,
	149, 173,
	191, 173,
	364, 173,
	-2, 542,
	-1, 758,
	177, 42,
	-2, 44,
	-1, 967,
	95, 1662,
	-2, 1492,
	-1, 968,
	95, 1663,
	236, 1667,
	-2, 1493,
	-1, 969,
	236, 1666,
	-2, 43,
	-1, 1055,
	65, 906,
	-2, 919,
	-1, 1060,
	253, 1645,
	-2, 1559,
	-1, 1137,
	264, 1119,
	269, 1119,
	-2, 429,
	-1, 1225,
	1, 590,
	758, 590,
	-2, 173,
	-1, 1539,
	236, 1667,
	-2, 1493,
	-1, 1752,
	65, 907,
	-2, 923,
	-1, 1753,
	65, 908,
	-2, 924,
	-1, 1829,
	149, 173,
	191, 173,
	364, 173,
	-2, 468,
	-1, 1906,
	150, 418,
	259, 418,
	-2, 522,
	-1, 1915,
	264, 1120,
	269, 1120,
	-2, 430,
	-1, 2363,
	236, 1671,
	-2, 1665,
	-1, 2364,
	236, 1667,
	-2, 1663,
	-1, 2481,
	149, 173,
	191, 173,
	364, 173,
	-2, 469,
	-1, 2488,
	28, 194,
	-2, 196,
	-1, 2962,
	86, 100,
	96, 100,
	-2, 986,
	-1, 3026,
	733, 712,
	-2, 686,
	-1, 3260,
	55, 1604,
	-2, 1598,
	-1, 4068,
	16, 50,
	17, 50,
	-2, 40,
	-1, 4103,
	733, 712,
	-2, 700,
	-1, 4198,
	98, 644,
	104, 644,
	114, 644,
	193, 644,
	194, 644,
	195, 644,
	196, 644,
	197, 644,
	198, 644,
	199, 644,
	200, 644,
	201, 644,
	202, 644,
	203, 644,
	204, 644,
	205, 644,
	206, 644,
	207, 644,
	208, 644,
	209, 644,
	210, 644,
	211, 644,
	212, 644,
	213, 644,
	214, 644,
	215, 644,
	216, 644,
	217, 644,
	218, 644,
	219, 644,
	220, 644,
	221, 644,
	222, 644,
	223, 644,
	224, 644,
	225, 644,
	226, 644,
	227, 644,
	228, 644,
	229, 644,
	230, 644,
	231, 644,
	232, 644,
	233, 644,
	234, 644,
	-2, 2046,
}

const yyPrivate = 57344

const yyLast = 56827

var yyAct = [...]int{
	983, 3743, 3744, 88, 3742, 4270, 4176, 931, 4085, 4196,
	3537, 2168, 3312, 4282, 3401, 3319, 4237, 3692, 978, 4064,
	970, 2156, 2392, 4238, 101, 1292, 3365, 3987, 2478, 2537,
	3356, 3370, 3367, 3273, 3784, 3366, 3364, 3369, 3368, 1059,
	4, 1294, 86, 4062, 3680, 3111, 5, 2035, 3196, 2394,
	3385, 3327, 2547, 762, 3384, 3277, 3274, 3591, 3577, 3795,
	3085, 3110, 2922, 932, 790, 971, 3567, 1832, 3387, 126,
	756, 2516, 2996, 2452, 757, 2449, 3067, 4135, 2907, 2433,
	3261, 3408, 3613, 3023, 2521, 2997, 2578, 1053, 2998, 88,
	168, 2466, 1889, 2454, 1075, 1050, 2928, 1107, 2453, 2947,
	2412, 3271, 1082, 936, 1931, 2906, 42, 2880, 2896, 2348,
	1145, 1053, 2316, 2190, 2152, 3058, 41, 43, 154, 2102,
	2556, 1913, 2441, 2523, 2989, 1132, 1117, 2935, 1821, 1127,
	2964, 985, 1169, 1787, 1770, 1801, 2421, 108, 109, 2456,
	1733, 104, 1552, 2196, 2116, 1477, 2127, 1460, 2031, 3276,
	1920, 772, 1114, 1111, 1119, 2315, 1138, 1115, 2512, 1820,
	1133, 1134, 2434, 767, 1092, 1094, 760, 1218, 1135, 2513,
	1806, 1063, 2223, 103, 2204, 1511, 1755, 3780, 1535, 2878,
	10, 1074, 9, 1282, 111, 2093, 8, 3772, 759, 2043,
	1052, 3538, 1056, 1087, 110, 137, 933, 138, 1061, 749,
	1561, 1556, 172, 3602, 1048, 1057, 1058, 132, 130, 1268,
	131, 1905, 1229, 1223, 1077, 102, 4271, 3681, 3353, 1086,
	2549, 1290, 2549, 2550, 2551, 692, 3014, 4119, 3046, 3045,
	95, 2593, 3673, 1047, 4220, 1789, 1217, 3075, 3076, 4115,
	2109, 4114, 2108, 2107, 2106, 1067, 85, 2105, 2104, 1108,
	1174, 2074, 1149, 4120, 2389, 2390, 133, 1238, 3011, 689,
	1474, 690, 2876, 1471, 2645, 3257, 139, 2582, 1997, 3747,
	3200, 3747, 4292, 750, 1182, 4241, 4236, 4261, 1068, 3541,
	1049, 3540, 2430, 1102, 1101, 2429, 2580, 3039, 4065, 1171,
	2841, 2924, 2114, 3638, 3427, 4191, 1124, 4218, 2191, 3983,
	1065, 2, 1188, 1189, 1190, 4251, 1193, 1194, 1195, 1196,
	1148, 2581, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1175,
	1178, 1179, 133, 1051, 1766, 1191, 4275, 1123, 1122, 1785,
	1121, 1076, 4093, 3016, 3375, 115, 116, 117, 4115, 120,
	1239, 728, 2652, 734, 3982, 1792, 196, 1790, 984, 684,
	3686, 4274, 1173, 3687, 1046, 3746, 3375, 3746, 1473, 1172,
	3993, 747, 748, 3704, 752, 1462, 4224, 3036, 3693, 3372,
	4173, 1041, 1042, 1043, 1044, 1793, 2538, 1791, 1055, 1035,
	734, 4222, 1060, 1125, 973, 1036, 987, 988, 989, 974,
	133, 4223, 975, 976, 3373, 977, 1494, 2575, 1100, 1104,
	935, 97, 1100, 1104, 935, 3992, 4221, 2161, 4201, 1089,
	1090, 3453, 2650, 990, 991, 2423, 3373, 3309, 3310, 2877,
	2916, 1490, 2917, 3379, 2973, 3308, 1822, 2972, 1823, 728,
	2974, 2473, 2474, 2086, 2087, 3074, 2649, 2472, 3057, 1246,
	4177, 3786, 1258, 1039, 1247, 3379, 1478, 728, 1038, 3017,
	1246, 728, 1245, 4086, 1244, 1247, 1259, 2039, 2985, 1252,
	1287, 2491, 2490, 1472, 2931, 2932, 87, 87, 3132, 3703,
	89, 3435, 723, 3433, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 4181, 99, 99, 4242,
	708, 87, 2532, 2391, 3405, 1455, 728, 87, 1461, 2643,
	3403, 1263, 1264, 706, 2085, 742, 740, 1512, 3376, 1478,
	4243, 2089, 728, 746, 2938, 1491, 2526, 1492, 1493, 97,
	97, 3409, 1987, 3059, 1488, 1260, 729, 3396, 1253, 3424,
	3376, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1520,
	1522, 1523, 2939, 703, 1286, 4206, 1737, 4035, 3809, 4036,
	1285, 2557, 718, 3024, 1192, 2646, 2902, 2647, 1279, 2413,
	1222, 3660, 1230, 1231, 3243, 4204, 1988, 713, 1989, 2040,
	2411, 2598, 3244, 2600, 97, 4211, 4212, 1781, 1454, 716,
	97, 1284, 726, 2413, 1267, 3329, 3330, 1261, 1262, 1226,
	727, 3406, 4205, 3675, 1233, 3062, 2232, 3404, 3674, 2622,
	1093, 2619, 1198, 2620, 1197, 2621, 2596, 3133, 3397, 3398,
	1265, 3967, 1128, 2597, 729, 2560, 1129, 1488, 1234, 3671,
	1266, 3751, 2450, 1129, 1167, 1166, 2599, 3012, 2601, 1165,
	1164, 1163, 729, 1162, 1161, 1160, 729, 1484, 1155, 3331,
	1476, 1740, 1898, 1168, 1112, 3199, 1526, 1526, 4293, 1141,
	693, 3588, 695, 709, 3351, 731, 1112, 730, 699, 1140,
	697, 701, 710, 702, 1112, 696, 2422, 707, 1110, 2525,
	698, 711, 712, 715, 719, 720, 721, 717, 714, 2032,
	705, 732, 1177, 1291, 1088, 1291, 1291, 3063, 1140, 2586,
	2585, 97, 1176, 2028, 3328, 2224, 1463, 1103, 1097, 1095,
	2226, 1103, 1097, 1095, 2231, 2227, 3331, 1185, 2228, 2229,
	2230, 729, 3580, 2225, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 3247, 3048, 3018, 2579, 729, 2901, 2420,
	1484, 1818, 3079, 2667, 3670, 1053, 1536, 1541, 1542, 3034,
	1545, 1547, 1548, 1549, 1550, 1551, 2914, 1554, 1555, 1557,
	1557, 1221, 1557, 1557, 1562, 1562, 1562, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1232, 1280, 2651, 4098, 1689, 1533, 1691, 1692, 1693,
	1694, 1695, 4138, 1470, 1126, 1529, 1530, 1531, 1532, 1562,
	1562, 1562, 1562, 1562, 1562, 1543, 1452, 1453, 4092, 3015,
	1789, 3745, 90, 3745, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1451, 1546,
	3788, 3787, 1537, 1999, 1998, 2000, 2001, 2002, 4179, 1483,
	1480, 1481, 1482, 1487, 1489, 1486, 1243, 1485, 3038, 3315,
	3425, 1558, 3702, 1559, 1560, 1563, 1564, 1479, 3636, 3637,
	3639, 3589, 733, 1819, 1158, 1147, 1147, 1256, 1156, 1224,
	4286, 1147, 2650, 728, 3066, 2419, 4178, 1919, 2881, 2883,
	1096, 2418, 2414, 724, 1096, 2029, 1275, 1237, 1277, 3377,
	3378, 683, 3037, 3056, 4216, 1730, 3055, 4081, 725, 2016,
	3316, 1736, 3381, 2529, 1242, 3627, 1248, 1249, 1250, 1251,
	1053, 3377, 3378, 3609, 1053, 3208, 2437, 1527, 1528, 1765,
	1053, 96, 96, 2969, 3381, 3318, 1274, 1276, 2577, 2934,
	1288, 1289, 1483, 1480, 1481, 1482, 1487, 1489, 1486, 2853,
	1485, 2164, 1810, 1690, 2530, 3313, 1236, 1726, 3207, 129,
	1479, 2528, 3525, 1518, 1519, 1521, 1520, 1522, 1523, 2929,
	1727, 691, 2479, 1526, 3307, 3329, 3330, 2205, 1146, 1146,
	1523, 1766, 3314, 2678, 1146, 1506, 96, 728, 1269, 88,
	4210, 1071, 96, 2044, 2206, 2531, 1918, 4106, 1170, 1283,
	3666, 3086, 1241, 123, 1784, 2527, 3601, 2424, 2098, 1696,
	1697, 1698, 1699, 1700, 1701, 2025, 3320, 1746, 1747, 3227,
	3225, 108, 109, 1744, 1159, 1824, 3106, 1748, 1157, 4208,
	2437, 2197, 4252, 1052, 4209, 1892, 2197, 2912, 2687, 1493,
	1727, 1222, 1216, 1492, 1493, 3804, 1512, 1272, 1734, 3644,
	3643, 1273, 2564, 3069, 2569, 3069, 1928, 2017, 3068, 2569,
	3068, 1278, 2882, 1927, 2013, 2678, 2014, 1788, 111, 2015,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1520, 1522,
	1523, 124, 1917, 1184, 3328, 3088, 1271, 2574, 2572, 97,
	1158, 1156, 42, 1255, 4244, 3628, 3331, 2573, 729, 1066,
	1742, 1768, 2571, 1911, 1257, 4288, 1220, 1731, 3699, 2130,
	3700, 1147, 4284, 4143, 1224, 4285, 1049, 4283, 4246, 3975,
	1904, 1982, 2435, 2436, 1921, 1921, 1745, 1895, 1896, 1897,
	1933, 1783, 1934, 2203, 1936, 1938, 3974, 1923, 1942, 1944,
	1946, 1948, 1950, 1771, 1773, 2576, 1270, 1964, 2037, 1291,
	1743, 2045, 1728, 1815, 1816, 2188, 1240, 1225, 3965, 3098,
	3097, 3096, 4144, 1766, 3090, 1922, 3094, 1778, 3089, 3716,
	3087, 2202, 1884, 3715, 1777, 3092, 1051, 1780, 2120, 2121,
	2118, 2119, 4073, 3651, 3091, 2607, 2603, 2605, 2606, 2604,
	2608, 2609, 2610, 2611, 1972, 1973, 1902, 4294, 1900, 1914,
	1978, 1979, 729, 3093, 3095, 2117, 1147, 2120, 2121, 2657,
	2658, 3650, 1901, 3640, 1146, 1925, 1219, 3317, 1968, 3354,
	1140, 1143, 1144, 2012, 1112, 1749, 2435, 2436, 1137, 1141,
	2007, 4074, 1221, 1516, 1517, 1518, 1519, 1521, 1520, 1522,
	1523, 2005, 1960, 3347, 734, 1963, 1994, 1965, 2994, 1136,
	2993, 2033, 2188, 2992, 2180, 2169, 2170, 2171, 2172, 2182,
	2173, 2174, 2175, 2187, 2183, 2176, 2177, 2184, 2185, 2186,
	2178, 2179, 2181, 2353, 2535, 2008, 1222, 2021, 1774, 2019,
	2020, 2018, 2022, 2023, 2024, 1776, 1775, 2353, 1147, 1992,
	1147, 2350, 1991, 4295, 987, 988, 989, 1990, 133, 1980,
	2352, 2006, 1974, 1123, 1122, 1971, 1121, 1970, 1969, 1146,
	1940, 1183, 2004, 1494, 2050, 1180, 982, 1993, 1147, 1741,
	3255, 1291, 1291, 1457, 2046, 2047, 1494, 2132, 1781, 3633,
	2976, 734, 734, 2072, 1234, 1818, 4245, 88, 2051, 2987,
	88, 2133, 1524, 1525, 2131, 2058, 2059, 2060, 1894, 4272,
	2714, 2180, 2169, 2170, 2171, 2172, 2182, 2173, 2174, 2175,
	2187, 2183, 2176, 2177, 2184, 2185, 2186, 2178, 2179, 2181,
	2071, 2545, 195, 2544, 2726, 2543, 86, 2542, 2541, 86,
	2540, 1795, 4101, 2094, 1490, 1766, 2094, 1494, 4232, 1766,
	1766, 1146, 4100, 1146, 4077, 134, 1150, 1140, 1150, 1140,
	195, 1152, 114, 1152, 4076, 1153, 1151, 1153, 1151, 1894,
	1766, 177, 4075, 113, 3970, 112, 2159, 2159, 2157, 2157,
	2160, 1146, 1512, 134, 3078, 3955, 1154, 1140, 1143, 1144,
	1796, 1112, 1490, 1766, 105, 1137, 1141, 1894, 4172, 177,
	42, 3954, 2122, 42, 106, 3803, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1521, 1520, 1522, 1523, 2978, 1494, 3321,
	1894, 4153, 1491, 3325, 1492, 1493, 2243, 1221, 1894, 4149,
	3324, 174, 3801, 2048, 175, 1491, 3712, 1492, 1493, 1725,
	2052, 4094, 2054, 2055, 2056, 2057, 4055, 1766, 1766, 2061,
	1500, 1501, 1502, 1503, 1504, 1505, 1499, 1496, 1724, 174,
	194, 2073, 175, 1723, 3326, 1766, 3684, 4091, 3600, 3322,
	4069, 1766, 3978, 1766, 3323, 1894, 3966, 2097, 3648, 2095,
	2097, 1726, 2095, 2096, 3632, 2099, 2096, 3410, 194, 2129,
	1494, 1512, 3407, 2192, 1727, 3350, 1491, 3349, 1492, 1493,
	3684, 1766, 2079, 2080, 2683, 3108, 1494, 2136, 1894, 3682,
	4257, 1766, 1494, 2728, 2134, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1521, 1520, 1522, 1523, 2569, 1766, 2135, 3060,
	2137, 2138, 2139, 2140, 2141, 2142, 2144, 2146, 2147, 2148,
	2149, 2150, 2151, 3607, 1766, 2163, 2361, 3003, 2267, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1521, 1520, 1522, 1523,
	1554, 2990, 2363, 1537, 2808, 1766, 1494, 1491, 2362, 1492,
	1493, 2207, 2208, 2209, 2210, 178, 2349, 1494, 3340, 3339,
	2724, 2198, 2682, 2351, 184, 2221, 2242, 1514, 1515, 1516,
	1517, 1518, 1519, 1521, 1520, 1522, 1523, 1512, 4255, 1766,
	1508, 105, 1509, 178, 4187, 1766, 107, 107, 3337, 3338,
	4002, 106, 184, 3335, 3336, 2259, 1510, 1524, 1525, 1507,
	2428, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1520,
	1522, 1523, 1722, 2360, 3335, 3334, 2366, 2367, 1716, 1491,
	1494, 1492, 1493, 2944, 1766, 4001, 2458, 2650, 3047, 1888,
	3028, 108, 109, 3021, 3022, 1491, 2640, 1492, 1493, 1766,
	3959, 1491, 2632, 1492, 1493, 2631, 2361, 2965, 2965, 4185,
	1766, 1766, 1766, 108, 109, 1512, 1728, 2666, 2162, 1766,
	2396, 2591, 2363, 2590, 2408, 2432, 2397, 2075, 2447, 2041,
	2003, 2488, 1995, 1985, 1981, 1494, 2128, 1977, 1976, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1521, 1520, 1522, 1523,
	1975, 1722, 1797, 169, 1281, 1491, 1720, 1492, 1493, 1117,
	2899, 1718, 3958, 2257, 1719, 1717, 1491, 1721, 1492, 1493,
	3586, 2384, 4183, 1766, 107, 2966, 2966, 3025, 2416, 3008,
	1067, 169, 1894, 1893, 1494, 2968, 2650, 1117, 3604, 2460,
	2482, 1888, 1887, 2497, 2498, 2499, 2500, 2402, 2483, 2403,
	2492, 2409, 2493, 2494, 2495, 2496, 2464, 1830, 1829, 113,
	2415, 1494, 2936, 2487, 1490, 2936, 2502, 4133, 1494, 2504,
	2505, 2506, 2507, 3272, 2425, 2518, 2486, 4048, 1766, 1491,
	1494, 1492, 1493, 2558, 3600, 4105, 2524, 1894, 2897, 2944,
	3442, 1512, 3545, 2340, 2341, 2342, 2343, 2344, 2445, 2470,
	1102, 1101, 2469, 2468, 1494, 3337, 3603, 2570, 1494, 3230,
	2365, 2485, 2484, 2368, 2369, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1521, 1520, 1522, 1523, 4046, 1766, 2555, 1494,
	114, 2943, 2534, 1490, 1491, 1494, 1492, 1493, 2471, 2944,
	1149, 113, 3600, 112, 2808, 2711, 3302, 2710, 1494, 2386,
	1921, 107, 2569, 4043, 1766, 1494, 2650, 2552, 2519, 2563,
	2515, 1766, 2566, 1494, 2567, 2440, 2533, 2508, 2510, 2511,
	1494, 2569, 4025, 1766, 2427, 1054, 1494, 1782, 2387, 2162,
	2100, 2583, 1494, 1491, 2084, 1492, 1493, 2674, 2519, 2562,
	2565, 2561, 2944, 2027, 1817, 1131, 3566, 1766, 1148, 1130,
	3559, 1766, 1494, 2587, 97, 2584, 4214, 2588, 2589, 4155,
	1491, 3989, 1492, 1493, 3357, 3956, 1766, 1491, 3816, 1492,
	1493, 3556, 1766, 127, 3665, 3662, 99, 3554, 1766, 1491,
	3646, 1492, 1493, 2595, 3652, 2655, 3458, 1767, 1769, 3000,
	3517, 1766, 170, 3457, 1053, 1053, 1053, 3515, 1766, 182,
	2594, 1890, 2517, 1491, 1224, 1492, 1493, 1491, 97, 1492,
	1493, 3402, 3511, 1766, 1547, 3359, 1547, 1494, 3508, 1766,
	170, 3355, 1494, 3990, 3506, 1766, 3253, 182, 1491, 1956,
	1492, 1493, 2670, 3029, 1491, 2514, 1492, 1493, 1494, 2509,
	190, 3653, 3654, 3655, 3504, 1766, 1494, 1491, 2625, 1492,
	1493, 2503, 2501, 2010, 1491, 1916, 1492, 1493, 1912, 1494,
	2673, 1886, 1491, 1494, 1492, 1493, 125, 1494, 190, 1491,
	2532, 1492, 1493, 1494, 2400, 1491, 2363, 1492, 1493, 3614,
	3615, 1491, 2362, 1492, 1493, 1494, 1957, 1958, 1959, 171,
	176, 173, 179, 180, 181, 183, 185, 186, 187, 188,
	4267, 1491, 2642, 1492, 1493, 189, 191, 192, 193, 3502,
	1766, 4265, 4239, 4113, 3500, 1766, 2648, 171, 176, 173,
	179, 180, 181, 183, 185, 186, 187, 188, 1494, 3656,
	3498, 1766, 2656, 189, 191, 192, 193, 4030, 3496, 1766,
	2999, 3617, 3585, 3584, 1794, 2659, 2660, 2661, 2662, 1494,
	2077, 3494, 1766, 2129, 1494, 3492, 1766, 3583, 1494, 3490,
	1766, 3272, 1494, 3248, 2626, 3997, 1491, 1494, 1492, 1493,
	2664, 1491, 3620, 1492, 1493, 3294, 3292, 3488, 1766, 1494,
	3295, 3293, 3657, 3658, 3659, 1952, 3619, 1491, 3291, 1492,
	1493, 2663, 3290, 2665, 3000, 1491, 4109, 1492, 1493, 1494,
	2406, 688, 2668, 1494, 2669, 3991, 2431, 1494, 1491, 2686,
	1492, 1493, 1491, 4072, 1492, 1493, 1491, 2078, 1492, 1493,
	3486, 1766, 1491, 1069, 1492, 1493, 3262, 3264, 1799, 2671,
	3608, 3771, 2852, 3770, 1491, 3265, 1492, 1493, 1953, 1954,
	1955, 3484, 1766, 1494, 3235, 3234, 3482, 1766, 3794, 3593,
	3480, 1766, 3796, 3596, 3478, 1766, 3259, 3592, 1072, 3464,
	1766, 2676, 2840, 2026, 2884, 2722, 1073, 2634, 2635, 1037,
	3333, 2675, 2637, 2983, 1070, 1494, 751, 1491, 3004, 1492,
	1493, 2638, 2125, 2123, 2124, 1494, 3769, 2159, 1081, 2157,
	2887, 3440, 1766, 2618, 2617, 2873, 1766, 1053, 1491, 1798,
	1492, 1493, 1080, 1491, 2616, 1492, 1493, 1491, 1494, 1492,
	1493, 1491, 1494, 1492, 1493, 2885, 1491, 2205, 1492, 1493,
	2941, 2942, 3296, 1494, 2953, 2954, 2615, 2614, 1491, 2458,
	1492, 1493, 1053, 2961, 2206, 2871, 1766, 2613, 2612, 2888,
	1187, 2890, 3418, 1186, 1456, 1494, 2999, 3072, 1491, 3035,
	1492, 1493, 1491, 105, 1492, 1493, 1491, 1494, 1492, 1493,
	2128, 3598, 1494, 106, 105, 134, 2940, 2846, 1766, 107,
	107, 2442, 2443, 2693, 106, 1494, 4280, 2823, 1766, 2442,
	2443, 3252, 2921, 2629, 4190, 3985, 112, 2905, 3332, 2957,
	2708, 1494, 1491, 2426, 1492, 1493, 1494, 1734, 2875, 3233,
	2815, 1766, 2959, 2930, 2806, 1766, 1118, 3232, 3568, 1494,
	2654, 2083, 2082, 4054, 4053, 2804, 1766, 4033, 2900, 2895,
	2904, 2903, 3802, 42, 1491, 3800, 1492, 1493, 1494, 1788,
	3799, 2919, 2958, 3782, 1491, 2960, 1492, 1493, 3663, 1494,
	3597, 3033, 2979, 2986, 2988, 1727, 2933, 114, 2918, 2791,
	1766, 3595, 3360, 2963, 2789, 1766, 2553, 1491, 113, 1492,
	1493, 1491, 1899, 1492, 1493, 114, 2967, 2787, 1766, 1079,
	2970, 2524, 1491, 1494, 1492, 1493, 113, 1494, 112, 2980,
	2977, 113, 3781, 2785, 1766, 3578, 3044, 2200, 2783, 1766,
	2936, 4268, 2201, 1494, 1491, 3755, 1492, 1493, 2991, 4269,
	4268, 2781, 1766, 2899, 3136, 2712, 1491, 4269, 1492, 1493,
	2398, 1491, 1811, 1492, 1493, 1494, 3001, 1803, 118, 119,
	2779, 1766, 4078, 3631, 1491, 1494, 1492, 1493, 3002, 3009,
	2263, 2777, 1766, 3005, 3006, 3, 1, 1045, 3041, 1459,
	1491, 1904, 1492, 1493, 1458, 1491, 3635, 1492, 1493, 4203,
	3082, 3083, 704, 2388, 1494, 1732, 3030, 3031, 1491, 4240,
	1492, 1493, 114, 4199, 4200, 2775, 1766, 1996, 1494, 2773,
	1766, 1986, 1494, 113, 3040, 112, 1494, 1491, 3020, 1492,
	1493, 3694, 2314, 107, 3986, 2771, 1766, 1494, 1491, 3783,
	1492, 1493, 1494, 3785, 3363, 2559, 1494, 2386, 3661, 2522,
	1139, 1494, 3061, 159, 2480, 2481, 3099, 2769, 1766, 1494,
	2346, 3080, 4167, 122, 1105, 3064, 1494, 2767, 1766, 121,
	1142, 1254, 1491, 2554, 1492, 1493, 1491, 3685, 1492, 1493,
	3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126,
	2378, 1494, 1491, 2984, 1492, 1493, 2765, 1766, 2489, 1494,
	3134, 1836, 3042, 1494, 1834, 1835, 1833, 1767, 2385, 1838,
	3622, 3100, 1494, 1837, 1491, 1766, 1492, 1493, 2763, 1766,
	4137, 1494, 3426, 2713, 1491, 3524, 1492, 1493, 2088, 2761,
	1766, 741, 1494, 2956, 2759, 1766, 735, 197, 2757, 1766,
	1494, 1825, 1804, 2752, 1766, 2081, 1181, 694, 2410, 3341,
	2592, 2748, 1766, 1491, 3081, 1492, 1493, 700, 2746, 1766,
	1544, 3138, 3194, 3070, 2076, 3231, 3071, 1491, 2971, 1492,
	1493, 1491, 1099, 1492, 1493, 1491, 1091, 1492, 1493, 3084,
	2399, 2889, 1098, 2739, 1766, 3963, 1491, 3101, 1492, 1493,
	3280, 1491, 4247, 1492, 1493, 1491, 4090, 1492, 1493, 3212,
	1491, 1494, 1492, 1493, 2737, 1766, 3590, 3258, 1491, 3201,
	1492, 1493, 3260, 3561, 3203, 1491, 2923, 1492, 1493, 3263,
	2458, 3256, 4071, 3793, 4154, 3962, 2981, 1800, 2349, 3544,
	2349, 2685, 3557, 3127, 1494, 2351, 2195, 2351, 1534, 766,
	1491, 3174, 1492, 1493, 2457, 1494, 937, 1786, 1491, 1494,
	1492, 1493, 1491, 3750, 1492, 1493, 1494, 2115, 764, 763,
	3279, 1491, 88, 1492, 1493, 2458, 2458, 2458, 2458, 2458,
	1491, 2536, 1492, 1493, 3202, 761, 3204, 2891, 2937, 1498,
	3212, 1491, 1497, 1492, 1493, 2458, 3211, 972, 2458, 1491,
	2879, 1492, 1493, 3239, 3667, 1812, 2948, 3284, 3102, 2946,
	3184, 3185, 3186, 3187, 3188, 3301, 2945, 3223, 2627, 3229,
	2465, 3616, 3224, 3226, 3228, 3612, 4195, 1494, 2459, 2455,
	3238, 2898, 923, 2460, 3236, 3246, 3523, 1494, 922, 773,
	765, 2037, 1494, 755, 3249, 3250, 3251, 3519, 986, 1494,
	921, 3455, 3266, 3267, 3237, 920, 3390, 3380, 3454, 3391,
	1491, 2913, 1492, 1493, 1779, 3254, 2915, 3388, 3303, 3286,
	3287, 3304, 3289, 3285, 3393, 1056, 3288, 3283, 2460, 2460,
	2460, 2460, 2460, 108, 109, 3297, 2982, 3242, 1057, 1058,
	3305, 1475, 1494, 1491, 1751, 1492, 1493, 1754, 2460, 3311,
	2407, 2460, 1772, 1494, 1491, 3423, 1492, 1493, 1491, 4096,
	1492, 1493, 3342, 2653, 3344, 1491, 3343, 1492, 1493, 3446,
	3452, 2949, 2952, 2953, 2954, 2950, 1494, 2951, 2955, 3444,
	3392, 3389, 1494, 1750, 4103, 2995, 3371, 2524, 1494, 3679,
	3176, 2869, 3178, 3382, 3352, 1494, 3026, 3269, 2546, 3361,
	70, 46, 4063, 4134, 3399, 915, 912, 3752, 3189, 3190,
	3191, 3192, 3345, 3346, 3753, 3275, 3754, 1494, 3414, 3197,
	3275, 3413, 3198, 3411, 4116, 1494, 1491, 4117, 1492, 1493,
	911, 4118, 2252, 3421, 2868, 1469, 1491, 1466, 1492, 1493,
	3010, 1491, 3431, 1492, 1493, 2864, 2090, 100, 1491, 36,
	1492, 1493, 35, 34, 3447, 3448, 3449, 3450, 3451, 3428,
	3429, 33, 3430, 32, 3383, 3432, 26, 3434, 2863, 3436,
	25, 24, 23, 22, 2862, 29, 19, 21, 20, 18,
	2861, 4139, 3374, 4235, 4279, 128, 1547, 2860, 56, 53,
	1547, 1491, 51, 1492, 1493, 136, 135, 54, 52, 50,
	49, 3362, 1491, 2672, 1492, 1493, 3569, 2677, 3571, 2859,
	1227, 47, 98, 31, 30, 17, 16, 2850, 15, 14,
	13, 3579, 3539, 12, 11, 1491, 3422, 1492, 1493, 3543,
	2680, 1491, 2681, 1492, 1493, 7, 6, 1491, 2689, 1492,
	1493, 39, 2691, 2692, 1491, 38, 1492, 1493, 37, 28,
	27, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 40, 2709, 3013, 2548, 0, 1491, 0, 1492, 1493,
	0, 0, 0, 3570, 1491, 3572, 1492, 1493, 3278, 1494,
	0, 3574, 0, 2458, 0, 2715, 2716, 2717, 2718, 0,
	2720, 2721, 0, 2723, 0, 0, 3629, 2725, 0, 3587,
	0, 2730, 2731, 3393, 2732, 1494, 0, 2735, 2736, 2738,
	2740, 2741, 2742, 2743, 2744, 2745, 2747, 2749, 2750, 2751,
	2753, 3594, 2755, 2756, 2758, 2760, 2762, 2764, 2766, 2768,
	2770, 2772, 2774, 2776, 2778, 2780, 2782, 2784, 2786, 2788,
	2790, 2792, 2793, 2794, 3576, 2796, 753, 2798, 3621, 2800,
	2801, 3618, 2803, 2805, 2807, 3599, 3624, 3623, 2810, 3392,
	3389, 1494, 2814, 0, 3630, 0, 2819, 2820, 2821, 2822,
	0, 2849, 1494, 0, 3546, 0, 3548, 3549, 3550, 2833,
	2834, 2835, 2836, 2837, 2838, 1494, 2460, 2842, 2843, 1735,
	0, 0, 3611, 0, 3647, 2845, 3649, 2848, 0, 0,
	2851, 3416, 3417, 0, 0, 2854, 2855, 2856, 2857, 2858,
	1494, 3625, 3626, 0, 0, 0, 2865, 2866, 0, 2867,
	0, 0, 2870, 2872, 2410, 0, 2874, 0, 1491, 0,
	1492, 1493, 0, 0, 1494, 0, 2886, 0, 3641, 3642,
	3689, 3690, 0, 1494, 0, 0, 0, 1494, 0, 686,
	3691, 1494, 0, 2847, 1491, 1494, 1492, 1493, 0, 1078,
	1494, 0, 1084, 1084, 2844, 0, 0, 0, 2920, 1040,
	0, 0, 2949, 2952, 2953, 2954, 2950, 2839, 2951, 2955,
	0, 0, 3614, 3615, 0, 0, 3672, 0, 0, 3706,
	3676, 3677, 3678, 0, 3668, 3669, 1494, 0, 0, 0,
	0, 3717, 2832, 0, 0, 1494, 0, 0, 0, 1494,
	1491, 0, 1492, 1493, 1113, 0, 0, 0, 1494, 0,
	0, 1491, 0, 1492, 1493, 1494, 2831, 0, 0, 0,
	1494, 0, 0, 0, 1491, 2830, 1492, 1493, 3758, 2829,
	3759, 3760, 3761, 2828, 0, 0, 0, 2827, 3768, 1494,
	0, 3775, 2826, 3777, 1494, 0, 0, 0, 1728, 1491,
	0, 1492, 1493, 0, 0, 0, 3748, 1494, 0, 0,
	0, 1494, 0, 0, 0, 0, 3778, 0, 0, 0,
	0, 0, 0, 1491, 3279, 1492, 1493, 88, 2825, 3279,
	0, 1494, 1491, 0, 1492, 1493, 1491, 2824, 1492, 1493,
	1491, 2818, 1492, 1493, 1491, 0, 1492, 1493, 0, 1491,
	2817, 1492, 1493, 0, 3711, 3779, 0, 2816, 1494, 0,
	0, 2159, 2813, 2157, 3818, 0, 0, 0, 3798, 3797,
	0, 0, 0, 3810, 3808, 0, 0, 3805, 0, 3807,
	0, 2812, 0, 0, 0, 1491, 2811, 1492, 1493, 0,
	0, 0, 3969, 0, 1491, 0, 1492, 1493, 1491, 2809,
	1492, 1493, 0, 2802, 0, 3822, 0, 1491, 0, 1492,
	1493, 0, 0, 0, 1491, 0, 1492, 1493, 0, 1491,
	0, 1492, 1493, 2799, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 3961, 3960, 1491, 3988,
	1492, 1493, 0, 1491, 0, 1492, 1493, 0, 3976, 0,
	2797, 0, 1756, 0, 3980, 3981, 1491, 0, 1492, 1493,
	1491, 0, 1492, 1493, 4027, 4028, 1764, 0, 0, 1757,
	0, 3819, 3820, 3112, 3113, 3114, 3115, 3116, 3812, 3776,
	1491, 0, 1492, 1493, 0, 0, 2159, 0, 2157, 4031,
	0, 0, 0, 3131, 2404, 2405, 1763, 1761, 1762, 1758,
	0, 1759, 0, 0, 0, 0, 0, 1491, 0, 1492,
	1493, 0, 0, 0, 0, 0, 0, 3275, 0, 0,
	0, 4034, 0, 0, 1760, 4037, 3971, 3972, 3973, 4079,
	3279, 0, 0, 0, 0, 0, 3814, 0, 3739, 0,
	3964, 0, 0, 0, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1685, 1686, 1687,
	1688, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 4032, 4051, 4061, 4060, 4080,
	0, 1756, 3278, 4057, 1494, 4059, 0, 3278, 4097, 0,
	0, 4084, 0, 0, 0, 1764, 1494, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 4083, 0, 1494, 0,
	0, 3281, 0, 1752, 1753, 1763, 1761, 1762, 1758, 0,
	1759, 0, 0, 0, 0, 0, 4082, 0, 0, 3299,
	0, 4099, 0, 4102, 4087, 1494, 0, 0, 0, 0,
	3968, 1494, 4104, 1760, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2754, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4122, 4067, 0, 4123, 0, 0, 2734, 4151, 0, 42,
	2733, 0, 0, 1228, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 4141, 4132, 0, 0, 86, 4140,
	0, 4089, 4145, 1491, 0, 1492, 1493, 2729, 0, 0,
	0, 1495, 0, 2727, 4156, 1491, 4180, 1492, 1493, 2719,
	4159, 3988, 4169, 4166, 4165, 4164, 4161, 3420, 4142, 4160,
	4158, 4163, 4162, 1491, 4107, 1492, 1493, 1491, 0, 1492,
	1493, 0, 1553, 4188, 0, 0, 0, 1465, 0, 3437,
	3438, 0, 3439, 3441, 3443, 4192, 0, 4202, 3278, 0,
	4207, 0, 42, 4194, 1491, 0, 1492, 1493, 0, 0,
	1491, 0, 1492, 1493, 4219, 4180, 1491, 4217, 1492, 1493,
	3456, 4230, 0, 1494, 0, 3459, 0, 3461, 3462, 3463,
	3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474,
	3475, 3476, 3477, 3479, 3481, 3483, 3485, 3487, 3489, 3491,
	3493, 3495, 3497, 3499, 3501, 3503, 3505, 3507, 3509, 3510,
	3512, 3513, 3514, 3516, 4146, 4250, 3518, 4253, 3520, 3521,
	3522, 4259, 4260, 3526, 3527, 3528, 3529, 3530, 3531, 3532,
	3533, 3534, 3535, 3536, 2159, 4266, 2157, 4263, 2037, 4273,
	4180, 4264, 3542, 4262, 4249, 4234, 3547, 4229, 1728, 4152,
	3551, 3552, 4281, 3553, 3555, 3275, 3558, 3560, 4289, 3562,
	3563, 3564, 3565, 4287, 4147, 2690, 0, 0, 0, 3573,
	0, 1494, 0, 0, 0, 0, 1494, 0, 4298, 4299,
	4028, 4297, 1035, 0, 0, 2353, 0, 0, 1036, 0,
	0, 2159, 0, 2157, 4296, 0, 0, 0, 2158, 0,
	0, 0, 0, 0, 4111, 0, 4095, 0, 0, 0,
	0, 0, 4121, 0, 0, 0, 0, 0, 0, 3605,
	3606, 0, 1491, 3610, 1492, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4248,
	4225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4233, 2684, 0, 0, 0, 0, 2679, 0,
	0, 1854, 0, 0, 0, 0, 1728, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 0,
	1491, 0, 1492, 1493, 3683, 1491, 1802, 1492, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3701, 1891, 0, 3705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 968, 0,
	3718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 200, 0,
	0, 0, 739, 0, 3741, 0, 0, 745, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 3749, 200, 0,
	0, 0, 0, 0, 3756, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 200, 745, 0, 745, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1871,
	1872, 1873, 1874, 1875, 1876, 0, 1877, 1878, 1880, 1881,
	1879, 1882, 1883, 1856, 1857, 1858, 1859, 1839, 1840, 1869,
	0, 1842, 0, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 0, 0, 1852, 1860, 1861, 1862, 1863, 3977,
	1864, 1865, 1866, 1867, 0, 0, 1853, 0, 3984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3994, 3995, 3996,
	0, 3998, 0, 3999, 4000, 0, 0, 0, 0, 4003,
	4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013,
	4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023,
	4024, 0, 4026, 4029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4038, 4039,
	4040, 4041, 4042, 4044, 4045, 4047, 4049, 4050, 4052, 0,
	0, 0, 4056, 0, 0, 0, 4058, 0, 0, 0,
	0, 0, 0, 4068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2110, 2111, 2112,
	2113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2126, 0, 0, 0, 0, 0, 0,
	0, 4088, 0, 0, 0, 0, 2103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2165, 2166,
	0, 0, 0, 0, 2189, 0, 0, 2193, 2194, 0,
	0, 0, 2199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 0, 2222, 0,
	0, 1870, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2253, 0, 2258, 0, 2260, 2261, 2262, 0, 2264, 2265,
	2266, 0, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 0, 0, 0, 0, 0, 2345, 0, 2347, 0,
	2354, 2355, 2356, 2357, 2358, 2359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 0, 2379, 2380,
	2381, 2382, 2383, 0, 0, 0, 0, 4112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4127, 0, 0, 0, 0, 0, 4130, 1084, 4131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 2438, 2439, 0, 3019, 0,
	4174, 4175, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 156, 0, 4182, 4184, 4186, 0, 0, 0,
	0, 2477, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 200, 0, 200, 0, 4193, 0, 0, 0,
	0, 0, 0, 2444, 0, 0, 0, 4215, 0, 0,
	0, 2448, 0, 2451, 0, 0, 2103, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 745, 0, 745, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 2520, 0, 4231, 174, 0, 0, 175,
	0, 0, 0, 0, 0, 745, 200, 0, 0, 0,
	0, 0, 0, 87, 44, 45, 89, 0, 0, 0,
	0, 1907, 1908, 166, 165, 194, 4254, 4256, 4258, 0,
	0, 0, 94, 0, 1539, 0, 48, 77, 78, 0,
	75, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 0, 4278,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4290, 4291, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 1909, 163,
	0, 1906, 0, 161, 162, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 84, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 0, 0, 0, 0, 2602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2623, 2624, 0,
	0, 2628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2633, 0, 0, 0, 0, 0, 0,
	2636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 55, 58, 57, 60, 0, 74, 0, 0,
	83, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 93, 92, 0, 169, 72,
	73, 59, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 745, 745, 0, 2688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2694, 2695, 2696, 2697, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 65, 0, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 745, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 1553,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 745,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 745, 0, 61, 0,
	0, 0, 0, 0, 745, 0, 0, 1539, 745, 0,
	0, 745, 745, 745, 745, 0, 745, 0, 745, 745,
	0, 745, 745, 745, 745, 745, 745, 0, 0, 0,
	0, 0, 0, 0, 1539, 745, 745, 1539, 745, 1539,
	200, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 158, 0, 90, 745,
	0, 0, 745, 0, 0, 200, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 170, 0, 200,
	0, 0, 0, 0, 182, 0, 0, 0, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 1035, 0, 0, 0,
	0, 0, 1036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2158, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2962, 171, 176, 173, 179, 180, 181,
	183, 185, 186, 187, 188, 0, 0, 0, 0, 0,
	189, 191, 192, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	744, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 0, 0, 0, 0, 0, 0, 745,
	745, 71, 0, 0, 0, 744, 0, 744, 0, 744,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3049, 3050, 3051, 3052,
	3053, 3054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 3065, 0, 0, 0,
	0, 0, 0, 1854, 0, 745, 0, 0, 0, 3103,
	3104, 3105, 0, 0, 3107, 1539, 0, 3109, 0, 0,
	3073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 0, 0, 3128, 3129, 3130,
	0, 0, 0, 0, 0, 0, 3135, 0, 0, 0,
	0, 3137, 0, 0, 3139, 3140, 3141, 0, 0, 0,
	3142, 3143, 0, 0, 3144, 0, 3145, 0, 0, 0,
	0, 0, 0, 3146, 0, 3147, 0, 0, 0, 3148,
	0, 3149, 0, 0, 3150, 0, 3151, 0, 3152, 0,
	3153, 0, 3154, 0, 3155, 0, 3156, 0, 3157, 0,
	3158, 0, 3159, 0, 3160, 0, 3161, 0, 3162, 0,
	3163, 0, 3164, 0, 3165, 0, 3166, 0, 3167, 0,
	0, 0, 3168, 0, 3169, 0, 3170, 0, 0, 3171,
	0, 3172, 0, 3173, 0, 2317, 3175, 0, 0, 3177,
	0, 0, 3179, 3180, 3181, 3182, 0, 0, 0, 0,
	3183, 2317, 2317, 2317, 2317, 2317, 0, 0, 0, 0,
	1841, 0, 0, 0, 0, 0, 3193, 0, 0, 2364,
	0, 0, 0, 0, 3206, 0, 0, 3210, 0, 0,
	0, 0, 0, 0, 0, 0, 3213, 3214, 3215, 3216,
	3217, 3218, 0, 0, 0, 3219, 3220, 0, 3221, 0,
	3222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 3270, 0, 0, 0, 0, 0, 0,
	0, 3241, 0, 3245, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 745, 0, 3300, 2364,
	200, 0, 200, 0, 200, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	1868, 1871, 1872, 1873, 1874, 1875, 1876, 0, 1877, 1878,
	1880, 1881, 1879, 1882, 1883, 1856, 1857, 1858, 1859, 1839,
	1840, 1869, 0, 1842, 0, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 3358, 0, 1852, 1860, 1861, 1862,
	1863, 0, 1864, 1865, 1866, 1867, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 745, 745, 0, 0, 745,
	0, 745, 0, 0, 3386, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 3400, 0,
	0, 0, 0, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 0, 3412, 0, 3445, 3415, 134, 0, 156,
	0, 0, 745, 0, 0, 0, 0, 745, 0, 0,
	0, 745, 745, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 200,
	0, 0, 0, 155, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 200, 0, 0,
	200, 0, 200, 174, 0, 0, 175, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 744, 1450, 744, 744, 1907, 1908,
	166, 165, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 744, 0,
	0, 0, 200, 1870, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3581, 3582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 2364, 160, 1909, 163, 0, 1906, 0,
	161, 162, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3707, 0, 3708,
	0, 3709, 0, 3710, 0, 0, 0, 0, 0, 0,
	0, 3713, 3714, 0, 0, 0, 0, 0, 0, 0,
	0, 3719, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3720, 0, 3721, 0, 3722,
	0, 3723, 0, 3724, 0, 3725, 0, 3726, 0, 3727,
	0, 3728, 0, 3729, 0, 3730, 0, 3731, 0, 3732,
	0, 3733, 0, 3734, 0, 3735, 0, 0, 3736, 0,
	0, 0, 3737, 0, 3738, 0, 0, 0, 0, 0,
	3740, 0, 0, 0, 744, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 3757, 0, 200, 0, 0, 0, 0, 0,
	0, 3762, 0, 3763, 3764, 745, 3765, 0, 3766, 0,
	0, 164, 0, 3767, 0, 0, 744, 745, 745, 745,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 3806, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 3815, 200, 0, 3817, 0, 0, 744, 0, 744,
	3789, 0, 0, 3790, 3791, 3792, 3821, 744, 0, 0,
	1538, 744, 0, 0, 744, 744, 744, 744, 0, 744,
	0, 744, 744, 3957, 744, 744, 744, 744, 744, 744,
	0, 0, 0, 0, 0, 0, 0, 1538, 744, 744,
	1538, 744, 1538, 0, 744, 0, 0, 0, 0, 0,
	157, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 745, 0, 170, 0, 0, 0, 0, 745,
	0, 182, 744, 745, 745, 744, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 200, 200, 200, 200,
	200, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 200, 0, 0, 4066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 0, 200,
	0, 171, 176, 173, 179, 180, 181, 183, 185, 186,
	187, 188, 0, 0, 0, 0, 0, 189, 191, 192,
	193, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 1116, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 4110, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 2167, 0, 0,
	4108, 0, 0, 745, 0, 0, 1538, 0, 0, 0,
	4124, 0, 0, 4125, 0, 4126, 0, 0, 200, 200,
	200, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 134, 1539, 156, 0,
	745, 745, 1539, 200, 200, 200, 200, 200, 0, 0,
	0, 0, 177, 0, 0, 200, 0, 0, 0, 0,
	0, 200, 0, 200, 0, 0, 200, 200, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 175, 0, 0, 0, 0,
	745, 0, 744, 1539, 0, 0, 0, 0, 745, 0,
	4226, 0, 4227, 200, 4228, 0, 0, 143, 144, 166,
	165, 194, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4276, 0, 4277, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 744, 160, 141, 163, 148, 140, 0, 161,
	162, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 744, 0, 0, 184, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 150, 145, 146, 147, 151, 0, 0, 0, 0,
	0, 0, 142, 745, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 925, 0, 0, 744, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 200, 200, 744, 744,
	0, 0, 744, 0, 744, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 744, 0, 0, 0, 0,
	744, 200, 0, 687, 744, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 1035, 0, 0, 1085,
	1085, 973, 1036, 987, 988, 989, 974, 0, 687, 975,
	976, 0, 977, 0, 0, 0, 0, 0, 745, 745,
	0, 0, 0, 0, 0, 1293, 0, 1293, 1293, 0,
	990, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 745, 745, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 4181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 0, 744, 0, 0, 157,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	745, 0, 200, 0, 0, 0, 0, 0, 0, 200,
	0, 190, 200, 200, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3397, 3398, 0, 0, 1539,
	0, 0, 0, 200, 0, 0, 745, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 176, 173, 179, 180, 181, 183, 185, 186, 187,
	188, 0, 0, 0, 0, 0, 189, 191, 192, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	745, 0, 0, 0, 0, 1738, 1739, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	744, 744, 744, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 745, 0, 0,
	0, 0, 0, 0, 745, 0, 745, 0, 1109, 0,
	1915, 0, 0, 0, 745, 0, 0, 0, 1924, 0,
	0, 0, 1926, 0, 0, 1929, 1930, 1932, 1932, 0,
	1932, 0, 1932, 1932, 0, 1941, 1932, 1932, 1932, 1932,
	1932, 2975, 0, 0, 0, 745, 0, 0, 0, 1961,
	1962, 0, 1109, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 744, 744, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 687, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 1538, 744, 0,
	0, 1293, 0, 0, 0, 4179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 4178, 0, 0, 0, 0, 0, 0,
	200, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 745, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 2364, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2153,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 200, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 744, 0, 0, 0,
	1538, 0, 0, 744, 744, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 1293, 0, 0, 3348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 1538, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 1540, 0, 1540, 687, 0, 0, 3419, 0,
	0, 0, 0, 0, 0, 0, 0, 2417, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	2036, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2063, 687, 687, 687, 687, 687,
	687, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 1116, 0, 0, 0, 0, 0, 2539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 1116,
	1924, 0, 0, 1924, 0, 1924, 0, 0, 0, 0,
	0, 2568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 2153, 0, 0, 0, 2153, 2153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 744, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 1035, 0, 0, 0, 0, 973,
	1036, 987, 988, 989, 974, 0, 0, 975, 976, 0,
	977, 2644, 0, 0, 744, 744, 744, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 990, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3394, 3395, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3396, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 0, 0, 0, 0, 0, 0, 744,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3397, 3398, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 1064, 0, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 687, 0, 0,
	0, 0, 0, 0, 2036, 687, 0, 687, 0, 687,
	2467, 0, 0, 0, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 938, 0,
	0, 2908, 2909, 2910, 942, 0, 0, 0, 939, 940,
	0, 0, 0, 941, 943, 0, 0, 2925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 744, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 3027, 0, 0, 0, 1924, 1924, 0,
	0, 0, 3032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3043,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 687, 0, 0, 687, 0, 2630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 2641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2153,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 744, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 744, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 3195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 3282, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2911, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 687, 687, 687, 687, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3695, 3696, 3697, 3698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1085, 0, 687, 3240, 687, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 0, 0, 1540, 687, 687,
	687, 687, 687, 0, 0, 0, 0, 0, 0, 0,
	3298, 0, 0, 0, 0, 0, 1983, 0, 687, 0,
	0, 687, 3306, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3773, 0, 3773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	3811, 0, 3813, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3773, 0, 0, 0, 0, 0, 0, 3773, 0,
	3773, 0, 0, 0, 0, 0, 0, 0, 4070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 3843, 3845, 3844,
	3910, 3911, 3912, 3913, 3914, 3915, 3916, 3846, 3847, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 4148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4197, 0, 0, 1983, 0, 0,
	0, 3851, 0, 0, 687, 0, 0, 687, 687, 687,
	0, 0, 0, 0, 0, 0, 3859, 3860, 0, 0,
	3935, 3934, 3933, 0, 1540, 3931, 3932, 3930, 1983, 0,
	0, 0, 4136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 4197, 0, 0, 0, 0,
	0, 3936, 938, 0, 791, 792, 3937, 3938, 942, 3939,
	794, 795, 939, 940, 0, 789, 793, 941, 943, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3840, 3841, 3842, 3848, 3849, 3850,
	3861, 3908, 3909, 3917, 3919, 894, 3918, 3920, 3921, 3922,
	3925, 3926, 3927, 3928, 3923, 3924, 3929, 3823, 3827, 3824,
	3825, 3826, 3838, 3828, 3829, 3830, 3831, 3832, 3833, 3834,
	3835, 3836, 3837, 3839, 3940, 3941, 3942, 3943, 3944, 3945,
	3854, 3858, 3857, 3855, 3856, 3852, 3853, 3880, 3879, 3881,
	3882, 3883, 3884, 3885, 3886, 3888, 3887, 3889, 3890, 3891,
	3892, 3893, 3894, 3862, 3863, 3866, 3867, 3865, 3864, 3868,
	3877, 3878, 3869, 3870, 3871, 3872, 3873, 3874, 3876, 3875,
	3895, 3896, 3897, 3898, 3899, 3901, 3900, 3904, 3905, 3903,
	3902, 3907, 3906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 945, 0,
	0, 949, 0, 0, 0, 951, 950, 0, 952, 914,
	913, 0, 0, 946, 947, 0, 948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3946, 3947, 3948,
	3949, 3950, 3951, 3952, 3953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 403, 1983, 0, 0, 0, 0, 0,
	1433, 1417, 537, 0, 1358, 1436, 1325, 1344, 1446, 1347,
	1350, 1395, 1303, 1373, 423, 1341, 1329, 1298, 1336, 1299,
	1327, 1360, 276, 1324, 1419, 1377, 1435, 372, 273, 1305,
	1296, 209, 514, 1330, 438, 1346, 208, 1398, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 1442, 376, 1383, 0, 506, 408, 0, 0,
	2036, 1423, 1422, 1351, 1362, 1425, 1371, 1410, 1356, 1397,
	1313, 1382, 1437, 1342, 1392, 1438, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 4170, 516, 969,
	0, 0, 0, 0, 4171, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 1338, 1389,
	619, 1432, 1339, 1391, 271, 327, 278, 270, 590, 1443,
	1424, 1302, 1370, 1431, 1365, 606, 0, 0, 234, 1434,
	1364, 0, 1394, 0, 1449, 1297, 1385, 0, 1300, 1304,
	1445, 1429, 1333, 281, 0, 0, 0, 0, 0, 0,
	0, 1361, 1372, 1407, 1411, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 1381, 0, 0, 0,
	1309, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 1312,
	0, 1332, 1408, 0, 1295, 303, 1306, 409, 263, 0,
	462, 1415, 1428, 1355, 639, 1430, 1353, 1352, 1402, 1310,
	1421, 1345, 371, 1308, 336, 202, 230, 0, 1343, 419,
	470, 482, 1420, 1328, 1337, 259, 1335, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 1380, 1400, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 1307, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 1323, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 1416, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 1405, 1448, 432, 481, 245, 616, 505,
	204, 1317, 1322, 1315, 0, 260, 261, 1386, 584, 1318,
	1316, 1375, 1376, 1319, 1439, 1440, 1441, 1426, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 1409, 1311, 0, 1320,
	1321, 405, 1418, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 1379, 201, 226, 374, 1444, 463, 294, 660,
	628, 493, 623, 211, 228, 1314, 268, 1326, 1334, 0,
	1340, 1348, 1349, 1363, 1366, 1367, 1368, 1369, 1387, 1388,
	1390, 1399, 1401, 1404, 1406, 1413, 1427, 1447, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 1396, 1357, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 1378, 1384, 387, 287, 311, 326, 1393, 627,
	511, 232, 475, 296, 256, 1412, 1414, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 1374, 1403, 382, 585, 586, 322, 403, 0, 0,
	0, 0, 0, 0, 1433, 1417, 537, 0, 1358, 1436,
	1325, 1344, 1446, 1347, 1350, 1395, 1303, 1373, 423, 1341,
	1329, 1298, 1336, 1299, 1327, 1360, 276, 1324, 1419, 1377,
	1435, 372, 273, 1305, 1296, 209, 514, 1330, 438, 1346,
	208, 1398, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 1442, 376, 1383, 0,
	506, 408, 0, 0, 0, 1423, 1422, 1351, 1362, 1425,
	1371, 1410, 1356, 1397, 1313, 1382, 1437, 1342, 1392, 1438,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 1338, 1389, 619, 1432, 1339, 1391, 271, 327,
	278, 270, 590, 1443, 1424, 1302, 1370, 1431, 1365, 606,
	0, 0, 234, 1434, 1364, 0, 1394, 0, 1449, 1297,
	1385, 0, 1300, 1304, 1445, 1429, 1333, 281, 0, 0,
	0, 0, 0, 0, 0, 1361, 1372, 1407, 1411, 1354,
	0, 0, 0, 0, 0, 0, 3307, 0, 1331, 0,
	1381, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 1312, 0, 1332, 1408, 0, 1295, 303,
	1306, 409, 263, 0, 462, 1415, 1428, 1355, 639, 1430,
	1353, 1352, 1402, 1310, 1421, 1345, 371, 1308, 336, 202,
	230, 0, 1343, 419, 470, 482, 1420, 1328, 1337, 259,
	1335, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 1380, 1400, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 1307, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 1323, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 1416, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 1405, 1448, 432,
	481, 245, 616, 505, 204, 1317, 1322, 1315, 0, 260,
	261, 1386, 584, 1318, 1316, 1375, 1376, 1319, 1439, 1440,
	1441, 1426, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	1409, 1311, 0, 1320, 1321, 405, 1418, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 1379, 201, 226, 374,
	1444, 463, 294, 660, 628, 493, 623, 211, 228, 1314,
	268, 1326, 1334, 0, 1340, 1348, 1349, 1363, 1366, 1367,
	1368, 1369, 1387, 1388, 1390, 1399, 1401, 1404, 1406, 1413,
	1427, 1447, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 1396, 1357,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 1378, 1384, 387, 287,
	311, 326, 1393, 627, 511, 232, 475, 296, 256, 1412,
	1414, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 1374, 1403, 382, 585, 586,
	322, 403, 0, 0, 0, 0, 0, 0, 1433, 1417,
	537, 0, 1358, 1436, 1325, 1344, 1446, 1347, 1350, 1395,
	1303, 1373, 423, 1341, 1329, 1298, 1336, 1299, 1327, 1360,
	276, 1324, 1419, 1377, 1435, 372, 273, 1305, 1296, 209,
	514, 1330, 438, 1346, 208, 1398, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	1442, 376, 1383, 0, 506, 408, 0, 0, 0, 1423,
	1422, 1351, 1362, 1425, 1371, 1410, 1356, 1397, 1313, 1382,
	1437, 1342, 1392, 1438, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 1338, 1389, 619, 1432,
	1339, 1391, 271, 327, 278, 270, 590, 1443, 1424, 1302,
	1370, 1431, 1365, 606, 0, 0, 234, 1434, 1364, 0,
	1394, 0, 1449, 1297, 1385, 0, 1300, 1304, 1445, 1429,
	1333, 281, 0, 0, 0, 0, 0, 0, 0, 1361,
	1372, 1407, 1411, 1354, 0, 0, 0, 0, 0, 0,
	3268, 0, 1331, 0, 1381, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 1312, 0, 1332,
	1408, 0, 1295, 303, 1306, 409, 263, 0, 462, 1415,
	1428, 1355, 639, 1430, 1353, 1352, 1402, 1310, 1421, 1345,
	371, 1308, 336, 202, 230, 0, 1343, 419, 470, 482,
	1420, 1328, 1337, 259, 1335, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 1380, 1400, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 1307, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 1323,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 1416, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 1405, 1448, 432, 481, 245, 616, 505, 204, 1317,
	1322, 1315, 0, 260, 261, 1386, 584, 1318, 1316, 1375,
	1376, 1319, 1439, 1440, 1441, 1426, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 1409, 1311, 0, 1320, 1321, 405,
	1418, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	1379, 201, 226, 374, 1444, 463, 294, 660, 628, 493,
	623, 211, 228, 1314, 268, 1326, 1334, 0, 1340, 1348,
	1349, 1363, 1366, 1367, 1368, 1369, 1387, 1388, 1390, 1399,
	1401, 1404, 1406, 1413, 1427, 1447, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 1396, 1357, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	1378, 1384, 387, 287, 311, 326, 1393, 627, 511, 232,
	475, 296, 256, 1412, 1414, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 1374,
	1403, 382, 585, 586, 322, 403, 0, 0, 0, 0,
	0, 0, 1433, 1417, 537, 0, 1358, 1436, 1325, 1344,
	1446, 1347, 1350, 1395, 1303, 1373, 423, 1341, 1329, 1298,
	1336, 1299, 1327, 1360, 276, 1324, 1419, 1377, 1435, 372,
	273, 1305, 1296, 209, 514, 1330, 438, 1346, 208, 1398,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 1442, 376, 1383, 0, 506, 408,
	0, 0, 0, 1423, 1422, 1351, 1362, 1425, 1371, 1410,
	1356, 1397, 1313, 1382, 1437, 1342, 1392, 1438, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	1338, 1389, 619, 1432, 1339, 1391, 271, 327, 278, 270,
	590, 1443, 1424, 1302, 1370, 1431, 1365, 606, 0, 0,
	234, 1434, 1364, 0, 1394, 0, 1449, 1297, 1385, 0,
	1300, 1304, 1445, 1429, 1333, 281, 0, 0, 0, 0,
	0, 0, 0, 1361, 1372, 1407, 1411, 1354, 0, 0,
	0, 0, 0, 0, 2446, 0, 1331, 0, 1381, 0,
	0, 0, 1309, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 1312, 0, 1332, 1408, 0, 1295, 303, 1306, 409,
	263, 0, 462, 1415, 1428, 1355, 639, 1430, 1353, 1352,
	1402, 1310, 1421, 1345, 371, 1308, 336, 202, 230, 0,
	1343, 419, 470, 482, 1420, 1328, 1337, 259, 1335, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 1380,
	1400, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 1307, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 1323, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 1416, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 1405, 1448, 432, 481, 245,
	616, 505, 204, 1317, 1322, 1315, 0, 260, 261, 1386,
	584, 1318, 1316, 1375, 1376, 1319, 1439, 1440, 1441, 1426,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 1409, 1311,
	0, 1320, 1321, 405, 1418, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 1379, 201, 226, 374, 1444, 463,
	294, 660, 628, 493, 623, 211, 228, 1314, 268, 1326,
	1334, 0, 1340, 1348, 1349, 1363, 1366, 1367, 1368, 1369,
	1387, 1388, 1390, 1399, 1401, 1404, 1406, 1413, 1427, 1447,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 1396, 1357, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 1378, 1384, 387, 287, 311, 326,
	1393, 627, 511, 232, 475, 296, 256, 1412, 1414, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 1374, 1403, 382, 585, 586, 322, 403,
	0, 0, 0, 0, 0, 0, 1433, 1417, 537, 0,
	1358, 1436, 1325, 1344, 1446, 1347, 1350, 1395, 1303, 1373,
	423, 1341, 1329, 1298, 1336, 1299, 1327, 1360, 276, 1324,
	1419, 1377, 1435, 372, 273, 1305, 1296, 209, 514, 1330,
	438, 1346, 208, 1398, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 1442, 376,
	1383, 0, 506, 408, 0, 0, 0, 1423, 1422, 1351,
	1362, 1425, 1371, 1410, 1356, 1397, 1313, 1382, 1437, 1342,
	1392, 1438, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 1338, 1389, 619, 1432, 1339, 1391,
	271, 327, 278, 270, 590, 1443, 1424, 1302, 1370, 1431,
	1365, 606, 0, 0, 234, 1434, 1364, 0, 1394, 0,
	1449, 1297, 1385, 0, 1300, 1304, 1445, 1429, 1333, 281,
	0, 0, 0, 0, 0, 0, 0, 1361, 1372, 1407,
	1411, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 1381, 0, 0, 0, 1309, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 1312, 0, 1332, 1408, 0,
	1295, 303, 1306, 409, 263, 0, 462, 1415, 1428, 1355,
	639, 1430, 1353, 1352, 1402, 1310, 1421, 1345, 371, 1308,
	336, 202, 230, 0, 1343, 419, 470, 482, 1420, 1328,
	1337, 259, 1335, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 1380, 1400, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 1307,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 1323, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	1416, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 1405,
	1448, 432, 481, 245, 616, 505, 204, 1317, 1322, 1315,
	0, 260, 261, 1386, 584, 1318, 1316, 1375, 1376, 1319,
	1439, 1440, 1441, 1426, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 1409, 1311, 0, 1320, 1321, 405, 1418, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 1379, 201,
	226, 374, 1444, 463, 294, 660, 628, 493, 623, 211,
	228, 1314, 268, 1326, 1334, 0, 1340, 1348, 1349, 1363,
	1366, 1367, 1368, 1369, 1387, 1388, 1390, 1399, 1401, 1404,
	1406, 1413, 1427, 1447, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	1396, 1357, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 1378, 1384,
	387, 287, 311, 326, 1393, 627, 511, 232, 475, 296,
	256, 1412, 1414, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 1374, 1403, 382,
	585, 586, 322, 403, 0, 0, 0, 0, 0, 0,
	1433, 1417, 537, 0, 1358, 1436, 1325, 1344, 1446, 1347,
	1350, 1395, 1303, 1373, 423, 1341, 1329, 1298, 1336, 1299,
	1327, 1360, 276, 1324, 1419, 1377, 1435, 372, 273, 1305,
	1296, 209, 514, 1330, 438, 1346, 208, 1398, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 1442, 376, 1383, 0, 506, 408, 0, 0,
	0, 1423, 1422, 1351, 1362, 1425, 1371, 1410, 1356, 1397,
	1313, 1382, 1437, 1342, 1392, 1438, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 1338, 1389,
	619, 1432, 1339, 1391, 271, 327, 278, 270, 590, 1443,
	1424, 1302, 1370, 1431, 1365, 606, 0, 0, 234, 1434,
	1364, 0, 1394, 0, 1449, 1297, 1385, 0, 1300, 1304,
	1445, 1429, 1333, 281, 0, 0, 0, 0, 0, 0,
	0, 1361, 1372, 1407, 1411, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 1381, 0, 0, 0,
	1309, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 1312,
	0, 1332, 1408, 0, 1295, 303, 1306, 409, 263, 0,
	462, 1415, 1428, 1355, 639, 1430, 1353, 1352, 1402, 1310,
	1421, 1345, 371, 1308, 336, 202, 230, 0, 1343, 419,
	470, 482, 1420, 1328, 1337, 259, 1335, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 1380, 1400, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 1307, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 1323, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 1416, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 1405, 1448, 432, 481, 245, 616, 505,
	204, 1317, 1322, 1315, 0, 260, 261, 1386, 584, 1318,
	1316, 1375, 1376, 1319, 1439, 1440, 1441, 1426, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 1409, 1311, 0, 1320,
	1321, 405, 1418, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 1379, 201, 226, 374, 1444, 463, 294, 660,
	628, 493, 623, 211, 228, 1314, 268, 1326, 1334, 0,
	1340, 1348, 1349, 1363, 1366, 1367, 1368, 1369, 1387, 1388,
	1390, 1399, 1401, 1404, 1406, 1413, 1427, 1447, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 1396, 1357, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 1378, 1384, 387, 287, 311, 326, 1393, 627,
	511, 232, 475, 296, 256, 1412, 1414, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 1374, 1403, 382, 585, 586, 322, 403, 0, 0,
	0, 0, 0, 0, 1433, 1417, 537, 0, 1358, 1436,
	1325, 1344, 1446, 1347, 1350, 1395, 1303, 1373, 423, 1341,
	1329, 1298, 1336, 1299, 1327, 1360, 276, 1324, 1419, 1377,
	1435, 372, 273, 1305, 1296, 209, 514, 1330, 438, 1346,
	208, 1398, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 1442, 376, 1383, 0,
	506, 408, 0, 0, 0, 1423, 1422, 1351, 1362, 1425,
	1371, 1410, 1356, 1397, 1313, 1382, 1437, 1342, 1392, 1438,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 1338, 1389, 619, 1432, 1339, 1391, 271, 327,
	278, 270, 590, 1443, 1424, 1302, 1370, 1431, 1365, 606,
	0, 0, 234, 1434, 1364, 0, 1394, 0, 1449, 1297,
	1385, 0, 1300, 1304, 1445, 1429, 1333, 281, 0, 0,
	0, 0, 0, 0, 0, 1361, 1372, 1407, 1411, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1381, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 1312, 0, 1332, 1408, 0, 1295, 303,
	1306, 409, 263, 0, 462, 1415, 1428, 1355, 639, 1430,
	1353, 1352, 1402, 1310, 1421, 1345, 371, 1308, 336, 202,
	230, 0, 1343, 419, 470, 482, 1420, 1328, 1337, 259,
	1335, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 1380, 1400, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 1307, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 1323, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 1416, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 1405, 1448, 432,
	481, 245, 616, 505, 204, 1317, 1322, 1315, 0, 260,
	261, 1386, 584, 1318, 1316, 1375, 1376, 1319, 1439, 1440,
	1441, 1426, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	1409, 1311, 0, 1320, 1321, 405, 1418, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 1379, 201, 226, 374,
	1444, 463, 294, 660, 628, 493, 623, 211, 228, 1314,
	268, 1326, 1334, 0, 1340, 1348, 1349, 1363, 1366, 1367,
	1368, 1369, 1387, 1388, 1390, 1399, 1401, 1404, 1406, 1413,
	1427, 1447, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 1396, 1357,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 1378, 1384, 387, 287,
	311, 326, 1393, 627, 511, 232, 475, 296, 256, 1412,
	1414, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 1374, 1403, 382, 585, 586,
	322, 403, 0, 0, 0, 0, 0, 0, 1433, 1417,
	537, 0, 1358, 1436, 1325, 1344, 1446, 1347, 1350, 1395,
	1303, 1373, 423, 1341, 1329, 1298, 1336, 1299, 1327, 1360,
	276, 1324, 1419, 1377, 1435, 372, 273, 1305, 1296, 209,
	514, 1330, 438, 1346, 208, 1398, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	1442, 376, 1383, 0, 506, 408, 0, 0, 0, 1423,
	1422, 1351, 1362, 1425, 1371, 1410, 1356, 1397, 1313, 1382,
	1437, 1342, 1392, 1438, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 1338, 1389, 619, 1432,
	1339, 1391, 271, 327, 278, 270, 590, 1443, 1424, 1302,
	1370, 1431, 1365, 606, 0, 0, 234, 1434, 1364, 0,
	1394, 0, 1449, 1297, 1385, 0, 1300, 1304, 1445, 1429,
	1333, 281, 0, 0, 0, 0, 0, 0, 0, 1361,
	1372, 1407, 1411, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 1381, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 1312, 0, 1332,
	1408, 0, 1295, 303, 1306, 409, 263, 0, 462, 1415,
	1428, 1355, 639, 1430, 1353, 1352, 1402, 1310, 1421, 1345,
	371, 1308, 336, 202, 230, 0, 1343, 419, 470, 482,
	1420, 1328, 1337, 259, 1335, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 1380, 1400, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 1307, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 1323,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 1416, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 1405, 1448, 432, 481, 245, 616, 505, 204, 1317,
	1322, 1315, 0, 260, 261, 1386, 584, 1318, 1316, 1375,
	1376, 1319, 1439, 1440, 1441, 1426, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 1409, 1311, 0, 1320, 1321, 405,
	1418, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	1379, 201, 226, 374, 1444, 463, 294, 660, 628, 493,
	623, 211, 228, 1314, 268, 1326, 1334, 0, 1340, 1348,
	1349, 1363, 1366, 1367, 1368, 1369, 1387, 1388, 1390, 1399,
	1401, 1404, 1406, 1413, 1427, 1447, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 1396, 1357, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	1378, 1384, 387, 287, 311, 326, 1393, 627, 511, 232,
	475, 296, 256, 1412, 1414, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 1374,
	1403, 382, 585, 586, 322, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	774, 0, 0, 0, 276, 779, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 786, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 1035,
	516, 969, 758, 935, 973, 1036, 987, 988, 989, 974,
	0, 243, 975, 976, 250, 977, 0, 934, 817, 819,
	818, 884, 885, 886, 887, 888, 889, 890, 820, 821,
	815, 982, 619, 990, 991, 0, 271, 327, 278, 270,
	590, 0, 0, 2254, 2255, 2256, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 754, 771,
	0, 785, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 769, 0, 0, 0, 0, 929, 0,
	770, 0, 0, 778, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 928, 0, 0, 639, 0, 0, 926,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 979, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 980, 981,
	262, 662, 825, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 833, 834, 286,
	313, 910, 909, 908, 312, 314, 906, 907, 905, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 916, 938, 927, 791, 792, 917, 918, 942,
	919, 794, 795, 939, 940, 788, 789, 793, 941, 943,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 930, 777,
	776, 0, 783, 784, 0, 813, 814, 816, 822, 823,
	824, 835, 882, 883, 891, 893, 894, 892, 895, 896,
	897, 900, 901, 902, 903, 898, 899, 904, 796, 800,
	797, 798, 799, 811, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 812, 953, 954, 955, 956, 957,
	958, 828, 832, 831, 829, 830, 826, 827, 854, 853,
	855, 856, 857, 858, 859, 860, 862, 861, 863, 864,
	865, 866, 867, 868, 836, 837, 840, 841, 839, 838,
	842, 851, 852, 843, 844, 845, 846, 847, 848, 850,
	849, 869, 870, 871, 872, 873, 875, 874, 878, 879,
	877, 876, 881, 880, 775, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 944, 268, 945,
	0, 0, 949, 0, 0, 0, 951, 950, 0, 952,
	914, 913, 0, 0, 946, 947, 0, 948, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 959, 960,
	961, 962, 963, 964, 965, 966, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 1034, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 2475, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	758, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 2476, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 754, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 0, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 959, 960, 961, 962,
	963, 964, 965, 966, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 1034, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 87,
	537, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 774, 0, 0, 0,
	276, 779, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	1729, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 782, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 97, 0, 0, 1035, 516, 969, 758, 935,
	973, 1036, 987, 988, 989, 974, 0, 243, 975, 976,
	250, 977, 0, 934, 817, 819, 818, 884, 885, 886,
	887, 888, 889, 890, 820, 821, 815, 982, 619, 990,
	991, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 754, 771, 0, 785, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 769,
	0, 0, 0, 0, 929, 0, 770, 0, 0, 778,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 928,
	0, 0, 639, 0, 0, 926, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 979, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 980, 981, 262, 662, 825, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 833, 834, 286, 313, 910, 909, 908,
	312, 314, 906, 907, 905, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 916, 938,
	927, 791, 792, 917, 918, 942, 919, 794, 795, 939,
	940, 788, 789, 793, 941, 943, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 930, 777, 776, 0, 783, 784,
	0, 813, 814, 816, 822, 823, 824, 835, 882, 883,
	891, 893, 894, 892, 895, 896, 897, 900, 901, 902,
	903, 898, 899, 904, 796, 800, 797, 798, 799, 811,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 953, 954, 955, 956, 957, 958, 828, 832, 831,
	829, 830, 826, 827, 854, 853, 855, 856, 857, 858,
	859, 860, 862, 861, 863, 864, 865, 866, 867, 868,
	836, 837, 840, 841, 839, 838, 842, 851, 852, 843,
	844, 845, 846, 847, 848, 850, 849, 869, 870, 871,
	872, 873, 875, 874, 878, 879, 877, 876, 881, 880,
	775, 201, 226, 374, 96, 463, 294, 660, 628, 493,
	623, 211, 228, 944, 268, 945, 0, 0, 949, 0,
	0, 0, 951, 950, 0, 952, 914, 913, 0, 0,
	946, 947, 0, 948, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 959, 960, 961, 962, 963, 964,
	965, 966, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 1034, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 774, 0, 0, 0, 276, 779,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 786, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 1035, 516, 969, 758, 935, 973, 1036,
	987, 988, 989, 974, 0, 243, 975, 976, 250, 977,
	0, 934, 817, 819, 818, 884, 885, 886, 887, 888,
	889, 890, 820, 821, 815, 982, 619, 990, 991, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 754, 771, 0, 785, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 769, 0, 0,
	0, 0, 929, 0, 770, 0, 0, 778, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 928, 0, 0,
	639, 0, 0, 926, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 979, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 4157, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 980, 981, 262, 662, 825, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 833, 834, 286, 313, 910, 909, 908, 312, 314,
	906, 907, 905, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 916, 938, 927, 791,
	792, 917, 918, 942, 919, 794, 795, 939, 940, 788,
	789, 793, 941, 943, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 930, 777, 776, 0, 783, 784, 0, 813,
	814, 816, 822, 823, 824, 835, 882, 883, 891, 893,
	894, 892, 895, 896, 897, 900, 901, 902, 903, 898,
	899, 904, 796, 800, 797, 798, 799, 811, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 953,
	954, 955, 956, 957, 958, 828, 832, 831, 829, 830,
	826, 827, 854, 853, 855, 856, 857, 858, 859, 860,
	862, 861, 863, 864, 865, 866, 867, 868, 836, 837,
	840, 841, 839, 838, 842, 851, 852, 843, 844, 845,
	846, 847, 848, 850, 849, 869, 870, 871, 872, 873,
	875, 874, 878, 879, 877, 876, 881, 880, 775, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 944, 268, 945, 0, 0, 949, 0, 0, 0,
	951, 950, 0, 952, 914, 913, 0, 0, 946, 947,
	0, 948, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 959, 960, 961, 962, 963, 964, 965, 966,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 1034, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 774, 0, 0, 0, 276, 779, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 786, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	1766, 1035, 516, 969, 758, 935, 973, 1036, 987, 988,
	989, 974, 0, 243, 975, 976, 250, 977, 0, 934,
	817, 819, 818, 884, 885, 886, 887, 888, 889, 890,
	820, 821, 815, 982, 619, 990, 991, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	754, 771, 0, 785, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 769, 0, 0, 0, 0,
	929, 0, 770, 0, 0, 778, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 928, 0, 0, 639, 0,
	0, 926, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 979,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	980, 981, 262, 662, 825, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 833,
	834, 286, 313, 910, 909, 908, 312, 314, 906, 907,
	905, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 916, 938, 927, 791, 792, 917,
	918, 942, 919, 794, 795, 939, 940, 788, 789, 793,
	941, 943, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	930, 777, 776, 0, 783, 784, 0, 813, 814, 816,
	822, 823, 824, 835, 882, 883, 891, 893, 894, 892,
	895, 896, 897, 900, 901, 902, 903, 898, 899, 904,
	796, 800, 797, 798, 799, 811, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 812, 953, 954, 955,
	956, 957, 958, 828, 832, 831, 829, 830, 826, 827,
	854, 853, 855, 856, 857, 858, 859, 860, 862, 861,
	863, 864, 865, 866, 867, 868, 836, 837, 840, 841,
	839, 838, 842, 851, 852, 843, 844, 845, 846, 847,
	848, 850, 849, 869, 870, 871, 872, 873, 875, 874,
	878, 879, 877, 876, 881, 880, 775, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 944,
	268, 945, 0, 0, 949, 0, 0, 0, 951, 950,
	0, 952, 914, 913, 0, 0, 946, 947, 0, 948,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	959, 960, 961, 962, 963, 964, 965, 966, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 1034,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	774, 0, 0, 0, 276, 779, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 786, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 1035,
	516, 969, 758, 935, 973, 1036, 987, 988, 989, 974,
	0, 243, 975, 976, 250, 977, 0, 934, 817, 819,
	818, 884, 885, 886, 887, 888, 889, 890, 820, 821,
	815, 982, 619, 990, 991, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 754, 771,
	0, 785, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 769, 1083, 0, 0, 0, 929, 0,
	770, 0, 0, 778, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 928, 0, 0, 639, 0, 0, 926,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 979, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 980, 981,
	262, 662, 825, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 833, 834, 286,
	313, 910, 909, 908, 312, 314, 906, 907, 905, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 916, 938, 927, 791, 792, 917, 918, 942,
	919, 794, 795, 939, 940, 788, 789, 793, 941, 943,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 930, 777,
	776, 0, 783, 784, 0, 813, 814, 816, 822, 823,
	824, 835, 882, 883, 891, 893, 894, 892, 895, 896,
	897, 900, 901, 902, 903, 898, 899, 904, 796, 800,
	797, 798, 799, 811, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 812, 953, 954, 955, 956, 957,
	958, 828, 832, 831, 829, 830, 826, 827, 854, 853,
	855, 856, 857, 858, 859, 860, 862, 861, 863, 864,
	865, 866, 867, 868, 836, 837, 840, 841, 839, 838,
	842, 851, 852, 843, 844, 845, 846, 847, 848, 850,
	849, 869, 870, 871, 872, 873, 875, 874, 878, 879,
	877, 876, 881, 880, 775, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 944, 268, 945,
	0, 0, 949, 0, 0, 0, 951, 950, 0, 952,
	914, 913, 0, 0, 946, 947, 0, 948, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 959, 960,
	961, 962, 963, 964, 965, 966, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 1034, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	758, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 754, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 0, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 959, 960, 961, 962,
	963, 964, 965, 966, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 1034, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 774, 0, 0, 0,
	276, 779, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	786, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 782, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 97, 0, 0, 1035, 516, 969, 758, 935,
	973, 1036, 987, 988, 989, 974, 0, 243, 975, 976,
	250, 977, 0, 934, 817, 819, 818, 884, 885, 886,
	887, 888, 889, 890, 820, 821, 815, 982, 619, 990,
	991, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 754, 771, 0, 785, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 769,
	0, 0, 0, 0, 929, 0, 770, 0, 0, 778,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 3209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 928,
	0, 0, 639, 0, 0, 926, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 979, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 980, 981, 262, 662, 825, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 833, 834, 286, 313, 910, 909, 908,
	312, 314, 906, 907, 905, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 916, 938,
	927, 791, 792, 917, 918, 942, 919, 794, 795, 939,
	940, 788, 789, 793, 941, 943, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 930, 777, 776, 0, 783, 784,
	0, 813, 814, 816, 822, 823, 824, 835, 882, 883,
	891, 893, 894, 892, 895, 896, 897, 900, 901, 902,
	903, 898, 899, 904, 796, 800, 797, 798, 799, 811,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	812, 953, 954, 955, 956, 957, 958, 828, 832, 831,
	829, 830, 826, 827, 854, 853, 855, 856, 857, 858,
	859, 860, 862, 861, 863, 864, 865, 866, 867, 868,
	836, 837, 840, 841, 839, 838, 842, 851, 852, 843,
	844, 845, 846, 847, 848, 850, 849, 869, 870, 871,
	872, 873, 875, 874, 878, 879, 877, 876, 881, 880,
	775, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 944, 268, 945, 0, 0, 949, 0,
	0, 0, 951, 950, 0, 952, 914, 913, 0, 0,
	946, 947, 0, 948, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 959, 960, 961, 962, 963, 964,
	965, 966, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 1034, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 774, 0, 0, 0, 276, 779,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 786, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 1035, 516, 969, 758, 935, 973, 1036,
	987, 988, 989, 974, 0, 243, 975, 976, 250, 977,
	0, 934, 817, 819, 818, 884, 885, 886, 887, 888,
	889, 890, 820, 821, 815, 982, 619, 990, 991, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 754, 771, 0, 785, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 769, 0, 0,
	0, 0, 929, 0, 770, 0, 0, 778, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	3205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 928, 0, 0,
	639, 0, 0, 926, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 979, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 980, 981, 262, 662, 825, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 833, 834, 286, 313, 910, 909, 908, 312, 314,
	906, 907, 905, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 916, 938, 927, 791,
	792, 917, 918, 942, 919, 794, 795, 939, 940, 788,
	789, 793, 941, 943, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 930, 777, 776, 0, 783, 784, 0, 813,
	814, 816, 822, 823, 824, 835, 882, 883, 891, 893,
	894, 892, 895, 896, 897, 900, 901, 902, 903, 898,
	899, 904, 796, 800, 797, 798, 799, 811, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 812, 953,
	954, 955, 956, 957, 958, 828, 832, 831, 829, 830,
	826, 827, 854, 853, 855, 856, 857, 858, 859, 860,
	862, 861, 863, 864, 865, 866, 867, 868, 836, 837,
	840, 841, 839, 838, 842, 851, 852, 843, 844, 845,
	846, 847, 848, 850, 849, 869, 870, 871, 872, 873,
	875, 874, 878, 879, 877, 876, 881, 880, 775, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 944, 268, 945, 0, 0, 949, 0, 0, 0,
	951, 950, 0, 952, 914, 913, 0, 0, 946, 947,
	0, 948, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 959, 960, 961, 962, 963, 964, 965, 966,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 1034, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 774, 0, 0, 0, 276, 779, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 786, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 1035, 516, 969, 1104, 935, 973, 1036, 987, 988,
	989, 974, 0, 243, 975, 976, 250, 977, 0, 934,
	817, 819, 818, 884, 885, 886, 887, 888, 889, 890,
	820, 821, 815, 982, 619, 990, 991, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 785, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 769, 0, 0, 0, 0,
	929, 0, 770, 0, 0, 778, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 928, 0, 0, 639, 0,
	0, 926, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 979,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	980, 981, 262, 662, 825, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 833,
	834, 286, 313, 910, 909, 908, 312, 314, 906, 907,
	905, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 916, 938, 927, 791, 792, 917,
	918, 942, 919, 794, 795, 939, 940, 788, 789, 793,
	941, 943, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	930, 777, 776, 0, 783, 784, 0, 813, 814, 816,
	822, 823, 824, 835, 882, 883, 891, 893, 894, 892,
	895, 896, 897, 900, 901, 902, 903, 898, 899, 904,
	796, 800, 797, 798, 799, 811, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 812, 953, 954, 955,
	956, 957, 958, 828, 832, 831, 829, 830, 826, 827,
	854, 853, 855, 856, 857, 858, 859, 860, 862, 861,
	863, 864, 865, 866, 867, 868, 836, 837, 840, 841,
	839, 838, 842, 851, 852, 843, 844, 845, 846, 847,
	848, 850, 849, 869, 870, 871, 872, 873, 875, 874,
	878, 879, 877, 876, 881, 880, 775, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 944,
	268, 945, 0, 0, 949, 0, 0, 0, 951, 950,
	0, 952, 914, 913, 0, 0, 946, 947, 0, 948,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	959, 960, 961, 962, 963, 964, 965, 966, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 1034,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	774, 0, 0, 0, 276, 779, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 786, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 97, 0, 0, 1035,
	516, 969, 1104, 935, 973, 1036, 987, 988, 989, 974,
	0, 243, 975, 976, 250, 977, 0, 934, 817, 819,
	818, 884, 885, 886, 887, 888, 889, 890, 820, 821,
	815, 982, 619, 990, 991, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 785, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 769, 0, 0, 0, 0, 929, 0,
	770, 0, 0, 778, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 2145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 928, 0, 0, 639, 0, 0, 926,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 979, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 980, 981,
	262, 662, 825, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 833, 834, 286,
	313, 910, 909, 908, 312, 314, 906, 907, 905, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 916, 938, 927, 791, 792, 917, 918, 942,
	919, 794, 795, 939, 940, 788, 789, 793, 941, 943,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 930, 777,
	776, 0, 783, 784, 0, 813, 814, 816, 822, 823,
	824, 835, 882, 883, 891, 893, 894, 892, 895, 896,
	897, 900, 901, 902, 903, 898, 899, 904, 796, 800,
	797, 798, 799, 811, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 812, 953, 954, 955, 956, 957,
	958, 828, 832, 831, 829, 830, 826, 827, 854, 853,
	855, 856, 857, 858, 859, 860, 862, 861, 863, 864,
	865, 866, 867, 868, 836, 837, 840, 841, 839, 838,
	842, 851, 852, 843, 844, 845, 846, 847, 848, 850,
	849, 869, 870, 871, 872, 873, 875, 874, 878, 879,
	877, 876, 881, 880, 775, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 944, 268, 945,
	0, 0, 949, 0, 0, 0, 951, 950, 0, 952,
	914, 913, 0, 0, 946, 947, 0, 948, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 959, 960,
	961, 962, 963, 964, 965, 966, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 1034, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 774, 0,
	0, 0, 276, 779, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 786, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 1035, 516, 969,
	1104, 935, 973, 1036, 987, 988, 989, 974, 0, 243,
	975, 976, 250, 977, 0, 934, 817, 819, 818, 884,
	885, 886, 887, 888, 889, 890, 820, 821, 815, 982,
	619, 990, 991, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 785,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 769, 0, 0, 0, 0, 929, 0, 770, 0,
	0, 778, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 2143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 928, 0, 0, 639, 0, 0, 926, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 979, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 980, 981, 262, 662,
	825, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 833, 834, 286, 313, 910,
	909, 908, 312, 314, 906, 907, 905, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	916, 938, 927, 791, 792, 917, 918, 942, 919, 794,
	795, 939, 940, 788, 789, 793, 941, 943, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 930, 777, 776, 0,
	783, 784, 0, 813, 814, 816, 822, 823, 824, 835,
	882, 883, 891, 893, 894, 892, 895, 896, 897, 900,
	901, 902, 903, 898, 899, 904, 796, 800, 797, 798,
	799, 811, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 812, 953, 954, 955, 956, 957, 958, 828,
	832, 831, 829, 830, 826, 827, 854, 853, 855, 856,
	857, 858, 859, 860, 862, 861, 863, 864, 865, 866,
	867, 868, 836, 837, 840, 841, 839, 838, 842, 851,
	852, 843, 844, 845, 846, 847, 848, 850, 849, 869,
	870, 871, 872, 873, 875, 874, 878, 879, 877, 876,
	881, 880, 775, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 944, 268, 945, 0, 0,
	949, 0, 0, 0, 951, 950, 0, 952, 914, 913,
	0, 0, 946, 947, 0, 948, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 959, 960, 961, 962,
	963, 964, 965, 966, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 1034, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 1147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 1146, 639, 0, 0, 0, 0, 0, 1143, 1144,
	371, 1112, 336, 202, 230, 1137, 1141, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 87, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 99, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	97, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 96, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 2462,
	0, 0, 2461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 87, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 99, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	1766, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	96, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 1805, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 1807,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 1809,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 1491, 0, 1492, 1493, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 97, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 2462, 0, 0, 2461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 2395, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 1984, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 2393, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 1112,
	336, 202, 230, 1110, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 2395, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 1984, 516, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 1766, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	3774, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 2154, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 2926, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	2893, 0, 0, 0, 0, 243, 0, 0, 250, 2894,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 1828, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 1827, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 4129, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 1984, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 3774, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 2463,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 1809, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 2101, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 2092, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 1951, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 1949, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	1947, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 1945, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 1943, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 1939, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 1937, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	1935, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 1910, 0, 0, 0, 516, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 1813, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 416, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 97, 0,
	0, 0, 516, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1468, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 1467, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 403, 0, 382, 585, 586, 322, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 372, 273, 0, 0, 209,
	514, 0, 438, 0, 208, 0, 496, 258, 383, 380,
	593, 288, 279, 275, 255, 323, 392, 435, 527, 429,
	0, 376, 0, 0, 506, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 253, 331, 207, 420, 507,
	292, 0, 0, 0, 0, 0, 516, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 357, 366, 365, 345, 346, 348,
	350, 356, 363, 369, 342, 351, 0, 0, 619, 0,
	0, 0, 271, 327, 278, 270, 590, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 409, 263, 0, 462, 0,
	685, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 336, 202, 230, 0, 0, 419, 470, 482,
	0, 0, 0, 259, 0, 480, 433, 614, 238, 290,
	467, 440, 478, 448, 293, 0, 0, 479, 378, 595,
	458, 611, 640, 641, 269, 413, 625, 531, 633, 658,
	231, 266, 427, 515, 617, 503, 404, 591, 592, 335,
	502, 301, 206, 375, 646, 229, 488, 377, 247, 236,
	597, 622, 305, 257, 295, 465, 653, 218, 526, 608,
	244, 492, 0, 0, 661, 252, 513, 620, 609, 220,
	604, 512, 400, 332, 333, 219, 0, 466, 274, 299,
	0, 0, 264, 422, 599, 600, 262, 662, 233, 632,
	225, 0, 631, 415, 594, 605, 401, 389, 224, 603,
	399, 388, 340, 361, 362, 286, 313, 455, 381, 456,
	312, 314, 411, 410, 412, 212, 618, 636, 0, 213,
	0, 508, 621, 663, 460, 217, 239, 240, 242, 0,
	285, 289, 297, 300, 309, 310, 319, 373, 426, 454,
	450, 459, 0, 588, 612, 626, 638, 644, 645, 647,
	648, 649, 650, 651, 654, 652, 414, 317, 504, 339,
	379, 0, 0, 432, 481, 245, 616, 505, 204, 0,
	0, 0, 0, 260, 261, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 659, 517, 523, 518, 519, 520,
	521, 522, 0, 524, 0, 0, 0, 0, 0, 405,
	0, 601, 602, 682, 390, 495, 613, 341, 355, 358,
	347, 367, 0, 368, 343, 344, 349, 352, 353, 354,
	359, 360, 364, 370, 254, 215, 397, 406, 587, 318,
	221, 222, 223, 533, 534, 535, 536, 629, 630, 634,
	210, 471, 472, 473, 474, 298, 624, 315, 477, 476,
	337, 338, 385, 457, 549, 551, 562, 566, 568, 570,
	576, 579, 550, 552, 563, 567, 569, 571, 577, 580,
	539, 541, 543, 545, 558, 557, 554, 582, 583, 560,
	565, 544, 556, 561, 574, 581, 578, 538, 542, 546,
	555, 573, 572, 553, 564, 575, 559, 547, 540, 548,
	0, 201, 226, 374, 0, 463, 294, 660, 628, 493,
	623, 211, 228, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 205, 214, 227,
	237, 241, 248, 267, 282, 284, 291, 304, 316, 324,
	325, 328, 334, 386, 393, 394, 395, 396, 416, 417,
	418, 421, 424, 425, 428, 430, 431, 434, 439, 443,
	444, 445, 447, 449, 451, 464, 469, 483, 484, 485,
	486, 487, 490, 491, 497, 498, 499, 500, 501, 509,
	510, 525, 596, 598, 615, 635, 642, 489, 391, 437,
	461, 589, 0, 0, 307, 308, 452, 453, 320, 321,
	656, 657, 306, 610, 643, 607, 655, 637, 446, 384,
	0, 0, 387, 287, 311, 326, 0, 627, 511, 232,
	475, 296, 256, 0, 0, 216, 251, 235, 265, 280,
	283, 330, 398, 407, 436, 442, 302, 277, 249, 468,
	246, 494, 528, 529, 530, 532, 402, 272, 441, 403,
	0, 382, 585, 586, 322, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 372, 273, 0, 0, 209, 514, 0,
	438, 0, 208, 0, 496, 258, 383, 380, 593, 288,
	279, 275, 255, 323, 392, 435, 527, 429, 0, 376,
	0, 0, 506, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 253, 331, 207, 420, 507, 292, 0,
	0, 0, 0, 0, 516, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 357, 366, 365, 345, 346, 348, 350, 356,
	363, 369, 342, 351, 0, 0, 619, 0, 0, 0,
	271, 327, 278, 270, 590, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 409, 263, 0, 462, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	336, 202, 230, 0, 0, 419, 470, 482, 0, 0,
	0, 259, 0, 480, 433, 614, 238, 290, 467, 440,
	478, 448, 293, 0, 0, 479, 378, 595, 458, 611,
	640, 641, 269, 413, 625, 531, 633, 658, 231, 266,
	427, 515, 617, 503, 404, 591, 592, 335, 502, 301,
	206, 375, 646, 229, 488, 377, 247, 236, 597, 622,
	305, 257, 295, 465, 653, 218, 526, 608, 244, 492,
	0, 0, 661, 252, 513, 620, 609, 220, 604, 512,
	400, 332, 333, 219, 0, 466, 274, 299, 0, 0,
	264, 422, 599, 600, 262, 662, 233, 632, 225, 0,
	631, 415, 594, 605, 401, 389, 224, 603, 399, 388,
	340, 361, 362, 286, 313, 455, 381, 456, 312, 314,
	411, 410, 412, 212, 618, 636, 0, 213, 0, 508,
	621, 663, 460, 217, 239, 240, 242, 0, 285, 289,
	297, 300, 309, 310, 319, 373, 426, 454, 450, 459,
	0, 588, 612, 626, 638, 644, 645, 647, 648, 649,
	650, 651, 654, 652, 414, 317, 504, 339, 379, 0,
	0, 432, 481, 245, 616, 505, 204, 0, 0, 0,
	0, 260, 261, 0, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 659, 517, 523, 518, 519, 520, 521, 522,
	0, 524, 0, 0, 0, 0, 0, 405, 0, 601,
	602, 682, 390, 495, 613, 341, 355, 358, 347, 367,
	0, 368, 343, 344, 349, 352, 353, 354, 359, 360,
	364, 370, 254, 215, 397, 406, 587, 318, 221, 222,
	223, 533, 534, 535, 536, 629, 630, 634, 210, 471,
	472, 473, 474, 298, 624, 315, 477, 476, 337, 338,
	385, 457, 549, 551, 562, 566, 568, 570, 576, 579,
	550, 552, 563, 567, 569, 571, 577, 580, 539, 541,
	543, 545, 558, 557, 554, 582, 583, 560, 565, 544,
	556, 561, 574, 581, 578, 538, 542, 546, 555, 573,
	572, 553, 564, 575, 559, 547, 540, 548, 0, 201,
	226, 374, 0, 463, 294, 660, 628, 493, 623, 211,
	228, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 205, 214, 227, 237, 241,
	248, 267, 282, 284, 291, 304, 316, 324, 325, 328,
	334, 386, 393, 394, 395, 396, 4198, 417, 418, 421,
	424, 425, 428, 430, 431, 434, 439, 443, 444, 445,
	447, 449, 451, 464, 469, 483, 484, 485, 486, 487,
	490, 491, 497, 498, 499, 500, 501, 509, 510, 525,
	596, 598, 615, 635, 642, 489, 391, 437, 461, 589,
	0, 0, 307, 308, 452, 453, 320, 321, 656, 657,
	306, 610, 643, 607, 655, 637, 446, 384, 0, 0,
	387, 287, 311, 326, 0, 627, 511, 232, 475, 296,
	256, 0, 0, 216, 251, 235, 265, 280, 283, 330,
	398, 407, 436, 442, 302, 277, 249, 468, 246, 494,
	528, 529, 530, 532, 402, 272, 441, 403, 0, 382,
	585, 586, 322, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 372, 273, 0, 0, 209, 514, 0, 438, 0,
	208, 0, 496, 258, 383, 380, 593, 288, 279, 275,
	255, 323, 392, 435, 527, 429, 0, 376, 0, 0,
	506, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 253, 331, 207, 420, 507, 292, 0, 0, 0,
	0, 0, 516, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	357, 366, 365, 345, 346, 348, 350, 356, 363, 369,
	342, 351, 0, 0, 619, 0, 0, 0, 271, 327,
	278, 270, 590, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 409, 263, 0, 462, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 336, 202,
	230, 0, 0, 419, 470, 482, 0, 0, 0, 259,
	0, 480, 433, 614, 238, 290, 467, 440, 478, 448,
	293, 0, 0, 479, 378, 595, 458, 611, 640, 641,
	269, 413, 625, 531, 633, 658, 231, 266, 427, 515,
	617, 503, 404, 591, 592, 335, 502, 301, 206, 375,
	646, 229, 488, 377, 247, 236, 597, 622, 305, 257,
	295, 465, 653, 218, 526, 608, 244, 492, 0, 0,
	661, 252, 513, 620, 609, 220, 604, 512, 400, 332,
	333, 219, 0, 466, 274, 299, 0, 0, 264, 422,
	599, 600, 262, 662, 233, 632, 225, 0, 631, 415,
	594, 605, 401, 389, 224, 603, 399, 388, 340, 361,
	362, 286, 313, 455, 381, 456, 312, 314, 411, 410,
	412, 212, 618, 636, 0, 213, 0, 508, 621, 663,
	460, 217, 239, 240, 242, 0, 285, 289, 297, 300,
	309, 310, 319, 373, 426, 454, 450, 459, 0, 588,
	612, 626, 638, 644, 645, 647, 648, 649, 650, 651,
	654, 652, 414, 317, 504, 339, 379, 0, 0, 432,
	481, 245, 616, 505, 204, 0, 0, 0, 0, 260,
	261, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	659, 517, 523, 518, 519, 520, 521, 522, 0, 524,
	0, 0, 0, 0, 0, 405, 0, 601, 602, 682,
	390, 495, 613, 341, 355, 358, 347, 367, 0, 368,
	343, 344, 349, 352, 353, 354, 359, 360, 364, 370,
	254, 215, 397, 406, 587, 318, 221, 222, 223, 533,
	534, 535, 536, 629, 630, 634, 210, 471, 472, 473,
	474, 298, 624, 315, 477, 476, 337, 338, 385, 457,
	549, 551, 562, 566, 568, 570, 576, 579, 550, 552,
	563, 567, 569, 571, 577, 580, 539, 541, 543, 545,
	558, 557, 554, 582, 583, 560, 565, 544, 556, 561,
	574, 581, 578, 538, 542, 546, 555, 573, 572, 553,
	564, 575, 559, 547, 540, 548, 0, 201, 226, 374,
	0, 463, 294, 660, 628, 493, 623, 211, 228, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 205, 214, 227, 237, 241, 248, 267,
	282, 284, 291, 304, 316, 324, 325, 328, 334, 386,
	393, 394, 395, 396, 416, 417, 418, 421, 424, 425,
	428, 430, 431, 434, 439, 443, 444, 445, 447, 449,
	451, 464, 469, 483, 484, 485, 486, 487, 490, 491,
	497, 498, 499, 500, 501, 509, 510, 525, 596, 598,
	615, 635, 642, 489, 391, 437, 461, 589, 0, 0,
	307, 308, 452, 453, 320, 321, 656, 657, 306, 610,
	643, 607, 655, 637, 446, 384, 0, 0, 387, 287,
	311, 326, 0, 627, 511, 232, 475, 296, 256, 0,
	0, 216, 251, 235, 265, 280, 283, 330, 398, 407,
	436, 442, 302, 277, 249, 468, 246, 494, 528, 529,
	530, 532, 402, 272, 441, 403, 0, 382, 585, 586,
	322, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 372,
	273, 0, 0, 209, 514, 0, 438, 0, 208, 0,
	496, 258, 383, 380, 593, 288, 279, 275, 255, 323,
	392, 435, 527, 429, 0, 376, 0, 0, 506, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 253,
	331, 207, 420, 507, 292, 0, 0, 0, 0, 0,
	516, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 357, 366,
	365, 345, 346, 348, 350, 356, 363, 369, 342, 351,
	0, 0, 619, 0, 0, 0, 271, 327, 278, 270,
	590, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 409,
	263, 0, 462, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 336, 202, 230, 0,
	0, 419, 470, 482, 0, 0, 0, 259, 0, 480,
	433, 614, 238, 290, 467, 440, 478, 448, 293, 0,
	0, 479, 378, 595, 458, 611, 640, 641, 269, 413,
	625, 531, 633, 658, 231, 266, 427, 515, 617, 503,
	404, 591, 592, 335, 502, 301, 206, 375, 646, 229,
	488, 377, 247, 236, 597, 622, 305, 257, 295, 465,
	653, 218, 526, 608, 244, 492, 0, 0, 661, 252,
	513, 620, 609, 220, 604, 512, 400, 332, 333, 219,
	0, 466, 274, 299, 0, 0, 264, 422, 599, 600,
	262, 662, 233, 632, 225, 0, 631, 415, 594, 605,
	401, 389, 224, 603, 399, 388, 340, 361, 362, 286,
	313, 455, 381, 456, 312, 314, 411, 410, 412, 212,
	618, 636, 0, 213, 0, 508, 621, 663, 460, 217,
	239, 240, 242, 0, 285, 289, 297, 300, 309, 310,
	319, 373, 426, 454, 450, 459, 0, 588, 612, 626,
	638, 644, 645, 647, 648, 649, 650, 651, 654, 652,
	414, 317, 504, 339, 379, 0, 0, 432, 481, 245,
	616, 505, 204, 0, 0, 0, 0, 260, 261, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 659, 517,
	523, 518, 519, 520, 521, 522, 0, 524, 0, 0,
	0, 0, 0, 405, 0, 601, 602, 682, 390, 495,
	613, 341, 355, 358, 347, 367, 0, 368, 343, 344,
	349, 352, 353, 354, 359, 360, 364, 370, 254, 215,
	397, 406, 587, 318, 221, 222, 223, 533, 534, 535,
	536, 629, 630, 634, 210, 471, 472, 473, 474, 298,
	624, 315, 477, 476, 337, 338, 385, 457, 549, 551,
	562, 566, 568, 570, 576, 579, 550, 552, 563, 567,
	569, 571, 577, 580, 539, 541, 543, 545, 558, 557,
	554, 582, 583, 560, 565, 544, 556, 561, 574, 581,
	578, 538, 542, 546, 555, 573, 572, 553, 564, 575,
	559, 547, 540, 548, 0, 201, 226, 374, 0, 463,
	294, 660, 628, 493, 623, 211, 228, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 205, 214, 227, 237, 241, 248, 267, 282, 284,
	291, 304, 316, 324, 325, 328, 334, 386, 393, 394,
	395, 396, 416, 417, 418, 421, 424, 425, 428, 430,
	431, 434, 439, 443, 444, 445, 447, 449, 451, 464,
	469, 483, 484, 485, 486, 487, 490, 491, 497, 498,
	499, 500, 501, 509, 510, 525, 596, 598, 615, 635,
	642, 489, 391, 437, 461, 589, 0, 0, 307, 308,
	452, 453, 320, 321, 656, 657, 306, 610, 643, 607,
	655, 637, 446, 384, 0, 0, 387, 287, 311, 326,
	0, 627, 511, 232, 475, 296, 256, 0, 0, 216,
	251, 235, 265, 280, 283, 330, 398, 407, 436, 442,
	302, 277, 249, 468, 246, 494, 528, 529, 530, 532,
	402, 272, 441, 403, 0, 382, 585, 586, 322, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 372, 273, 0,
	0, 209, 514, 0, 438, 0, 208, 0, 496, 258,
	383, 380, 593, 288, 279, 275, 255, 323, 392, 435,
	527, 429, 0, 376, 0, 0, 506, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 253, 331, 207,
	420, 507, 292, 0, 0, 0, 0, 0, 516, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 357, 366, 365, 345,
	346, 348, 350, 356, 363, 369, 342, 351, 0, 0,
	619, 0, 0, 0, 271, 327, 278, 270, 590, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 409, 263, 0,
	462, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 336, 202, 230, 0, 0, 419,
	470, 482, 0, 0, 0, 259, 0, 480, 433, 614,
	238, 290, 467, 440, 478, 448, 293, 0, 0, 479,
	378, 595, 458, 611, 640, 641, 269, 413, 625, 531,
	633, 658, 231, 266, 427, 515, 617, 503, 404, 591,
	592, 335, 502, 301, 206, 375, 646, 229, 488, 377,
	247, 236, 597, 622, 305, 257, 295, 465, 653, 218,
	526, 608, 244, 492, 0, 0, 661, 252, 513, 620,
	609, 220, 604, 512, 400, 332, 333, 219, 0, 466,
	274, 299, 0, 0, 264, 422, 599, 600, 262, 662,
	233, 632, 225, 0, 631, 415, 594, 605, 401, 389,
	224, 603, 399, 388, 340, 361, 362, 286, 313, 455,
	381, 456, 312, 314, 411, 410, 412, 212, 618, 636,
	0, 213, 0, 508, 621, 663, 460, 217, 239, 240,
	242, 0, 285, 289, 297, 300, 309, 310, 319, 373,
	426, 454, 450, 459, 0, 588, 612, 626, 638, 644,
	645, 647, 648, 649, 650, 651, 654, 652, 414, 317,
	504, 339, 379, 0, 0, 432, 481, 245, 616, 505,
	204, 0, 0, 0, 0, 260, 261, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 659, 517, 523, 518,
	519, 520, 521, 522, 0, 524, 0, 0, 0, 0,
	0, 405, 0, 601, 602, 682, 390, 495, 613, 341,
	355, 358, 347, 367, 0, 368, 343, 344, 349, 352,
	353, 354, 359, 360, 364, 370, 254, 215, 397, 406,
	587, 318, 221, 222, 223, 533, 534, 535, 536, 629,
	630, 634, 210, 471, 472, 473, 474, 298, 624, 315,
	477, 476, 337, 338, 385, 457, 549, 551, 562, 566,
	568, 570, 576, 579, 550, 552, 563, 567, 569, 571,
	577, 580, 539, 541, 543, 545, 558, 557, 554, 582,
	583, 560, 565, 544, 556, 561, 574, 581, 578, 538,
	542, 546, 555, 573, 572, 553, 564, 575, 559, 547,
	540, 548, 0, 201, 226, 374, 0, 463, 294, 660,
	628, 493, 623, 211, 228, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 205,
	214, 227, 237, 241, 248, 267, 282, 284, 291, 304,
	316, 324, 325, 328, 334, 386, 393, 394, 395, 396,
	416, 417, 418, 421, 424, 425, 428, 430, 431, 434,
	439, 443, 444, 445, 447, 449, 451, 464, 469, 483,
	484, 485, 486, 487, 490, 491, 497, 498, 499, 500,
	501, 509, 510, 525, 596, 598, 615, 635, 642, 489,
	391, 437, 461, 589, 0, 0, 307, 308, 452, 453,
	320, 321, 656, 657, 306, 610, 643, 607, 655, 637,
	446, 384, 0, 0, 387, 287, 311, 326, 0, 627,
	511, 232, 475, 296, 256, 0, 0, 216, 251, 235,
	265, 280, 283, 330, 398, 407, 436, 442, 302, 277,
	249, 468, 246, 494, 528, 529, 530, 532, 402, 272,
	441, 0, 0, 382, 585, 586, 322,
}

var yyPact = [...]int{
	-1000, -1000, 5261, -1000, -543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2468, 2681, -1000, -1000, -1000, -1000, 2632, -1000, 1038,
	-1000, 2101, 2008, 2461, 7422, -1000, 56069, 778, -1000, 53077,
	-453, 909, 290, 36621, -1000, 214, -1000, 208, 54573, 218,
	-1000, -1000, -1000, -1000, -453, 22409, 2349, 42, 37, 56069,
	-1000, -1000, -1000, -1000, -365, 2566, 2043, -1000, 464, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52329, -1000, -1000, -1000,
	1120, -1000, -1000, 2467, 2457, 2337, 945, 2340, -1000, 2492,
	2043, -1000, 22409, 2576, 2391, 21661, 21661, 467, -1000, -1000,
	308, -1000, -1000, 31385, 56069, 39613, 2508, 54573, -1000, 2461,
	-1000, -1000, -1000, 202, -1000, 367, 1983, -1000, 1979, -1000,
	1090, 1267, 389, 869, 865, 386, 385, 384, 382, 381,
	380, 376, 375, 399, -1000, 963, 963, -232, -239, 1519,
	468, 439, 439, 1185, 491, 2435, 2432, -1000, -1000, 963,
	963, 963, 403, 963, 963, 963, 963, 347, 345, 963,
	963, 963, 963, 963, 963, 963, 963, 963, 963, 963,
	963, 963, 963, 963, 963, 963, 919, 2461, 330, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56069, 348, 56069, -1000, 850, 774, -1000,
	-1000, -458, 1113, 1113, 48, 1113, 1113, 1113, 1113, 169,
	969, 36, -1000, 166, 327, 241, 324, 1100, 773, -1000,
	-1000, 297, 1100, 1786, -1000, 956, 321, 174, -1000, 1113,
	1113, -1000, 14905, 253, 14905, 14905, 318, 194, -1000, 2439,
	-1000, -1000, -1000, -1000, -1000, 1352, -1000, -1000, -1000, -1000,
	-59, 480, -1000, -1000, -1000, -1000, 54573, 51581, 222, -1000,
	-1000, 264, 1848, 1439, 22409, 1455, 938, -1000, -1000, 1613,
	912, -1000, -1000, -1000, -1000, -1000, 819, -1000, 24653, 24653,
	24653, 24653, -1000, -1000, 1989, 50833, 1989, 1989, 24653, 1989,
	24653, 1989, 1989, 1989, 1989, 22409, 1989, 1989, 1989, 1989,
	-1000, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	-1000, -1000, -1000, -1000, 1989, 847, 1989, 1989, 1989, 1989,
	1989, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1989, 1989,
	1989, 1989, 1989, 1989, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, -1000, -1000, -1000,
	1710, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1783, 1535,
	1530, 1511, -1000, 19417, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1989, -1000, -1000, -1000, 56069, -1000,
	1989, 269, 54573, 54573, 395, 1344, -1000, -1000, 2492, 2043,
	-1000, 2566, 2584, 464, -1000, 3934, 1999, 1745, 1423, 2043,
	1154, 1961, 56069, -1000, 2008, 224, -1000, -1000, -1000, -296,
	-298, 2207, 1462, 1784, -1000, -1000, -1000, -1000, 2333, 22409,
	-1000, -1000, 2629, -1000, 29141, 846, 2624, 50085, -1000, 467,
	467, 1978, 671, 4, -1000, -1000, -1000, -1000, 990, 35873,
	-1000, -1000, -1000, -1000, -1000, 1841, 56069, -1000, -1000, 6008,
	54573, -1000, 2096, -1000, 1825, -1000, 2036, 22409, 464, 1816,
	-1000, -1000, -1000, -1000, 963, 963, 963, -1000, 398, 2569,
	7422, 6443, -1000, -1000, -1000, 49337, 2093, 54573, -1000, 2090,
	-1000, 1061, 867, 860, 860, 54573, -1000, -1000, 55321, 54573,
	1042, 1035, 54573, 54573, 54573, 54573, -1000, 48589, -1000, 47841,
	47093, 1335, 54573, 46345, 45597, 44849, 44101, 43353, -1000, 2281,
	-1000, 2125, -1000, -1000, -1000, 55321, 54573, 54573, 55321, 54573,
	55321, 56069, 54573, -1000, -1000, 387, -1000, -1000, 1333, 1332,
	1330, 963, 963, 1327, 1782, 1770, 1769, 963, 963, 1324,
	1766, 38117, 1765, 292, 1322, 1317, 1314, 1342, 1764, 234,
	1762, 1337, 1326, 1300, 54573, 2088, 56069, -1000, 313, 954,
	1089, -1000, -1000, -1000, 980, 2461, 2343, 1977, 477, 772,
	54573, 461, 461, 54573, -1000, -1000, 15659, 56069, 211, -1000,
	1761, 22409, -1000, 1105, 1100, 1100, -1000, -1000, -1000, -1000,
	-1000, -1000, 1113, 56069, 1105, -1000, -1000, -1000, 1100, 1113,
	56069, 1113, 1113, 1113, 1113, 1100, 1100, 1100, 1113, 56069,
	56069, 56069, 56069, 56069, 56069, 56069, 56069, 56069, 14905, 956,
	1113, -464, -1000, 1759, -1000, -1000, -1000, 2262, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14905, 14905, -1000, -1000, 2516, 2515, -1000, -1000, -1000, 1968,
	-1000, 206, 8, 216, -1000, 42605, 465, 973, -1000, 465,
	-1000, -1000, -1000, -1000, -1000, 1964, 41857, -1000, -467, -468,
	-471, -472, -1000, -1000, -1000, -473, -475, -1000, -1000, -1000,
	22409, 22409, 22409, 22409, -329, -1000, 1178, 24653, 2371, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22409, 1124, 1298, 24653,
	24653, 24653, 24653, 24653, 24653, 24653, 26149, 25401, 24653, 24653,
	24653, 24653, 24653, 24653, -1000, -1000, 33629, 5728, 5728, 912,
	912, 912, 912, -1000, -177, 1963, 55321, -1000, -1000, -1000,
	845, 22409, 22409, 912, -1000, 1274, 1022, 19417, 22409, 22409,
	22409, 22409, 1000, 1439, 55321, 22409, -1000, 1423, -1000, -1000,
	-1000, -1000, 1196, -1000, -1000, 1080, 2420, 2420, 2420, 2420,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	2420, 22409, 276, 276, 925, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 17921, 22409, 22409, 24653, 22409, 22409, 22409,
	1423, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	1423, 22409, 1316, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	17167, 22409, 22409, 22409, 22409, 22409, -1000, -1000, -1000, -1000,
	-1000, -1000, 22409, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	1423, 22409, 22409, 22409, 22409, 22409, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1521, 1538, 1466, 1989,
	22409, -1000, 1962, -1000, -180, 30637, 22409, 1758, 2622, 2118,
	54573, -1000, -1000, -1000, -1000, 2492, -1000, 2492, 1521, 3705,
	2265, 21661, -1000, -1000, 3705, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1744, -1000,
	317, 769, 2044, 313, 54573, 767, 761, 515, 448, -1000,
	-62, 972, 56069, 1961, 2495, -1000, 1958, -1000, -1000, 1989,
	-1000, -361, -1000, -364, 2268, 1757, 968, -1000, 22409, 22409,
	1949, -1000, 2471, 56069, -1000, -329, -1000, 41109, -1000, -1000,
	14151, 56069, 373, 56069, -1000, 29889, 40361, 312, -1000, 4,
	1922, -1000, 14, 6, 18669, 911, -1000, -1000, -1000, 1519,
	26897, 1846, 911, 77, -1000, -1000, -1000, 2036, -1000, 2036,
	2036, 2036, 2036, 968, 968, 968, 968, -1000, -1000, -1000,
	-1000, -1000, 2087, 2036, 2086, -1000, 2036, 2036, 2036, 2036,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2074, 2074, 2074,
	2070, 2070, 2037, 2037, 432, -1000, 22409, 446, 39613, 2479,
	1299, 2698, -211, -1000, 54573, 1410, 1407, 1403, -1000, -530,
	1941, -1000, -1000, 2563, -1000, -1000, 1297, 1082, 1081, 1269,
	54573, 277, 366, -1000, 420, -1000, 39613, 54573, 1031, 860,
	54573, -1000, 54573, -1000, -1000, -1000, -1000, -1000, 54573, -1000,
	-1000, 1936, -1000, 1955, 1093, 1079, 1088, 1078, 1936, -1000,
	-1000, -190, 1936, -1000, 1936, -1000, 1936, -1000, 1936, -1000,
	1936, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1033, 129, -378, 54573, 277, 474, -1000, 473, 33629, -1000,
	-1000, -1000, 33629, 33629, -1000, -1000, -1000, -1000, 1755, 1753,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -517,
	56069, -1000, 293, 351, 358, 360, 56069, 997, 2427, 2426,
	2416, 2415, 2393, 2383, 2382, 334, 342, 56069, 56069, 461,
	2209, 56069, 2484, 56069, -1000, -1000, -1000, -1000, -1000, 1737,
	1734, -1000, 1439, 56069, -1000, -1000, 1113, 1113, -1000, -1000,
	56069, 1113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 56069, -1000, -1000, -1000,
	-1000, 1728, -1000, 56069, -59, 200, -1000, -1000, 54573, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -111, -1000,
	357, 12, 326, -1000, -1000, -1000, -1000, -1000, 2514, -1000,
	1439, 1018, 1013, -1000, 1989, -1000, -1000, 1207, -1000, -1000,
	-1000, -1000, -1000, 1989, 1989, 1989, -1000, -1000, -1000, -1000,
	-1000, 1124, 24653, 24653, 24653, 1691, 496, 1817, 1541, 1578,
	1182, 1182, 910, 24653, 910, 24653, 922, 922, 922, 922,
	922, -1000, -1000, -1000, -1000, -1000, -1000, 1710, -1000, 1704,
	-1000, 1989, 55321, 1752, 17167, 2039, 2305, 1423, 932, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4292,
	1423, 1848, 1423, 1656, 4287, 1005, -1000, 22409, 1423, 4189,
	-1000, -1000, 1423, 1423, 22409, -1000, -1000, 22409, 22409, 22409,
	22409, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 22409, 2698, 1931, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1929, 2617, 1452, 2698, 2698, 2698, 2698, 4033,
	2698, 2698, 22409, 1732, -1000, -1000, -1000, 1418, 4027, 1507,
	4021, 2698, 2698, -1000, 2698, 3994, 3990, 1423, 2788, 2767,
	2698, 2698, 2698, 2698, 2698, 2742, 2735, 2698, 2698, 2727,
	2698, 3972, 2698, 2722, 2718, 2713, 2702, 2680, 2651, 2641,
	2619, 2603, 2599, 2565, 2554, 2535, 2522, 2517, 2501, 2488,
	2483, 2698, 2698, 2698, 3960, 2698, 3634, 2698, 3607, 2698,
	2698, 3587, 2449, 2438, 1423, 1928, -1000, 3583, 2698, 3570,
	3565, 3546, 2434, 3541, 3534, 3525, 2698, 2698, 2698, 2411,
	3521, 3512, 3476, 3471, 3467, 3463, 3459, 3450, 3426, 2698,
	1466, 1466, 1466, 1466, 1466, 3401, -332, 2698, 1423, -1000,
	-1000, -1000, -1000, -1000, 3388, 2401, 3377, 3321, 3295, 3141,
	1423, 1989, 843, -1000, -1000, 1466, 1423, 1423, 1466, 1466,
	3133, 3111, 3104, 3098, 3092, 3069, 2698, 2698, -1000, 2698,
	3058, 3015, 2369, 2329, 1423, -1000, 1466, 56069, -1000, -450,
	-1000, -6, 935, 1989, -1000, 38117, 1423, -1000, 4204, -1000,
	1302, -1000, -1000, -1000, -1000, -1000, 35125, 1872, -1000, -1000,
	-1000, 448, 513, 283, 448, 313, 293, 2114, 54573, 54573,
	54573, 56069, 1010, -1000, 332, -1000, 1989, -491, 20913, -1000,
	-1000, -1000, 968, 59, 34377, 907, 907, 86, 1439, 1439,
	22409, -1000, -1000, -1000, -1000, -1000, -1000, 833, 2601, 519,
	1989, -1000, 1976, 3016, -1000, -1000, -1000, 2491, 27645, -1000,
	-1000, 1989, 1989, 56069, 1820, 1819, -1000, 827, -1000, 1365,
	1922, 4, 0, -1000, -1000, -1000, -1000, 1439, -1000, 1362,
	374, 1491, -1000, 440, -1000, -1000, -1000, -1000, 2357, 72,
	-1000, -1000, -1000, 864, 968, -1000, -1000, -1000, -1000, -1000,
	-1000, 1633, -1000, 1633, -1000, -1000, -1000, -1000, -1000, 1278,
	-1000, -1000, -1000, -1000, 1275, -1000, -1000, 1273, -1000, -1000,
	3008, 2234, 446, -1000, -1000, 963, 1619, -1000, -1000, 2363,
	963, 963, 54573, -1000, -1000, 1812, 2479, -1000, -45, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -525, 192, 364, -1000,
	-1000, -1000, 5146, 54573, 1727, -1000, 278, -1000, 1810, -1000,
	54573, -1000, 1723, 2068, 54573, 54573, -1000, -1000, -1000, 54573,
	1989, -1000, -1000, -1000, -1000, 526, 2445, 343, -1000, -1000,
	-350, -1000, -1000, 277, 278, 55321, 54573, 911, -1000, -1000,
	-1000, -1000, -1000, -521, 1721, 509, 56069, 56069, 56069, 56069,
	56069, 56069, 791, -1000, -1000, 24, -1000, -1000, 236, -1000,
	-1000, 1601, -1000, -1000, -1000, -1000, 236, -1000, -1000, -1000,
	-1000, -1000, 337, 471, -1000, 56069, 56069, 918, -1000, -1000,
	-1000, -1000, -1000, 1100, -1000, -1000, 1100, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2441,
	56069, 11, -487, -1000, -484, 22409, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1398, 495, 1817, 24653, 24653, 1022, 1022,
	24653, -1000, -1000, -1000, 939, 939, 33629, -1000, 24653, 22409,
	-1000, -1000, 22409, 22409, 22409, 992, -1000, 22409, 1513, -1000,
	22409, -1000, -332, 1466, 2698, 2698, 2698, 2698, -332, -332,
	-332, -332, -332, -332, -332, -332, -332, -332, 1917, -1000,
	22409, 22409, 22409, 1423, 286, -1000, -1000, -1000, -332, 22409,
	-1000, -1000, 2616, -1000, 22409, -1000, 33629, 22409, 22409, 22409,
	-1000, -1000, -1000, 22409, 22409, -1000, -1000, 22409, -1000, 22409,
	-1000, -1000, -1000, -1000, -1000, -1000, 22409, -1000, 22409, -1000,
	-1000, -1000, 22409, -1000, 22409, -1000, -1000, 22409, -1000, 22409,
	-1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409,
	-1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409,
	-1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409,
	-1000, 22409, -1000, -1000, -1000, 22409, -1000, 22409, -1000, 22409,
	-1000, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, 22409,
	-1000, 22409, 22409, 22409, -1000, 22409, 22409, 22409, 22409, -1000,
	-1000, -1000, -1000, 22409, 22409, 22409, 22409, 22409, 22409, 22409,
	22409, 22409, 22409, -1000, -1000, -1000, -1000, -1000, -1000, 22409,
	-1000, 39613, 13, -332, 1316, 13, 1316, 23905, 853, 820,
	23157, -1000, 22409, 16413, -1000, -1000, -1000, -1000, -1000, 22409,
	22409, 22409, 22409, 22409, 22409, -1000, -1000, -1000, 22409, 22409,
	-1000, 22409, -1000, 22409, -1000, -1000, -1000, -1000, -1000, 935,
	-1000, 855, 854, 860, 54573, -1000, -1000, -1000, -1000, 1893,
	-1000, 2511, -1000, 2312, 2311, 2615, 2601, 21661, -1000, 29889,
	56069, 56069, 300, 56069, 293, 508, 2208, -1000, 2114, 2114,
	2114, -1000, 2482, -1000, 2061, 1349, -1000, -1000, -1000, -1000,
	-1000, -440, -1000, 2334, 2303, 907, 907, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13397, 2492, 22409, 2206, 55321, 1989,
	-1000, 28393, 54573, 55321, 29889, 29889, 29889, 29889, 29889, -1000,
	2247, 2243, -1000, 2231, 2230, 2377, 56069, -1000, 1521, 1717,
	-1000, 22409, 32133, 1940, 29889, -1000, -1000, 29889, 56069, 12643,
	-1000, -1000, 1, -11, -1000, -1000, -1000, -1000, 1519, -1000,
	-1000, 955, 2490, 2353, -1000, -1000, -1000, -1000, -1000, 1708,
	-1000, 1687, 1889, 1682, 1652, 129, -1000, 2029, 2440, 963,
	963, -1000, 1268, -1000, 1274, 1569, 1567, -1000, -1000, -1000,
	430, -1000, -1000, -537, 1244, 2056, 2004, 22409, 2050, 2559,
	1871, 54573, -1000, -1000, 55321, -1000, 316, -1000, 446, 54573,
	-1000, -1000, -1000, 366, 56069, -1000, 9136, -1000, -1000, -1000,
	278, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56069, 2055,
	-1000, -1000, -1000, -1000, -1000, 245, 239, 1564, 233, 1559,
	-1000, 233, -1000, 56069, 916, 2234, 56069, -1000, -1000, -1000,
	1113, 1113, -1000, -1000, 2436, -1000, 1274, 2698, 24653, 24653,
	-1000, 912, -1000, -1000, 393, -310, 2036, 2036, -1000, 2036,
	2037, -1000, 2036, 136, 2036, 134, 2036, -1000, -1000, 1423,
	1423, -1000, 1466, 2325, 1944, 3003, -1000, 1439, 22409, 2993,
	-1000, -1000, -332, -332, -332, -332, -332, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -72, 2932, 2925,
	2698, -1000, 2028, 2021, -1000, 2698, 22409, 2698, 1423, 2293,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2288, 2284, 2280, 2275, 2254, 2211, 2193, 2189,
	2185, 2172, 2164, 2148, 2143, 2078, 2058, 2052, 2698, 2698,
	2046, 2698, 2031, 2024, -1000, 1439, 1466, 2921, 1466, 2698,
	2698, 2910, 402, 2698, 1638, 1638, 1638, 1638, 1638, 1466,
	1466, 1466, 1466, 2698, 54573, -1000, -332, -1000, -1000, -373,
	-375, -1000, 1423, -332, 1876, 24653, 2698, 24653, 24653, 24653,
	2698, 1423, -1000, 2011, 2005, 2816, 1984, 2698, 2797, 2698,
	2698, 2698, 1980, -1000, 2512, 1989, 2512, 1989, 2512, 1600,
	1302, 56069, -1000, -1000, -1000, -1000, 2601, 2595, -1000, 1873,
	1989, -1000, -1000, -1000, -1000, -1000, 497, 56069, 56069, 2202,
	2188, 2187, -1000, 1803, -1000, -1000, 59, 634, -1000, 2326,
	2303, -1000, 2558, 2328, 2547, -1000, -1000, -1000, -1000, -1000,
	1439, -1000, 2458, 1868, -1000, 971, 1890, -1000, -1000, 20913,
	1617, 2297, 817, 1600, 1926, 3016, 2124, 2186, 3417, -1000,
	-1000, -1000, -1000, 2241, -1000, 2227, -1000, -1000, 2008, -1000,
	2694, 373, 29889, 1923, 1923, -1000, 809, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1095, 9136, 2637, -1000, 1556, -1000,
	1361, 259, 1238, -1000, -1000, 963, 963, -1000, 1029, 1028,
	-1000, 56069, 2015, -1000, 968, 1550, 968, 1236, -1000, -1000,
	1208, -1000, -1000, -1000, -1000, 2080, 2225, -1000, -1000, -1000,
	-1000, 296, 2010, 2545, -1000, 22409, 2009, 965, 2877, 54573,
	54573, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 483, 963, -501, 341, 336, 963, 963, 963,
	-538, -1000, -1000, 1582, 1574, -1000, -237, -1000, 22409, -1000,
	-1000, -1000, -1000, -1000, 1319, 1319, 1535, 1530, 1511, -1000,
	2008, -219, 54573, 54573, 54573, 54573, -1000, -1000, -1000, 1133,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 912, 1423, 397, -225, 1423, -1000, -1000, 968,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22409, -1000, 22409, -1000, 22409, 1439, 22409, -1000, -1000, -1000,
	-1000, -1000, 2492, 1508, 22409, 22409, -1000, 1198, 1194, -332,
	2698, -1000, -1000, -1000, 22409, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22409, -1000,
	22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000,
	22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000,
	22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 22409, -1000,
	-1000, 22409, -1000, -1000, -1000, 22409, -1000, 22409, -1000, 22409,
	-1000, -1000, -1000, 22409, 237, 939, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1423, 372, -1000,
	-1000, -1000, 2607, -1000, 1423, 22409, 1022, -1000, 1022, 1022,
	1022, -1000, -1000, -1000, 22409, -1000, 22409, 22409, -1000, 22409,
	-1000, 22409, -1000, -1000, -1000, -1000, 22409, 1989, 2341, 38865,
	1989, 38865, 1989, 32133, -1000, -1000, 2595, 2591, 2540, 275,
	56069, -1000, -1000, 56069, 56069, 56069, -1000, 2319, 2324, 2324,
	2326, -1000, 2537, 2532, -1000, 1504, 2529, 1477, 1024, -1000,
	55321, 22409, -1000, 1989, 38117, -1000, 525, 54573, 1989, 54573,
	-1000, 2589, -1000, -1000, 22409, 2003, -1000, 22409, -1000, -1000,
	-1000, -1000, 5728, 2601, 1923, -1000, -1000, 921, -1000, 22409,
	-1000, 10960, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1473, 1457, -1000, -1000, 2000, 22409, -1000, -1000, -1000,
	1795, 1733, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 366, -532, 2808, 54573, 1183, -1000, 1549, 1871,
	359, 1989, 1446, 963, 963, 963, 1161, 1144, 38117, 1546,
	-1000, 54573, 408, -1000, 366, -1000, -247, -302, 2698, -1000,
	-1000, 2487, -1000, 16413, -1000, -1000, 1996, 2067, -1000, -1000,
	-1000, -1000, 2267, -181, -229, -1000, -1000, 2698, 2698, 2698,
	2199, 1423, -1000, 2698, 2698, 1718, 1683, -1000, -1000, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 1466,
	1956, -1000, 237, 1423, 2182, -1000, -1000, 5728, -1000, -1000,
	2589, 2524, 13, -1000, -1000, 273, 13, 1439, 1014, 1423,
	1423, 1014, 1937, 2698, 1910, 1861, 2698, 2698, 32881, -1000,
	2521, 2520, 1520, -1000, -1000, 38865, 1520, 38865, 935, 2591,
	-340, 22409, 22409, 1544, -1000, 54573, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2283, 1227, -1000, -1000, -1000, -1000, 1444,
	1436, -1000, 1426, -1000, 2636, -1000, 1439, -1000, 1989, 1989,
	-1000, 801, 1890, -1000, 2492, 1439, 54573, 1439, 62, 2589,
	-1000, 2698, -1000, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
	1989, 1989, 1989, 1989, -1000, -1000, 54573, 2779, -1000, -1000,
	1540, 191, -1000, 1514, 1871, -1000, -1000, 636, -1000, 22409,
	-1000, 38117, 1424, 1414, -1000, -1000, -1000, -1000, -538, -1000,
	-1000, -1000, -1000, -1000, -1000, 464, 1869, -1000, 962, 54573,
	56069, -1000, 2258, -1000, -1000, -1000, -1000, 22409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22409, -1000, 1423, 2158, -1000,
	-368, -1000, -500, 22409, -332, -1000, -1000, -332, -1000, -1000,
	-1000, -1000, -1000, 22409, -1000, -1000, 22409, -1000, 22409, -1000,
	-1000, 1520, -1000, -1000, -1000, 37369, -1000, 1520, -1000, 1520,
	-1000, -340, -1000, 1851, -1000, 54573, 1439, 335, 5261, 275,
	6008, -1000, 1158, -1000, -1000, -1000, -1000, -1000, 55321, 54573,
	1890, 54573, -1000, -1000, 1502, 1423, 1989, 2492, -1000, 1494,
	-1000, -1000, 1994, 2004, -1000, -1000, -1000, 20165, -1000, -1000,
	-1000, -1000, -1000, 294, -211, 16413, 11889, 1471, -1000, -217,
	2698, 1466, -1000, -477, -1000, -1000, -1000, -1000, 291, -1000,
	-1000, 1848, -1000, -1000, 1806, 1743, 1678, -1000, -1000, -1000,
	-1000, -1000, -1000, -340, -1000, -1000, 2486, -1000, -307, -1000,
	-543, -1000, -1000, -1000, -1000, 1542, 1443, -1000, -1000, -1000,
	32133, 53825, -1000, -175, 475, 22409, 1991, 1423, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 798, -1000,
	-1000, -1000, 2055, -301, -1000, -1000, -1000, 7758, -492, -249,
	-264, 24653, -1000, 22409, -1000, 22409, -1000, 22409, -1000, 54573,
	1989, -1000, -1000, -1000, -1000, 1422, -1000, 4356, -386, 2157,
	-1000, -132, -1000, -1000, -1000, 1094, 1368, -1000, 1143, -1000,
	-1000, -1000, -1000, 2775, 54573, -1000, 15659, -219, -294, 1006,
	-1000, -1000, -1000, -1000, -1000, 1022, 1672, 1584, 2698, -1000,
	54573, -1000, 53825, -381, 911, 5728, -1000, 2156, 2145, 2613,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -540, 1382, -1000,
	-1000, -1000, 7758, -304, -1000, 22409, -1000, 22409, -1000, 1423,
	-1000, -1000, 2477, 62, -1000, 2621, -1000, 2604, 975, 975,
	-1000, 1130, -540, -1000, -1000, -1000, 2698, 2698, -1000, -390,
	-1000, -1000, -1000, -1000, -1000, 422, 1293, -1000, -1000, -1000,
	-1000, -1000, 5728, -1000, -1000, -1000, 235, 235, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3284, 3283, 30, 5, 38, 37, 40, 3281, 3270,
	185, 3269, 3268, 3265, 3261, 3256, 3255, 186, 182, 180,
	3244, 3243, 3240, 3239, 3238, 3236, 3235, 3234, 3233, 46,
	117, 103, 116, 246, 230, 3232, 3231, 39, 171, 198,
	3230, 3220, 3219, 3218, 3217, 118, 211, 85, 88, 197,
	3216, 3215, 72, 3212, 3209, 3208, 210, 208, 207, 1089,
	3205, 202, 120, 52, 3204, 3203, 3202, 3201, 3199, 3198,
	3197, 3196, 3195, 3193, 3192, 3191, 3190, 3186, 3183, 3181,
	3173, 3172, 3169, 300, 3167, 3166, 29, 3160, 76, 3157,
	3155, 3152, 3151, 3150, 6, 3147, 3144, 10, 45, 61,
	3142, 3139, 48, 3136, 3134, 3127, 3126, 3125, 77, 3123,
	19, 3122, 43, 3121, 3120, 129, 3118, 3116, 3114, 44,
	3109, 3106, 3104, 11, 172, 3103, 3090, 145, 3083, 3079,
	3075, 174, 194, 3072, 2331, 3070, 102, 3067, 3064, 3061,
	176, 167, 213, 3057, 100, 3056, 3036, 3035, 134, 3034,
	3031, 3366, 3029, 3026, 63, 68, 188, 3025, 3020, 166,
	7, 65, 3018, 20, 21, 3013, 3010, 64, 74, 3009,
	109, 3008, 3002, 108, 73, 3001, 98, 93, 2999, 2998,
	9, 8, 2996, 1, 4, 2, 82, 2995, 2991, 119,
	2990, 2988, 2986, 99, 2979, 2976, 3409, 2975, 91, 139,
	107, 66, 2970, 179, 127, 2967, 2962, 2959, 2958, 2957,
	2955, 53, 2939, 2938, 2937, 146, 298, 113, 2933, 2927,
	149, 358, 131, 55, 133, 2926, 151, 2924, 196, 83,
	2919, 178, 2918, 2916, 143, 142, 2911, 2909, 58, 177,
	204, 2907, 95, 135, 122, 181, 94, 141, 2906, 2904,
	59, 62, 2903, 2902, 2901, 2899, 175, 2896, 2892, 80,
	2887, 57, 2886, 173, 2870, 154, 69, 2865, 187, 163,
	2862, 70, 2861, 2860, 75, 104, 101, 33, 2856, 159,
	165, 128, 162, 2852, 2848, 56, 2845, 2844, 2840, 193,
	291, 2837, 2830, 350, 183, 148, 136, 86, 2829, 212,
	2827, 2826, 2825, 41, 4518, 7162, 191, 25, 170, 2822,
	2821, 7743, 47, 49, 22, 2817, 209, 2816, 203, 2813,
	2811, 2808, 199, 221, 114, 164, 60, 2805, 2803, 2802,
	2800, 67, 2793, 2789, 2786, 2785, 2784, 2781, 36, 35,
	32, 92, 200, 79, 28, 96, 169, 158, 71, 2778,
	2773, 2757, 124, 97, 2753, 161, 160, 125, 110, 2751,
	189, 150, 121, 2750, 132, 31, 2749, 2744, 2743, 2742,
	90, 2735, 2734, 2733, 2730, 157, 152, 123, 78, 2729,
	84, 105, 156, 153, 54, 2728, 50, 2725, 2724, 26,
	195, 34, 2723, 2719, 27, 2714, 17, 112, 155, 2712,
	5851, 2711, 14, 236, 168, 2701, 2697, 13, 16, 23,
	2694, 2693, 2689, 2685, 140, 2683, 2682, 2679, 2676, 15,
	51, 12, 18, 115, 144, 81, 2674, 2669, 147, 2667,
	2666, 24, 0, 1059, 130, 2665, 201,
}

//line sql.y:8917
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 430, 431, 431, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 67, 271, 400, 269, 269, 28, 78, 37, 37,
	36, 36, 39, 39, 38, 31, 31, 31, 32, 32,
	32, 32, 32, 32, 32, 32, 33, 33, 33, 33,
	33, 29, 29, 29, 29, 30, 30, 30, 30, 30,
	35, 35, 15, 16, 34, 34, 34, 17, 17, 113,
	113, 18, 19, 19, 19, 19, 434, 434, 191, 191,
	189, 189, 190, 190, 274, 274, 20, 278, 278, 280,
	280, 280, 280, 270, 270, 270, 21, 21, 279, 279,
	281, 281, 281, 284, 284, 284, 284, 325, 325, 325,
	22, 22, 22, 22, 22, 22, 133, 402, 402, 401,
	396, 396, 395, 395, 394, 399, 399, 398, 398, 397,
	42, 41, 43, 43, 43, 44, 53, 53, 53, 53,
	54, 55, 403, 403, 366, 60, 60, 59, 59, 59,
	59, 59, 59, 61, 61, 57, 57, 56, 56, 58,
	58, 368, 368, 354, 354, 367, 367, 367, 367, 367,
	367, 367, 353, 353, 145, 145, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 418, 418, 418, 418, 417, 417, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 155, 155,
	167, 167, 167, 167, 167, 167, 153, 153, 154, 152,
	152, 152, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	166, 166, 161, 161, 161, 163, 163, 162, 162, 162,
	164, 164, 419, 419, 419, 419, 331, 331, 331, 331,
	334, 334, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 333, 333, 333, 333, 333, 333, 333, 335, 335,
	335, 335, 335, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	337, 337, 337, 337, 337, 337, 337, 337, 352, 352,
	341, 341, 346, 346, 347, 347, 348, 348, 348, 349,
	349, 349, 350, 350, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 345, 345, 344, 344, 344, 355, 380,
	380, 379, 379, 377, 377, 377, 377, 377, 377, 377,
	377, 364, 364, 374, 374, 374, 374, 374, 363, 363,
	359, 359, 359, 360, 360, 361, 361, 358, 358, 362,
	362, 376, 376, 375, 375, 356, 356, 357, 357, 382,
	420, 420, 420, 420, 420, 421, 421, 383, 410, 412,
	412, 412, 411, 411, 408, 409, 407, 407, 407, 407,
	407, 88, 88, 88, 297, 297, 298, 298, 372, 372,
	371, 371, 371, 373, 373, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 292, 292, 292, 406,
	406, 406, 406, 406, 406, 405, 405, 405, 369, 369,
	369, 369, 404, 404, 62, 62, 229, 229, 423, 423,
	425, 425, 425, 50, 50, 50, 50, 50, 50, 49,
	49, 49, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 51, 51, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 115,
	115, 116, 116, 116, 116, 118, 118, 118, 385, 385,
	63, 63, 3, 3, 179, 181, 182, 182, 180, 180,
	180, 180, 180, 180, 65, 65, 64, 64, 184, 183,
	185, 185, 185, 1, 1, 2, 2, 4, 4, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 351, 351, 351, 384, 384, 386, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 121, 120, 120,
	119, 122, 122, 122, 122, 122, 122, 122, 122, 388,
	388, 388, 66, 66, 389, 338, 339, 340, 5, 6,
	365, 387, 129, 129, 24, 40, 40, 25, 25, 25,
	25, 26, 26, 68, 71, 71, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 302, 302, 291, 291, 300, 300, 290, 290,
	316, 316, 316, 293, 293, 293, 294, 294, 416, 416,
	416, 287, 287, 70, 70, 70, 317, 317, 317, 317,
	73, 73, 426, 426, 427, 427, 428, 428, 428, 74,
	75, 75, 320, 320, 321, 321, 76, 77, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 114,
	114, 114, 10, 10, 10, 10, 85, 85, 85, 9,
	9, 11, 72, 72, 79, 413, 413, 414, 415, 415,
	415, 415, 80, 82, 27, 27, 27, 27, 27, 27,
	139, 139, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 134, 134, 134, 128, 128, 435,
	83, 84, 84, 132, 132, 132, 125, 125, 125, 131,
	131, 131, 12, 12, 13, 273, 273, 14, 14, 138,
	138, 137, 137, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 135, 135, 136, 136, 136, 136,
	309, 309, 309, 308, 308, 173, 173, 175, 174, 174,
	176, 176, 177, 177, 177, 177, 227, 227, 199, 199,
	266, 266, 267, 267, 265, 265, 272, 272, 268, 268,
	268, 268, 275, 275, 178, 178, 178, 178, 186, 186,
	187, 187, 188, 188, 319, 319, 314, 314, 314, 313,
	313, 192, 192, 192, 194, 193, 193, 193, 193, 195,
	195, 197, 197, 196, 196, 198, 203, 203, 202, 202,
	200, 200, 200, 200, 200, 200, 201, 201, 201, 201,
	204, 204, 151, 151, 151, 151, 151, 151, 151, 151,
	424, 424, 165, 165, 165, 165, 165, 165, 165, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	256, 256, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 232, 232, 231, 231, 91, 91, 91, 92,
	92, 93, 93, 93, 93, 93, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 95, 95, 218, 218, 306,
	306, 97, 98, 98, 99, 99, 102, 102, 101, 100,
	100, 106, 106, 103, 103, 105, 105, 104, 107, 107,
	108, 109, 109, 288, 288, 205, 205, 214, 214, 214,
	214, 206, 206, 207, 207, 207, 207, 207, 207, 215,
	215, 215, 226, 216, 216, 212, 212, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 170, 170, 170, 170, 237, 237, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 158, 158, 171, 171, 171, 171, 172, 172,
	172, 172, 172, 172, 172, 327, 327, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 436, 436, 342, 342, 342,
	213, 213, 213, 213, 213, 130, 130, 130, 130, 130,
	324, 324, 324, 328, 328, 328, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 329, 329, 235, 235, 126, 126, 233, 233, 234,
	236, 236, 228, 228, 228, 228, 230, 230, 209, 209,
	209, 238, 238, 330, 330, 239, 239, 110, 111, 111,
	112, 112, 240, 240, 242, 241, 241, 243, 244, 244,
	244, 245, 245, 246, 246, 246, 52, 52, 52, 52,
	52, 47, 47, 47, 47, 48, 48, 48, 48, 141,
	141, 142, 142, 142, 144, 144, 143, 143, 86, 86,
	87, 87, 87, 393, 393, 391, 392, 392, 392, 148,
	148, 149, 150, 150, 150, 146, 146, 147, 147, 263,
	263, 263, 263, 263, 263, 263, 247, 247, 247, 254,
	254, 254, 250, 250, 252, 252, 252, 253, 253, 253,
	251, 260, 260, 262, 262, 261, 261, 257, 257, 258,
	258, 259, 259, 259, 255, 255, 208, 208, 208, 208,
	208, 264, 264, 264, 264, 318, 318, 318, 276, 276,
	219, 219, 220, 220, 224, 224, 223, 223, 221, 222,
	225, 225, 169, 277, 277, 285, 282, 282, 283, 283,
	310, 310, 310, 286, 286, 299, 299, 295, 295, 296,
	296, 289, 289, 301, 301, 301, 81, 217, 217, 381,
	381, 378, 305, 305, 307, 307, 311, 311, 315, 315,
	312, 312, 8, 429, 429, 429, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 432, 433, 322, 323, 323, 323,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	3, 3, 5, 7, 10, 9, 1, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 6, 5, 2, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	10, 6, 6, 8, 7, 4, 7, 8, 8, 8,
	5, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 3, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 2, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 6, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 4, 5, 5, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 5,
	3, 5, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 3, 2, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 4,
	4, 4, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 5, 5, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 6,
	1, 1, 3, 4, 3, 4, 4, 4, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 1, 0, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 2, 2, 5, 6, 6, 6, 6,
	6, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 8, 4, 8, 8, 6, 5, 4, 4, 4,
	5, 7, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 6, 4, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 4, 4, 4, 6, 4, 6, 4,
	4, 6, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 4, 4, 6, 4, 6, 4, 8,
	6, 4, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 5, 9, 6,
	9, 8, 6, 8, 8, 8, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 5, 1, 1, 1, 2,
	2, 0, 4, 0, 2, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 1, 3, 3, 1, 1, 1, 0,
	1, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	3, 4, 2, 3, 4, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 3, 1, 6, 5,
	4, 1, 3, 3, 5, 0, 2, 5, 0, 5,
	1, 3, 1, 3, 1, 3, 1, 2, 3, 4,
	1, 1, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -430, -83, -435, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -68, -71,
	-69, -70, -73, -74, -75, -76, -77, -9, -11, -72,
	-27, -28, -78, -79, -80, -81, -82, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -113, -36, 35, -41,
	-42, -53, -43, -54, -44, 241, -55, 243, 242, 280,
	244, 397, 273, 83, 330, 331, 333, 334, 335, 336,
	-114, 710, 278, 279, 246, 39, 51, 36, 37, 40,
	250, 286, 287, 249, 145, -33, -37, 12, -432, 15,
	487, 240, 275, 274, 31, -34, 597, 95, -35, 63,
	-84, -431, 758, -263, -247, 26, 36, 32, -246, -242,
	-132, -247, 24, 22, 11, -83, -83, -83, 16, 17,
	-83, -366, -368, 95, 173, 95, -266, 95, -60, -59,
	-57, -56, -58, -61, 34, -50, -51, -390, -49, -46,
	245, 242, 290, 135, 136, 280, 281, 282, 244, 264,
	279, 283, 278, 299, -45, 90, 36, 597, 600, -373,
	241, 247, 248, 243, 488, 138, 137, 84, -370, 392,
	631, 728, -61, 730, 110, 113, 729, 50, 254, 731,
	732, 733, 638, 734, 263, 735, 736, 737, 738, 744,
	679, 745, 746, 747, 139, 11, -83, -315, -311, 100,
	-304, 594, 266, 629, 441, 630, 315, 90, 47, 42,
	533, 604, 388, 392, 631, 518, 728, 398, 330, 348,
	342, 523, 524, 525, 371, 363, 595, 632, 605, 318,
	267, 303, 722, 361, 149, 730, 322, 633, 281, 399,
	400, 634, 401, 110, 333, 438, 743, 321, 635, 741,
	113, 729, 338, 88, 517, 57, 725, 326, 50, 276,
	446, 447, 359, 249, 355, 731, 304, 636, 607, 297,
	138, 135, 750, 39, 351, 56, 33, 740, 137, 55,
	732, 164, 637, 733, 638, 403, 378, 716, 54, 404,
	282, 639, 93, 287, 599, 327, 724, 405, 538, 352,
	406, 314, 739, 246, 640, 325, 705, 697, 698, 407,
	408, 717, 383, 379, 384, 540, 641, 430, 522, 409,
	701, 702, 757, 58, 642, 643, 718, 136, 644, 87,
	734, 89, 346, 347, 645, 312, 265, 543, 544, 432,
	375, 500, 127, 507, 508, 120, 121, 503, 122, 509,
	123, 128, 510, 511, 512, 501, 124, 117, 502, 513,
	514, 376, 377, 125, 515, 119, 118, 504, 506, 126,
	516, 263, 38, 410, 596, 316, 64, 320, 291, 433,
	52, 381, 754, 51, 712, 545, 646, 715, 374, 370,
	497, 691, 59, 647, 648, 649, 650, 519, 735, 373,
	345, 369, 749, 4, 309, 492, 520, 736, 68, 248,
	386, 385, 387, 298, 429, 366, 651, 652, 653, 270,
	91, 654, 356, 25, 655, 656, 411, 305, 657, 62,
	658, 659, 436, 279, 660, 60, 737, 692, 45, 661,
	284, 751, 738, 662, 663, 664, 711, 665, 286, 666,
	413, 667, 699, 700, 412, 380, 382, 546, 293, 414,
	397, 693, 251, 598, 668, 328, 350, 283, 742, 669,
	271, 534, 535, 536, 537, 723, 542, 541, 285, 290,
	278, 437, 272, 670, 671, 672, 673, 674, 319, 690,
	675, 676, 334, 602, 744, 498, 49, 677, 678, 679,
	680, 681, 313, 308, 431, 440, 67, 92, 394, 682,
	683, 721, 344, 339, 43, 306, 99, 478, 480, 481,
	482, 483, 484, 479, 486, 684, 331, 61, 745, 746,
	747, 300, 748, 526, 527, 528, 529, 13, 580, 563,
	591, 564, 581, 565, 574, 566, 582, 590, 592, 547,
	555, 548, 556, 586, 569, 583, 575, 568, 567, 589,
	572, 576, 549, 557, 587, 573, 550, 558, 551, 559,
	552, 560, 585, 584, 577, 588, 553, 561, 579, 554,
	562, 578, 570, 571, 449, 755, 756, 521, 416, 694,
	139, 310, 311, 53, 367, 292, 685, 323, 686, 357,
	358, 494, 495, 372, 343, 368, 146, 708, 332, 341,
	706, 294, 417, 499, 280, 687, 439, 307, 389, 131,
	340, 395, 324, 603, 539, 299, 418, 720, 601, 530,
	531, 365, 362, 301, 532, 688, 390, 710, 419, 255,
	295, 296, 689, 707, 420, 421, 317, 422, 423, 424,
	425, 426, 428, 329, 427, 709, 703, 704, 302, 477,
	600, 337, 360, 396, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 496, 253, -83, 253, -196, -311, -134, 712,
	714, 192, -282, 400, -300, 402, 415, 410, 420, 408,
	-291, 411, 413, 293, -416, 430, 253, 417, 240, 403,
	412, 421, 422, 317, 428, 423, 329, 427, 302, 424,
	425, 426, -400, 192, 733, 748, 332, 340, 149, 364,
	407, 405, 431, 712, 100, -317, 100, 101, 102, -304,
	332, -320, 337, -305, -400, -304, 335, -83, -83, -322,
	-322, -134, -216, -151, 157, -165, -271, -168, 101, -156,
	-159, -210, -211, -212, -213, -166, -230, -269, 181, 182,
	189, 158, -226, -169, 29, 593, 489, 488, 192, 34,
	235, 77, 78, 491, 492, 160, 63, 15, 454, 455,
	-167, 444, 445, 456, 450, 451, 517, 519, 520, 521,
	518, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 522, 533, 494, 495, 129, 496, 117, 119, 118,
	127, 128, 497, 498, 499, 361, 545, 546, 540, 543,
	544, 542, 541, 376, 377, 500, 563, 564, 568, 567,
	565, 566, 569, 572, 573, 574, 575, 576, 577, 579,
	578, 570, 571, 548, 547, 549, 550, 551, 552, 553,
	554, 556, 555, 557, 558, 559, 560, 561, 562, 580,
	581, 582, 583, 584, 586, 585, 590, 589, 587, 588,
	592, 591, 501, 502, 120, 121, 122, 123, 124, 125,
	126, 503, 506, 504, 505, 507, 508, 509, 514, 515,
	510, 511, 512, 513, 516, 387, 385, 386, 382, 381,
	380, -93, -106, 620, 619, -107, 441, 446, 447, 449,
	-157, -158, -171, -172, -305, -311, 258, 443, 252, 187,
	487, -160, -154, -228, 116, 102, -31, -225, 442, 452,
	453, 457, 448, 458, 606, 608, 623, 624, 626, 611,
	616, 615, 618, 534, 535, 536, 537, 538, 539, 697,
	698, 699, 700, 701, 702, 703, 704, -400, -304, 100,
	-163, -161, -205, 103, 108, 111, 112, 114, -422, 276,
	357, 358, 130, -432, -221, -222, -162, 105, 106, 107,
	132, 133, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 726, 98, 104, 50, 416, 416,
	-196, -83, -83, -83, -83, -429, 729, 598, -240, -132,
	-242, -33, -31, -432, 12, -83, -31, -32, -30, -37,
	-83, -39, 625, -38, -311, -83, 109, -247, -263, 16,
	67, 176, 48, 56, -245, -246, -34, -31, -151, 23,
	41, 27, -136, 183, -151, -311, -136, -289, 257, -83,
	-83, -278, -325, 332, -280, 431, 712, 430, -270, -283,
	100, -269, -282, 429, 101, -367, 173, -353, -357, -305,
	268, -383, 264, -196, -376, -375, -305, -432, 28, -265,
	-305, -56, -57, -58, -282, 191, 732, -115, 285, 289,
	96, 96, -357, -356, -355, -404, 289, 268, -382, -374,
	260, 269, -363, 261, 262, -358, 254, 151, -404, -358,
	259, 269, 264, 268, 289, 289, 139, 289, 139, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 284, -364,
	165, -364, 601, 601, -370, -404, 264, 254, -404, -404,
	260, -301, -358, 256, 28, 256, 38, 38, -364, -364,
	-364, -282, 191, -364, -364, -364, -364, 297, 297, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, 253, -403, -141, 427,
	317, 443, 252, -142, 90, -59, 299, -40, -196, -299,
	254, 255, -403, 286, 310, -196, 236, 253, 715, -293,
	173, 19, -293, -290, 416, 414, 401, 406, -293, -293,
	-293, -293, 300, 399, -359, 254, 38, 265, 416, 300,
	399, 300, 301, 300, 301, 409, 419, 300, -316, 18,
	176, 443, 404, 408, 293, 253, 294, 255, 418, 301,
	-316, 98, -294, 173, 300, 416, 410, 296, -293, -293,
	-323, -432, -307, -305, -303, 245, 41, 156, 28, 30,
	159, 192, 142, 23, 160, 40, 247, 364, 264, 191,
	260, 488, 240, 81, 606, 444, 451, 442, 450, 454,
	490, 491, 443, 402, 34, 17, 608, 31, 274, 27,
	44, 185, 242, 163, 609, 277, 29, 275, 129, 133,
	611, 26, 84, 269, 18, 262, 46, 20, 612, 613,
	21, 74, 258, 257, 176, 254, 79, 696, 15, 235,
	32, 172, 75, 614, 151, 145, 615, 616, 617, 618,
	143, 77, 173, 24, 752, 452, 453, 36, 713, 593,
	288, 187, 82, 65, 714, 157, 448, 619, 620, 130,
	621, 134, 85, 719, 153, 22, 695, 80, 48, 622,
	289, 623, 259, 753, 624, 434, 625, 174, 243, 487,
	78, 175, 726, 626, 727, 252, 415, 12, 493, 35,
	273, 261, 73, 72, 141, 76, 458, 627, 253, 162,
	256, 144, 132, 11, 150, 37, 16, 83, 86, 455,
	456, 457, 63, 140, 597, 161, 19, 628, 435, 155,
	-400, 715, -323, -323, 300, 341, 35, 101, -426, -427,
	-428, 597, 434, 256, -305, -196, -89, 705, 244, -90,
	711, 41, 251, 146, 38, -139, 416, -127, 192, 733,
	716, 717, 718, 715, 413, 723, 721, 719, 300, 720,
	96, 153, 155, 156, 4, -151, 172, -206, -207, 171,
	165, 166, 167, 168, 169, 170, 177, 176, 157, 159,
	173, -256, 154, 178, 179, 180, 181, 182, 183, 184,
	186, 185, 187, 188, 174, 175, 191, 238, 239, -159,
	-159, -159, -159, -226, -232, -231, -432, -228, -400, -304,
	-311, -432, -432, -159, -288, -432, -156, -432, -432, -432,
	-432, -432, -235, -151, -432, -432, -436, -432, -436, -436,
	-436, -342, -432, -342, -342, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	236, -432, -432, -432, -432, -432, -342, -342, -342, -342,
	-342, -342, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, 98, 112, 108, 111,
	103, 114, 98, 98, 98, 98, -31, -32, -216, 63,
	-432, -322, -413, -414, -199, -196, -432, 317, -305, -305,
	286, 105, -245, -34, -31, -240, -246, -242, -31, -83,
	-125, -138, 69, 70, -137, -140, 27, 44, 74, 76,
	99, 72, 73, 71, 41, -433, 97, -433, -263, -433,
	-148, -299, -133, -142, 254, 262, 261, 150, -403, -149,
	153, 304, 96, -39, -266, 115, -219, -224, -222, 726,
	653, 683, 653, 683, 67, 49, 98, 98, 96, 25,
	-241, -243, -151, 18, -309, 4, -308, 28, -305, 98,
	236, 18, -197, 32, -196, -289, -289, 96, 100, 332,
	-279, -281, 432, 434, 165, -310, -305, 98, 34, 97,
	96, -196, -331, -334, -336, -335, -337, -332, -333, 361,
	362, 192, 365, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 378, 390, 35, 276, 357, 358, 359, 360,
	379, 380, 381, 382, 384, 385, 386, 387, 342, 363,
	595, 343, 344, 345, 346, 347, 348, 350, 351, 354,
	352, 353, 355, 356, -306, -305, 95, 97, 96, -341,
	95, -151, -29, 97, 96, -364, -364, -364, 284, 23,
	-49, -46, -390, 22, -45, -46, 245, 135, 136, 242,
	95, -353, 95, -362, -306, -305, 95, 151, 259, 150,
	-361, -358, -361, -362, -305, -228, -305, 151, 151, -305,
	-305, -275, -305, -275, -275, 41, -275, 41, -275, 41,
	105, -305, -275, 41, -275, 41, -275, 41, -275, 41,
	-275, 41, 34, 87, 88, 89, 34, 91, 92, 93,
	-228, -305, -305, -228, -353, -228, -196, -305, -282, 105,
	105, 105, -364, -364, 105, 98, 98, 98, -364, -364,
	105, 98, -313, -311, 98, 98, -405, 270, 314, 316,
	105, 105, 105, 105, 34, 98, -406, 34, 740, 739,
	741, 742, 743, 98, 105, 34, 105, 34, 105, -305,
	95, -196, -148, 240, 242, 245, 85, 98, 322, 320,
	321, 318, 323, 324, 325, 165, 50, 96, 256, 253,
	-305, -295, 258, -295, -305, -312, -311, -303, -196, 256,
	398, 98, -151, -360, 18, 176, -316, -316, -293, -196,
	-360, -316, -293, -196, -293, -293, -293, -293, -316, -316,
	-316, -293, -311, -311, -196, -196, -196, -196, -196, -196,
	-196, -323, -294, -293, 715, 98, -287, 18, 85, -323,
	-323, -302, 26, 26, 96, 338, 435, 436, -321, 335,
	-85, -305, 98, -10, -29, -18, -17, -19, 165, -10,
	96, 597, -189, -196, 715, 715, 715, 715, 715, 715,
	-151, -151, -151, -151, 621, -214, -424, 157, 132, 133,
	130, 131, -168, 42, 43, 41, -151, -215, -221, -226,
	115, 176, 159, 173, -256, -156, -159, -156, -156, -156,
	-156, -156, -156, 235, -156, 235, -156, -156, -156, -156,
	-156, -156, -324, -305, 98, 192, -164, -163, 114, -422,
	-164, 594, 96, -231, 236, -151, -151, -400, -123, 460,
	461, 462, 463, 465, 466, 467, 470, 471, 475, 476,
	459, 477, 464, 469, 472, 473, 474, 468, 360, -151,
	-217, -216, -217, -151, -151, -233, -234, 161, -228, -151,
	-433, -433, 105, 183, -131, 27, 44, -131, -131, -131,
	-131, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -131, -151, -124, 459, 477, 464, 469, 472, 473,
	474, 468, 360, 478, 479, 480, 481, 482, 483, 484,
	485, 486, -124, -123, -151, -151, -151, -151, -151, -151,
	-151, -151, -91, -151, 142, 143, 144, -216, -151, -156,
	-151, -151, -151, -433, -151, -151, -151, -217, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -399, -398, -397, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-216, -216, -216, -216, -216, -151, -433, -151, -170, -154,
	105, -271, 114, 101, -151, -151, -151, -151, -151, -151,
	-217, -307, -312, -303, -304, -216, -217, -217, -216, -216,
	-151, -151, -151, -151, -151, -151, -151, -151, -433, -151,
	-151, -151, -151, -151, -263, -433, -216, 96, -415, 434,
	435, 713, -314, 289, -313, 28, -217, 98, 18, -273,
	86, -305, -245, -245, 69, 70, 65, -135, -136, -140,
	-433, 293, -144, 306, 253, -141, -148, -305, 254, 254,
	254, -296, 258, 487, 165, -38, 28, 96, -432, 646,
	646, 68, 98, -343, -282, 388, 389, 192, -151, -151,
	96, -244, 30, 31, -196, -308, 183, -312, -196, -274,
	289, -196, -174, -176, -177, -178, -199, -227, -432, -179,
	-31, 617, 614, 18, -189, -190, -198, -311, -280, -325,
	-279, 96, 433, 435, 436, 85, 134, -151, -344, 191,
	-372, -371, -370, -353, -355, -356, -357, 97, -344, -349,
	395, 394, -341, -341, -341, -341, -341, -343, -343, -343,
	-343, 95, -341, 95, -341, -341, -341, -341, -346, 95,
	-346, -346, -347, -346, 95, -347, -348, 95, -348, -383,
	-151, -380, -379, -377, -378, 263, 110, 689, 645, 597,
	638, 679, 86, -375, -244, 105, -433, -86, 597, -305,
	100, 98, 100, 98, 100, 98, -116, -63, -1, 752,
	753, 754, 96, 23, -354, -353, -62, 314, -386, -387,
	289, -382, -376, -362, 151, -361, -362, -362, -305, 96,
	32, 139, 139, 139, 139, 597, 242, 35, -297, 637,
	157, 689, 645, -353, -62, 256, 256, -324, -324, -324,
	98, 98, -292, 748, -189, -144, 295, 295, 253, 308,
	253, 308, -196, 319, 322, 320, 321, 318, 323, 324,
	325, 326, 41, 41, 41, 41, 41, 41, 41, 307,
	309, 311, 297, -196, -196, -295, 85, -191, -196, 29,
	-311, 98, 98, -196, -293, -293, -196, -293, -293, -196,
	98, -311, -428, 339, -305, 375, 706, 708, -127, 434,
	96, 597, 26, -128, 26, -432, -424, 132, 133, -226,
	-226, -226, -215, -156, -159, -156, 156, 277, -156, -156,
	-432, -228, -433, -307, 28, 96, 86, -433, 181, 96,
	-433, -433, 96, 18, 96, -236, -234, 163, -151, -433,
	96, -433, -433, -216, -151, -151, -151, -151, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -216, -433,
	96, 96, 18, -328, 28, -433, -433, -433, -433, 96,
	-433, -433, -235, -433, 18, -433, 86, 96, 176, 96,
	-433, -433, -433, 96, 96, -433, -433, 96, -433, 96,
	-433, -433, -433, -433, -433, -433, 96, -433, 96, -433,
	-433, -433, 96, -433, 96, -433, -433, 96, -433, 96,
	-433, 96, -433, 96, -433, 96, -433, 96, -433, 96,
	-433, 96, -433, 96, -433, 96, -433, 96, -433, 96,
	-433, 96, -433, 96, -433, 96, -433, 96, -433, 96,
	-433, 96, -433, -433, -433, 96, -433, 96, -433, 96,
	-433, -433, 96, -433, 96, -433, 96, -433, 96, 96,
	-433, 96, 96, 96, -433, 96, 96, 96, 96, -433,
	-433, -433, -433, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, -433, -433, -433, -433, -433, -433, 96,
	-98, 622, -433, -433, 96, -433, 96, 96, 96, 96,
	96, -433, -432, 236, -433, -433, -433, -433, -433, 96,
	96, 96, 96, 96, 96, -433, -433, -433, 96, 96,
	-433, 96, -433, 96, -433, -414, 712, 435, -203, -202,
	-200, 83, 257, 84, -432, -313, -433, -164, -271, -272,
	-271, -209, -305, 105, 114, -247, -173, 96, -175, 18,
	-296, 255, 313, -296, -148, -144, -381, -378, -305, -305,
	-305, -311, 157, -150, 454, -146, 98, 100, -226, -224,
	-433, -343, -251, -257, -290, -305, 98, 192, -345, 192,
	-345, 388, 389, -243, 236, -204, 19, -208, 35, 63,
	-29, -432, -432, 35, 96, -192, -194, -193, -195, 75,
	79, 81, 76, 77, 78, 82, -319, 28, -31, -174,
	-31, -432, -196, -189, -434, 18, 86, -434, 96, 236,
	-281, -284, 437, 434, 440, -400, 98, -115, 96, -370,
	-357, -248, -145, 46, -350, 396, -343, 605, -343, -352,
	98, -352, 105, 105, 105, 97, -52, -47, -48, 36,
	90, -377, -364, 98, 45, -364, -364, -305, 97, -244,
	-87, 303, 712, -2, 751, 757, 151, 95, 401, 22,
	-265, 96, 97, -229, 315, 97, -117, -305, 97, 95,
	-362, -362, -305, -432, 253, 34, 34, 689, 645, 637,
	-62, -229, -228, -305, -344, 750, 749, 97, 255, -196,
	-196, -196, -196, -196, -196, 245, 242, 424, -423, 327,
	98, -423, 298, 256, -189, -196, 96, -88, 272, 267,
	-316, -316, 36, -196, 434, 724, 722, -151, 156, 277,
	-168, -159, -123, -123, -156, -326, 192, 361, 276, 359,
	355, 375, 366, 394, 357, 395, 352, 351, 350, -326,
	-324, -156, -216, -151, -151, -151, 164, -151, 162, -151,
	-99, -98, -433, -433, -433, -433, -433, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -240, -151, -151,
	-151, -433, 192, 361, -99, -151, 18, -151, -324, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -397, -151, -216, -151, -216, -151,
	-151, -151, -151, -151, -398, -398, -398, -398, -398, -216,
	-216, -216, -216, -151, -432, -305, -102, -101, -100, 672,
	257, -98, -170, -102, -170, 235, -151, 235, 235, 235,
	-151, -217, -307, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -200, -358, 295, -358, 295, -358, -275,
	96, -286, 26, 18, 63, 63, -173, -204, -136, -174,
	-311, -196, -143, 304, 312, -196, -144, 255, 85, -381,
	-381, -381, 29, 95, -147, 101, -254, 705, -260, 52,
	-258, -259, 53, -255, 54, 62, -345, -345, 183, -245,
	-151, -276, 85, -277, -285, -228, -220, -223, -221, -432,
	-264, -433, -305, -275, -277, -176, -177, -177, -176, -177,
	75, 75, 75, 80, 75, 80, 75, -193, -311, -433,
	-151, -314, 86, -174, -174, -198, -311, 183, 434, 438,
	439, -370, -421, 130, 157, 34, 85, 392, 110, -419,
	191, 634, 684, 689, 645, 638, 679, -420, 259, 150,
	151, 271, 28, 47, 97, 96, 97, 96, 97, 97,
	96, -298, -297, -48, -47, -364, -364, 105, -400, 98,
	98, 264, -118, 755, 105, 95, -3, 90, -151, 95,
	23, -353, -228, -388, -338, -389, -339, -340, -5, -6,
	-365, -121, 63, 110, -66, 50, 254, 735, 736, 139,
	-432, 748, -380, -265, -384, -386, -196, -155, -432, -167,
	-153, -152, -154, -160, 181, 182, 276, 357, 358, -229,
	-196, -402, 86, 295, 392, 295, 392, 98, -425, 328,
	98, -425, -196, -88, -52, -196, -293, -293, 36, -400,
	-433, -168, -159, -130, 176, 597, -329, 604, -341, -341,
	-341, -348, -341, 347, -341, 347, -341, -433, -433, -433,
	96, -433, 26, -433, 96, -151, 96, -99, -99, -99,
	-99, -99, -126, 493, 96, 96, -433, 95, 95, -433,
	-151, -433, -433, -433, 96, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, 96, -433,
	96, -433, 96, -433, 96, -433, 96, -433, 96, -433,
	96, -433, 96, -433, 96, -433, 96, -433, 96, -433,
	96, -433, 96, -433, 96, -433, 96, -433, 96, -433,
	-433, 96, -433, -433, -433, 96, -433, 96, -433, 96,
	-433, -433, -433, 96, -327, 690, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -97, -306, -98,
	654, 654, -433, -98, -237, 96, -156, -433, -156, -156,
	-156, -433, -433, -433, 96, -433, 96, 96, -433, 96,
	-433, 96, -433, -433, -433, -433, 96, -201, 26, -432,
	-201, -432, -201, -433, -271, -196, -204, -238, 20, -432,
	255, -196, -196, 85, 85, 85, 97, -251, 57, 367,
	-262, -261, 61, 53, -259, 23, 55, 23, 33, -276,
	96, 165, -318, 96, 28, -433, -433, 96, 63, 236,
	-433, -204, -187, -186, 85, 86, -188, 85, -186, 75,
	75, -266, 96, -274, -174, -204, -204, 236, 130, -432,
	-155, 16, 98, 98, -400, -418, 739, 740, 34, 741,
	105, -364, -364, 151, 151, -196, 95, -343, 98, -343,
	105, 105, 34, 91, 92, 93, 34, 87, 88, 89,
	305, -385, 95, 23, -151, 95, 165, 97, -265, -265,
	291, 176, -364, 733, 297, 297, -364, -364, -364, -120,
	-119, 755, 97, -433, 96, -351, 597, 600, -151, -161,
	-161, -266, -396, 597, -401, -305, -305, -305, -305, 105,
	107, -433, 595, 82, 598, -433, -343, -151, -151, -151,
	-151, -245, 98, -151, -151, 105, 105, -99, -433, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -216,
	-151, -433, -184, -183, -185, 716, 130, 34, -326, -433,
	-218, 289, -105, -104, -103, 18, -433, -151, -123, -123,
	-123, -123, -151, -151, -151, -151, -151, -151, -432, 75,
	22, 20, -268, -305, 259, -432, -268, -432, -314, -238,
	-239, 21, 23, -393, -391, -392, 176, 696, 695, -196,
	-196, -196, -196, -252, 59, -250, 58, -250, -261, 23,
	23, 98, 23, 98, 151, -285, -151, -223, -313, 63,
	-29, -305, -220, -305, -240, -151, 95, -151, -164, -204,
	-204, -151, -211, 517, 519, 520, 521, 518, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 522, 533,
	494, 495, 496, 117, 119, 118, 127, 128, 497, 498,
	499, 361, 545, 546, 540, 543, 544, 542, 541, 376,
	377, 500, 563, 564, 568, 567, 565, 566, 569, 572,
	573, 574, 575, 576, 577, 579, 578, 570, 571, 548,
	547, 549, 550, 551, 552, 553, 554, 556, 555, 557,
	558, 559, 560, 561, 562, 580, 581, 582, 583, 584,
	586, 585, 590, 589, 587, 588, 592, 591, 501, 502,
	120, 121, 122, 123, 124, 125, 126, 503, 506, 504,
	507, 508, 509, 514, 515, 510, 511, 512, 513, 516,
	387, 385, 386, 382, 381, 380, 441, 446, 447, 449,
	534, 535, 536, 537, 538, 539, 697, 698, 699, 700,
	701, 702, 703, 704, 98, 98, 95, -151, 97, 97,
	-384, -63, 97, -267, -265, 105, 97, 292, -221, -432,
	98, -364, -364, -364, 105, 105, -313, -433, 96, -305,
	-420, -386, 601, 601, -433, 28, -395, -394, -307, 95,
	86, 68, 596, 599, -433, -433, -433, 96, -433, -433,
	-433, 97, 97, -433, -433, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, 96, -433, -183, -185, -433,
	85, -164, -240, 23, -102, 314, 316, -102, -433, -433,
	-433, -433, -433, 96, -433, -433, 96, -433, 96, -433,
	-433, -268, -433, 23, 23, 96, -433, -268, -433, -268,
	-203, -239, -112, -111, -110, 628, -151, -216, -433, 96,
	-305, -253, 60, 85, 134, 98, 98, 98, 16, -432,
	-220, 236, -318, -245, -265, -181, 401, -240, -433, -265,
	97, 97, 757, 151, 97, -221, -129, -432, 288, -313,
	98, 98, -119, -122, -29, 96, 165, -265, -196, 68,
	-151, -216, -433, 85, 609, 716, -96, -95, -92, 727,
	753, -216, -98, -98, -151, -151, -151, -433, -305, 259,
	-433, -433, -112, 96, -109, -108, -305, -330, 597, -67,
	-7, -391, -331, 85, 134, -277, -265, -318, -305, 97,
	-433, -432, -245, 97, -249, 95, -3, 288, -338, -389,
	-339, -340, -5, -6, -365, -86, -394, -369, -311, -307,
	98, 105, 97, 597, -433, -433, -94, 159, 725, 687,
	-160, 235, -433, 96, -433, 96, -433, 96, -110, 96,
	28, 602, -431, -433, -314, -182, -180, -305, 651, -411,
	-410, 593, -421, -417, 130, 157, 110, -419, 684, 689,
	645, 140, 141, -151, 95, -433, 236, -402, 598, -94,
	726, 665, 640, 665, 640, -156, -151, -151, -151, -108,
	-432, -433, 96, 26, -331, -65, 662, -408, -409, 85,
	-412, 407, 661, 682, 130, 98, 105, 97, -265, -312,
	-396, 599, 156, -123, -433, 96, -433, 96, -433, -97,
	-180, 658, -344, -164, -409, 85, -408, 85, 17, 16,
	-4, 756, 97, -94, 665, 640, -151, -151, -433, -64,
	29, -181, -407, 272, 267, 270, 35, -407, 105, -4,
	-433, -433, 662, 266, 34, 130, -164, -184, -183, -183,
}

var yyDef = [...]int{
	899, -2, -2, 901, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 71, 73, 74, 899, 899, 899, 0, 899, 0,
	132, 0, 960, -2, -2, 899, 1668, 0, 899, 0,
	894, 0, -2, 814, 820, 0, 829, -2, 0, 0,
	899, 899, 2315, 2315, 894, 0, 0, 0, 0, 0,
	899, 899, 899, 899, 1673, 1512, 51, 899, 0, 89,
	90, 899, 849, 850, 851, 66, 0, 2313, 86, 899,
	900, 1, 3, 72, 76, 0, 0, 0, 59, 1521,
	0, 79, 0, 0, 903, 0, 0, 1651, 899, 899,
	0, 130, 131, 0, 0, 0, 0, 0, 135, -2,
	167, 168, 169, 0, 174, 619, 536, 588, 534, 573,
	-2, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 411, 411, 0, 0, -2,
	522, 522, 522, 1653, 0, 0, 0, 570, 473, 411,
	411, 411, 0, 411, 411, 411, 411, 0, 0, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 1539, 173, 1669, 1666,
	1667, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 0, 1645, 0, 732, 1003, 0, 895,
	896, 0, 803, 803, 0, 803, 803, 803, 803, 0,
	0, 0, 746, 0, 0, 0, 0, 800, 0, 762,
	763, 0, 800, 0, 769, 806, 0, 0, 776, 803,
	803, 779, 2316, 0, 2316, 2316, 0, 0, 1636, 0,
	797, 795, 809, 810, 43, 813, 816, 817, 818, 819,
	822, 0, 833, 836, 1662, 1663, 0, 838, 843, 862,
	863, 0, 46, 1163, 0, 1027, 0, 1038, -2, 1049,
	1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 0, 0,
	0, 0, 1079, 1080, 0, 0, 0, 0, 0, 1143,
	0, 0, 0, 0, 2035, 1483, 0, 0, 1445, 1445,
	1179, 1445, 1445, 1447, 1447, 1447, 1884, 2027, 2036, 2217,
	1845, 1851, 1852, 1853, 2163, 2164, 2165, 2166, 2259, 2260,
	2264, 1948, 1840, 2231, 2232, 0, 2312, 1987, 1995, 1996,
	1972, 1981, 2020, 2125, 2243, 1863, 2015, 2087, 1945, 1967,
	1968, 2106, 2107, 1991, 1992, 1971, 2169, 2171, 2187, 2188,
	2173, 2175, 2184, 2190, 2195, 2174, 2186, 2191, 2204, 2208,
	2211, 2212, 2213, 2181, 2179, 2192, 2196, 2198, 2200, 2206,
	2209, 2182, 2180, 2193, 2197, 2199, 2201, 2207, 2210, 2168,
	2172, 2176, 2185, 2203, 2183, 2202, 2177, 2189, 2194, 2205,
	2178, 2170, 1985, 1988, 1975, 1976, 1978, 1980, 1986, 1993,
	1999, 1977, 1998, 1997, 0, 1973, 1974, 1979, 1990, 1994,
	1982, 1983, 1984, 1989, 2000, 2042, 2041, 2040, 2086, 2011,
	2085, 0, 0, 0, 0, 0, 1834, 1890, 1891, 2214,
	1367, 1368, 1369, 1370, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 1496, 1497, 45, 1162, 1632, 1447, 1447,
	1447, 1447, 1447, 1447, 1101, 1102, 1103, 1104, 1105, 1131,
	1132, 1138, 1139, 2101, 2102, 2103, 2104, 1928, 2254, 1937,
	1938, 2082, 2083, 1950, 1951, 2286, 2287, -2, -2, -2,
	242, 243, 244, 245, 246, 247, 248, 249, 0, 1889,
	2229, 2230, 238, 0, 1630, 1631, 305, 302, 303, 304,
	1145, 1146, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 294, 295,
	296, 297, 298, 299, 0, 307, 308, 2315, 0, 872,
	0, 0, 0, 0, 0, 0, 1674, 1675, 1521, 0,
	1513, 1512, 64, 0, 899, -2, 0, 0, 0, 0,
	-2, 48, 0, 53, 960, 0, 902, 78, 77, 1569,
	1572, 0, 0, 0, 60, 1522, 68, 70, 1523, 0,
	904, 905, 0, 936, 940, 0, 0, 0, 1652, 1651,
	1651, 106, 0, 0, 107, 127, 128, 129, 0, 0,
	113, 114, 1638, 1639, 44, 0, 0, 185, 186, 0,
	1119, 438, 0, 181, 0, 431, 370, 0, 0, 0,
	964, 170, 171, 172, 411, 411, 411, 585, 0, 0,
	173, 173, 543, 544, 545, 0, 0, -2, 436, 0,
	523, 0, 0, 425, 425, 429, 427, 428, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	412, 0, 583, 584, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 1654, 1655, 0, 560, 561, 0, 0,
	0, 411, 411, 0, 0, 0, 0, 411, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 1559, 0,
	0, 162, 163, 1540, 0, -2, 0, 724, 0, 0,
	0, 1647, 1647, 0, 1646, 731, 0, 0, 0, 736,
	0, 0, 737, 0, 800, 800, 798, 799, 739, 740,
	741, 742, 803, 0, 0, 420, 421, 422, 800, 803,
	0, 803, 803, 803, 803, 800, 800, 800, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2316, 806,
	803, 0, 770, 0, 771, 772, 773, 774, 777, 778,
	780, 2317, 2318, 1664, 1665, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	2316, 2316, 784, 788, 792, 790, 1637, 815, 821, 823,
	824, 0, 0, 834, 837, 856, 50, 1936, 842, 50,
	844, 845, 846, 847, 848, 874, 875, 880, 0, 0,
	0, 0, 886, 887, 888, 0, 0, 891, 892, 893,
	0, 0, 0, 0, 0, 1025, 0, 0, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1050, 1051, 0, 0, 0, 1075,
	1076, 1077, 1078, 1081, 0, 1092, 0, 1094, 1492, -2,
	0, 0, 0, 1086, 1087, 0, 0, 0, 1657, 1657,
	0, 0, 0, 1484, 0, 0, 1177, 0, 1178, 1180,
	1181, 1182, 0, 1183, 1184, 909, 909, 909, 909, 909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 1657, 1657, 0, 0, 230, 231, 232, 233,
	234, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 250, 251, 252,
	253, 254, 309, 255, 256, 257, 1162, 0, 0, 899,
	0, 47, 864, 865, 0, 986, 1657, 0, 0, 915,
	0, 1672, 58, 67, 69, 1521, 62, 1521, 0, 919,
	0, 0, -2, -2, 920, 921, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 55, 2314, 56, 0, 75,
	1544, 0, 1539, 1559, 0, 0, 0, 0, 1649, 1560,
	0, 0, 0, 49, 0, 80, 81, 1620, 1624, 0,
	1570, 0, 1573, 0, 0, 0, 384, 1577, 0, 0,
	1514, 1515, 1518, 0, 937, 2033, 941, 0, 943, 944,
	0, 0, 104, 0, 1002, 0, 0, 0, 115, 0,
	117, 118, 0, 0, 0, 395, 1640, 1641, 1642, -2,
	418, 0, 395, 379, 317, 318, 319, 370, 321, 370,
	370, 370, 370, 384, 384, 384, 384, 352, 353, 354,
	355, 356, 0, 370, 0, 338, 370, 370, 370, 370,
	360, 361, 362, 363, 364, 365, 366, 367, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 372, 372, 372,
	372, 372, 376, 376, 0, 1120, 0, 399, 0, 1518,
	0, 0, 1548, 961, 0, 0, 0, 0, 586, 630,
	537, 574, 587, 0, 540, 541, -2, 0, 0, 522,
	0, 524, 0, 419, 0, -2, 0, 429, 0, 425,
	429, 426, 429, 417, 430, 564, 565, 566, 0, 568,
	569, 660, 972, 0, 0, 0, 0, 0, 666, 667,
	668, 0, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 524, 0, 571, 0, 0, 475,
	476, 477, 0, 0, 480, 481, 482, 483, 0, 0,
	486, 487, 488, 989, 990, 489, 490, 515, 516, 517,
	491, 492, 493, 494, 495, 496, 497, 509, 510, 511,
	512, 513, 514, 498, 499, 500, 501, 502, 503, 506,
	0, 155, 1544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 0, 918, 1004, 1670, 1671, 733, 0,
	0, 804, 805, 0, 423, 424, 803, 803, 743, 785,
	0, 803, 747, 786, 748, 750, 749, 751, 764, 765,
	803, 754, 801, 802, 755, 756, 757, 758, 759, 760,
	761, 781, 766, 767, 768, 807, 0, 811, 812, 782,
	783, 0, 793, 0, 0, 0, 827, 828, 0, 835,
	859, 857, 858, 860, 852, 853, 854, 855, 0, 861,
	0, 0, 877, 100, 882, 883, 884, 885, 897, 890,
	1164, 1022, 1023, 1024, 0, 1026, 1032, 0, 1147, 1149,
	1030, 1031, 1034, 0, 0, 0, 1028, 1039, 1159, 1160,
	1161, 0, 0, 0, 0, 0, 1043, 1047, 1052, 1053,
	1054, 1055, 1056, 0, 1057, 0, 1060, 1061, 1062, 1063,
	1064, 1065, 1071, 1460, 1461, 1462, 1090, 310, 311, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1163,
	0, 1658, 0, 0, 0, 1490, 1487, 0, 0, 0,
	1446, 1448, 0, 0, 0, 910, 911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 0, 0, 1463, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 1096, 1097, 1098, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1371,
	1372, 1373, 1374, 42, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 867, 868,
	870, 0, 1006, 0, 987, 0, 0, 873, 0, 914,
	0, 917, 61, 63, 923, 924, 0, 945, 934, 922,
	57, 1649, 0, 0, 1649, 1559, 1544, 1659, 0, 0,
	0, 0, 0, 136, 0, 52, 0, 0, 0, 1571,
	1574, 1575, 384, 1597, 0, 393, 393, 390, 1524, 1525,
	0, 1517, 1519, 1520, 82, 942, 938, 0, 1020, 0,
	0, 1001, 0, 948, 950, 951, 952, 984, 0, 955,
	956, 0, 0, 0, 0, 0, 102, 1003, 108, 0,
	116, 0, 0, 121, 122, 109, 110, 111, 112, 0,
	619, -2, 470, 187, 189, 190, 191, 182, -2, 382,
	380, 381, 320, 384, 384, 346, 347, 348, 349, 350,
	351, 0, 358, 0, 339, 340, 341, 342, 331, 0,
	332, 333, 334, 374, 0, 335, 336, 0, 337, 437,
	0, 1526, 400, 401, 403, 411, 0, 406, 407, 0,
	411, 411, 0, 432, 433, 0, 1518, 134, 1550, 965,
	175, 176, 177, 178, 179, 180, 655, 0, 0, 631,
	653, 654, 173, 0, 0, 183, 526, 525, 0, 687,
	0, 435, 0, 0, 429, 429, 414, 415, 567, 0,
	0, 662, 663, 664, 665, 0, 0, 0, 553, 464,
	0, 554, 555, 524, 526, 0, 0, 395, 478, 479,
	484, 485, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 605, 608, 610, 528, 614,
	616, 0, 604, 607, 609, 611, 528, 615, 617, 1541,
	1542, 1543, 0, 0, 725, 0, 0, 461, 98, 1648,
	730, 734, 735, 800, 753, 787, 800, 745, 752, 775,
	789, 791, 825, 826, 831, 839, 840, 841, 881, 0,
	0, 0, 0, 889, 0, 0, 1033, 1148, 1150, 1035,
	1036, 1037, 1040, 0, 1044, 1048, 0, 0, 0, 0,
	0, 1095, 1093, 1494, 0, 0, 0, 1144, 0, 0,
	1167, 1168, 0, 0, 0, 0, 1488, 0, 0, 1175,
	0, 1449, 1125, 0, 0, 0, 0, 0, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1512, 1202,
	0, 0, 0, 0, 0, 1207, 1208, 1209, 1125, 0,
	1212, 1213, 0, 1215, 0, 1216, 0, 0, 0, 0,
	1223, 1224, 1226, 0, 0, 1229, 1230, 0, 1232, 0,
	1234, 1235, 1236, 1237, 1238, 1239, 0, 1241, 0, 1243,
	1244, 1245, 0, 1247, 0, 1249, 1250, 0, 1252, 0,
	1254, 0, 1257, 0, 1260, 0, 1263, 0, 1266, 0,
	1269, 0, 1272, 0, 1275, 0, 1278, 0, 1281, 0,
	1284, 0, 1287, 0, 1290, 0, 1293, 0, 1296, 0,
	1299, 0, 1302, 1303, 1304, 0, 1306, 0, 1308, 0,
	1311, 1312, 0, 1314, 0, 1317, 0, 1320, 0, 0,
	1321, 0, 0, 0, 1325, 0, 0, 0, 0, 1334,
	1335, 1336, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 1349, 1350, 1351, 1352, 1353, 0,
	1355, 0, 1126, 0, 0, 1126, 0, 0, 0, 0,
	0, 1165, 1657, 0, 1450, 1451, 1452, 1453, 1454, 0,
	0, 0, 0, 0, 0, 1394, 1395, 1397, 0, 0,
	1400, 0, 1402, 0, 1629, 866, 869, 871, 958, 1007,
	1008, 0, 0, 0, 0, 988, 1656, 912, 913, 916,
	966, 0, 1498, 0, 0, 945, 1020, 0, 946, 0,
	0, 0, 0, 0, 1544, 0, 0, 1660, 1659, 1659,
	1659, 160, 0, 1561, 1562, 1567, 1565, 1566, 54, 1621,
	1625, 1579, 1578, 1591, 1604, 393, 393, 387, 388, 394,
	389, 391, 392, 1516, 0, 1521, 0, 1618, 0, 899,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	0, 0, 994, 0, 0, 0, 0, 985, 956, 0,
	957, 0, -2, 0, 0, 96, 97, 0, 0, 0,
	119, 120, 0, 0, 126, 396, 397, 164, 173, 472,
	188, 445, 0, 0, 316, 383, 343, 344, 345, 0,
	368, 0, 0, 0, 0, 466, 133, 1530, 1529, 411,
	411, 402, 0, 405, 0, 0, 0, 1661, 371, 434,
	0, 1551, 1552, 625, 0, 0, 632, 0, 0, 0,
	535, 0, 546, 547, 0, 659, -2, 721, 399, 0,
	413, 416, 973, 0, 0, 548, 0, 551, 552, 465,
	526, 557, 558, 572, 559, 507, 508, 505, 0, 137,
	593, 595, 599, 594, 598, 0, 0, 0, 530, 0,
	618, 530, 591, 0, 461, 1526, 0, 729, 462, 463,
	803, 803, 876, 101, 0, 879, 0, 0, 0, 0,
	1041, 1045, 1058, 1059, 1455, 1481, 370, 370, 1468, 370,
	376, 1471, 370, 1473, 370, 1476, 370, 1479, 1480, 0,
	0, 1088, 0, 0, 0, 0, 1174, 1491, 0, 0,
	1185, 1124, 1125, 1125, 1125, 1125, 1125, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1485, 0, 0,
	0, 1206, 0, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 149, 0, 0, 0, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 1123, 0, 1127, 1128, 0,
	0, 1357, 0, 0, 1375, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1009, 1016, 0, 1016, 0, 1016, 0,
	0, 0, 1643, 1644, 1499, 1500, 1020, 1501, 935, 947,
	0, 152, 1545, 1546, 1547, 151, 0, 0, 0, 0,
	0, 0, 1650, 0, 1564, 1568, 1597, 0, 1590, 0,
	-2, 1599, 0, 0, 0, 1605, 385, 386, 939, 83,
	1021, 87, 0, 1618, 1633, 0, 1615, 1622, 1626, 0,
	0, 0, 1611, 0, 1020, 949, 980, 982, 0, 977,
	992, 993, 995, 0, 997, 0, 999, 1000, 960, 954,
	0, 104, 0, 1020, 1020, 103, 0, 1005, 123, 124,
	125, 471, 192, 197, 0, 0, 0, 202, 0, 204,
	0, 0, 0, 209, 210, 411, 411, 446, 0, 313,
	315, 0, 0, 195, 384, 0, 384, 0, 375, 377,
	0, 447, 467, 1527, 1528, 0, 0, 404, 408, 409,
	410, 0, 628, 0, 656, 0, 0, 0, 0, 0,
	0, 184, 527, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 0, 411, 0, 0, 0, 411, 411, 411,
	0, 713, 398, 0, 0, 684, 681, 549, 0, 228,
	229, 236, 237, 239, 0, 0, 0, 0, 0, 556,
	960, 140, 0, 0, 0, 0, 601, 606, 612, 0,
	529, 613, 726, 727, 728, 99, 738, 744, 878, 898,
	1029, 1042, 1046, 0, 0, 0, 0, 1482, 1466, 384,
	1469, 1470, 1472, 1474, 1475, 1477, 1478, 1084, 1085, 1089,
	0, 1171, 0, 1173, 0, 1489, 0, 1186, 1187, 1188,
	1189, 1190, 1521, 0, 0, 0, 1205, 0, 0, 1125,
	0, 1218, 1217, 1219, 0, 1221, 1222, 1227, 1228, 1231,
	1233, 1240, 1242, 1246, 1248, 1251, 1253, 1255, 0, 1258,
	0, 1261, 0, 1264, 0, 1267, 0, 1270, 0, 1273,
	0, 1276, 0, 1279, 0, 1282, 0, 1285, 0, 1288,
	0, 1291, 0, 1294, 0, 1297, 0, 1300, 0, 1305,
	1307, 0, 1310, 1313, 1315, 0, 1318, 0, 1322, 0,
	1324, 1326, 1327, 0, 0, 0, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1354, 0, 1117, 1356,
	1129, 1130, 1135, 1359, 0, 0, 0, 1362, 0, 0,
	0, 1366, 1166, 1377, 0, 1382, 0, 0, 1388, 0,
	1392, 0, 1398, 1399, 1401, 1403, 0, 0, 0, 0,
	0, 0, 0, 986, 967, 65, 1501, 1505, 0, 0,
	0, 154, 156, 0, 0, 0, 1563, 1584, 1582, 1582,
	1592, 1593, 0, 0, 1600, 0, 0, 0, 0, 88,
	0, 0, 1606, 0, 0, 1627, 0, 0, 0, 0,
	105, 1512, 974, 981, 0, 0, 975, 0, 976, 996,
	998, 953, 0, 1020, 1020, 94, 95, 0, 198, 0,
	200, 0, 203, 205, 206, 207, 213, 214, 215, 216,
	208, 0, 0, 312, 314, 0, 0, 357, 369, 359,
	0, 0, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1549, 620, 0, 630, 0, 962, 0, 623, 0, 538,
	0, 0, 0, 411, 411, 411, 0, 0, 0, 0,
	698, 0, 0, 661, 0, 669, 0, 0, 0, 240,
	241, 0, 592, 0, 138, 139, 0, 0, 597, 531,
	532, 1082, 0, 0, 0, 1083, 1467, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 1211, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 0, 0, 650, 651, 0, 1406, 1122,
	1512, 0, 1126, 1136, 1137, 0, 1126, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 968, 969, 0, 0, 0, 1006, 1505,
	1510, 0, 0, 0, 1553, 0, 1556, 1557, 1558, 153,
	157, 158, 159, 1587, 0, 1580, 1583, 1581, 1594, 0,
	0, 1601, 0, 1603, 0, 1634, 1635, 1623, 1616, 899,
	1610, 1613, 1615, 1612, 1521, 978, 0, 983, 0, 1512,
	93, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 212, 0, 0, 373, 378,
	0, 0, 621, 0, 963, 633, 624, 0, 711, 0,
	715, 0, 0, 0, 718, 719, 720, 697, 0, 701,
	439, 685, 682, 683, 550, 0, 141, 142, 0, 0,
	0, 1456, 0, 1459, 1169, 1172, 1170, 0, 1201, 1203,
	1204, 1464, 1465, 1220, 1256, 1259, 1262, 1265, 1268, 1271,
	1274, 1277, 1280, 1283, 1286, 1289, 1292, 1295, 1298, 1301,
	1309, 1316, 1319, 1323, 1328, 0, 1331, 0, 0, 1332,
	0, 652, 1113, 0, 0, 1133, 1134, 0, 1361, 1363,
	1364, 1365, 1378, 0, 1383, 1384, 0, 1389, 0, 1393,
	1404, 0, 1011, 1018, 1019, 0, 1014, 0, 1015, 0,
	959, 1510, 85, 1511, 1508, 0, 1506, 1503, -2, 0,
	0, 1576, 0, 1585, 1586, 1595, 1596, 1602, 0, 0,
	1615, 0, 1609, 91, 0, 0, 0, 1521, 199, 0,
	219, 629, 0, 632, 622, 709, 710, 0, 722, 714,
	716, 717, 699, -2, 1548, 0, 0, 0, 600, 1457,
	0, 0, 1333, 0, 648, 649, 1121, 1114, 0, 1099,
	1100, 1118, 1358, 1360, 0, 0, 0, 1010, 970, 971,
	1012, 1013, 84, 0, 1507, 1141, 0, 1502, 0, 150,
	2, 1554, 1555, 1588, 1589, 1619, 0, 1608, 1614, 979,
	986, 0, 92, 452, 445, 0, 0, 0, 702, 703,
	704, 705, 706, 707, 708, 589, 143, 144, 0, 519,
	520, 521, 137, 0, 1176, 1329, 1115, 0, 0, 0,
	0, 0, 1379, 0, 1385, 0, 1390, 0, 1509, 0,
	0, 1504, 41, 1617, 634, 0, 636, 0, -2, 440,
	453, 0, 193, 220, 221, 0, 0, 224, 0, 226,
	227, 217, 218, 0, 0, 723, 0, 140, 0, 0,
	1106, 1107, 1108, 1109, 1111, 0, 0, 0, 0, 1142,
	1119, 635, 0, 0, 395, 0, 645, 441, 442, 0,
	448, 449, 450, 451, 222, 223, 225, 657, 0, 518,
	596, 1458, 0, 0, 1380, 0, 1386, 0, 1391, 0,
	637, 638, 646, 0, 443, 0, 444, 0, 0, 0,
	626, 0, 657, 1116, 1110, 1112, 0, 0, 1140, 0,
	647, 643, 454, 456, 457, 0, 0, 455, 658, 627,
	1381, 1387, 0, 458, 459, 460, 639, 640, 641, 642,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 758,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:659
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:664
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:703
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:709
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:715
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:727
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:731
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:737
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:743
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:749
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:753
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:762
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:772
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:778
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:784
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:788
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:792
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:815
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:821
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:826
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:832
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:839
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:845
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:856
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:866
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:870
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:874
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:878
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:884
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:888
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:893
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:897
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:903
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:907
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:912
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:918
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:924
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:931
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:935
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:941
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:955
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:959
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:963
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:993
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:997
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1021
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1031
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1041
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1045
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1051
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1064
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1070
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1076
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1086
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1104
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1108
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1112
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1118
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1122
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1128
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1138
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1142
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1146
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.str = RepeatableReadStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = ReadCommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.str = SerializableStr
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1170
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1174
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1178
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1184
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1190
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1197
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1201
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1210
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1217
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1225
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1240
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1245
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1250
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1256
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1276
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1282
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1298
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1305
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1321
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1326
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1331
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1339
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1346
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1351
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1356
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1361
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1368
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1375
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1386
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1397
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1403
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1407
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1411
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1429
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1439
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1443
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1449
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1459
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1463
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1469
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1473
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1479
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1489
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1494
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1503
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1527
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1536
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = ""
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1558
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1562
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1567
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1577
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1603
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1621
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1626
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1631
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1635
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1641
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1645
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1649
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1653
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1659
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1663
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1668
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1672
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1677
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1682
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1687
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1692
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1697
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1702
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1707
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1776
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1784
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1788
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1796
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1800
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1804
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1808
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1821
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1825
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Armscii8Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = ASCIIStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Big5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = UBinaryStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Cp1250Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Cp1251Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Cp1256Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Cp1257Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Cp850Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Cp852Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Cp866Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Cp932Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Dec8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = EucjpmsStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = EuckrStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Gb18030Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Gb2312Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = GbkStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Geostd8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = GreekStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = HebrewStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = Hp8Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = Keybcs2Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = Koi8rStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = Koi8uStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = Latin1Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = Latin2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = Latin5Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = Latin7Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = MacceStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.str = MacromanStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = SjisStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = Swe7Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.str = Tis620Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.str = Ucs2Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.str = UjisStr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.str = Utf16Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.str = Utf16leStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.str = Utf32Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.str = Utf8mb3Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.str = Utf8mb4Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.str = Utf8mb3Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2009
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2013
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2017
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2023
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2027
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2033
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2037
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2041
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2047
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2051
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2057
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2061
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2065
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2069
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2313
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2322
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2327
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2331
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2361
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2382
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2386
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2422
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2456
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2465
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2471
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2481
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2485
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2490
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2494
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2498
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2502
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2506
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2510
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2526
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2530
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2534
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2538
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2542
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = yyDollar[2].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.str = yyDollar[1].str
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2609
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2619
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2623
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2629
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2633
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2639
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2643
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2649
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2655
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2659
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2663
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2667
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2671
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2680
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2686
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2692
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2698
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2702
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2706
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2711
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2715
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2721
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2727
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2733
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2737
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2741
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2745
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2749
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = ""
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2772
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2781
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2790
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2796
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2810
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2814
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2876
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2880
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2884
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2888
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2892
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2896
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2900
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2904
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2908
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2912
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2916
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2920
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2924
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2928
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2932
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2936
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2940
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3008
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3026
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3030
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3039
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3043
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3047
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3051
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3055
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3061
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3175
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3179
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3183
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3187
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3191
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3195
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3201
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3211
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3215
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3219
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3223
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3227
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3231
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3235
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3239
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3243
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3247
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3493
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3506
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3515
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3523
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3532
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3539
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3551
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3560
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3575
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3589
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3599
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3605
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3611
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3621
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3625
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3631
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3637
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3643
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3649
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3673
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3679
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3685
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3689
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3693
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3699
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3703
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3708
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3712
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3717
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3721
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3727
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3731
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3735
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3739
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3743
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3747
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3751
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3755
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3759
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3763
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3767
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3771
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3775
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3779
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3783
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3787
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3791
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3795
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3799
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3803
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3807
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3811
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3816
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3820
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3824
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3830
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3845
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3849
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3854
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3859
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3864
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3869
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3874
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3879
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3884
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3889
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3895
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3901
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3911
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3916
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3920
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3925
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3930
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3935
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3940
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3945
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3950
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3957
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3964
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3971
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3989
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3995
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4001
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4007
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4013
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4019
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4031
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4053
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4057
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4291
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4295
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4303
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = "extended "
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4394
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4398
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4408
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4472
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4476
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4491
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4501
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4505
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4509
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4516
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4526
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4531
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4536
		{
			yyVAL.empty = struct{}{}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.empty = struct{}{}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4548
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4553
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4557
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4561
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4565
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4569
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4574
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4578
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4582
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4586
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4590
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4594
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = yyDollar[1].str
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = yyDollar[1].str
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4618
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4622
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4626
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4645
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4649
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4661
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4665
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4677
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4687
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4693
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4697
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4701
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4705
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4711
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4717
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4739
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4808
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4812
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4816
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4830
		{
			setAllowComments(yylex, true)
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4834
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4840
		{
			yyVAL.strs = nil
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4844
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4850
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4854
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4858
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = SQLCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4876
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4880
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4884
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4890
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4894
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4904
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4913
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4919
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4923
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4928
		{
			yyVAL.strs = nil
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.str = SQLCacheStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.str = DistinctStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.str = DistinctStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.str = HighPriorityStr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.str = StraightJoinHint
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.str = SQLBigResultStr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4994
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4998
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5006
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5010
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5014
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5018
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5023
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5031
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5043
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5047
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5053
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5059
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5063
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5073
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5077
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5081
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5085
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5091
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5095
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5101
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5105
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5114
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5123
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5129
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5133
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5139
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5149
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5153
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5161
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5167
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5184
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5188
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5192
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5196
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5204
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5214
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5219
		{
			yyVAL.empty = struct{}{}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.empty = struct{}{}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5224
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5232
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5245
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5249
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5253
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5259
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5265
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5269
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5273
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5277
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5283
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5287
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5297
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5326
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5332
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5336
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5342
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5346
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5350
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5354
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5358
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5362
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5367
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5371
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5375
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5379
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5691
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5695
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5701
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5711
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5715
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5719
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5725
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5729
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5736
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5740
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5744
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5748
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5752
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5758
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5762
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5766
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5770
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5774
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5778
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5782
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5791
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5797
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5801
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5810
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5815
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5825
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5831
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5835
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5841
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5857
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5863
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5867
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5873
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5877
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5883
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5887
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5899
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5905
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5909
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5915
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5921
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5925
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5941
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5945
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5952
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5956
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5960
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5964
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5970
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5974
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5980
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5984
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5988
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5992
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5996
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6000
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6006
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6010
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6014
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6021
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6027
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6766
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6770
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6957
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6964
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6968
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6974
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6978
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6982
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6986
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7004
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7008
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7016
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7025
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7031
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7035
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7039
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7043
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7047
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7051
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7055
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7059
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7063
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7067
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7071
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7075
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7079
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7083
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7087
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7091
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7095
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7099
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7103
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7107
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7113
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7117
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7121
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7125
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7129
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7133
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7137
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7141
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7145
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7149
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7153
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7157
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7161
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7165
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7169
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7173
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7177
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7181
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7191
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7195
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7199
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7209
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7213
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7217
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7221
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7225
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7231
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7235
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7239
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7243
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7247
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7253
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7257
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7271
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7275
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7281
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7285
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7289
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7293
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7297
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7303
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7307
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7311
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7315
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7319
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7323
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7327
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7331
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7335
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7339
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7363
		{
			yyVAL.str = string("")
		}
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7367
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7373
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7377
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7383
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7392
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7398
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7402
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7406
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7410
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7416
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7420
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7426
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7435
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7439
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7448
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7467
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7473
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7479
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7483
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7492
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7501
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7507
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7513
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7517
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7523
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7528
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7532
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7536
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7545
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7551
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7555
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7559
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7568
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7572
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7576
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7580
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7587
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7591
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7595
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7599
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7605
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7609
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7613
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7617
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = ""
		}
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7661
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7665
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = "cascaded"
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7684
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7688
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7694
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7700
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7704
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7708
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7720
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7726
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7732
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7738
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7747
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7751
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7756
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7760
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7766
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7770
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7774
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7778
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7782
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7786
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7790
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7796
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7800
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7804
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7809
		{
			yyVAL.str = ""
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7813
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7817
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7822
		{
			yyVAL.str = ""
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7826
		{
			yyVAL.str = " header"
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7831
		{
			yyVAL.str = ""
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7835
		{
			yyVAL.str = " manifest on"
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7839
		{
			yyVAL.str = " manifest off"
		}
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7844
		{
			yyVAL.str = ""
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7848
		{
			yyVAL.str = " overwrite on"
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7852
		{
			yyVAL.str = " overwrite off"
		}
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7858
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7863
		{
			yyVAL.str = ""
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7867
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7873
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7877
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7883
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7887
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7892
		{
			yyVAL.str = ""
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7896
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7902
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7906
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7912
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7916
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7920
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7925
		{
			yyVAL.str = ""
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7929
		{
			yyVAL.str = " optionally"
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7942
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7946
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7950
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7954
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7958
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7964
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7968
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7972
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7976
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7985
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7989
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8004
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8008
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8014
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8018
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8024
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8028
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8034
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8038
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8044
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8050
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8060
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8070
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8074
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8080
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8087
		{
			yyVAL.str = "charset"
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8097
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8101
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8105
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8119
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8124
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8126
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8134
		{
			yyVAL.empty = struct{}{}
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8136
		{
			yyVAL.empty = struct{}{}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8138
		{
			yyVAL.empty = struct{}{}
		}
	case 1656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8142
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8151
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8158
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8162
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8168
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8172
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8179
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8185
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8189
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8195
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8199
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8206
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8212
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8218
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8222
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8226
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8892
		{
		}
	case 2314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8897
		{
		}
	case 2315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8901
		{
			skipToEnd(yylex)
		}
	case 2316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8906
		{
			skipToEnd(yylex)
		}
	case 2317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8910
		{
			skipToEnd(yylex)
		}
	case 2318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8914
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
