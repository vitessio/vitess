// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const MANUAL = 58016
const PARALLEL = 58017
const QUALIFY = 58018
const TABLESAMPLE = 58019
const FORMAT_BYTES = 58020
const FORMAT_PICO_TIME = 58021
const PS_CURRENT_THREAD_ID = 58022
const PS_THREAD_ID = 58023
const GTID_SUBSET = 58024
const GTID_SUBTRACT = 58025
const WAIT_FOR_EXECUTED_GTID_SET = 58026
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58027
const FORMAT = 58028
const TREE = 58029
const VITESS = 58030
const TRADITIONAL = 58031
const VTEXPLAIN = 58032
const VEXPLAIN = 58033
const PLAN = 58034
const LOCAL = 58035
const LOW_PRIORITY = 58036
const NO_WRITE_TO_BINLOG = 58037
const LOGS = 58038
const ERROR = 58039
const GENERAL = 58040
const HOSTS = 58041
const OPTIMIZER_COSTS = 58042
const USER_RESOURCES = 58043
const SLOW = 58044
const CHANNEL = 58045
const RELAY = 58046
const EXPORT = 58047
const CURRENT = 58048
const ROW = 58049
const ROWS = 58050
const AVG_ROW_LENGTH = 58051
const CONNECTION = 58052
const CHECKSUM = 58053
const DELAY_KEY_WRITE = 58054
const ENCRYPTION = 58055
const ENGINE = 58056
const INSERT_METHOD = 58057
const MAX_ROWS = 58058
const MIN_ROWS = 58059
const PACK_KEYS = 58060
const PASSWORD = 58061
const FIXED = 58062
const DYNAMIC = 58063
const COMPRESSED = 58064
const REDUNDANT = 58065
const COMPACT = 58066
const ROW_FORMAT = 58067
const STATS_AUTO_RECALC = 58068
const STATS_PERSISTENT = 58069
const STATS_SAMPLE_PAGES = 58070
const STORAGE = 58071
const MEMORY = 58072
const DISK = 58073
const PARTITIONS = 58074
const LINEAR = 58075
const RANGE = 58076
const LIST = 58077
const SUBPARTITION = 58078
const SUBPARTITIONS = 58079
const HASH = 58080

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 160,
	756, 160,
	-2, 168,
	-1, 53,
	149, 168,
	191, 168,
	364, 168,
	-2, 528,
	-1, 61,
	38, 789,
	254, 789,
	265, 789,
	300, 803,
	301, 803,
	-2, 791,
	-1, 66,
	256, 827,
	-2, 825,
	-1, 124,
	253, 1632,
	-2, 134,
	-1, 126,
	1, 161,
	756, 161,
	-2, 168,
	-1, 137,
	150, 413,
	259, 413,
	-2, 517,
	-1, 156,
	149, 168,
	191, 168,
	364, 168,
	-2, 537,
	-1, 755,
	177, 41,
	-2, 43,
	-1, 964,
	95, 1649,
	-2, 1487,
	-1, 965,
	95, 1650,
	236, 1654,
	-2, 1488,
	-1, 966,
	236, 1653,
	-2, 42,
	-1, 1052,
	65, 901,
	-2, 914,
	-1, 1141,
	264, 1114,
	269, 1114,
	-2, 424,
	-1, 1226,
	1, 585,
	756, 585,
	-2, 168,
	-1, 1537,
	236, 1654,
	-2, 1488,
	-1, 1750,
	65, 902,
	-2, 918,
	-1, 1751,
	65, 903,
	-2, 919,
	-1, 1816,
	149, 168,
	191, 168,
	364, 168,
	-2, 463,
	-1, 1899,
	150, 413,
	259, 413,
	-2, 517,
	-1, 1908,
	264, 1115,
	269, 1115,
	-2, 425,
	-1, 2357,
	236, 1658,
	-2, 1652,
	-1, 2358,
	236, 1654,
	-2, 1650,
	-1, 2463,
	149, 168,
	191, 168,
	364, 168,
	-2, 464,
	-1, 2470,
	28, 189,
	-2, 191,
	-1, 2936,
	86, 99,
	96, 99,
	-2, 981,
	-1, 3004,
	731, 707,
	-2, 681,
	-1, 3229,
	55, 1591,
	-2, 1585,
	-1, 4067,
	731, 707,
	-2, 695,
	-1, 4159,
	98, 639,
	104, 639,
	114, 639,
	193, 639,
	194, 639,
	195, 639,
	196, 639,
	197, 639,
	198, 639,
	199, 639,
	200, 639,
	201, 639,
	202, 639,
	203, 639,
	204, 639,
	205, 639,
	206, 639,
	207, 639,
	208, 639,
	209, 639,
	210, 639,
	211, 639,
	212, 639,
	213, 639,
	214, 639,
	215, 639,
	216, 639,
	217, 639,
	218, 639,
	219, 639,
	220, 639,
	221, 639,
	222, 639,
	223, 639,
	224, 639,
	225, 639,
	226, 639,
	227, 639,
	228, 639,
	229, 639,
	230, 639,
	231, 639,
	232, 639,
	233, 639,
	234, 639,
	-2, 2031,
}

const yyPrivate = 57344

const yyLast = 56210

var yyAct = [...]int{
	980, 3717, 2162, 87, 4236, 3718, 3719, 4048, 4249, 3380,
	4126, 4202, 975, 2150, 1294, 4138, 967, 4203, 2460, 2029,
	3516, 4157, 3281, 3288, 2386, 3953, 4030, 1292, 3329, 3242,
	3654, 3338, 3343, 3340, 3339, 1819, 3337, 3342, 3341, 3667,
	4028, 3095, 3358, 3357, 3180, 3296, 2535, 2388, 2088, 759,
	3246, 5, 3243, 3562, 3069, 3760, 3556, 3094, 3230, 787,
	968, 2415, 2970, 3360, 928, 3051, 2431, 1770, 929, 2896,
	3546, 4099, 753, 2498, 3387, 754, 3001, 2522, 2972, 2971,
	2434, 2503, 3584, 2566, 1173, 165, 1050, 933, 87, 1876,
	42, 1103, 2448, 2921, 2902, 1071, 43, 1047, 2435, 1924,
	2886, 1078, 3240, 2870, 2436, 41, 2342, 2310, 2184, 1050,
	3042, 2146, 2544, 151, 2521, 1906, 2423, 2096, 2505, 2963,
	1131, 2583, 1136, 1808, 1113, 2938, 982, 1788, 2438, 1774,
	1731, 102, 1550, 2190, 2121, 2110, 1475, 2309, 106, 1458,
	107, 2025, 1913, 1110, 1107, 2005, 769, 3245, 1142, 1885,
	2494, 1139, 1111, 2909, 1137, 2495, 1138, 1807, 1088, 1149,
	2416, 764, 1090, 1793, 1533, 1509, 2087, 1282, 3755, 1059,
	1753, 2868, 2217, 1049, 109, 1053, 1070, 2037, 101, 1056,
	3747, 169, 85, 3517, 1055, 129, 127, 128, 134, 1898,
	2198, 135, 93, 1054, 1222, 1045, 1073, 1083, 3573, 1057,
	757, 100, 1554, 84, 4237, 746, 3655, 3326, 1290, 4083,
	1268, 2537, 2538, 2539, 2537, 930, 1082, 108, 3024, 3023,
	1476, 1559, 689, 2992, 2581, 3647, 756, 4185, 1776, 3609,
	3059, 1476, 3060, 1063, 130, 4084, 1044, 4079, 1175, 2383,
	2384, 2103, 1178, 136, 1104, 4078, 2102, 2101, 2100, 3722,
	2099, 1192, 1193, 1194, 2098, 1197, 1198, 1199, 1200, 2068,
	1238, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 747, 1098,
	1097, 1064, 686, 4179, 687, 2866, 1061, 2, 3348, 1048,
	1152, 1128, 2635, 3226, 4206, 3184, 1492, 4242, 1153, 2570,
	3520, 1072, 1046, 1990, 4259, 1239, 1779, 4201, 130, 1179,
	1182, 1183, 1127, 1126, 1125, 4057, 1472, 2994, 4227, 1469,
	1186, 1777, 4241, 3722, 3519, 2407, 1772, 2898, 1486, 731,
	1195, 113, 114, 115, 731, 118, 1780, 2412, 124, 1486,
	2411, 193, 725, 2569, 681, 3721, 3348, 4189, 3346, 1120,
	4079, 1778, 981, 1115, 4187, 3017, 744, 745, 192, 3345,
	4031, 984, 985, 986, 2831, 1043, 1038, 1039, 1040, 1041,
	2108, 3406, 4188, 1052, 4153, 3949, 130, 3352, 3948, 4186,
	1177, 131, 3660, 725, 1129, 3661, 1764, 1176, 86, 4217,
	3959, 95, 4183, 984, 985, 986, 3679, 174, 86, 2642,
	3668, 3014, 1460, 1085, 1086, 4127, 3346, 1096, 1100, 932,
	86, 2912, 4135, 2563, 3958, 4139, 2155, 4162, 3432, 3721,
	1887, 1809, 2947, 1810, 1471, 2946, 720, 3031, 2948, 3032,
	3278, 3279, 2455, 2456, 2514, 3352, 1096, 1100, 932, 2913,
	2867, 1482, 4167, 2952, 1474, 1489, 1488, 1490, 1491, 97,
	2080, 2081, 1482, 3277, 3058, 2639, 725, 171, 2508, 2454,
	172, 3774, 4165, 1275, 3041, 1277, 2568, 1258, 1036, 2640,
	1035, 95, 4172, 4173, 705, 1246, 1124, 3678, 1231, 1232,
	1247, 95, 3298, 3299, 4049, 725, 191, 703, 1245, 4166,
	1244, 4143, 3349, 95, 725, 1246, 1263, 1264, 1259, 1287,
	1247, 1252, 2959, 1274, 1276, 3414, 2033, 2473, 2472, 3384,
	1234, 3382, 2905, 2906, 725, 3070, 2385, 725, 3116, 86,
	3412, 1453, 88, 4143, 2633, 2079, 739, 700, 3002, 1470,
	1805, 737, 2083, 3388, 1122, 743, 715, 2419, 1735, 3043,
	4001, 2545, 4002, 1221, 3375, 3027, 1980, 2584, 4207, 4239,
	3349, 710, 3376, 2006, 1510, 1279, 1196, 726, 2609, 1452,
	2610, 2590, 2611, 713, 1284, 1459, 723, 2588, 1267, 4208,
	97, 1261, 1262, 1227, 724, 3046, 3403, 3649, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 2586,
	1981, 3297, 1982, 3933, 3648, 2612, 1151, 1260, 726, 3072,
	1253, 175, 95, 3300, 1151, 1265, 3385, 1202, 3383, 2587,
	181, 2507, 1201, 1286, 1272, 1266, 2591, 2548, 1273, 1285,
	3645, 2636, 2589, 2637, 3726, 1132, 1162, 2432, 1278, 1133,
	1133, 1171, 1170, 1169, 690, 1168, 692, 706, 3559, 728,
	1167, 727, 696, 2995, 694, 698, 707, 699, 2034, 693,
	1166, 704, 1165, 1271, 695, 708, 709, 712, 716, 717,
	718, 714, 711, 1164, 702, 729, 1159, 1123, 1089, 1738,
	3300, 726, 1891, 3082, 3081, 3080, 1172, 1524, 3074, 4260,
	3078, 1108, 3073, 1524, 3071, 1181, 1145, 3117, 1108, 3076,
	4180, 1144, 1106, 4214, 1144, 1180, 1108, 2026, 3075, 1150,
	726, 1886, 3320, 1084, 3047, 2574, 2573, 1150, 2022, 726,
	3183, 1461, 1189, 3026, 1884, 1883, 1882, 3077, 3079, 3012,
	1291, 2023, 1291, 1291, 1880, 1237, 680, 3040, 3192, 726,
	3039, 4181, 726, 2417, 2418, 3644, 1099, 1093, 1091, 166,
	3211, 1481, 1478, 1479, 1480, 1485, 1487, 1484, 3209, 1483,
	1525, 1526, 1481, 1478, 1479, 1480, 1485, 1487, 1484, 1477,
	1483, 4044, 1806, 3063, 3598, 1099, 1093, 1091, 3580, 2657,
	1477, 2943, 1050, 1534, 1539, 1540, 1163, 1543, 1545, 1546,
	1547, 1548, 1549, 3029, 1552, 1553, 1555, 1555, 2908, 1555,
	1555, 1560, 1560, 1560, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1531, 4056,
	1280, 2993, 1687, 1130, 1689, 1690, 1691, 1692, 1693, 3720,
	1450, 1451, 3607, 3608, 3610, 1776, 1560, 1560, 1560, 1560,
	1560, 1560, 1449, 4141, 730, 2511, 2567, 4102, 3560, 2996,
	2961, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 721, 1527, 1528, 1529, 1530,
	2641, 3350, 3351, 94, 1225, 4141, 1541, 4171, 167, 4140,
	722, 725, 3504, 94, 3354, 179, 2512, 1468, 1535, 1556,
	3677, 1557, 1558, 2510, 89, 94, 1242, 3404, 1248, 1249,
	1250, 1251, 1160, 3720, 1544, 2640, 1992, 1991, 1993, 1994,
	1995, 4140, 3016, 1561, 1562, 1151, 4169, 1092, 1912, 1243,
	1151, 4170, 1288, 1289, 2419, 95, 187, 2513, 2565, 3350,
	3351, 1233, 1728, 2843, 1763, 1230, 2158, 2509, 1734, 1797,
	922, 4253, 3354, 2871, 2873, 1688, 1092, 1050, 3050, 1236,
	3191, 1050, 2903, 126, 688, 3276, 3015, 1050, 2461, 1521,
	2668, 1524, 1764, 1119, 1504, 1067, 1121, 1283, 1724, 1256,
	2010, 4070, 1188, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 1174, 2226, 1725, 1269, 3640, 186,
	188, 189, 190, 2011, 121, 3090, 195, 2038, 3572, 684,
	2126, 2585, 2092, 1241, 94, 2597, 2593, 2595, 2596, 2594,
	2598, 2599, 2600, 2601, 2127, 1522, 1523, 2125, 1150, 684,
	2019, 1811, 2191, 1150, 1144, 1147, 1148, 1911, 1108, 1151,
	1490, 1491, 1141, 1145, 1742, 1060, 1124, 1220, 1746, 2527,
	2191, 3769, 2677, 4218, 1049, 1744, 2668, 1745, 1491, 106,
	2562, 107, 1161, 1140, 1081, 1081, 1725, 1694, 1695, 1696,
	1697, 1698, 1699, 684, 1732, 1124, 2199, 1116, 3615, 3614,
	2552, 1921, 122, 1920, 1118, 1117, 3053, 1910, 3284, 2560,
	1162, 3052, 1160, 2200, 2218, 109, 4261, 4103, 1775, 2220,
	4209, 3599, 4036, 2225, 2221, 1151, 726, 2222, 2223, 2224,
	2557, 1224, 2219, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 1062, 1888, 1889, 1890, 4255, 2872, 4062, 3053,
	2417, 2418, 1740, 1122, 3052, 2007, 3674, 2008, 3675, 3285,
	2009, 1904, 1150, 1766, 1151, 2564, 4104, 1154, 1144, 1741,
	1729, 4037, 1156, 2561, 1743, 1270, 1157, 1155, 1226, 1897,
	2557, 2031, 1151, 1975, 3287, 2039, 2185, 1240, 1769, 1926,
	1048, 1927, 4211, 1929, 1931, 1916, 1046, 1935, 1937, 1939,
	1941, 1943, 95, 4251, 3282, 1957, 4252, 2182, 4250, 1291,
	1965, 1966, 4262, 1802, 1803, 1255, 1971, 1972, 2000, 1764,
	1871, 1915, 2124, 2559, 3298, 3299, 1257, 2196, 1150, 3941,
	1187, 3283, 1492, 3940, 1184, 3931, 3691, 1914, 1914, 1879,
	3690, 1223, 3622, 2015, 3621, 2013, 2014, 2012, 2016, 2017,
	2018, 3611, 2197, 1895, 1894, 1907, 1893, 1123, 2424, 2425,
	1998, 749, 3327, 1492, 3316, 3289, 2968, 1150, 1747, 984,
	985, 986, 1154, 1144, 2967, 2347, 1987, 1156, 2347, 2344,
	1961, 1157, 1155, 2966, 2517, 1150, 1123, 2704, 2346, 1999,
	2001, 1144, 1147, 1148, 1985, 1108, 1984, 1983, 1918, 1141,
	1145, 1973, 1158, 1967, 979, 2027, 2174, 2163, 2164, 2165,
	2166, 2176, 2167, 2168, 2169, 2181, 2177, 2170, 2171, 2178,
	2179, 2180, 2172, 2173, 2175, 1953, 1492, 1510, 1956, 3062,
	1958, 1997, 1964, 3297, 2114, 2115, 2647, 2648, 130, 1963,
	1962, 1510, 1127, 1126, 1125, 3300, 1933, 1986, 1739, 3379,
	1455, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518,
	1520, 1521, 2044, 2718, 731, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1519, 1518, 1520, 1521, 3604, 2066, 731, 1291,
	1291, 1489, 1805, 1490, 1491, 2040, 2041, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 87, 2892, 4238, 87, 2045,
	1516, 1517, 1519, 1518, 1520, 1521, 2052, 2053, 2054, 4210,
	1492, 192, 1489, 4065, 1490, 1491, 1492, 2065, 1498, 1499,
	1500, 1501, 1502, 1503, 1497, 1494, 2950, 1510, 731, 2533,
	1506, 2532, 1507, 4064, 131, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1519, 1518, 1520, 1521, 1508, 1522, 1523, 1505,
	174, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518,
	1520, 1521, 1492, 2531, 4040, 2530, 3286, 4039, 2153, 2153,
	2154, 4038, 2151, 2151, 1492, 1489, 1720, 1490, 1491, 1492,
	3936, 1718, 42, 1492, 3092, 42, 1716, 3920, 2042, 1717,
	1715, 1492, 1719, 3919, 1510, 2046, 2656, 2048, 2049, 2050,
	2051, 2116, 4223, 1764, 2055, 2529, 3768, 2528, 4221, 1764,
	171, 1782, 3766, 172, 3687, 2237, 2067, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 1512,
	1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 191,
	1723, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518,
	1520, 1521, 1492, 1722, 4149, 1764, 2666, 4197, 1764, 1489,
	1783, 1490, 1491, 1724, 2093, 1489, 2665, 1490, 1491, 1492,
	1721, 4147, 1764, 1764, 85, 4145, 1764, 85, 2892, 1764,
	4058, 1725, 2123, 4014, 1764, 2716, 2186, 2073, 2074, 1492,
	2114, 2115, 2112, 2113, 103, 1488, 1764, 1492, 1488, 1764,
	105, 3619, 2128, 3603, 104, 1492, 2892, 4134, 3968, 112,
	1492, 1489, 3389, 1490, 1491, 2892, 4113, 2111, 1492, 2673,
	111, 3386, 110, 1489, 3319, 1490, 1491, 3318, 1489, 2157,
	1490, 1491, 1489, 2357, 1490, 1491, 112, 3044, 2356, 2130,
	1489, 2261, 1490, 1491, 4012, 1764, 2355, 111, 2977, 110,
	2964, 684, 1492, 684, 175, 1720, 1492, 105, 1552, 2892,
	4109, 4009, 1764, 181, 2129, 1764, 2131, 2132, 2133, 2134,
	2135, 2136, 2138, 2140, 2141, 2142, 2143, 2144, 2145, 2343,
	1535, 3991, 1764, 2345, 2236, 2201, 2202, 2203, 2204, 3545,
	1764, 4021, 1764, 3658, 4055, 1764, 3967, 2672, 2192, 2215,
	1714, 1489, 3963, 1490, 1491, 1492, 103, 2410, 3290, 2630,
	3538, 1764, 3294, 3944, 1764, 684, 104, 2622, 1489, 3293,
	1490, 1491, 1764, 3575, 1492, 2621, 2354, 2892, 3932, 2360,
	2361, 3658, 1764, 2440, 1492, 2892, 3656, 105, 1489, 2579,
	1490, 1491, 2357, 1538, 3535, 1764, 1489, 2429, 1490, 1491,
	106, 2253, 107, 3295, 1489, 2355, 1490, 1491, 3291, 1489,
	2578, 1490, 1491, 3292, 2557, 1764, 1492, 1489, 2470, 1490,
	1491, 2414, 106, 2390, 107, 1492, 2391, 1764, 3924, 1492,
	2069, 2402, 3578, 1764, 2798, 1764, 3923, 1492, 2122, 3309,
	3308, 3574, 166, 3306, 3307, 3666, 1786, 3533, 1764, 3304,
	3305, 1489, 1764, 1490, 1491, 1489, 1113, 1490, 1491, 3304,
	3303, 2918, 1764, 1492, 2640, 3025, 3496, 1764, 1492, 2035,
	2442, 2939, 2479, 2480, 2481, 2482, 3494, 1764, 1063, 1875,
	3006, 3003, 2464, 1996, 2378, 2999, 3000, 2982, 1492, 2465,
	1113, 2939, 1492, 1988, 2474, 1978, 2475, 2476, 2477, 2478,
	2396, 2446, 2397, 2403, 1489, 1974, 1490, 1491, 3490, 1764,
	2484, 1492, 2664, 2486, 2487, 2488, 2489, 1785, 2405, 111,
	2468, 3487, 1764, 1489, 2500, 1490, 1491, 1970, 2546, 3485,
	1764, 1492, 2506, 1489, 1969, 1490, 1491, 1968, 2427, 2940,
	2892, 2891, 2469, 2451, 2452, 1098, 1097, 2450, 1784, 2942,
	2156, 1764, 2467, 1281, 2466, 3483, 1764, 2558, 1492, 2940,
	3481, 1764, 1492, 1875, 1874, 1489, 2917, 1490, 1491, 2640,
	1817, 1816, 2714, 2516, 1489, 2543, 1490, 1491, 1489, 1492,
	1490, 1491, 2910, 1492, 3479, 1764, 1489, 3271, 1490, 1491,
	2910, 3571, 1492, 1488, 1051, 1488, 2501, 2640, 1492, 2497,
	2490, 2492, 2493, 3477, 1764, 2519, 2551, 3241, 2515, 2554,
	2520, 2555, 1489, 1492, 1490, 1491, 2889, 1489, 3571, 1490,
	1491, 2557, 4097, 3475, 1764, 4069, 2892, 2918, 2571, 2918,
	105, 3524, 2501, 2550, 1152, 2553, 2549, 1489, 3623, 1490,
	1491, 1489, 1153, 1490, 1491, 97, 3306, 3214, 2453, 2798,
	2572, 1764, 1914, 2575, 3473, 1764, 684, 2576, 2577, 2918,
	1489, 2701, 1490, 1491, 1492, 2700, 2557, 3571, 2540, 1765,
	1767, 3471, 1764, 2422, 2409, 3469, 1764, 95, 95, 1060,
	1489, 167, 1490, 1491, 3467, 1764, 1768, 2381, 179, 2645,
	3465, 1764, 2156, 2094, 2887, 3624, 3625, 3626, 1050, 1050,
	1050, 2582, 2078, 2021, 684, 3463, 1764, 1489, 1804, 1490,
	1491, 1489, 1949, 1490, 1491, 1492, 1135, 1134, 1545, 4176,
	1545, 1492, 4116, 684, 3955, 1771, 1492, 3921, 1489, 187,
	1490, 1491, 1489, 3781, 1490, 1491, 2660, 1492, 3639, 3636,
	3617, 1489, 3437, 1490, 1491, 2615, 3436, 1489, 1877, 1490,
	1491, 2499, 3377, 2357, 3332, 1492, 3461, 1764, 2356, 3328,
	3007, 1492, 1489, 2496, 1490, 1491, 2663, 1492, 2491, 1950,
	1951, 1952, 2485, 1538, 2483, 2003, 168, 173, 170, 176,
	177, 178, 180, 182, 183, 184, 185, 1909, 1905, 3421,
	1492, 1873, 186, 188, 189, 190, 123, 2973, 2632, 3330,
	1538, 3381, 2974, 1538, 1225, 1538, 684, 3459, 1764, 1492,
	3956, 2638, 2514, 1489, 1764, 1490, 1491, 1726, 3457, 1764,
	3585, 3586, 1492, 2394, 4233, 4231, 1976, 2646, 1492, 3443,
	1764, 4204, 1492, 4077, 3996, 3588, 4073, 3324, 2071, 3323,
	2652, 684, 3591, 3322, 2649, 2650, 2651, 3419, 1764, 3241,
	1492, 2974, 2123, 2863, 1764, 1492, 2986, 2030, 684, 2616,
	1764, 3957, 3590, 3263, 1489, 3260, 1490, 1491, 3264, 3259,
	1489, 1492, 1490, 1491, 684, 1489, 685, 1490, 1491, 3261,
	2413, 684, 2861, 1764, 3262, 3579, 1489, 1065, 1490, 1491,
	2056, 2057, 684, 684, 684, 684, 684, 684, 684, 1492,
	3627, 2836, 1764, 2676, 1489, 2072, 1490, 1491, 2654, 1781,
	1489, 3219, 1490, 1491, 2813, 1764, 1489, 1492, 1490, 1491,
	2805, 1764, 1492, 2400, 2796, 1764, 2624, 2625, 3231, 3233,
	4035, 2627, 3218, 2653, 1492, 2655, 2842, 3234, 1066, 1489,
	2628, 1490, 1491, 4212, 2658, 1492, 2659, 2794, 1764, 3564,
	748, 1492, 2661, 3628, 3629, 3630, 3759, 3563, 1489, 2712,
	1490, 1491, 2830, 2781, 1764, 3761, 3567, 3265, 2874, 2927,
	2928, 1489, 1492, 1490, 1491, 3228, 2020, 1489, 1945, 1490,
	1491, 1489, 1068, 1490, 1491, 2153, 2877, 1050, 1034, 2151,
	1069, 2779, 1764, 3302, 2957, 1492, 2978, 2608, 2607, 1489,
	2606, 1490, 1491, 2605, 1489, 1077, 1490, 1491, 2604, 2777,
	1764, 2199, 2915, 2916, 2775, 1764, 2603, 2875, 2602, 1076,
	1489, 2440, 1490, 1491, 1050, 2935, 2773, 1764, 2200, 3397,
	1492, 1946, 1947, 1948, 3746, 1492, 3745, 2771, 1764, 1492,
	2119, 2117, 2118, 2769, 1764, 2878, 1191, 2880, 1489, 1492,
	1490, 1491, 1454, 1492, 1190, 2973, 2895, 1492, 2122, 3056,
	2914, 3013, 103, 131, 2767, 1764, 1489, 3569, 1490, 1491,
	105, 1489, 104, 1490, 1491, 2923, 2926, 2927, 2928, 2924,
	4247, 2925, 2929, 1489, 1492, 1490, 1491, 2765, 1764, 3744,
	1732, 2990, 2865, 2904, 1489, 684, 1490, 1491, 2619, 42,
	1489, 2933, 1490, 1491, 1492, 2424, 2425, 4152, 2932, 4054,
	3951, 2934, 3301, 2885, 1492, 2931, 1775, 2960, 2962, 2893,
	1492, 1489, 3593, 1490, 1491, 1492, 1725, 2763, 1764, 2953,
	2907, 2761, 1764, 2890, 1492, 2406, 110, 3547, 1492, 3011,
	2644, 2759, 1764, 2937, 1489, 3540, 1490, 1491, 103, 2757,
	1764, 2077, 1492, 2941, 105, 1538, 3217, 2944, 104, 1492,
	4020, 2076, 2506, 2951, 3216, 1492, 4019, 3999, 2954, 1492,
	2194, 111, 2976, 1538, 3022, 2195, 3536, 2979, 2980, 1489,
	3767, 1490, 1491, 3765, 1489, 2965, 1490, 1491, 1489, 3764,
	1490, 1491, 3757, 3637, 3568, 3566, 2755, 1764, 1489, 1492,
	1490, 1491, 1489, 2975, 1490, 1491, 1489, 4053, 1490, 1491,
	1492, 3333, 3502, 2257, 1492, 2983, 2541, 3498, 2987, 2988,
	2989, 2984, 1492, 1892, 1075, 3756, 2753, 1764, 112, 3019,
	2751, 1764, 3557, 1489, 1897, 1490, 1491, 4234, 2910, 111,
	3730, 3066, 3067, 2889, 2749, 1764, 1492, 3120, 3008, 3009,
	1492, 2747, 1764, 1489, 1492, 1490, 1491, 2742, 1764, 4235,
	4234, 2738, 1764, 1489, 3018, 1490, 1491, 112, 3, 1489,
	2702, 1490, 1491, 2392, 1489, 1798, 1490, 1491, 111, 1790,
	110, 116, 117, 1489, 1492, 1490, 1491, 1489, 1492, 1490,
	1491, 2736, 1764, 2340, 1492, 4235, 99, 3045, 4041, 3602,
	3083, 1489, 3434, 1490, 1491, 1, 2729, 1764, 1489, 2030,
	1490, 1491, 3064, 3048, 1489, 3928, 1490, 1491, 1489, 2091,
	1490, 1491, 10, 2372, 1042, 1457, 3101, 3102, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 1456, 3606, 2727, 1764,
	1765, 2379, 2089, 3641, 4164, 9, 3118, 2969, 1489, 2090,
	1490, 1491, 8, 701, 1976, 2382, 1492, 1730, 3084, 1489,
	4205, 1490, 1491, 1489, 112, 1490, 1491, 4160, 4161, 3020,
	1081, 1489, 1989, 1490, 1491, 111, 3433, 110, 1979, 3669,
	3425, 2404, 1726, 2308, 3952, 105, 3423, 3336, 1492, 1060,
	2547, 3635, 2504, 1143, 156, 1489, 1492, 1490, 1491, 1489,
	1492, 1490, 1491, 1489, 2462, 1490, 1491, 2463, 3122, 4129,
	120, 684, 3178, 1101, 3054, 119, 1146, 3055, 2030, 684,
	1254, 684, 2542, 684, 2449, 3659, 2958, 2471, 1492, 2251,
	1823, 1821, 1822, 1489, 1820, 1490, 1491, 1489, 3065, 1490,
	1491, 1825, 1824, 1489, 4101, 1490, 1491, 2998, 2859, 3405,
	2703, 3196, 3503, 2082, 738, 3185, 2930, 732, 194, 1812,
	3187, 1791, 2923, 2926, 2927, 2928, 2924, 3068, 2925, 2929,
	2440, 2075, 3585, 3586, 3111, 3085, 1492, 1185, 691, 3310,
	2858, 2580, 697, 2343, 1542, 2343, 3158, 2345, 2854, 2345,
	2070, 3215, 2853, 2518, 3248, 2945, 87, 1095, 1087, 2440,
	2440, 2440, 2440, 2440, 2393, 1489, 2526, 1490, 1491, 2334,
	2335, 2336, 2337, 2338, 2879, 1094, 3196, 3929, 3249, 2440,
	2852, 3186, 2440, 3188, 3561, 1492, 2359, 3253, 3227, 2362,
	2363, 3195, 3168, 3169, 3170, 3171, 3172, 1489, 2031, 1490,
	1491, 3270, 3229, 2897, 1492, 1489, 3232, 1490, 1491, 1489,
	3223, 1490, 1491, 3207, 3213, 1492, 3225, 2442, 4034, 3758,
	1492, 4114, 2955, 1787, 3523, 2380, 3220, 2675, 2851, 3222,
	1492, 2189, 1532, 763, 3235, 3236, 2439, 1489, 1492, 1490,
	1491, 934, 1773, 1053, 3725, 3353, 2442, 2442, 2442, 2442,
	2442, 2109, 1055, 1492, 761, 3361, 3252, 3254, 760, 3272,
	3257, 1054, 3273, 3266, 3255, 3256, 2442, 3258, 106, 2442,
	107, 3208, 3210, 3212, 758, 3274, 2881, 2850, 3280, 2911,
	3221, 1496, 1495, 969, 684, 1489, 2869, 1490, 1491, 1799,
	3312, 684, 3313, 3311, 1492, 2922, 2849, 2920, 3314, 3315,
	2919, 2617, 684, 684, 2447, 3587, 684, 2840, 2620, 3583,
	4156, 2441, 2839, 2437, 3362, 2888, 920, 919, 684, 3366,
	770, 762, 2838, 3365, 2506, 684, 3238, 1492, 3355, 752,
	2837, 3334, 983, 918, 1489, 3372, 1490, 1491, 917, 3363,
	3364, 1492, 3028, 3378, 3030, 2834, 1492, 2956, 3374, 1473,
	1492, 684, 3393, 1489, 3392, 1490, 1491, 1749, 2631, 1492,
	3390, 1752, 2401, 1114, 1489, 3402, 1490, 1491, 3244, 1489,
	4060, 1490, 1491, 3244, 2643, 3431, 1748, 4067, 3400, 1489,
	3344, 1490, 1491, 3653, 3325, 3004, 2829, 1489, 3410, 1490,
	1491, 2534, 69, 46, 3426, 3427, 3428, 3429, 3430, 4029,
	3407, 3408, 1489, 3409, 1490, 1491, 3411, 4098, 3413, 912,
	3415, 909, 3727, 3728, 3729, 3181, 3182, 4080, 4081, 2822,
	908, 4082, 2246, 1467, 1464, 4178, 2084, 98, 36, 35,
	1545, 34, 2662, 2821, 1545, 33, 2667, 1538, 2820, 2030,
	32, 26, 2819, 1489, 25, 1490, 1491, 24, 23, 22,
	3548, 2818, 3550, 29, 19, 21, 20, 18, 3335, 2670,
	3347, 2671, 3518, 4200, 4246, 125, 55, 2679, 52, 3522,
	50, 2681, 2682, 133, 132, 53, 1489, 49, 1490, 1491,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	1489, 2699, 1490, 1491, 1228, 1489, 47, 1490, 1491, 1489,
	96, 1490, 1491, 31, 3401, 30, 3247, 17, 1489, 16,
	1490, 1491, 2440, 15, 2705, 2706, 2707, 2708, 14, 2710,
	2711, 3549, 2713, 3551, 13, 3600, 2715, 3553, 3565, 12,
	2720, 2721, 11, 2722, 7, 3558, 2725, 2726, 2728, 2730,
	2731, 2732, 2733, 2734, 2735, 2737, 2739, 2740, 2741, 2743,
	1492, 2745, 2746, 2748, 2750, 2752, 2754, 2756, 2758, 2760,
	2762, 2764, 2766, 2768, 2770, 2772, 2774, 2776, 2778, 2780,
	2782, 2783, 2784, 3356, 2786, 3592, 2788, 3594, 2790, 2791,
	3589, 2793, 2795, 2797, 3362, 3570, 1492, 2800, 3601, 3366,
	1492, 2804, 3595, 3365, 1492, 2809, 2810, 2811, 2812, 2442,
	3395, 3396, 1492, 6, 39, 3618, 1492, 3620, 2823, 2824,
	2825, 2826, 2827, 2828, 3555, 1492, 2832, 2833, 38, 3612,
	3613, 37, 28, 27, 2835, 1492, 40, 4, 2991, 2841,
	1492, 2536, 0, 0, 2844, 2845, 2846, 2847, 2848, 0,
	0, 0, 2817, 0, 0, 2855, 2856, 3582, 2857, 0,
	0, 2860, 2862, 2404, 0, 2864, 3525, 1492, 3527, 3528,
	3529, 0, 684, 0, 0, 2876, 3596, 3597, 3663, 3664,
	1976, 3646, 0, 1492, 0, 3650, 3651, 3652, 2816, 0,
	0, 3665, 2815, 1492, 0, 2894, 2814, 0, 1492, 0,
	0, 0, 1492, 0, 2808, 2683, 0, 0, 2807, 1489,
	0, 1490, 1491, 0, 0, 0, 0, 2806, 1492, 0,
	3681, 0, 2698, 0, 0, 0, 0, 2803, 0, 0,
	0, 684, 2802, 0, 1492, 0, 684, 0, 0, 1492,
	0, 0, 0, 0, 0, 1489, 3692, 1490, 1491, 1489,
	0, 1490, 1491, 1489, 0, 1490, 1491, 0, 0, 2801,
	0, 1489, 0, 1490, 1491, 1489, 0, 1490, 1491, 1492,
	0, 0, 0, 0, 1489, 2799, 1490, 1491, 3733, 0,
	3734, 3735, 3736, 0, 1489, 2792, 1490, 1491, 0, 1489,
	2789, 1490, 1491, 0, 2787, 0, 0, 3743, 0, 0,
	3750, 0, 3752, 0, 0, 1492, 0, 0, 0, 3723,
	2785, 684, 1492, 0, 0, 0, 1489, 0, 1490, 1491,
	0, 0, 0, 0, 0, 3248, 2744, 3753, 87, 0,
	3248, 2724, 1489, 0, 1490, 1491, 0, 0, 0, 0,
	0, 1492, 1489, 0, 1490, 1491, 0, 1489, 0, 1490,
	1491, 1489, 1492, 1490, 1491, 0, 2153, 3783, 3686, 0,
	2151, 2723, 3754, 1492, 1538, 3763, 3762, 1489, 1492, 1490,
	1491, 0, 0, 3773, 3770, 3772, 3775, 684, 684, 684,
	684, 684, 684, 1489, 0, 1490, 1491, 0, 1489, 0,
	1490, 1491, 0, 0, 0, 0, 3935, 2719, 0, 0,
	0, 0, 3787, 0, 2717, 0, 684, 684, 3642, 3643,
	0, 0, 0, 0, 0, 42, 0, 2380, 1489, 0,
	1490, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	3926, 684, 0, 2709, 3927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2680, 0, 3954, 0, 0, 3925,
	3942, 3947, 3946, 0, 1489, 2674, 1490, 1491, 0, 0,
	2669, 1489, 0, 1490, 1491, 0, 0, 0, 3096, 3097,
	3098, 3099, 3100, 3993, 3994, 0, 0, 3777, 0, 0,
	0, 3751, 3937, 3938, 3939, 2153, 3997, 0, 3115, 2151,
	1489, 0, 1490, 1491, 0, 0, 0, 0, 3784, 3785,
	0, 1489, 0, 1490, 1491, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 1490, 1491, 0, 1489, 0, 1490,
	1491, 0, 4000, 0, 4042, 3248, 4003, 0, 3779, 0,
	0, 0, 0, 0, 0, 0, 0, 3244, 0, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1683, 1684, 1685, 1686, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	750, 3998, 4043, 4027, 4017, 4026, 3086, 3247, 1081, 0,
	684, 4023, 3247, 4025, 4061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3250, 0, 87, 1538, 0, 0, 4046, 0, 1538, 684,
	684, 684, 684, 684, 1754, 3930, 0, 0, 3268, 0,
	0, 3267, 1754, 0, 0, 4066, 4045, 1976, 1762, 684,
	4050, 1755, 684, 3275, 2030, 4063, 1762, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 3934, 0,
	4068, 0, 0, 0, 0, 0, 2398, 2399, 1761, 1759,
	1760, 1756, 0, 1757, 1750, 1751, 1761, 1759, 1760, 1756,
	0, 1757, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 1074, 0, 0, 1080, 1080, 1758, 0, 0, 42,
	0, 0, 4086, 1538, 1758, 4087, 0, 0, 0, 0,
	4111, 0, 0, 684, 0, 87, 0, 0, 3160, 0,
	3162, 0, 0, 0, 0, 0, 0, 684, 4096, 0,
	0, 4105, 0, 0, 0, 0, 3173, 3174, 3175, 3176,
	0, 0, 0, 0, 0, 0, 4117, 0, 684, 0,
	0, 684, 0, 0, 0, 4128, 3399, 3954, 4131, 4120,
	4125, 4122, 4121, 4115, 4119, 4124, 4123, 4047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3416, 3417,
	0, 3418, 3420, 3422, 4150, 0, 4174, 3247, 0, 0,
	0, 0, 0, 0, 0, 4155, 0, 4163, 4168, 0,
	0, 0, 42, 4142, 4182, 0, 0, 0, 0, 3435,
	0, 0, 0, 4195, 3438, 4184, 3440, 3441, 3442, 3444,
	3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454,
	3455, 3456, 3458, 3460, 3462, 3464, 3466, 3468, 3470, 3472,
	3474, 3476, 3478, 3480, 3482, 3484, 3486, 3488, 3489, 3491,
	3492, 3493, 3495, 4219, 4199, 3497, 2031, 3499, 3500, 3501,
	4142, 4215, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512,
	3513, 3514, 3515, 2153, 4229, 4232, 4225, 2151, 4228, 4226,
	4230, 3521, 4216, 4194, 0, 3526, 0, 4112, 192, 3530,
	3531, 0, 3532, 3534, 4240, 3537, 3539, 4248, 3541, 3542,
	3543, 3544, 4107, 4256, 4254, 0, 0, 4052, 3552, 0,
	0, 131, 0, 153, 0, 0, 684, 3244, 0, 0,
	0, 0, 0, 0, 0, 4264, 0, 174, 0, 4265,
	4266, 3994, 2153, 4263, 0, 0, 2151, 0, 0, 4142,
	0, 4071, 0, 3576, 3577, 0, 4059, 3581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 164, 2347, 0, 0, 1033, 0, 152, 0, 0,
	0, 0, 684, 0, 0, 2152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 141, 163, 162, 191, 0, 0, 0,
	0, 684, 0, 684, 684, 684, 0, 0, 4106, 0,
	4190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3657, 0, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 0, 3676, 0, 0,
	3680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 138,
	160, 145, 137, 0, 158, 159, 0, 0, 0, 0,
	0, 175, 0, 0, 3693, 0, 0, 0, 0, 0,
	181, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 147, 142, 143, 144,
	148, 0, 4213, 0, 0, 1726, 0, 139, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3724, 1510, 0, 0, 0, 0, 0, 3731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 44, 45, 88, 0, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1519, 1518, 1520, 1521, 0, 0, 0,
	92, 0, 0, 1976, 48, 76, 77, 0, 74, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	75, 0, 1538, 0, 0, 0, 1976, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3943, 0,
	0, 0, 0, 1976, 0, 0, 0, 3950, 0, 0,
	0, 0, 0, 1551, 83, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3960, 3961, 3962,
	0, 3964, 0, 3965, 3966, 0, 0, 0, 0, 3969,
	3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979,
	3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989,
	3990, 0, 3992, 3995, 0, 3714, 0, 0, 2182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4004, 4005,
	4006, 4007, 4008, 4010, 4011, 4013, 4015, 4016, 4018, 0,
	0, 0, 4022, 0, 0, 0, 4024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	54, 57, 56, 59, 1032, 73, 0, 0, 82, 79,
	1033, 0, 0, 0, 154, 0, 0, 155, 0, 0,
	2152, 4051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 91, 90, 0, 0, 71, 72, 58,
	0, 0, 0, 0, 0, 80, 81, 0, 167, 0,
	0, 0, 0, 0, 0, 179, 0, 2174, 2163, 2164,
	2165, 2166, 2176, 2167, 2168, 2169, 2181, 2177, 2170, 2171,
	2178, 2179, 2180, 2172, 2173, 2175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	64, 0, 65, 66, 67, 68, 187, 0, 0, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 0, 0, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 0, 0, 60, 0, 0, 186,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4076, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4198, 0, 89, 0, 0, 0,
	0, 0, 4091, 1841, 0, 0, 0, 0, 4094, 0,
	4095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 4110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 965, 0, 4136,
	4137, 4130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4144, 4146, 4148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 4177, 0, 0, 94, 0, 0, 0,
	0, 0, 2036, 197, 0, 0, 197, 0, 0, 0,
	736, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 4196, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 2997, 0, 4220, 4222, 4224, 742,
	197, 742, 0, 0, 0, 0, 131, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4075, 0,
	0, 0, 174, 0, 0, 0, 4085, 0, 0, 0,
	4245, 0, 0, 0, 0, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4257, 4258,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 964, 152, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 172, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1900, 1901, 163,
	162, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 741,
	1855, 1858, 1859, 1860, 1861, 1862, 1863, 0, 1864, 1865,
	1867, 1868, 1866, 1869, 1870, 1843, 1844, 1845, 1846, 1826,
	1827, 1856, 0, 1829, 0, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 0, 0, 1839, 1847, 1848, 1849,
	1850, 0, 1851, 1852, 1853, 1854, 0, 0, 1840, 2104,
	2105, 2106, 2107, 741, 0, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 1902, 160, 0, 1899, 0, 158,
	159, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	2159, 2160, 0, 0, 0, 181, 2183, 0, 0, 2187,
	2188, 0, 0, 0, 2193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 0,
	2216, 0, 0, 0, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2247, 0, 2252, 0, 2254, 2255, 2256, 0,
	2258, 2259, 2260, 0, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 0, 166, 0, 0, 0, 2339, 0,
	2341, 0, 2348, 2349, 2350, 2351, 2352, 2353, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 0,
	2373, 2374, 2375, 2376, 2377, 0, 0, 0, 0, 0,
	0, 1841, 95, 0, 0, 1032, 0, 0, 0, 0,
	970, 1033, 984, 985, 986, 971, 0, 0, 972, 973,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 0, 979, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2420, 2421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3367, 3368,
	0, 0, 2459, 0, 0, 0, 0, 0, 0, 0,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 0, 0, 0, 0, 0, 0, 197, 0,
	197, 0, 0, 0, 2502, 0, 0, 0, 1828, 154,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3369, 0, 0, 0, 742, 0, 742,
	742, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 187, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3370, 3371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 0,
	0, 0, 0, 0, 186, 188, 189, 190, 1855, 1858,
	1859, 1860, 1861, 1862, 1863, 0, 1864, 1865, 1867, 1868,
	1866, 1869, 1870, 1843, 1844, 1845, 1846, 1826, 1827, 1856,
	0, 1829, 0, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 0, 0, 1839, 1847, 1848, 1849, 1850, 935,
	1851, 1852, 1853, 1854, 0, 939, 1840, 0, 0, 936,
	937, 0, 0, 0, 938, 940, 0, 0, 0, 0,
	0, 741, 1448, 741, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2684, 2685, 2686, 2687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 742, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 742, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 742, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	1537, 742, 0, 0, 742, 742, 742, 742, 0, 742,
	0, 742, 742, 0, 742, 742, 742, 742, 742, 742,
	0, 0, 0, 0, 0, 0, 0, 1537, 742, 742,
	1537, 742, 1537, 197, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 197, 0,
	0, 741, 741, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 742, 1789, 197, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 741, 0, 0, 0, 0, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 742, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 741, 0, 0, 1536, 741, 0, 0, 741, 741,
	741, 741, 0, 741, 0, 741, 741, 0, 741, 741,
	741, 741, 741, 741, 0, 0, 0, 0, 0, 0,
	0, 1536, 741, 741, 1536, 741, 1536, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 742, 0, 0,
	0, 0, 0, 0, 683, 0, 3061, 0, 0, 0,
	741, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 1037, 0, 0, 0, 0, 0,
	0, 0, 0, 3087, 3088, 3089, 0, 0, 3091, 0,
	0, 3093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3112, 3113, 3114, 0, 0, 0, 0, 1109, 0,
	3119, 0, 742, 0, 0, 3121, 0, 0, 3123, 3124,
	3125, 0, 1537, 0, 3126, 3127, 0, 0, 3128, 0,
	3129, 0, 0, 0, 0, 0, 0, 3130, 0, 3131,
	1537, 0, 0, 3132, 0, 3133, 0, 0, 3134, 0,
	3135, 0, 3136, 0, 3137, 0, 3138, 0, 3139, 0,
	3140, 0, 3141, 0, 3142, 0, 3143, 0, 3144, 0,
	3145, 0, 3146, 0, 3147, 0, 3148, 0, 3149, 0,
	3150, 0, 3151, 0, 0, 0, 3152, 0, 3153, 0,
	3154, 0, 0, 3155, 0, 3156, 0, 3157, 0, 2311,
	3159, 0, 0, 3161, 0, 0, 3163, 3164, 3165, 3166,
	0, 0, 0, 0, 3167, 2311, 2311, 2311, 2311, 2311,
	741, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	3177, 0, 0, 0, 0, 741, 0, 0, 3190, 0,
	0, 3194, 0, 0, 0, 0, 0, 0, 0, 0,
	3197, 3198, 3199, 3200, 3201, 3202, 0, 0, 0, 3203,
	3204, 0, 3205, 0, 3206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	0, 3239, 0, 0, 0, 2161, 0, 0, 0, 0,
	0, 197, 0, 0, 1536, 0, 742, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 3269, 0, 1896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 153, 0, 0, 0, 197, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 742, 0, 0, 2358, 197, 0, 197, 0,
	197, 197, 0, 0, 0, 0, 3331, 0, 0, 0,
	164, 0, 0, 0, 0, 742, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1900, 1901, 163, 162, 191, 0, 0, 0, 0,
	741, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	742, 742, 742, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 3424, 0, 0, 0, 742, 742, 0,
	0, 742, 0, 742, 0, 0, 0, 0, 0, 742,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 742, 0, 0, 0, 0, 742,
	0, 0, 0, 742, 742, 0, 0, 157, 1902, 160,
	0, 1899, 0, 158, 159, 0, 741, 0, 0, 741,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	0, 197, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	197, 0, 0, 197, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 0,
	0, 0, 0, 0, 741, 741, 741, 0, 197, 0,
	0, 0, 0, 0, 0, 197, 1229, 0, 1235, 0,
	742, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 741, 741, 0, 921, 741, 0, 741, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 3638,
	1463, 0, 0, 741, 0, 0, 0, 741, 741, 0,
	0, 0, 0, 0, 1537, 0, 2358, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 1105, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3682, 0, 3683, 0, 3684, 0, 3685, 0, 0, 0,
	0, 0, 0, 0, 3688, 3689, 0, 0, 0, 0,
	0, 0, 0, 0, 3694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 3695, 0,
	3696, 0, 3697, 0, 3698, 0, 3699, 0, 3700, 0,
	3701, 0, 3702, 0, 3703, 0, 3704, 0, 3705, 0,
	3706, 0, 3707, 0, 3708, 0, 3709, 0, 3710, 0,
	0, 3711, 0, 0, 0, 3712, 0, 3713, 0, 0,
	0, 0, 0, 3715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 3732, 0, 0, 1536, 0,
	741, 0, 0, 0, 3737, 0, 3738, 3739, 0, 3740,
	0, 3741, 0, 0, 0, 0, 3742, 167, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 3771, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 3780, 0, 742, 3782,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 3786, 0, 0, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 173, 170, 176, 177, 178, 180, 182,
	183, 184, 185, 0, 0, 0, 0, 0, 186, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 742, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	742, 742, 0, 0, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4032, 0, 0,
	0, 1537, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 741, 0, 197, 197, 197, 197, 197, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 197, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 2949, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 741, 741, 0, 0, 0, 741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 1293, 1293, 0, 0,
	4088, 0, 0, 4089, 0, 4090, 0, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 1462, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2097, 0, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	742, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	1537, 0, 0, 742, 742, 1537, 197, 197, 197, 197,
	197, 0, 0, 0, 0, 0, 0, 4175, 197, 0,
	0, 0, 0, 0, 197, 0, 197, 0, 0, 197,
	197, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4191, 0, 4192, 0,
	4193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	1537, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	197, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 741, 0, 0, 0, 0,
	0, 0, 4243, 0, 4244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 1536, 0, 0, 741, 741, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 742, 0, 0, 0,
	0, 741, 0, 0, 1536, 0, 2426, 0, 0, 741,
	1813, 0, 0, 0, 2430, 0, 2433, 0, 0, 2097,
	0, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 1908, 0, 0, 0,
	0, 0, 3398, 0, 1917, 0, 0, 0, 1919, 0,
	0, 1922, 1923, 1925, 1925, 0, 1925, 0, 1925, 1925,
	0, 1934, 1925, 1925, 1925, 1925, 1925, 0, 0, 197,
	0, 0, 0, 0, 0, 1954, 1955, 0, 1105, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 0, 0, 0, 0, 197, 0,
	197, 197, 197, 0, 0, 0, 2024, 0, 0, 2028,
	742, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 742,
	742, 742, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 0, 0, 0, 2592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2613, 2614, 0,
	0, 2618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2623, 0, 0, 0, 0, 0, 0,
	2626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2629, 0, 0, 0,
	0, 3605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 0, 742, 0, 742, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 741, 741, 741, 741, 0, 0, 1537,
	0, 0, 0, 197, 0, 0, 742, 0, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 742, 0,
	742, 0, 0, 1536, 0, 0, 0, 0, 0, 0,
	741, 0, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2395, 0, 0, 0, 741, 0, 0,
	0, 2936, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1105, 0, 0, 0, 2985, 0, 0, 742,
	0, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 0, 741, 0, 741, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 742, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 2523, 2524, 2525,
	0, 0, 3033, 3034, 3035, 3036, 3037, 3038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1105, 0,
	0, 0, 0, 0, 1112, 1917, 0, 0, 1917, 0,
	1917, 2097, 3049, 0, 0, 0, 2556, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 3057, 0, 0, 1537,
	742, 0, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 0, 2147, 0, 0, 0,
	2147, 2147, 0, 0, 0, 0, 0, 742, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 197, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 742, 0, 0, 2634, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 742, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 741, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 741, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 741,
	0, 0, 3321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3391, 0, 0, 3394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2981,
	0, 3554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2408, 0, 0, 0,
	0, 0, 0, 3005, 0, 0, 0, 1917, 1917, 0,
	0, 0, 3010, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3631, 0, 3632, 3633,
	3634, 0, 0, 0, 0, 0, 3808, 3810, 3809, 3875,
	3876, 3877, 3878, 3879, 3880, 3881, 3811, 3812, 812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	3816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3824, 3825, 3224, 0, 3900,
	3899, 3898, 0, 0, 3896, 3897, 3895, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	3251, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3901, 935, 0, 788, 789, 3902, 3903, 939, 3904, 791,
	792, 936, 937, 0, 786, 790, 938, 940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 0, 0,
	0, 0, 2408, 3805, 3806, 3807, 3813, 3814, 3815, 3826,
	3873, 3874, 3882, 3884, 891, 3883, 3885, 3886, 3887, 3890,
	3891, 3892, 3893, 3888, 3889, 3894, 3788, 3792, 3789, 3790,
	3791, 3803, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800,
	3801, 3802, 3804, 3905, 3906, 3907, 3908, 3909, 3910, 3819,
	3823, 3822, 3820, 3821, 3817, 3818, 3845, 3844, 3846, 3847,
	3848, 3849, 3850, 3851, 3853, 3852, 3854, 3855, 3856, 3857,
	3858, 3859, 3827, 3828, 3831, 3832, 3830, 3829, 3833, 3842,
	3843, 3834, 3835, 3836, 3837, 3838, 3839, 3841, 3840, 3860,
	3861, 3862, 3863, 3864, 3866, 3865, 3869, 3870, 3868, 3867,
	3872, 3871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 941, 0, 942, 0, 0,
	946, 0, 0, 0, 948, 947, 0, 949, 911, 910,
	0, 0, 943, 944, 0, 945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3911, 3912, 3913, 3914, 3915, 3916,
	3917, 3918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2408, 2408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3670, 3671, 3672, 3673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3748, 0, 3748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3776, 0, 3778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3748, 0,
	0, 0, 0, 0, 0, 3748, 0, 3748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2408, 0, 4108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	1872, 0, 4158, 1431, 1415, 534, 0, 1357, 1434, 1325,
	1344, 1444, 1347, 1350, 1394, 1303, 1372, 420, 1341, 1329,
	1298, 1336, 1299, 1327, 1359, 273, 1324, 1417, 1376, 1433,
	369, 270, 1305, 1296, 206, 511, 1330, 435, 1346, 205,
	1396, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 1440, 373, 1382, 0, 503,
	405, 0, 0, 0, 1421, 1420, 1351, 1361, 1423, 1370,
	1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	4132, 513, 966, 0, 0, 0, 0, 4133, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 1338, 1388, 616, 1430, 1339, 1390, 268, 324, 275,
	267, 587, 1441, 1422, 1302, 1369, 1429, 1364, 603, 0,
	0, 231, 1432, 1363, 0, 1393, 0, 1447, 1297, 1384,
	0, 1300, 1304, 1443, 1427, 1333, 278, 0, 0, 0,
	0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 1380,
	0, 0, 0, 1309, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 1312, 0, 1332, 1406, 0, 1295, 300, 1306,
	406, 260, 0, 459, 1413, 1426, 1355, 636, 1428, 1353,
	1352, 1400, 1310, 1419, 1345, 368, 1308, 333, 199, 227,
	0, 1343, 416, 467, 479, 1418, 1328, 1337, 256, 1335,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	1379, 1398, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 1307, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 1323, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 1414, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 1403, 1446, 429, 478,
	242, 613, 502, 201, 1317, 1322, 1315, 0, 257, 258,
	1385, 581, 1318, 1316, 1374, 1375, 1319, 1437, 1438, 1439,
	1424, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 1407,
	1311, 0, 1320, 1321, 402, 1416, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 1378, 198, 223, 371, 1442,
	460, 291, 657, 625, 490, 620, 208, 225, 1314, 265,
	1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366, 1367,
	1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411, 1425,
	1445, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 1377, 1383, 384, 284, 308, 323, 1392,
	624, 508, 229, 472, 293, 253, 1410, 1412, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 1373, 1401, 379, 582, 583, 319, 400, 0,
	0, 0, 0, 0, 0, 1431, 1415, 534, 0, 1357,
	1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 420,
	1341, 1329, 1298, 1336, 1299, 1327, 1359, 273, 1324, 1417,
	1376, 1433, 369, 270, 1305, 1296, 206, 511, 1330, 435,
	1346, 205, 1396, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 1440, 373, 1382,
	0, 503, 405, 0, 0, 0, 1421, 1420, 1351, 1361,
	1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391,
	1436, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 1338, 1388, 616, 1430, 1339, 1390, 268,
	324, 275, 267, 587, 1441, 1422, 1302, 1369, 1429, 1364,
	603, 0, 0, 231, 1432, 1363, 0, 1393, 0, 1447,
	1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 278, 0,
	0, 0, 0, 0, 0, 0, 1360, 1371, 1405, 1409,
	1354, 0, 0, 0, 0, 0, 0, 3276, 0, 1331,
	0, 1380, 0, 0, 0, 1309, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1312, 0, 1332, 1406, 0, 1295,
	300, 1306, 406, 260, 0, 459, 1413, 1426, 1355, 636,
	1428, 1353, 1352, 1400, 1310, 1419, 1345, 368, 1308, 333,
	199, 227, 0, 1343, 416, 467, 479, 1418, 1328, 1337,
	256, 1335, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 1379, 1398, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 1307, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 1323, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 1414,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 1403, 1446,
	429, 478, 242, 613, 502, 201, 1317, 1322, 1315, 0,
	257, 258, 1385, 581, 1318, 1316, 1374, 1375, 1319, 1437,
	1438, 1439, 1424, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 1407, 1311, 0, 1320, 1321, 402, 1416, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 1378, 198, 223,
	371, 1442, 460, 291, 657, 625, 490, 620, 208, 225,
	1314, 265, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365,
	1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404,
	1411, 1425, 1445, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 1377, 1383, 384, 284, 308,
	323, 1392, 624, 508, 229, 472, 293, 253, 1410, 1412,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 1373, 1401, 379, 582, 583, 319,
	400, 0, 0, 0, 0, 0, 0, 1431, 1415, 534,
	0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303,
	1372, 420, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 273,
	1324, 1417, 1376, 1433, 369, 270, 1305, 1296, 206, 511,
	1330, 435, 1346, 205, 1396, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 1440,
	373, 1382, 0, 503, 405, 0, 0, 0, 1421, 1420,
	1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435,
	1342, 1391, 1436, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 1338, 1388, 616, 1430, 1339,
	1390, 268, 324, 275, 267, 587, 1441, 1422, 1302, 1369,
	1429, 1364, 603, 0, 0, 231, 1432, 1363, 0, 1393,
	0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333,
	278, 0, 0, 0, 0, 0, 0, 0, 1360, 1371,
	1405, 1409, 1354, 0, 0, 0, 0, 0, 0, 3237,
	0, 1331, 0, 1380, 0, 0, 0, 1309, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 1312, 0, 1332, 1406,
	0, 1295, 300, 1306, 406, 260, 0, 459, 1413, 1426,
	1355, 636, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 368,
	1308, 333, 199, 227, 0, 1343, 416, 467, 479, 1418,
	1328, 1337, 256, 1335, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 1379, 1398, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	1307, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 1323, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 1414, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	1403, 1446, 429, 478, 242, 613, 502, 201, 1317, 1322,
	1315, 0, 257, 258, 1385, 581, 1318, 1316, 1374, 1375,
	1319, 1437, 1438, 1439, 1424, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 1407, 1311, 0, 1320, 1321, 402, 1416,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 1378,
	198, 223, 371, 1442, 460, 291, 657, 625, 490, 620,
	208, 225, 1314, 265, 1326, 1334, 0, 1340, 1348, 1349,
	1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399,
	1402, 1404, 1411, 1425, 1445, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 1377, 1383, 384,
	284, 308, 323, 1392, 624, 508, 229, 472, 293, 253,
	1410, 1412, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 1373, 1401, 379, 582,
	583, 319, 400, 0, 0, 0, 0, 0, 0, 1431,
	1415, 534, 0, 1357, 1434, 1325, 1344, 1444, 1347, 1350,
	1394, 1303, 1372, 420, 1341, 1329, 1298, 1336, 1299, 1327,
	1359, 273, 1324, 1417, 1376, 1433, 369, 270, 1305, 1296,
	206, 511, 1330, 435, 1346, 205, 1396, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 1440, 373, 1382, 0, 503, 405, 0, 0, 0,
	1421, 1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313,
	1381, 1435, 1342, 1391, 1436, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 1338, 1388, 616,
	1430, 1339, 1390, 268, 324, 275, 267, 587, 1441, 1422,
	1302, 1369, 1429, 1364, 603, 0, 0, 231, 1432, 1363,
	0, 1393, 0, 1447, 1297, 1384, 0, 1300, 1304, 1443,
	1427, 1333, 278, 0, 0, 0, 0, 0, 0, 0,
	1360, 1371, 1405, 1409, 1354, 0, 0, 0, 0, 0,
	0, 2428, 0, 1331, 0, 1380, 0, 0, 0, 1309,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 1312, 0,
	1332, 1406, 0, 1295, 300, 1306, 406, 260, 0, 459,
	1413, 1426, 1355, 636, 1428, 1353, 1352, 1400, 1310, 1419,
	1345, 368, 1308, 333, 199, 227, 0, 1343, 416, 467,
	479, 1418, 1328, 1337, 256, 1335, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 1379, 1398, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 1307, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	1323, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 1414, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 1403, 1446, 429, 478, 242, 613, 502, 201,
	1317, 1322, 1315, 0, 257, 258, 1385, 581, 1318, 1316,
	1374, 1375, 1319, 1437, 1438, 1439, 1424, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 1407, 1311, 0, 1320, 1321,
	402, 1416, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 1378, 198, 223, 371, 1442, 460, 291, 657, 625,
	490, 620, 208, 225, 1314, 265, 1326, 1334, 0, 1340,
	1348, 1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389,
	1397, 1399, 1402, 1404, 1411, 1425, 1445, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 1377,
	1383, 384, 284, 308, 323, 1392, 624, 508, 229, 472,
	293, 253, 1410, 1412, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 1373, 1401,
	379, 582, 583, 319, 400, 0, 0, 0, 0, 0,
	0, 1431, 1415, 534, 0, 1357, 1434, 1325, 1344, 1444,
	1347, 1350, 1394, 1303, 1372, 420, 1341, 1329, 1298, 1336,
	1299, 1327, 1359, 273, 1324, 1417, 1376, 1433, 369, 270,
	1305, 1296, 206, 511, 1330, 435, 1346, 205, 1396, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 1440, 373, 1382, 0, 503, 405, 0,
	0, 0, 1421, 1420, 1351, 1361, 1423, 1370, 1408, 1356,
	1395, 1313, 1381, 1435, 1342, 1391, 1436, 326, 250, 328,
	204, 417, 504, 289, 0, 95, 0, 0, 0, 513,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 1338,
	1388, 616, 1430, 1339, 1390, 268, 324, 275, 267, 587,
	1441, 1422, 1302, 1369, 1429, 1364, 603, 0, 0, 231,
	1432, 1363, 0, 1393, 0, 1447, 1297, 1384, 0, 1300,
	1304, 1443, 1427, 1333, 278, 0, 0, 0, 0, 0,
	0, 0, 1360, 1371, 1405, 1409, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 1380, 0, 0,
	0, 1309, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	1312, 0, 1332, 1406, 0, 1295, 300, 1306, 406, 260,
	0, 459, 1413, 1426, 1355, 636, 1428, 1353, 1352, 1400,
	1310, 1419, 1345, 368, 1308, 333, 199, 227, 0, 1343,
	416, 467, 479, 1418, 1328, 1337, 256, 1335, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 1379, 1398,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 1307, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 1323, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 1414, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 1403, 1446, 429, 478, 242, 613,
	502, 201, 1317, 1322, 1315, 0, 257, 258, 1385, 581,
	1318, 1316, 1374, 1375, 1319, 1437, 1438, 1439, 1424, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 1407, 1311, 0,
	1320, 1321, 402, 1416, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 1378, 198, 223, 371, 1442, 460, 291,
	657, 625, 490, 620, 208, 225, 1314, 265, 1326, 1334,
	0, 1340, 1348, 1349, 1362, 1365, 1366, 1367, 1368, 1386,
	1387, 1389, 1397, 1399, 1402, 1404, 1411, 1425, 1445, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 1377, 1383, 384, 284, 308, 323, 1392, 624, 508,
	229, 472, 293, 253, 1410, 1412, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	1373, 1401, 379, 582, 583, 319, 400, 0, 0, 0,
	0, 0, 0, 1431, 1415, 534, 0, 1357, 1434, 1325,
	1344, 1444, 1347, 1350, 1394, 1303, 1372, 420, 1341, 1329,
	1298, 1336, 1299, 1327, 1359, 273, 1324, 1417, 1376, 1433,
	369, 270, 1305, 1296, 206, 511, 1330, 435, 1346, 205,
	1396, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 1440, 373, 1382, 0, 503,
	405, 0, 0, 0, 1421, 1420, 1351, 1361, 1423, 1370,
	1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	0, 513, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 1338, 1388, 616, 1430, 1339, 1390, 268, 324, 275,
	267, 587, 1441, 1422, 1302, 1369, 1429, 1364, 603, 0,
	0, 231, 1432, 1363, 0, 1393, 0, 1447, 1297, 1384,
	0, 1300, 1304, 1443, 1427, 1333, 278, 0, 0, 0,
	0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 1380,
	0, 0, 0, 1309, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 1312, 0, 1332, 1406, 0, 1295, 300, 1306,
	406, 260, 0, 459, 1413, 1426, 1355, 636, 1428, 1353,
	1352, 1400, 1310, 1419, 1345, 368, 1308, 333, 199, 227,
	0, 1343, 416, 467, 479, 1418, 1328, 1337, 256, 1335,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	1379, 1398, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 1307, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 1323, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 1414, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 1403, 1446, 429, 478,
	242, 613, 502, 201, 1317, 1322, 1315, 0, 257, 258,
	1385, 581, 1318, 1316, 1374, 1375, 1319, 1437, 1438, 1439,
	1424, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 1407,
	1311, 0, 1320, 1321, 402, 1416, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 1378, 198, 223, 371, 1442,
	460, 291, 657, 625, 490, 620, 208, 225, 1314, 265,
	1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366, 1367,
	1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411, 1425,
	1445, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 1377, 1383, 384, 284, 308, 323, 1392,
	624, 508, 229, 472, 293, 253, 1410, 1412, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 1373, 1401, 379, 582, 583, 319, 400, 0,
	0, 0, 0, 0, 0, 1431, 1415, 534, 0, 1357,
	1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 420,
	1341, 1329, 1298, 1336, 1299, 1327, 1359, 273, 1324, 1417,
	1376, 1433, 369, 270, 1305, 1296, 206, 511, 1330, 435,
	1346, 205, 1396, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 1440, 373, 1382,
	0, 503, 405, 0, 0, 0, 1421, 1420, 1351, 1361,
	1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391,
	1436, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 1338, 1388, 616, 1430, 1339, 1390, 268,
	324, 275, 267, 587, 1441, 1422, 1302, 1369, 1429, 1364,
	603, 0, 0, 231, 1432, 1363, 0, 1393, 0, 1447,
	1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 278, 0,
	0, 0, 0, 0, 0, 0, 1360, 1371, 1405, 1409,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 1380, 0, 0, 0, 1309, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1312, 0, 1332, 1406, 0, 1295,
	300, 1306, 406, 260, 0, 459, 1413, 1426, 1355, 636,
	1428, 1353, 1352, 1400, 1310, 1419, 1345, 368, 1308, 333,
	199, 227, 0, 1343, 416, 467, 479, 1418, 1328, 1337,
	256, 1335, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 1379, 1398, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 1307, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 1323, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 1414,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 1403, 1446,
	429, 478, 242, 613, 502, 201, 1317, 1322, 1315, 0,
	257, 258, 1385, 581, 1318, 1316, 1374, 1375, 1319, 1437,
	1438, 1439, 1424, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 1407, 1311, 0, 1320, 1321, 402, 1416, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 1378, 198, 223,
	371, 1442, 460, 291, 657, 625, 490, 620, 208, 225,
	1314, 265, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365,
	1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404,
	1411, 1425, 1445, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 1377, 1383, 384, 284, 308,
	323, 1392, 624, 508, 229, 472, 293, 253, 1410, 1412,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 1373, 1401, 379, 582, 583, 319,
	400, 0, 0, 0, 0, 0, 0, 1431, 1415, 534,
	0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303,
	1372, 420, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 273,
	1324, 1417, 1376, 1433, 369, 270, 1305, 1296, 206, 511,
	1330, 435, 1346, 205, 1396, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 1440,
	373, 1382, 0, 503, 405, 0, 0, 0, 1421, 1420,
	1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435,
	1342, 1391, 1436, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 1338, 1388, 616, 1430, 1339,
	1390, 268, 324, 275, 267, 587, 1441, 1422, 1302, 1369,
	1429, 1364, 603, 0, 0, 231, 1432, 1363, 0, 1393,
	0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333,
	278, 0, 0, 0, 0, 0, 0, 0, 1360, 1371,
	1405, 1409, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1380, 0, 0, 0, 1309, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 1312, 0, 1332, 1406,
	0, 1295, 300, 1306, 406, 260, 0, 459, 1413, 1426,
	1355, 636, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 368,
	1308, 333, 199, 227, 0, 1343, 416, 467, 479, 1418,
	1328, 1337, 256, 1335, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 1379, 1398, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	1307, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 1323, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 1414, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	1403, 1446, 429, 478, 242, 613, 502, 201, 1317, 1322,
	1315, 0, 257, 258, 1385, 581, 1318, 1316, 1374, 1375,
	1319, 1437, 1438, 1439, 1424, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 1407, 1311, 0, 1320, 1321, 402, 1416,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 1378,
	198, 223, 371, 1442, 460, 291, 657, 625, 490, 620,
	208, 225, 1314, 265, 1326, 1334, 0, 1340, 1348, 1349,
	1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399,
	1402, 1404, 1411, 1425, 1445, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 1377, 1383, 384,
	284, 308, 323, 1392, 624, 508, 229, 472, 293, 253,
	1410, 1412, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 1373, 1401, 379, 582,
	583, 319, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 771, 0, 0,
	0, 273, 776, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 783, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 95, 0, 0, 1032, 513, 966, 755,
	932, 970, 1033, 984, 985, 986, 971, 0, 240, 972,
	973, 247, 974, 0, 931, 814, 816, 815, 881, 882,
	883, 884, 885, 886, 887, 817, 818, 812, 979, 616,
	987, 988, 0, 268, 324, 275, 267, 587, 0, 0,
	2248, 2249, 2250, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 751, 768, 0, 782, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	766, 0, 0, 0, 0, 926, 0, 767, 0, 0,
	775, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	925, 0, 0, 636, 0, 0, 923, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 976, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 977, 978, 259, 659, 822,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 830, 831, 283, 310, 907, 906,
	905, 309, 311, 903, 904, 902, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 913,
	935, 924, 788, 789, 914, 915, 939, 916, 791, 792,
	936, 937, 785, 786, 790, 938, 940, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 927, 774, 773, 0, 780,
	781, 0, 810, 811, 813, 819, 820, 821, 832, 879,
	880, 888, 890, 891, 889, 892, 893, 894, 897, 898,
	899, 900, 895, 896, 901, 793, 797, 794, 795, 796,
	808, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 809, 950, 951, 952, 953, 954, 955, 825, 829,
	828, 826, 827, 823, 824, 851, 850, 852, 853, 854,
	855, 856, 857, 859, 858, 860, 861, 862, 863, 864,
	865, 833, 834, 837, 838, 836, 835, 839, 848, 849,
	840, 841, 842, 843, 844, 845, 847, 846, 866, 867,
	868, 869, 870, 872, 871, 875, 876, 874, 873, 878,
	877, 772, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 941, 265, 942, 0, 0, 946,
	0, 0, 0, 948, 947, 0, 949, 911, 910, 0,
	0, 943, 944, 0, 945, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 956, 957, 958, 959, 960, 961, 962,
	963, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 1031, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 771, 0, 0, 0, 273, 776, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 783, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 779, 0, 0, 0, 0, 0, 0, 2457,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 95,
	0, 0, 1032, 513, 966, 755, 932, 970, 1033, 984,
	985, 986, 971, 0, 240, 972, 973, 247, 974, 0,
	931, 814, 816, 815, 881, 882, 883, 884, 885, 886,
	887, 817, 818, 812, 979, 616, 987, 988, 2458, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 751, 768, 0, 782, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 766, 0, 0, 0,
	0, 926, 0, 767, 0, 0, 775, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 925, 0, 0, 636,
	0, 0, 923, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	976, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 977, 978, 259, 659, 822, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	830, 831, 283, 310, 907, 906, 905, 309, 311, 903,
	904, 902, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 913, 935, 924, 788, 789,
	914, 915, 939, 916, 791, 792, 936, 937, 785, 786,
	790, 938, 940, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 927, 774, 773, 0, 780, 781, 0, 810, 811,
	813, 819, 820, 821, 832, 879, 880, 888, 890, 891,
	889, 892, 893, 894, 897, 898, 899, 900, 895, 896,
	901, 793, 797, 794, 795, 796, 808, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 809, 950, 951,
	952, 953, 954, 955, 825, 829, 828, 826, 827, 823,
	824, 851, 850, 852, 853, 854, 855, 856, 857, 859,
	858, 860, 861, 862, 863, 864, 865, 833, 834, 837,
	838, 836, 835, 839, 848, 849, 840, 841, 842, 843,
	844, 845, 847, 846, 866, 867, 868, 869, 870, 872,
	871, 875, 876, 874, 873, 878, 877, 772, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	941, 265, 942, 0, 0, 946, 0, 0, 0, 948,
	947, 0, 949, 911, 910, 0, 0, 943, 944, 0,
	945, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 956,
	957, 958, 959, 960, 961, 962, 963, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 1031, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 86, 534, 0, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 771,
	0, 0, 0, 273, 776, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 1727, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 95, 0, 0, 1032, 513,
	966, 755, 932, 970, 1033, 984, 985, 986, 971, 0,
	240, 972, 973, 247, 974, 0, 931, 814, 816, 815,
	881, 882, 883, 884, 885, 886, 887, 817, 818, 812,
	979, 616, 987, 988, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 751, 768, 0,
	782, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 766, 0, 0, 0, 0, 926, 0, 767,
	0, 0, 775, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 925, 0, 0, 636, 0, 0, 923, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 976, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 977, 978, 259,
	659, 822, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 830, 831, 283, 310,
	907, 906, 905, 309, 311, 903, 904, 902, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 913, 935, 924, 788, 789, 914, 915, 939, 916,
	791, 792, 936, 937, 785, 786, 790, 938, 940, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 927, 774, 773,
	0, 780, 781, 0, 810, 811, 813, 819, 820, 821,
	832, 879, 880, 888, 890, 891, 889, 892, 893, 894,
	897, 898, 899, 900, 895, 896, 901, 793, 797, 794,
	795, 796, 808, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 809, 950, 951, 952, 953, 954, 955,
	825, 829, 828, 826, 827, 823, 824, 851, 850, 852,
	853, 854, 855, 856, 857, 859, 858, 860, 861, 862,
	863, 864, 865, 833, 834, 837, 838, 836, 835, 839,
	848, 849, 840, 841, 842, 843, 844, 845, 847, 846,
	866, 867, 868, 869, 870, 872, 871, 875, 876, 874,
	873, 878, 877, 772, 198, 223, 371, 94, 460, 291,
	657, 625, 490, 620, 208, 225, 941, 265, 942, 0,
	0, 946, 0, 0, 0, 948, 947, 0, 949, 911,
	910, 0, 0, 943, 944, 0, 945, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 956, 957, 958, 959, 960,
	961, 962, 963, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 1031, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 771, 0, 0, 0, 273,
	776, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 783,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 95, 0, 0, 1032, 513, 966, 755, 932, 970,
	1033, 984, 985, 986, 971, 0, 240, 972, 973, 247,
	974, 0, 931, 814, 816, 815, 881, 882, 883, 884,
	885, 886, 887, 817, 818, 812, 979, 616, 987, 988,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 751, 768, 0, 782, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 766, 0,
	0, 0, 0, 926, 0, 767, 0, 0, 775, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 925, 0,
	0, 636, 0, 0, 923, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 976, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 4118, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 977, 978, 259, 659, 822, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 830, 831, 283, 310, 907, 906, 905, 309,
	311, 903, 904, 902, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 913, 935, 924,
	788, 789, 914, 915, 939, 916, 791, 792, 936, 937,
	785, 786, 790, 938, 940, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 927, 774, 773, 0, 780, 781, 0,
	810, 811, 813, 819, 820, 821, 832, 879, 880, 888,
	890, 891, 889, 892, 893, 894, 897, 898, 899, 900,
	895, 896, 901, 793, 797, 794, 795, 796, 808, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 809,
	950, 951, 952, 953, 954, 955, 825, 829, 828, 826,
	827, 823, 824, 851, 850, 852, 853, 854, 855, 856,
	857, 859, 858, 860, 861, 862, 863, 864, 865, 833,
	834, 837, 838, 836, 835, 839, 848, 849, 840, 841,
	842, 843, 844, 845, 847, 846, 866, 867, 868, 869,
	870, 872, 871, 875, 876, 874, 873, 878, 877, 772,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 941, 265, 942, 0, 0, 946, 0, 0,
	0, 948, 947, 0, 949, 911, 910, 0, 0, 943,
	944, 0, 945, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 956, 957, 958, 959, 960, 961, 962, 963, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	1031, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 771, 0, 0, 0, 273, 776, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 783, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 95, 0, 1764,
	1032, 513, 966, 755, 932, 970, 1033, 984, 985, 986,
	971, 0, 240, 972, 973, 247, 974, 0, 931, 814,
	816, 815, 881, 882, 883, 884, 885, 886, 887, 817,
	818, 812, 979, 616, 987, 988, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 751,
	768, 0, 782, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 766, 0, 0, 0, 0, 926,
	0, 767, 0, 0, 775, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 925, 0, 0, 636, 0, 0,
	923, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 976, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 977,
	978, 259, 659, 822, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 830, 831,
	283, 310, 907, 906, 905, 309, 311, 903, 904, 902,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 913, 935, 924, 788, 789, 914, 915,
	939, 916, 791, 792, 936, 937, 785, 786, 790, 938,
	940, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 927,
	774, 773, 0, 780, 781, 0, 810, 811, 813, 819,
	820, 821, 832, 879, 880, 888, 890, 891, 889, 892,
	893, 894, 897, 898, 899, 900, 895, 896, 901, 793,
	797, 794, 795, 796, 808, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 809, 950, 951, 952, 953,
	954, 955, 825, 829, 828, 826, 827, 823, 824, 851,
	850, 852, 853, 854, 855, 856, 857, 859, 858, 860,
	861, 862, 863, 864, 865, 833, 834, 837, 838, 836,
	835, 839, 848, 849, 840, 841, 842, 843, 844, 845,
	847, 846, 866, 867, 868, 869, 870, 872, 871, 875,
	876, 874, 873, 878, 877, 772, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 941, 265,
	942, 0, 0, 946, 0, 0, 0, 948, 947, 0,
	949, 911, 910, 0, 0, 943, 944, 0, 945, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 956, 957, 958,
	959, 960, 961, 962, 963, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 1031, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 771, 0, 0,
	0, 273, 776, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 783, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 95, 0, 0, 1032, 513, 966, 755,
	932, 970, 1033, 984, 985, 986, 971, 0, 240, 972,
	973, 247, 974, 0, 931, 814, 816, 815, 881, 882,
	883, 884, 885, 886, 887, 817, 818, 812, 979, 616,
	987, 988, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 751, 768, 0, 782, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	766, 1079, 0, 0, 0, 926, 0, 767, 0, 0,
	775, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	925, 0, 0, 636, 0, 0, 923, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 976, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 977, 978, 259, 659, 822,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 830, 831, 283, 310, 907, 906,
	905, 309, 311, 903, 904, 902, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 913,
	935, 924, 788, 789, 914, 915, 939, 916, 791, 792,
	936, 937, 785, 786, 790, 938, 940, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 927, 774, 773, 0, 780,
	781, 0, 810, 811, 813, 819, 820, 821, 832, 879,
	880, 888, 890, 891, 889, 892, 893, 894, 897, 898,
	899, 900, 895, 896, 901, 793, 797, 794, 795, 796,
	808, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 809, 950, 951, 952, 953, 954, 955, 825, 829,
	828, 826, 827, 823, 824, 851, 850, 852, 853, 854,
	855, 856, 857, 859, 858, 860, 861, 862, 863, 864,
	865, 833, 834, 837, 838, 836, 835, 839, 848, 849,
	840, 841, 842, 843, 844, 845, 847, 846, 866, 867,
	868, 869, 870, 872, 871, 875, 876, 874, 873, 878,
	877, 772, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 941, 265, 942, 0, 0, 946,
	0, 0, 0, 948, 947, 0, 949, 911, 910, 0,
	0, 943, 944, 0, 945, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 956, 957, 958, 959, 960, 961, 962,
	963, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 1031, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 771, 0, 0, 0, 273, 776, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 783, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 95,
	0, 0, 1032, 513, 966, 755, 932, 970, 1033, 984,
	985, 986, 971, 0, 240, 972, 973, 247, 974, 0,
	931, 814, 816, 815, 881, 882, 883, 884, 885, 886,
	887, 817, 818, 812, 979, 616, 987, 988, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 751, 768, 0, 782, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 766, 0, 0, 0,
	0, 926, 0, 767, 0, 0, 775, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 925, 0, 0, 636,
	0, 0, 923, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	976, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 977, 978, 259, 659, 822, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	830, 831, 283, 310, 907, 906, 905, 309, 311, 903,
	904, 902, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 913, 935, 924, 788, 789,
	914, 915, 939, 916, 791, 792, 936, 937, 785, 786,
	790, 938, 940, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 927, 774, 773, 0, 780, 781, 0, 810, 811,
	813, 819, 820, 821, 832, 879, 880, 888, 890, 891,
	889, 892, 893, 894, 897, 898, 899, 900, 895, 896,
	901, 793, 797, 794, 795, 796, 808, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 809, 950, 951,
	952, 953, 954, 955, 825, 829, 828, 826, 827, 823,
	824, 851, 850, 852, 853, 854, 855, 856, 857, 859,
	858, 860, 861, 862, 863, 864, 865, 833, 834, 837,
	838, 836, 835, 839, 848, 849, 840, 841, 842, 843,
	844, 845, 847, 846, 866, 867, 868, 869, 870, 872,
	871, 875, 876, 874, 873, 878, 877, 772, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	941, 265, 942, 0, 0, 946, 0, 0, 0, 948,
	947, 0, 949, 911, 910, 0, 0, 943, 944, 0,
	945, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 956,
	957, 958, 959, 960, 961, 962, 963, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 1031, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 771,
	0, 0, 0, 273, 776, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 783, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 95, 0, 0, 1032, 513,
	966, 755, 932, 970, 1033, 984, 985, 986, 971, 0,
	240, 972, 973, 247, 974, 0, 931, 814, 816, 815,
	881, 882, 883, 884, 885, 886, 887, 817, 818, 812,
	979, 616, 987, 988, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 751, 768, 0,
	782, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 766, 0, 0, 0, 0, 926, 0, 767,
	0, 0, 775, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 3193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 925, 0, 0, 636, 0, 0, 923, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 976, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 977, 978, 259,
	659, 822, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 830, 831, 283, 310,
	907, 906, 905, 309, 311, 903, 904, 902, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 913, 935, 924, 788, 789, 914, 915, 939, 916,
	791, 792, 936, 937, 785, 786, 790, 938, 940, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 927, 774, 773,
	0, 780, 781, 0, 810, 811, 813, 819, 820, 821,
	832, 879, 880, 888, 890, 891, 889, 892, 893, 894,
	897, 898, 899, 900, 895, 896, 901, 793, 797, 794,
	795, 796, 808, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 809, 950, 951, 952, 953, 954, 955,
	825, 829, 828, 826, 827, 823, 824, 851, 850, 852,
	853, 854, 855, 856, 857, 859, 858, 860, 861, 862,
	863, 864, 865, 833, 834, 837, 838, 836, 835, 839,
	848, 849, 840, 841, 842, 843, 844, 845, 847, 846,
	866, 867, 868, 869, 870, 872, 871, 875, 876, 874,
	873, 878, 877, 772, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 941, 265, 942, 0,
	0, 946, 0, 0, 0, 948, 947, 0, 949, 911,
	910, 0, 0, 943, 944, 0, 945, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 956, 957, 958, 959, 960,
	961, 962, 963, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 1031, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 771, 0, 0, 0, 273,
	776, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 783,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 95, 0, 0, 1032, 513, 966, 755, 932, 970,
	1033, 984, 985, 986, 971, 0, 240, 972, 973, 247,
	974, 0, 931, 814, 816, 815, 881, 882, 883, 884,
	885, 886, 887, 817, 818, 812, 979, 616, 987, 988,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 751, 768, 0, 782, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 766, 0,
	0, 0, 0, 926, 0, 767, 0, 0, 775, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 3189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 925, 0,
	0, 636, 0, 0, 923, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 976, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 977, 978, 259, 659, 822, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 830, 831, 283, 310, 907, 906, 905, 309,
	311, 903, 904, 902, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 913, 935, 924,
	788, 789, 914, 915, 939, 916, 791, 792, 936, 937,
	785, 786, 790, 938, 940, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 927, 774, 773, 0, 780, 781, 0,
	810, 811, 813, 819, 820, 821, 832, 879, 880, 888,
	890, 891, 889, 892, 893, 894, 897, 898, 899, 900,
	895, 896, 901, 793, 797, 794, 795, 796, 808, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 809,
	950, 951, 952, 953, 954, 955, 825, 829, 828, 826,
	827, 823, 824, 851, 850, 852, 853, 854, 855, 856,
	857, 859, 858, 860, 861, 862, 863, 864, 865, 833,
	834, 837, 838, 836, 835, 839, 848, 849, 840, 841,
	842, 843, 844, 845, 847, 846, 866, 867, 868, 869,
	870, 872, 871, 875, 876, 874, 873, 878, 877, 772,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 941, 265, 942, 0, 0, 946, 0, 0,
	0, 948, 947, 0, 949, 911, 910, 0, 0, 943,
	944, 0, 945, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 956, 957, 958, 959, 960, 961, 962, 963, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	1031, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 771, 0, 0, 0, 273, 776, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 783, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 95, 0, 0,
	1032, 513, 966, 1100, 932, 970, 1033, 984, 985, 986,
	971, 0, 240, 972, 973, 247, 974, 0, 931, 814,
	816, 815, 881, 882, 883, 884, 885, 886, 887, 817,
	818, 812, 979, 616, 987, 988, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 0, 782, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 766, 0, 0, 0, 0, 926,
	0, 767, 0, 0, 775, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 925, 0, 0, 636, 0, 0,
	923, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 976, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 977,
	978, 259, 659, 822, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 830, 831,
	283, 310, 907, 906, 905, 309, 311, 903, 904, 902,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 913, 935, 924, 788, 789, 914, 915,
	939, 916, 791, 792, 936, 937, 785, 786, 790, 938,
	940, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 927,
	774, 773, 0, 780, 781, 0, 810, 811, 813, 819,
	820, 821, 832, 879, 880, 888, 890, 891, 889, 892,
	893, 894, 897, 898, 899, 900, 895, 896, 901, 793,
	797, 794, 795, 796, 808, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 809, 950, 951, 952, 953,
	954, 955, 825, 829, 828, 826, 827, 823, 824, 851,
	850, 852, 853, 854, 855, 856, 857, 859, 858, 860,
	861, 862, 863, 864, 865, 833, 834, 837, 838, 836,
	835, 839, 848, 849, 840, 841, 842, 843, 844, 845,
	847, 846, 866, 867, 868, 869, 870, 872, 871, 875,
	876, 874, 873, 878, 877, 772, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 941, 265,
	942, 0, 0, 946, 0, 0, 0, 948, 947, 0,
	949, 911, 910, 0, 0, 943, 944, 0, 945, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 956, 957, 958,
	959, 960, 961, 962, 963, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 1031, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 771, 0, 0,
	0, 273, 776, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 783, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 95, 0, 0, 1032, 513, 966, 1100,
	932, 970, 1033, 984, 985, 986, 971, 0, 240, 972,
	973, 247, 974, 0, 931, 814, 816, 815, 881, 882,
	883, 884, 885, 886, 887, 817, 818, 812, 979, 616,
	987, 988, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 782, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	766, 0, 0, 0, 0, 926, 0, 767, 0, 0,
	775, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 2139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	925, 0, 0, 636, 0, 0, 923, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 976, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 977, 978, 259, 659, 822,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 830, 831, 283, 310, 907, 906,
	905, 309, 311, 903, 904, 902, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 913,
	935, 924, 788, 789, 914, 915, 939, 916, 791, 792,
	936, 937, 785, 786, 790, 938, 940, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 927, 774, 773, 0, 780,
	781, 0, 810, 811, 813, 819, 820, 821, 832, 879,
	880, 888, 890, 891, 889, 892, 893, 894, 897, 898,
	899, 900, 895, 896, 901, 793, 797, 794, 795, 796,
	808, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 809, 950, 951, 952, 953, 954, 955, 825, 829,
	828, 826, 827, 823, 824, 851, 850, 852, 853, 854,
	855, 856, 857, 859, 858, 860, 861, 862, 863, 864,
	865, 833, 834, 837, 838, 836, 835, 839, 848, 849,
	840, 841, 842, 843, 844, 845, 847, 846, 866, 867,
	868, 869, 870, 872, 871, 875, 876, 874, 873, 878,
	877, 772, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 941, 265, 942, 0, 0, 946,
	0, 0, 0, 948, 947, 0, 949, 911, 910, 0,
	0, 943, 944, 0, 945, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 956, 957, 958, 959, 960, 961, 962,
	963, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 1031, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 771, 0, 0, 0, 273, 776, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 783, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 95,
	0, 0, 1032, 513, 966, 1100, 932, 970, 1033, 984,
	985, 986, 971, 0, 240, 972, 973, 247, 974, 0,
	931, 814, 816, 815, 881, 882, 883, 884, 885, 886,
	887, 817, 818, 812, 979, 616, 987, 988, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 782, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 766, 0, 0, 0,
	0, 926, 0, 767, 0, 0, 775, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 2137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 925, 0, 0, 636,
	0, 0, 923, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	976, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 977, 978, 259, 659, 822, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	830, 831, 283, 310, 907, 906, 905, 309, 311, 903,
	904, 902, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 913, 935, 924, 788, 789,
	914, 915, 939, 916, 791, 792, 936, 937, 785, 786,
	790, 938, 940, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 927, 774, 773, 0, 780, 781, 0, 810, 811,
	813, 819, 820, 821, 832, 879, 880, 888, 890, 891,
	889, 892, 893, 894, 897, 898, 899, 900, 895, 896,
	901, 793, 797, 794, 795, 796, 808, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 809, 950, 951,
	952, 953, 954, 955, 825, 829, 828, 826, 827, 823,
	824, 851, 850, 852, 853, 854, 855, 856, 857, 859,
	858, 860, 861, 862, 863, 864, 865, 833, 834, 837,
	838, 836, 835, 839, 848, 849, 840, 841, 842, 843,
	844, 845, 847, 846, 866, 867, 868, 869, 870, 872,
	871, 875, 876, 874, 873, 878, 877, 772, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	941, 265, 942, 0, 0, 946, 0, 0, 0, 948,
	947, 0, 949, 911, 910, 0, 0, 943, 944, 0,
	945, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 956,
	957, 958, 959, 960, 961, 962, 963, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 1031, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 0, 513,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 1150, 636, 0, 0, 0, 0,
	0, 1147, 1148, 368, 1108, 333, 199, 227, 1141, 1145,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 86, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 97,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 95, 0, 0, 0, 513, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 94, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	2444, 0, 0, 2443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 86, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 97, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 95, 0, 1764,
	0, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 94,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 1792, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 1794, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 1796, 513, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 1489, 0, 1490, 1491, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 95,
	0, 0, 0, 513, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 2444, 0,
	0, 2443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 2389, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 1977, 513,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 2387,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	1108, 333, 199, 227, 1106, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	2389, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	1977, 513, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 1764, 0, 513, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 3749, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 2148, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 2900, 513,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 2883, 0, 0, 0, 0, 240, 0, 0, 247,
	2884, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 1815, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	1814, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 4093, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 1977, 513,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 3749, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 95, 0, 0,
	0, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 2445, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 1796, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 0, 513,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 2095, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 2086, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 1944, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	0, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 1942,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 1940, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 1938, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 0, 513,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 1936, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 1932, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	0, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 1930,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 1928, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 1903, 0, 0, 0, 513,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 1800, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 413, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 95, 0, 0,
	0, 513, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 1465, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 400, 0, 379, 582, 583, 319,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 511, 0, 435, 0, 205, 0, 493,
	255, 380, 377, 590, 285, 276, 272, 252, 320, 389,
	432, 524, 426, 0, 373, 0, 0, 503, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 417, 504, 289, 0, 0, 0, 0, 0, 513,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 616, 0, 0, 0, 268, 324, 275, 267, 587,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 406, 260,
	0, 459, 0, 682, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	416, 467, 479, 0, 0, 0, 256, 0, 477, 430,
	611, 235, 287, 464, 437, 475, 445, 290, 0, 0,
	476, 375, 592, 455, 608, 637, 638, 266, 410, 622,
	528, 630, 655, 228, 263, 424, 512, 614, 500, 401,
	588, 589, 332, 499, 298, 203, 372, 643, 226, 485,
	374, 244, 233, 594, 619, 302, 254, 292, 462, 650,
	215, 523, 605, 241, 489, 0, 0, 658, 249, 510,
	617, 606, 217, 601, 509, 397, 329, 330, 216, 0,
	463, 271, 296, 0, 0, 261, 419, 596, 597, 259,
	659, 230, 629, 222, 0, 628, 412, 591, 602, 398,
	386, 221, 600, 396, 385, 337, 358, 359, 283, 310,
	452, 378, 453, 309, 311, 408, 407, 409, 209, 615,
	633, 0, 210, 0, 505, 618, 660, 457, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 423, 451, 447, 456, 0, 585, 609, 623, 635,
	641, 642, 644, 645, 646, 647, 648, 651, 649, 411,
	314, 501, 336, 376, 0, 0, 429, 478, 242, 613,
	502, 201, 0, 0, 0, 0, 257, 258, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 656, 514, 520,
	515, 516, 517, 518, 519, 0, 521, 0, 0, 0,
	0, 0, 402, 0, 598, 599, 679, 387, 492, 610,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 394,
	403, 584, 315, 218, 219, 220, 530, 531, 532, 533,
	626, 627, 631, 207, 468, 469, 470, 471, 295, 621,
	312, 474, 473, 334, 335, 382, 454, 546, 548, 559,
	563, 565, 567, 573, 576, 547, 549, 560, 564, 566,
	568, 574, 577, 536, 538, 540, 542, 555, 554, 551,
	579, 580, 557, 562, 541, 553, 558, 571, 578, 575,
	535, 539, 543, 552, 570, 569, 550, 561, 572, 556,
	544, 537, 545, 0, 198, 223, 371, 0, 460, 291,
	657, 625, 490, 620, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 390, 391, 392,
	393, 413, 414, 415, 418, 421, 422, 425, 427, 428,
	431, 436, 440, 441, 442, 444, 446, 448, 461, 466,
	480, 481, 482, 483, 484, 487, 488, 494, 495, 496,
	497, 498, 506, 507, 522, 593, 595, 612, 632, 639,
	486, 388, 434, 458, 586, 304, 305, 449, 450, 317,
	318, 653, 654, 303, 607, 640, 604, 652, 634, 443,
	381, 0, 0, 384, 284, 308, 323, 0, 624, 508,
	229, 472, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 395, 404, 433, 439, 299, 274, 246,
	465, 243, 491, 525, 526, 527, 529, 399, 269, 438,
	400, 0, 379, 582, 583, 319, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 511,
	0, 435, 0, 205, 0, 493, 255, 380, 377, 590,
	285, 276, 272, 252, 320, 389, 432, 524, 426, 0,
	373, 0, 0, 503, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 417, 504, 289,
	0, 0, 0, 0, 0, 513, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 616, 0, 0,
	0, 268, 324, 275, 267, 587, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 406, 260, 0, 459, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 416, 467, 479, 0,
	0, 0, 256, 0, 477, 430, 611, 235, 287, 464,
	437, 475, 445, 290, 0, 0, 476, 375, 592, 455,
	608, 637, 638, 266, 410, 622, 528, 630, 655, 228,
	263, 424, 512, 614, 500, 401, 588, 589, 332, 499,
	298, 203, 372, 643, 226, 485, 374, 244, 233, 594,
	619, 302, 254, 292, 462, 650, 215, 523, 605, 241,
	489, 0, 0, 658, 249, 510, 617, 606, 217, 601,
	509, 397, 329, 330, 216, 0, 463, 271, 296, 0,
	0, 261, 419, 596, 597, 259, 659, 230, 629, 222,
	0, 628, 412, 591, 602, 398, 386, 221, 600, 396,
	385, 337, 358, 359, 283, 310, 452, 378, 453, 309,
	311, 408, 407, 409, 209, 615, 633, 0, 210, 0,
	505, 618, 660, 457, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 423, 451, 447,
	456, 0, 585, 609, 623, 635, 641, 642, 644, 645,
	646, 647, 648, 651, 649, 411, 314, 501, 336, 376,
	0, 0, 429, 478, 242, 613, 502, 201, 0, 0,
	0, 0, 257, 258, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 656, 514, 520, 515, 516, 517, 518,
	519, 0, 521, 0, 0, 0, 0, 0, 402, 0,
	598, 599, 679, 387, 492, 610, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 394, 403, 584, 315, 218,
	219, 220, 530, 531, 532, 533, 626, 627, 631, 207,
	468, 469, 470, 471, 295, 621, 312, 474, 473, 334,
	335, 382, 454, 546, 548, 559, 563, 565, 567, 573,
	576, 547, 549, 560, 564, 566, 568, 574, 577, 536,
	538, 540, 542, 555, 554, 551, 579, 580, 557, 562,
	541, 553, 558, 571, 578, 575, 535, 539, 543, 552,
	570, 569, 550, 561, 572, 556, 544, 537, 545, 0,
	198, 223, 371, 0, 460, 291, 657, 625, 490, 620,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 390, 391, 392, 393, 4159, 414, 415,
	418, 421, 422, 425, 427, 428, 431, 436, 440, 441,
	442, 444, 446, 448, 461, 466, 480, 481, 482, 483,
	484, 487, 488, 494, 495, 496, 497, 498, 506, 507,
	522, 593, 595, 612, 632, 639, 486, 388, 434, 458,
	586, 304, 305, 449, 450, 317, 318, 653, 654, 303,
	607, 640, 604, 652, 634, 443, 381, 0, 0, 384,
	284, 308, 323, 0, 624, 508, 229, 472, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 395,
	404, 433, 439, 299, 274, 246, 465, 243, 491, 525,
	526, 527, 529, 399, 269, 438, 400, 0, 379, 582,
	583, 319, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 511, 0, 435, 0, 205,
	0, 493, 255, 380, 377, 590, 285, 276, 272, 252,
	320, 389, 432, 524, 426, 0, 373, 0, 0, 503,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 417, 504, 289, 0, 0, 0, 0,
	0, 513, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 616, 0, 0, 0, 268, 324, 275,
	267, 587, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	406, 260, 0, 459, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 416, 467, 479, 0, 0, 0, 256, 0,
	477, 430, 611, 235, 287, 464, 437, 475, 445, 290,
	0, 0, 476, 375, 592, 455, 608, 637, 638, 266,
	410, 622, 528, 630, 655, 228, 263, 424, 512, 614,
	500, 401, 588, 589, 332, 499, 298, 203, 372, 643,
	226, 485, 374, 244, 233, 594, 619, 302, 254, 292,
	462, 650, 215, 523, 605, 241, 489, 0, 0, 658,
	249, 510, 617, 606, 217, 601, 509, 397, 329, 330,
	216, 0, 463, 271, 296, 0, 0, 261, 419, 596,
	597, 259, 659, 230, 629, 222, 0, 628, 412, 591,
	602, 398, 386, 221, 600, 396, 385, 337, 358, 359,
	283, 310, 452, 378, 453, 309, 311, 408, 407, 409,
	209, 615, 633, 0, 210, 0, 505, 618, 660, 457,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 423, 451, 447, 456, 0, 585, 609,
	623, 635, 641, 642, 644, 645, 646, 647, 648, 651,
	649, 411, 314, 501, 336, 376, 0, 0, 429, 478,
	242, 613, 502, 201, 0, 0, 0, 0, 257, 258,
	0, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 656,
	514, 520, 515, 516, 517, 518, 519, 0, 521, 0,
	0, 0, 0, 0, 402, 0, 598, 599, 679, 387,
	492, 610, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 394, 403, 584, 315, 218, 219, 220, 530, 531,
	532, 533, 626, 627, 631, 207, 468, 469, 470, 471,
	295, 621, 312, 474, 473, 334, 335, 382, 454, 546,
	548, 559, 563, 565, 567, 573, 576, 547, 549, 560,
	564, 566, 568, 574, 577, 536, 538, 540, 542, 555,
	554, 551, 579, 580, 557, 562, 541, 553, 558, 571,
	578, 575, 535, 539, 543, 552, 570, 569, 550, 561,
	572, 556, 544, 537, 545, 0, 198, 223, 371, 0,
	460, 291, 657, 625, 490, 620, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 390,
	391, 392, 393, 413, 414, 415, 418, 421, 422, 425,
	427, 428, 431, 436, 440, 441, 442, 444, 446, 448,
	461, 466, 480, 481, 482, 483, 484, 487, 488, 494,
	495, 496, 497, 498, 506, 507, 522, 593, 595, 612,
	632, 639, 486, 388, 434, 458, 586, 304, 305, 449,
	450, 317, 318, 653, 654, 303, 607, 640, 604, 652,
	634, 443, 381, 0, 0, 384, 284, 308, 323, 0,
	624, 508, 229, 472, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 395, 404, 433, 439, 299,
	274, 246, 465, 243, 491, 525, 526, 527, 529, 399,
	269, 438, 400, 0, 379, 582, 583, 319, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 511, 0, 435, 0, 205, 0, 493, 255, 380,
	377, 590, 285, 276, 272, 252, 320, 389, 432, 524,
	426, 0, 373, 0, 0, 503, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 417,
	504, 289, 0, 0, 0, 0, 0, 513, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 616,
	0, 0, 0, 268, 324, 275, 267, 587, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 406, 260, 0, 459,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 416, 467,
	479, 0, 0, 0, 256, 0, 477, 430, 611, 235,
	287, 464, 437, 475, 445, 290, 0, 0, 476, 375,
	592, 455, 608, 637, 638, 266, 410, 622, 528, 630,
	655, 228, 263, 424, 512, 614, 500, 401, 588, 589,
	332, 499, 298, 203, 372, 643, 226, 485, 374, 244,
	233, 594, 619, 302, 254, 292, 462, 650, 215, 523,
	605, 241, 489, 0, 0, 658, 249, 510, 617, 606,
	217, 601, 509, 397, 329, 330, 216, 0, 463, 271,
	296, 0, 0, 261, 419, 596, 597, 259, 659, 230,
	629, 222, 0, 628, 412, 591, 602, 398, 386, 221,
	600, 396, 385, 337, 358, 359, 283, 310, 452, 378,
	453, 309, 311, 408, 407, 409, 209, 615, 633, 0,
	210, 0, 505, 618, 660, 457, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 423,
	451, 447, 456, 0, 585, 609, 623, 635, 641, 642,
	644, 645, 646, 647, 648, 651, 649, 411, 314, 501,
	336, 376, 0, 0, 429, 478, 242, 613, 502, 201,
	0, 0, 0, 0, 257, 258, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 656, 514, 520, 515, 516,
	517, 518, 519, 0, 521, 0, 0, 0, 0, 0,
	402, 0, 598, 599, 679, 387, 492, 610, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 394, 403, 584,
	315, 218, 219, 220, 530, 531, 532, 533, 626, 627,
	631, 207, 468, 469, 470, 471, 295, 621, 312, 474,
	473, 334, 335, 382, 454, 546, 548, 559, 563, 565,
	567, 573, 576, 547, 549, 560, 564, 566, 568, 574,
	577, 536, 538, 540, 542, 555, 554, 551, 579, 580,
	557, 562, 541, 553, 558, 571, 578, 575, 535, 539,
	543, 552, 570, 569, 550, 561, 572, 556, 544, 537,
	545, 0, 198, 223, 371, 0, 460, 291, 657, 625,
	490, 620, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 390, 391, 392, 393, 413,
	414, 415, 418, 421, 422, 425, 427, 428, 431, 436,
	440, 441, 442, 444, 446, 448, 461, 466, 480, 481,
	482, 483, 484, 487, 488, 494, 495, 496, 497, 498,
	506, 507, 522, 593, 595, 612, 632, 639, 486, 388,
	434, 458, 586, 304, 305, 449, 450, 317, 318, 653,
	654, 303, 607, 640, 604, 652, 634, 443, 381, 0,
	0, 384, 284, 308, 323, 0, 624, 508, 229, 472,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 395, 404, 433, 439, 299, 274, 246, 465, 243,
	491, 525, 526, 527, 529, 399, 269, 438, 400, 0,
	379, 582, 583, 319, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 511, 0, 435,
	0, 205, 0, 493, 255, 380, 377, 590, 285, 276,
	272, 252, 320, 389, 432, 524, 426, 0, 373, 0,
	0, 503, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 417, 504, 289, 0, 0,
	0, 0, 0, 513, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 616, 0, 0, 0, 268,
	324, 275, 267, 587, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 406, 260, 0, 459, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 416, 467, 479, 0, 0, 0,
	256, 0, 477, 430, 611, 235, 287, 464, 437, 475,
	445, 290, 0, 0, 476, 375, 592, 455, 608, 637,
	638, 266, 410, 622, 528, 630, 655, 228, 263, 424,
	512, 614, 500, 401, 588, 589, 332, 499, 298, 203,
	372, 643, 226, 485, 374, 244, 233, 594, 619, 302,
	254, 292, 462, 650, 215, 523, 605, 241, 489, 0,
	0, 658, 249, 510, 617, 606, 217, 601, 509, 397,
	329, 330, 216, 0, 463, 271, 296, 0, 0, 261,
	419, 596, 597, 259, 659, 230, 629, 222, 0, 628,
	412, 591, 602, 398, 386, 221, 600, 396, 385, 337,
	358, 359, 283, 310, 452, 378, 453, 309, 311, 408,
	407, 409, 209, 615, 633, 0, 210, 0, 505, 618,
	660, 457, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 423, 451, 447, 456, 0,
	585, 609, 623, 635, 641, 642, 644, 645, 646, 647,
	648, 651, 649, 411, 314, 501, 336, 376, 0, 0,
	429, 478, 242, 613, 502, 201, 0, 0, 0, 0,
	257, 258, 0, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 656, 514, 520, 515, 516, 517, 518, 519, 0,
	521, 0, 0, 0, 0, 0, 402, 0, 598, 599,
	679, 387, 492, 610, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 394, 403, 584, 315, 218, 219, 220,
	530, 531, 532, 533, 626, 627, 631, 207, 468, 469,
	470, 471, 295, 621, 312, 474, 473, 334, 335, 382,
	454, 546, 548, 559, 563, 565, 567, 573, 576, 547,
	549, 560, 564, 566, 568, 574, 577, 536, 538, 540,
	542, 555, 554, 551, 579, 580, 557, 562, 541, 553,
	558, 571, 578, 575, 535, 539, 543, 552, 570, 569,
	550, 561, 572, 556, 544, 537, 545, 0, 198, 223,
	371, 0, 460, 291, 657, 625, 490, 620, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 390, 391, 392, 393, 413, 414, 415, 418, 421,
	422, 425, 427, 428, 431, 436, 440, 441, 442, 444,
	446, 448, 461, 466, 480, 481, 482, 483, 484, 487,
	488, 494, 495, 496, 497, 498, 506, 507, 522, 593,
	595, 612, 632, 639, 486, 388, 434, 458, 586, 304,
	305, 449, 450, 317, 318, 653, 654, 303, 607, 640,
	604, 652, 634, 443, 381, 0, 0, 384, 284, 308,
	323, 0, 624, 508, 229, 472, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 395, 404, 433,
	439, 299, 274, 246, 465, 243, 491, 525, 526, 527,
	529, 399, 269, 438, 0, 0, 379, 582, 583, 319,
}

var yyPact = [...]int{
	-1000, -1000, 4559, -1000, -555, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2542, 2773, -1000, -1000, -1000, -1000, 2685, -1000, 999,
	2121, -1000, 2449, 4217, -1000, 55454, 473, -1000, 52470, -428,
	862, 234, 36058, -1000, 199, -1000, 189, 53962, 200, -1000,
	-1000, -1000, -1000, -428, 21884, 2358, 54, 52, 55454, -1000,
	-1000, -1000, -1000, -362, 2637, 2002, -1000, 386, -1000, -1000,
	-1000, -1000, -1000, -1000, 51724, -1000, -1000, -1000, 1103, -1000,
	-1000, 2458, 2456, 2291, 889, 2354, -1000, 2532, 2002, -1000,
	21884, 2621, 2398, 21138, 21138, 446, -1000, -1000, 336, -1000,
	-1000, 30836, 55454, 39042, 913, -1000, 2449, -1000, -1000, -1000,
	193, -1000, 340, 2041, -1000, 2040, -1000, 864, 1083, 377,
	863, 487, 374, 363, 361, 351, 346, 344, 343, 342,
	392, -1000, 919, 919, -214, -221, 1470, 431, 434, 434,
	1044, 456, 2436, 2428, -1000, -1000, 919, 919, 919, 365,
	919, 919, 919, 919, 315, 310, 919, 919, 919, 919,
	919, 919, 919, 919, 919, 919, 919, 919, 919, 919,
	919, 919, 919, 884, 2449, 274, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55454, 224, 55454, -1000, 813, 472, -1000, -1000, -453, 1084,
	1084, 74, 1084, 1084, 1084, 1084, 201, 1031, 51, -1000,
	198, 271, 196, 268, 1069, 210, -1000, -1000, 254, 1069,
	1875, -1000, 894, 264, 203, -1000, 1084, 1084, -1000, 14400,
	229, 14400, 14400, 259, 180, -1000, 2437, -1000, -1000, -1000,
	-1000, -1000, 1319, -1000, -1000, -1000, -1000, -32, 455, -1000,
	-1000, -1000, -1000, 53962, 50978, 278, -1000, -1000, 28, 1919,
	1722, 21884, 1323, 887, -1000, -1000, 1343, 870, -1000, -1000,
	-1000, -1000, -1000, 512, -1000, 24122, 24122, 24122, 24122, -1000,
	-1000, 2003, 50232, 2003, 2003, 24122, 2003, 24122, 2003, 2003,
	2003, 2003, 21884, 2003, 2003, 2003, 2003, -1000, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, -1000, -1000, -1000,
	-1000, 2003, 809, 2003, 2003, 2003, 2003, 2003, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2003, 2003, 2003, 2003, 2003,
	2003, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, -1000, -1000, -1000, 1672, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1448, 1542, 1525, 1512, -1000,
	18900, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2003, -1000, -1000, -1000, 55454, -1000, 2003, 221, 53962,
	53962, 383, 1313, -1000, -1000, 2532, 2002, -1000, 2637, 2676,
	386, -1000, 3945, 1695, 1638, 1546, 2002, 2010, 55454, -1000,
	2050, 211, -1000, -1000, -1000, -332, -347, 2262, 1532, 1870,
	-1000, -1000, -1000, -1000, 1841, 21884, -1000, -1000, 2681, -1000,
	28598, 803, 2677, 49486, -1000, 446, 446, 2032, 430, -11,
	-1000, -1000, -1000, -1000, 956, 35312, -1000, -1000, -1000, -1000,
	-1000, 1894, 55454, -1000, -1000, 5606, 53962, -1000, 2116, -1000,
	1887, -1000, 2073, 21884, 2134, 471, 53962, 462, 461, 460,
	443, -67, -1000, -1000, -1000, -1000, -1000, -1000, 919, 919,
	919, -1000, 388, 2620, 4217, 6836, -1000, -1000, -1000, 48740,
	2113, 53962, -1000, 2112, -1000, 1026, 868, 869, 869, 53962,
	-1000, -1000, 54708, 53962, 1022, 1020, 53962, 53962, 53962, 53962,
	-1000, 47994, -1000, 47248, 46502, 1311, 53962, 45756, 45010, 44264,
	43518, 42772, -1000, 2364, -1000, 2098, -1000, -1000, -1000, 54708,
	53962, 53962, 54708, 53962, 54708, 55454, 53962, -1000, -1000, 368,
	-1000, -1000, 1305, 1304, 1297, 919, 919, 1268, 1859, 1856,
	1849, 919, 919, 1266, 1827, 37550, 1817, 276, 1262, 1261,
	1259, 1312, 1815, 269, 1805, 1296, 1254, 1255, 53962, 2100,
	55454, -1000, 249, 985, 995, 955, 2449, 2346, 2027, 452,
	468, 53962, 439, 439, 53962, -1000, 15152, 55454, 250, -1000,
	1791, 21884, -1000, 1079, 1069, 1069, -1000, -1000, -1000, -1000,
	-1000, -1000, 1084, 55454, 1079, -1000, -1000, -1000, 1069, 1084,
	55454, 1084, 1084, 1084, 1084, 1069, 1069, 1069, 1084, 55454,
	55454, 55454, 55454, 55454, 55454, 55454, 55454, 55454, 14400, 894,
	1084, -454, -1000, 1752, -1000, -1000, -1000, 2240, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14400, 14400,
	-1000, -1000, 2555, 2545, -1000, -1000, -1000, 2026, -1000, 187,
	15, 197, -1000, 42026, 507, 937, -1000, 507, -1000, -1000,
	-1000, -1000, -1000, 2017, 41280, -1000, -459, -463, -465, -466,
	-1000, -1000, -1000, -467, -472, -1000, -1000, -1000, 21884, 21884,
	21884, 21884, -251, -1000, 1530, 24122, 2419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21884, 1177, 941, 24122, 24122, 24122,
	24122, 24122, 24122, 24122, 25614, 24868, 24122, 24122, 24122, 24122,
	24122, 24122, -1000, -1000, 33074, 4706, 4706, 870, 870, 870,
	870, -1000, -178, 2016, 54708, -1000, -1000, -1000, 800, 21884,
	21884, 870, -1000, 1334, 4398, 18900, 21884, 21884, 21884, 21884,
	961, 1722, 54708, 21884, -1000, 1546, -1000, -1000, -1000, -1000,
	1192, -1000, -1000, 1139, 2404, 2404, 2404, 2404, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 2404, 21884,
	725, 725, 917, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 17408, 21884, 21884, 24122, 21884, 21884, 21884, 1546, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 1546, 21884,
	1244, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 16656, 21884,
	21884, 21884, 21884, 21884, -1000, -1000, -1000, -1000, -1000, -1000,
	21884, 21884, 21884, 21884, 21884, 21884, 21884, 21884, 1546, 21884,
	21884, 21884, 21884, 21884, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1668, 1750, 1572, 2003, 21884, -1000,
	2011, -1000, -195, 30090, 21884, 1748, 2675, 2157, 53962, -1000,
	-1000, -1000, -1000, 2532, -1000, 2532, 1668, 3937, 2278, 21138,
	-1000, -1000, 3937, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1775, -1000, 55454, 2010,
	2527, 53962, -1000, 1998, -1000, -1000, 2003, -1000, -306, -1000,
	-309, 2232, 1743, 832, -1000, 21884, 21884, 1997, -1000, 1298,
	55454, -1000, -251, -1000, 40534, -1000, -1000, 13648, 55454, 338,
	55454, -1000, 29344, 39788, 307, -1000, -11, 1972, -1000, 26,
	-3, 18154, 867, -1000, -1000, -1000, 1470, 26360, 1865, 867,
	113, -1000, -1000, -1000, 2073, -1000, 2073, 2073, 2073, 2073,
	832, 832, 832, 832, -1000, -1000, -1000, -1000, -1000, 2099,
	2073, 2097, -1000, 2073, 2073, 2073, 2073, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2093, 2093, 2093, 2088, 2088, 2076,
	2076, 432, -1000, 21884, 348, 39042, 2495, 1249, 2137, 249,
	443, 2146, 53962, 53962, 53962, 55454, 982, -1000, 1477, 1435,
	1401, -1000, -539, 1992, -1000, -1000, 2613, -1000, -1000, 1101,
	1043, 1041, 978, 53962, 227, 328, -1000, 417, -1000, 39042,
	53962, 1019, 869, 53962, -1000, 53962, -1000, -1000, -1000, -1000,
	-1000, 53962, -1000, -1000, 1990, -1000, 1945, 1154, 1040, 1104,
	1011, 1990, -1000, -1000, -184, 1990, -1000, 1990, -1000, 1990,
	-1000, 1990, -1000, 1990, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 993, 309, -346, 53962, 227, 450, -1000,
	449, 33074, -1000, -1000, -1000, 33074, 33074, -1000, -1000, -1000,
	-1000, 1732, 1711, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -522, 55454, -1000, 241, 936, 294, 314, 308,
	55454, 787, 2397, 2395, 2387, 2382, 2379, 2377, 2376, 251,
	298, 55454, 55454, 439, 2194, 55454, 2489, 55454, -1000, -1000,
	-1000, -1000, -1000, 1697, 1689, -1000, 1722, 55454, -1000, -1000,
	1084, 1084, -1000, -1000, 55454, 1084, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1084, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55454, -1000, -1000, -1000, -1000, 1681, -1000, 55454, -32, 185,
	-1000, -1000, 53962, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -83, -1000, 39, 21, 373, -1000, -1000, -1000,
	-1000, -1000, 2534, -1000, 1722, 975, 992, -1000, 2003, -1000,
	-1000, 1274, -1000, -1000, -1000, -1000, -1000, 2003, 2003, 2003,
	-1000, -1000, -1000, -1000, -1000, 1177, 24122, 24122, 24122, 1410,
	492, 1433, 1327, 1420, 1276, 1276, 1287, 24122, 1287, 24122,
	871, 871, 871, 871, 871, -1000, -1000, -1000, -1000, -1000,
	-1000, 1672, -1000, 1627, -1000, 2003, 54708, 1874, 16656, 1904,
	1540, 1546, 879, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3614, 1546, 1919, 1546, 1671, 3609, 979,
	-1000, 21884, 1546, 3598, -1000, -1000, 1546, 1546, 21884, -1000,
	-1000, 21884, 21884, 21884, 21884, 2137, 2137, 2137, 2137, 2137,
	2137, 2137, 2137, 2137, 2137, 21884, 2137, 1989, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1985, 2672, 1329, 2137,
	2137, 2137, 2137, 3587, 2137, 2137, 21884, 1974, -1000, -1000,
	-1000, 1569, 3558, 1257, 3551, 2137, 2137, -1000, 2137, 3515,
	3485, 1546, 2662, 2630, 2137, 2137, 2137, 2137, 2137, 2615,
	2585, 2137, 2137, 2581, 2137, 3480, 2137, 2575, 2568, 2554,
	2550, 2520, 2473, 2465, 2455, 2451, 2411, 2388, 2367, 2361,
	2350, 2338, 2333, 2315, 2287, 2137, 2137, 2137, 3464, 2137,
	3448, 2137, 3444, 2137, 2137, 3439, 2271, 2248, 1546, 1973,
	-1000, 3429, 2137, 3413, 3386, 3381, 2244, 3371, 3362, 3358,
	2137, 2137, 2137, 2238, 3350, 3346, 3342, 3306, 3115, 3106,
	3102, 3097, 3083, 2137, 1572, 1572, 1572, 1572, 1572, 3050,
	-258, 2137, 1546, -1000, -1000, -1000, -1000, -1000, 3009, 2225,
	2994, 2986, 2976, 2971, 1546, 2003, 797, -1000, -1000, 1572,
	1546, 1546, 1572, 1572, 2960, 2941, 2892, 2844, 2816, 2812,
	2137, 2137, -1000, 2137, 2804, 2772, 2206, 2177, 1546, -1000,
	1572, 55454, -1000, -425, -1000, 5, 960, 2003, -1000, 37550,
	1546, -1000, 4201, -1000, 1247, -1000, -1000, -1000, -1000, -1000,
	34566, 2018, -1000, -1000, -1000, -1000, 2003, 1864, -1000, -496,
	20392, -1000, -1000, -1000, 832, 94, 33820, 860, 860, 124,
	1722, 1722, 21884, -1000, -1000, -1000, -1000, -1000, -1000, 552,
	2639, 376, 2003, -1000, 1951, 2420, -1000, -1000, -1000, 2507,
	27106, -1000, -1000, 2003, 2003, 55454, 1893, 1873, -1000, 535,
	-1000, 1352, 1972, -11, -12, -1000, -1000, -1000, -1000, 1722,
	-1000, 1398, 341, 347, -1000, 424, -1000, -1000, -1000, -1000,
	2368, 106, -1000, -1000, -1000, 345, 832, -1000, -1000, -1000,
	-1000, -1000, -1000, 1622, -1000, 1622, -1000, -1000, -1000, -1000,
	-1000, 1248, -1000, -1000, -1000, -1000, 1239, -1000, -1000, 1231,
	-1000, -1000, 2670, 2181, 348, -1000, -1000, 919, 1620, -1000,
	-1000, 2371, 919, 919, 53962, -1000, -1000, 1810, 2495, 241,
	55454, 2191, -1000, 2146, 2146, 2146, -1000, 2482, -1000, -1000,
	-1000, -1000, -1000, -1000, -526, 166, 548, -1000, -1000, -1000,
	5202, 53962, 1809, -1000, 213, -1000, 1804, -1000, 53962, -1000,
	1803, 2085, 53962, 53962, -1000, -1000, -1000, 53962, 2003, -1000,
	-1000, -1000, -1000, 466, 2447, 367, -1000, -1000, -282, -1000,
	-1000, 227, 213, 54708, 53962, 867, -1000, -1000, -1000, -1000,
	-1000, -529, 1788, 458, 232, 329, 55454, 55454, 55454, 55454,
	55454, 55454, 485, -1000, -1000, 40, -1000, -1000, 212, -1000,
	-1000, 1609, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000,
	-1000, -1000, 277, 448, -1000, 55454, 55454, 952, -1000, -1000,
	-1000, -1000, -1000, 1069, -1000, -1000, 1069, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2443,
	55454, 20, -492, -1000, -488, 21884, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1243, 486, 1433, 24122, 24122, 4398, 4398,
	24122, -1000, -1000, -1000, 323, 323, 33074, -1000, 24122, 21884,
	-1000, -1000, 21884, 21884, 21884, 931, -1000, 21884, 1392, -1000,
	21884, -1000, -258, 1572, 2137, 2137, 2137, 2137, -258, -258,
	-258, -258, -258, -258, -258, -258, -258, -258, 1917, -1000,
	21884, 21884, 21884, 1546, 326, -1000, -1000, -1000, -258, 21884,
	-1000, -1000, 2649, -1000, 21884, -1000, 33074, 21884, 21884, 21884,
	-1000, -1000, -1000, 21884, 21884, -1000, -1000, 21884, -1000, 21884,
	-1000, -1000, -1000, -1000, -1000, -1000, 21884, -1000, 21884, -1000,
	-1000, -1000, 21884, -1000, 21884, -1000, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, -1000, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, 21884,
	-1000, 21884, 21884, 21884, -1000, 21884, 21884, 21884, 21884, -1000,
	-1000, -1000, -1000, 21884, 21884, 21884, 21884, 21884, 21884, 21884,
	21884, 21884, 21884, -1000, -1000, -1000, -1000, -1000, -1000, 21884,
	-1000, 39042, 38, -258, 1244, 38, 1244, 23376, 815, 493,
	22630, -1000, 21884, 15904, -1000, -1000, -1000, -1000, -1000, 21884,
	21884, 21884, 21884, 21884, 21884, -1000, -1000, -1000, 21884, 21884,
	-1000, 21884, -1000, 21884, -1000, -1000, -1000, -1000, -1000, 960,
	-1000, 453, 445, 869, 53962, -1000, -1000, -1000, -1000, 1971,
	-1000, 2558, -1000, 2289, 2268, 2645, 2639, 21138, -1000, 29344,
	-1000, -1000, 53962, -1000, -1000, -410, -1000, 2343, 2295, 860,
	860, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12896, 2532,
	21884, 2184, 54708, 2003, -1000, 27852, 53962, 54708, 29344, 29344,
	29344, 29344, 29344, -1000, 2214, 2210, -1000, 2224, 2208, 2312,
	55454, -1000, 1668, 1785, -1000, 21884, 31582, 1921, 29344, -1000,
	-1000, 29344, 55454, 12144, -1000, -1000, 19, -8, -1000, -1000,
	-1000, -1000, 1470, -1000, -1000, 1144, 2504, 2366, -1000, -1000,
	-1000, -1000, -1000, 1783, -1000, 1773, 1970, 1767, 1763, 309,
	-1000, 2132, 2439, 919, 919, -1000, 1229, -1000, 1334, 1599,
	1596, -1000, -1000, -1000, 447, -1000, 55454, 2178, 2174, 2172,
	-1000, -546, 1227, 2084, 2129, 21884, 2079, 2608, 1950, 53962,
	-1000, -1000, 54708, -1000, 296, -1000, 348, 53962, -1000, -1000,
	-1000, 328, 55454, -1000, 5547, -1000, -1000, -1000, 213, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55454, 240, -1000, 2077,
	1318, -1000, -1000, 2135, -1000, -1000, -1000, -1000, -1000, 216,
	214, 1593, 205, 1584, -1000, 205, -1000, 55454, 909, 2181,
	55454, -1000, -1000, -1000, 1084, 1084, -1000, -1000, 2413, -1000,
	1334, 2137, 24122, 24122, -1000, 870, -1000, -1000, 400, -233,
	2073, 2073, -1000, 2073, 2076, -1000, 2073, 173, 2073, 158,
	2073, -1000, -1000, 1546, 1546, -1000, 1572, 2171, 2183, 2710,
	-1000, 1722, 21884, 2704, -1000, -1000, -258, -258, -258, -258,
	-258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -75, 2700, 2626, 2137, -1000, 2071, 2067, -1000, 2137,
	21884, 2137, 1546, 2153, 2137, 2137, 2137, 2137, 2137, 2137,
	2137, 2137, 2137, 2137, 2137, 2137, 2142, 2131, 2080, 2029,
	2014, 2008, 1999, 1995, 1978, 1947, 1927, 1908, 1884, 1879,
	1853, 1845, 2137, 2137, 1832, 2137, 1800, 1790, -1000, 1722,
	1572, 2541, 1572, 2137, 2137, 2536, 292, 2137, 1758, 1758,
	1758, 1758, 1758, 1572, 1572, 1572, 1572, 2137, 53962, -1000,
	-258, -1000, -1000, -330, -354, -1000, 1546, -258, 1955, 24122,
	2137, 24122, 24122, 24122, 2137, 1546, -1000, 1771, 1718, 2500,
	1684, 2137, 2469, 2137, 2137, 2137, 1663, -1000, 2531, 2003,
	2531, 2003, 2531, 1738, 1247, 55454, -1000, -1000, -1000, -1000,
	2639, 2632, -1000, 1953, -1000, 94, 581, -1000, 2316, 2295,
	-1000, 2592, 2331, 2591, -1000, -1000, -1000, -1000, -1000, 1722,
	-1000, 2454, 1942, -1000, 933, 1765, -1000, -1000, 20392, 1756,
	2242, 532, 1738, 1991, 2420, 2155, 2170, 2807, -1000, -1000,
	-1000, -1000, 2207, -1000, 2187, -1000, -1000, 2050, -1000, 2446,
	338, 29344, 1983, 1983, -1000, 528, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1061, 5547, 2703, -1000, 1575, -1000, 1348,
	195, 1216, -1000, -1000, 919, 919, -1000, 1018, 1017, -1000,
	55454, 2065, -1000, 832, 1573, 832, 1209, -1000, -1000, 1207,
	-1000, -1000, -1000, -1000, 2024, 2286, -1000, -1000, -1000, -1000,
	55454, -1000, 55454, 55454, 55454, 2064, 2590, -1000, 21884, 2063,
	923, 2666, 53962, 53962, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 444, 919, -506, 297, 280,
	919, 919, 919, -547, -1000, -1000, 1709, 1705, -1000, -215,
	-1000, 21884, -1000, -1000, -1000, -1000, -1000, 1234, 1234, 1542,
	1525, 1512, -1000, 2050, -1000, -1000, -1000, 1768, -1000, -1000,
	-197, 53962, 53962, 53962, 53962, -1000, -1000, -1000, 1121, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 870, 1546, 395, -202, 1546, -1000, -1000, 832, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21884,
	-1000, 21884, -1000, 21884, 1722, 21884, -1000, -1000, -1000, -1000,
	-1000, 2532, 1486, 21884, 21884, -1000, 1205, 1201, -258, 2137,
	-1000, -1000, -1000, 21884, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 21884, -1000, 21884, -1000, 21884, -1000, 21884, -1000, -1000,
	21884, -1000, -1000, -1000, 21884, -1000, 21884, -1000, 21884, -1000,
	-1000, -1000, 21884, 289, 323, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1546, 335, -1000, -1000,
	-1000, 2642, -1000, 1546, 21884, 4398, -1000, 4398, 4398, 4398,
	-1000, -1000, -1000, 21884, -1000, 21884, 21884, -1000, 21884, -1000,
	21884, -1000, -1000, -1000, -1000, 21884, 2003, 2434, 38296, 2003,
	38296, 2003, 31582, -1000, -1000, 2632, 2624, 2589, 2317, 2327,
	2327, 2316, -1000, 2586, 2580, -1000, 1484, 2577, 1478, 990,
	-1000, 54708, 21884, -1000, 2003, 37550, -1000, 398, 53962, 2003,
	53962, -1000, 2569, -1000, -1000, 21884, 2058, -1000, 21884, -1000,
	-1000, -1000, -1000, 4706, 2639, 1983, -1000, -1000, 872, -1000,
	21884, -1000, 9719, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1465, 1459, -1000, -1000, 2052, 21884, -1000, -1000,
	-1000, 1759, 1751, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2050, -1000, -1000, -1000, -1000, 328, -536, 2638, 53962,
	1200, -1000, 1701, 1950, 301, 2003, 1452, 919, 919, 919,
	1198, 1194, 37550, 1687, -1000, 53962, 399, -1000, 328, -1000,
	-223, -226, 2137, -1000, -1000, 2502, -1000, -1000, 15904, -1000,
	-1000, 2049, 2144, -1000, -1000, -1000, -1000, 2213, -182, -209,
	-1000, -1000, 2137, 2137, 2137, 1676, 1546, -1000, 2137, 2137,
	1669, 1581, -1000, -1000, 2137, 2137, 2137, 2137, 2137, 2137,
	2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137,
	2137, 2137, 2137, 2137, 1572, 1655, -1000, 289, 1546, 2169,
	-1000, -1000, 4706, -1000, -1000, 2569, 2564, 38, -1000, -1000,
	226, 38, 1722, 965, 1546, 1546, 965, 1635, 2137, 1618,
	1557, 2137, 2137, 32328, -1000, 2563, 2557, 1665, -1000, -1000,
	38296, 1665, 38296, 960, 2624, -268, 21884, 21884, 2290, 1107,
	-1000, -1000, -1000, -1000, 1443, 1439, -1000, 1436, -1000, 2702,
	-1000, 1722, -1000, 2003, 2003, -1000, 525, 1765, -1000, 2532,
	1722, 53962, 1722, 83, 2569, -1000, 2137, -1000, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
	2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, -1000,
	-1000, 53962, 2530, -1000, -1000, 2501, 1667, 164, -1000, 1553,
	1950, -1000, -1000, 930, -1000, 21884, -1000, 37550, 1405, 1385,
	-1000, -1000, -1000, -1000, -547, -1000, -1000, -1000, -1000, -1000,
	-1000, 386, 1949, -1000, 906, 53962, 55454, -1000, 2188, -1000,
	-1000, -1000, -1000, 21884, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21884, -1000, 1546, 2168, -1000, -364, -1000, -516, 21884,
	-258, -1000, -1000, -258, -1000, -1000, -1000, -1000, -1000, 21884,
	-1000, -1000, 21884, -1000, 21884, -1000, -1000, 1665, -1000, -1000,
	-1000, 36804, -1000, 1665, -1000, 1665, -1000, -268, -1000, 1946,
	-1000, 53962, 1722, 350, -1000, 1102, -1000, -1000, -1000, -1000,
	-1000, 54708, 53962, 1765, 53962, -1000, -1000, 1633, 1546, 2003,
	2532, -1000, 1589, -1000, 386, -1000, 2047, 2129, -1000, -1000,
	-1000, 19646, -1000, -1000, -1000, -1000, -1000, 238, -192, 15904,
	11392, 1580, -1000, -185, 2137, 1572, -1000, -477, -1000, -1000,
	-1000, -1000, 256, -1000, -1000, 1919, -1000, -1000, 1549, 1545,
	1528, -1000, -1000, -1000, -1000, -1000, -1000, -268, -1000, -1000,
	2499, -1000, -228, -1000, -1000, 1915, 1552, -1000, -1000, -1000,
	31582, 53216, -1000, -176, 332, -192, 21884, 2044, 1546, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -20, -1000, -1000,
	495, -1000, -1000, -1000, 2135, -206, -1000, -1000, -1000, 288,
	-497, -286, -293, 24122, -1000, 21884, -1000, 21884, -1000, 21884,
	-1000, 53962, 2003, -1000, -1000, -1000, 1531, -1000, 5018, -355,
	2166, -1000, -113, -1000, -1000, -1000, 1060, 1381, -1000, 1157,
	-1000, -1000, -1000, -1000, -1000, 2266, 53962, -1000, 429, -1000,
	-1000, 15152, -197, -210, 987, -1000, -1000, -1000, -1000, -1000,
	4398, 1482, 1476, 2137, -1000, 53962, -1000, 53216, -340, 867,
	4706, -1000, 2160, 2159, 2663, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -550, 1370, 244, -1000, -1000, -1000, 288, -343,
	-1000, 21884, -1000, 21884, -1000, 1546, -1000, -1000, 2471, 83,
	-1000, 2699, -1000, 2640, 1006, 1006, -1000, 1111, -550, -1000,
	-1000, -1000, -1000, 2137, 2137, -1000, -358, -1000, -1000, -1000,
	-1000, -1000, 413, 1152, -1000, -1000, -1000, -1000, -1000, 4706,
	-1000, -1000, -1000, 215, 215, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3391, 3388, 28, 4, 38, 37, 3387, 3386, 3383,
	166, 3382, 3381, 3378, 3364, 3363, 3294, 2769, 2762, 2739,
	3292, 3289, 3284, 3278, 3273, 3269, 3267, 3265, 3263, 48,
	96, 87, 105, 203, 192, 3260, 3256, 179, 169, 199,
	3254, 3237, 3235, 113, 189, 79, 78, 191, 3234, 3233,
	62, 3230, 3228, 3226, 187, 186, 185, 1053, 3225, 181,
	112, 46, 3224, 3223, 3220, 3217, 3216, 3215, 3214, 3213,
	3209, 3208, 3207, 3204, 3201, 3200, 3195, 3191, 3189, 3188,
	286, 3187, 3186, 10, 3185, 65, 3184, 3183, 3182, 3181,
	3180, 15, 3178, 3177, 20, 41, 57, 3176, 3175, 44,
	3174, 3173, 3172, 3171, 3169, 71, 3167, 26, 3159, 40,
	3153, 3152, 120, 3151, 3145, 3144, 30, 3143, 3140, 3137,
	2, 172, 3136, 3135, 136, 3134, 3130, 3125, 190, 217,
	3123, 2296, 3122, 101, 3121, 3117, 3109, 170, 194, 3108,
	121, 3107, 3104, 3103, 145, 3102, 3920, 3100, 3099, 68,
	63, 226, 3098, 3093, 200, 64, 60, 3092, 16, 13,
	3089, 3081, 59, 75, 3080, 106, 3077, 3076, 100, 80,
	3075, 98, 104, 3073, 3071, 21, 7, 3070, 5, 1,
	6, 82, 3069, 3065, 117, 3064, 3061, 3060, 93, 3057,
	3055, 6505, 3049, 92, 128, 103, 70, 3046, 171, 153,
	3043, 3042, 3041, 3039, 3036, 3034, 49, 3018, 3014, 3011,
	134, 1256, 108, 3004, 3002, 147, 352, 126, 50, 129,
	3001, 146, 2996, 215, 76, 2993, 164, 2992, 2991, 133,
	132, 2987, 2984, 56, 168, 195, 2983, 97, 127, 116,
	176, 95, 131, 2982, 2981, 55, 69, 2979, 2978, 2976,
	2966, 165, 2963, 2962, 58, 2948, 53, 2944, 178, 2938,
	325, 67, 2937, 180, 161, 2935, 72, 2934, 2924, 66,
	99, 102, 29, 2918, 157, 162, 123, 160, 2917, 2915,
	52, 2911, 2910, 2904, 197, 327, 2902, 2901, 305, 167,
	141, 149, 83, 2899, 353, 2898, 2897, 2891, 14, 5107,
	7204, 183, 27, 163, 2881, 2879, 1040, 19, 47, 24,
	2878, 210, 2877, 198, 2876, 2874, 2873, 205, 208, 111,
	158, 54, 2872, 2870, 2869, 2864, 35, 2862, 2861, 2854,
	2852, 2851, 2850, 36, 34, 33, 89, 221, 61, 18,
	94, 155, 150, 73, 2847, 2846, 2845, 119, 91, 2842,
	156, 154, 122, 159, 2840, 177, 142, 115, 2836, 84,
	32, 2835, 2833, 2830, 2829, 85, 2827, 2824, 2814, 2813,
	152, 143, 118, 77, 2812, 81, 114, 148, 144, 43,
	2811, 42, 2810, 2807, 31, 188, 25, 2804, 39, 107,
	137, 2803, 5291, 2799, 9, 349, 151, 2798, 2792, 8,
	11, 17, 2788, 2787, 2780, 2777, 130, 2775, 2773, 2764,
	2757, 23, 45, 22, 12, 110, 135, 74, 2756, 2745,
	139, 2744, 2725, 2716, 0, 1034, 125, 2688, 202,
}

//line sql.y:8822
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 422, 423, 423, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 266, 392, 264, 264, 28, 75, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	35, 15, 16, 34, 34, 34, 17, 17, 110, 110,
	18, 19, 19, 19, 19, 426, 426, 186, 186, 184,
	184, 185, 185, 269, 269, 20, 273, 273, 275, 275,
	275, 275, 265, 265, 265, 21, 21, 274, 274, 276,
	276, 276, 279, 279, 279, 279, 320, 320, 320, 22,
	22, 22, 22, 22, 130, 130, 394, 394, 393, 388,
	388, 387, 387, 386, 391, 391, 390, 390, 389, 41,
	42, 51, 51, 51, 51, 52, 53, 395, 395, 361,
	58, 58, 57, 57, 57, 57, 57, 57, 59, 59,
	55, 55, 54, 54, 56, 56, 363, 363, 349, 349,
	362, 362, 362, 362, 362, 362, 362, 348, 348, 141,
	141, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 410, 410,
	410, 410, 409, 409, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 150, 150, 162, 162, 162, 162, 162,
	162, 148, 148, 149, 147, 147, 147, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 161, 161, 156, 156, 156,
	158, 158, 157, 157, 157, 159, 159, 411, 411, 411,
	411, 326, 326, 326, 326, 329, 329, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 328, 328, 328, 328,
	328, 328, 328, 330, 330, 330, 330, 330, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 332, 332, 332, 332, 332,
	332, 332, 332, 347, 347, 336, 336, 341, 341, 342,
	342, 343, 343, 343, 344, 344, 344, 345, 345, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 340, 340,
	339, 339, 339, 350, 375, 375, 374, 374, 372, 372,
	372, 372, 372, 372, 372, 372, 359, 359, 369, 369,
	369, 369, 369, 358, 358, 354, 354, 354, 355, 355,
	356, 356, 353, 353, 357, 357, 371, 371, 370, 370,
	351, 351, 352, 352, 377, 412, 412, 412, 412, 412,
	413, 413, 378, 402, 404, 404, 404, 403, 403, 400,
	401, 399, 399, 399, 399, 399, 85, 85, 85, 292,
	292, 293, 293, 367, 367, 366, 366, 366, 368, 368,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 287, 287, 287, 398, 398, 398, 398, 398, 398,
	397, 397, 397, 364, 364, 364, 364, 396, 396, 60,
	60, 224, 224, 415, 415, 417, 417, 417, 48, 48,
	48, 48, 48, 48, 47, 47, 47, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 49, 49,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 112, 112, 113, 113, 113, 113,
	115, 115, 115, 380, 380, 61, 61, 3, 3, 174,
	176, 177, 177, 175, 175, 175, 175, 175, 175, 63,
	63, 62, 62, 179, 178, 180, 180, 180, 1, 1,
	2, 2, 4, 4, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 346, 346, 346, 379,
	379, 381, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 118, 117, 117, 116, 119, 119, 119, 119,
	119, 119, 119, 119, 383, 383, 383, 64, 64, 384,
	333, 334, 335, 5, 6, 360, 382, 126, 126, 24,
	40, 40, 25, 25, 25, 25, 26, 26, 65, 68,
	68, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 297, 297, 286,
	286, 295, 295, 285, 285, 311, 311, 311, 288, 288,
	288, 289, 289, 408, 408, 408, 282, 282, 67, 67,
	67, 312, 312, 312, 312, 70, 70, 418, 418, 419,
	419, 420, 420, 420, 71, 72, 72, 315, 315, 316,
	316, 73, 74, 86, 86, 86, 86, 86, 87, 87,
	87, 87, 87, 87, 111, 111, 111, 10, 10, 10,
	10, 82, 82, 82, 9, 9, 11, 69, 69, 76,
	405, 405, 406, 407, 407, 407, 407, 77, 79, 27,
	27, 27, 27, 27, 27, 136, 136, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 131,
	131, 131, 125, 125, 427, 80, 81, 81, 129, 129,
	129, 122, 122, 122, 128, 128, 128, 12, 12, 13,
	268, 268, 14, 14, 135, 135, 134, 134, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 132,
	132, 133, 133, 133, 133, 304, 304, 304, 303, 303,
	168, 168, 170, 169, 169, 171, 171, 172, 172, 172,
	172, 222, 222, 194, 194, 261, 261, 262, 262, 260,
	260, 267, 267, 263, 263, 263, 263, 270, 270, 173,
	173, 173, 173, 181, 181, 182, 182, 183, 183, 314,
	314, 309, 309, 309, 308, 308, 187, 187, 187, 189,
	188, 188, 188, 188, 190, 190, 192, 192, 191, 191,
	193, 198, 198, 197, 197, 195, 195, 195, 195, 195,
	195, 196, 196, 196, 196, 199, 199, 146, 146, 146,
	146, 146, 146, 146, 146, 416, 416, 160, 160, 160,
	160, 160, 160, 160, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 251, 251, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 227, 227, 226,
	226, 88, 88, 88, 89, 89, 90, 90, 90, 90,
	90, 91, 91, 91, 91, 91, 91, 91, 93, 93,
	92, 92, 213, 213, 301, 301, 94, 95, 95, 96,
	96, 99, 99, 98, 97, 97, 103, 103, 100, 100,
	102, 102, 101, 104, 104, 105, 106, 106, 283, 283,
	200, 200, 209, 209, 209, 209, 201, 201, 202, 202,
	202, 202, 202, 202, 210, 210, 210, 221, 211, 211,
	207, 207, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 165, 165, 165, 165,
	232, 232, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 153, 153, 166,
	166, 166, 166, 167, 167, 167, 167, 167, 167, 167,
	322, 322, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	428, 428, 337, 337, 337, 208, 208, 208, 208, 208,
	127, 127, 127, 127, 127, 319, 319, 319, 323, 323,
	323, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 324, 324, 230, 230,
	123, 123, 228, 228, 229, 231, 231, 223, 223, 223,
	223, 225, 225, 204, 204, 204, 233, 233, 325, 325,
	234, 234, 107, 108, 108, 109, 109, 235, 235, 237,
	236, 236, 238, 239, 239, 239, 240, 240, 241, 241,
	241, 50, 50, 50, 50, 50, 45, 45, 45, 45,
	46, 46, 46, 46, 138, 138, 138, 138, 140, 140,
	139, 139, 83, 83, 84, 84, 84, 144, 144, 145,
	145, 145, 142, 142, 143, 143, 258, 258, 258, 258,
	258, 258, 258, 242, 242, 242, 249, 249, 249, 245,
	245, 247, 247, 247, 248, 248, 248, 246, 255, 255,
	257, 257, 256, 256, 252, 252, 253, 253, 254, 254,
	254, 250, 250, 203, 203, 203, 203, 203, 259, 259,
	259, 259, 313, 313, 313, 271, 271, 214, 214, 215,
	215, 219, 219, 218, 218, 216, 217, 220, 220, 164,
	272, 272, 280, 277, 277, 278, 278, 305, 305, 305,
	281, 281, 294, 294, 290, 290, 291, 291, 284, 284,
	296, 296, 296, 78, 212, 212, 376, 376, 373, 300,
	300, 302, 302, 306, 306, 310, 310, 307, 307, 8,
	421, 421, 421, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 424, 425,
	317, 318, 318, 318,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 3,
	3, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 5, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	3, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 2, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 1,
	3, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	3, 3, 2, 2, 2, 1, 2, 2, 0, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 1, 1, 3, 3, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 4,
	3, 1, 3, 1, 7, 6, 7, 7, 8, 8,
	0, 1, 5, 2, 1, 1, 1, 0, 1, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 1,
	2, 0, 1, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 6, 10, 7, 5, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 5, 5, 6, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 4, 5,
	5, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	5, 2, 3, 3, 2, 3, 4, 4, 4, 3,
	4, 4, 5, 3, 5, 3, 5, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 5,
	5, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 1, 1, 3, 4, 3,
	4, 4, 4, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 5, 5, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 5, 6, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 4, 2, 4, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 1,
	0, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	5, 6, 6, 6, 6, 6, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 8, 4, 8, 8,
	6, 5, 4, 4, 4, 5, 7, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 4, 0, 2,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	3, 1, 3, 1, 2, 3, 4, 1, 1, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -422, -80, -427, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -110, -36, 35, -41,
	-51, 240, -52, -42, 241, -53, 243, 242, 280, 244,
	397, 273, 83, 330, 331, 333, 334, 335, 336, -111,
	708, 278, 279, 246, 39, 51, 36, 37, 40, 250,
	286, 287, 249, 145, -33, -37, 12, -424, 15, 487,
	275, 274, 31, -34, 597, 95, -35, 63, -81, -423,
	756, -258, -242, 26, 36, 32, -241, -237, -129, -242,
	24, 22, 11, -80, -80, -80, 16, 17, -80, -361,
	-363, 95, 173, 95, -80, -58, -57, -55, -54, -56,
	-59, 34, -48, -49, -385, -47, -44, 245, 242, 290,
	135, 136, 280, 281, 282, 244, 264, 279, 283, 278,
	299, -43, 90, 36, 597, 600, -368, 241, 247, 248,
	243, 488, 138, 137, 84, -365, 392, 631, 726, -59,
	728, 110, 113, 727, 50, 254, 729, 730, 731, 638,
	732, 263, 733, 734, 735, 736, 742, 679, 743, 744,
	745, 139, 11, -80, -310, -306, 100, -299, 594, 266,
	629, 441, 630, 315, 90, 47, 42, 533, 604, 388,
	392, 631, 518, 726, 398, 330, 348, 342, 523, 524,
	525, 371, 363, 595, 632, 605, 318, 267, 303, 720,
	361, 149, 728, 322, 633, 281, 399, 400, 634, 401,
	110, 333, 438, 741, 321, 635, 739, 113, 727, 338,
	88, 517, 57, 723, 326, 50, 276, 446, 447, 359,
	249, 355, 729, 304, 636, 607, 297, 138, 135, 748,
	39, 351, 56, 33, 738, 137, 55, 730, 164, 637,
	731, 638, 403, 378, 714, 54, 404, 282, 639, 93,
	287, 599, 327, 722, 405, 538, 352, 406, 314, 737,
	246, 640, 325, 703, 695, 696, 407, 408, 715, 383,
	379, 384, 540, 641, 430, 522, 409, 699, 700, 755,
	58, 642, 643, 716, 136, 644, 87, 732, 89, 346,
	347, 645, 312, 265, 543, 544, 432, 375, 500, 127,
	507, 508, 120, 121, 503, 122, 509, 123, 128, 510,
	511, 512, 501, 124, 117, 502, 513, 514, 376, 377,
	125, 515, 119, 118, 504, 506, 126, 516, 263, 38,
	410, 596, 316, 64, 320, 291, 433, 52, 381, 752,
	51, 710, 545, 646, 713, 374, 370, 497, 691, 59,
	647, 648, 649, 650, 519, 733, 373, 345, 369, 747,
	4, 309, 492, 520, 734, 68, 248, 386, 385, 387,
	298, 429, 366, 651, 652, 653, 270, 91, 654, 356,
	25, 655, 656, 411, 305, 657, 62, 658, 659, 436,
	279, 660, 60, 735, 692, 45, 661, 284, 749, 736,
	662, 663, 664, 709, 665, 286, 666, 413, 667, 697,
	698, 412, 380, 382, 546, 293, 414, 397, 693, 251,
	598, 668, 328, 350, 283, 740, 669, 271, 534, 535,
	536, 537, 721, 542, 541, 285, 290, 278, 437, 272,
	670, 671, 672, 673, 674, 319, 690, 675, 676, 334,
	602, 742, 498, 49, 677, 678, 679, 680, 681, 313,
	308, 431, 440, 67, 92, 394, 682, 683, 719, 344,
	339, 43, 306, 99, 478, 480, 481, 482, 483, 484,
	479, 486, 684, 331, 61, 743, 744, 745, 300, 746,
	526, 527, 528, 529, 13, 580, 563, 591, 564, 581,
	565, 574, 566, 582, 590, 592, 547, 555, 548, 556,
	586, 569, 583, 575, 568, 567, 589, 572, 576, 549,
	557, 587, 573, 550, 558, 551, 559, 552, 560, 585,
	584, 577, 588, 553, 561, 579, 554, 562, 578, 570,
	571, 449, 753, 754, 521, 416, 694, 139, 310, 311,
	53, 367, 292, 685, 323, 686, 357, 358, 494, 495,
	372, 343, 368, 146, 706, 332, 341, 704, 294, 417,
	499, 280, 687, 439, 307, 389, 131, 340, 395, 324,
	603, 539, 299, 418, 718, 601, 530, 531, 365, 362,
	301, 532, 688, 390, 708, 419, 255, 295, 296, 689,
	705, 420, 421, 317, 422, 423, 424, 425, 426, 428,
	329, 427, 707, 701, 702, 302, 477, 600, 337, 360,
	396, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 496,
	253, -80, 253, -191, -306, -131, 710, 712, 192, -277,
	400, -295, 402, 415, 410, 420, 408, -286, 411, 413,
	293, -408, 430, 253, 417, 240, 403, 412, 421, 422,
	317, 428, 423, 329, 427, 302, 424, 425, 426, -392,
	192, 731, 746, 332, 340, 149, 364, 407, 405, 431,
	710, 100, -312, 100, 101, 102, -299, 332, -315, 337,
	-300, -392, -299, 335, -80, -80, -317, -317, -131, -211,
	-146, 157, -160, -266, -163, 101, -151, -154, -205, -206,
	-207, -208, -161, -225, -264, 181, 182, 189, 158, -221,
	-164, 29, 593, 489, 488, 192, 34, 235, 77, 78,
	491, 492, 160, 63, 15, 454, 455, -162, 444, 445,
	456, 450, 451, 517, 519, 520, 521, 518, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 522, 533,
	494, 495, 129, 496, 117, 119, 118, 127, 128, 497,
	498, 499, 361, 545, 546, 540, 543, 544, 542, 541,
	376, 377, 500, 563, 564, 568, 567, 565, 566, 569,
	572, 573, 574, 575, 576, 577, 579, 578, 570, 571,
	548, 547, 549, 550, 551, 552, 553, 554, 556, 555,
	557, 558, 559, 560, 561, 562, 580, 581, 582, 583,
	584, 586, 585, 590, 589, 587, 588, 592, 591, 501,
	502, 120, 121, 122, 123, 124, 125, 126, 503, 506,
	504, 505, 507, 508, 509, 514, 515, 510, 511, 512,
	513, 516, 387, 385, 386, 382, 381, 380, -90, -103,
	620, 619, -104, 441, 446, 447, 449, -152, -153, -166,
	-167, -300, -306, 258, 443, 252, 187, 487, -155, -149,
	-223, 116, 102, -31, -220, 442, 452, 453, 457, 448,
	458, 606, 608, 623, 624, 626, 611, 616, 615, 618,
	534, 535, 536, 537, 538, 539, 695, 696, 697, 698,
	699, 700, 701, 702, -392, -299, 100, -158, -156, -200,
	103, 108, 111, 112, 114, -414, 276, 357, 358, 130,
	-424, -216, -217, -157, 105, 106, 107, 132, 133, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 724, 98, 104, 50, 416, 416, -191, -80, -80,
	-80, -80, -421, 727, 598, -235, -129, -237, -33, -31,
	-424, 12, -80, -31, -32, -30, -37, -39, 625, -38,
	-306, -80, 109, -242, -258, 16, 67, 176, 48, 56,
	-240, -241, -34, -31, -146, 23, 41, 27, -133, 183,
	-146, -306, -133, -284, 257, -80, -80, -273, -320, 332,
	-275, 431, 710, 430, -265, -278, 100, -264, -277, 429,
	101, -362, 173, -348, -352, -300, 268, -378, 264, -191,
	-371, -370, -300, -424, -130, -294, 254, 262, 261, 150,
	-395, 153, 310, 443, 252, -54, -55, -56, -277, 191,
	730, -112, 285, 289, 96, 96, -352, -351, -350, -396,
	289, 268, -377, -369, 260, 269, -358, 261, 262, -353,
	254, 151, -396, -353, 259, 269, 264, 268, 289, 289,
	139, 289, 139, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 284, -359, 165, -359, 601, 601, -365, -396,
	264, 254, -396, -396, 260, -296, -353, 256, 28, 256,
	38, 38, -359, -359, -359, -277, 191, -359, -359, -359,
	-359, 297, 297, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	253, -395, -138, 427, 317, 90, -57, 299, -40, -191,
	-294, 254, 255, -395, 286, -191, 236, 253, 713, -288,
	173, 19, -288, -285, 416, 414, 401, 406, -288, -288,
	-288, -288, 300, 399, -354, 254, 38, 265, 416, 300,
	399, 300, 301, 300, 301, 409, 419, 300, -311, 18,
	176, 443, 404, 408, 293, 253, 294, 255, 418, 301,
	-311, 98, -289, 173, 300, 416, 410, 296, -288, -288,
	-318, -424, -302, -300, -298, 245, 41, 156, 28, 30,
	159, 192, 142, 23, 160, 40, 247, 364, 264, 191,
	260, 488, 240, 81, 606, 444, 451, 442, 450, 454,
	490, 491, 443, 402, 34, 17, 608, 31, 274, 27,
	44, 185, 242, 163, 609, 277, 29, 275, 129, 133,
	611, 26, 84, 269, 18, 262, 46, 20, 612, 613,
	21, 74, 258, 257, 176, 254, 79, 15, 235, 32,
	172, 75, 614, 151, 145, 615, 616, 617, 618, 143,
	77, 173, 24, 750, 452, 453, 36, 711, 593, 288,
	187, 82, 65, 712, 157, 448, 619, 620, 130, 621,
	134, 85, 717, 153, 22, 80, 48, 622, 289, 623,
	259, 751, 624, 434, 625, 174, 243, 487, 78, 175,
	724, 626, 725, 252, 415, 12, 493, 35, 273, 261,
	73, 72, 141, 76, 458, 627, 253, 162, 256, 144,
	132, 11, 150, 37, 16, 83, 86, 455, 456, 457,
	63, 140, 597, 161, 19, 628, 435, 155, -392, 713,
	-318, -318, 300, 341, 35, 101, -418, -419, -420, 597,
	434, 256, -300, -191, -86, 703, 244, -87, 709, 41,
	251, 146, 38, -136, 416, -124, 192, 731, 714, 715,
	716, 713, 413, 721, 719, 717, 300, 718, 96, 153,
	155, 156, 4, -146, 172, -201, -202, 171, 165, 166,
	167, 168, 169, 170, 177, 176, 157, 159, 173, -251,
	154, 178, 179, 180, 181, 182, 183, 184, 186, 185,
	187, 188, 174, 175, 191, 238, 239, -154, -154, -154,
	-154, -221, -227, -226, -424, -223, -392, -299, -306, -424,
	-424, -154, -283, -424, -151, -424, -424, -424, -424, -424,
	-230, -146, -424, -424, -428, -424, -428, -428, -428, -337,
	-424, -337, -337, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, 236, -424,
	-424, -424, -424, -424, -337, -337, -337, -337, -337, -337,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, 98, 112, 108, 111, 103, 114,
	98, 98, 98, 98, -31, -32, -211, 63, -424, -317,
	-405, -406, -194, -191, -424, 317, -300, -300, 286, 105,
	-240, -34, -31, -235, -241, -237, -31, -80, -122, -135,
	69, 70, -134, -137, 27, 44, 74, 76, 99, 72,
	73, 71, 41, -425, 97, -425, -258, -425, 96, -39,
	-261, 95, 115, -214, -219, -217, 724, 653, 683, 653,
	683, 67, 49, 98, 98, 96, 25, -236, -238, -146,
	18, -304, 4, -303, 28, -300, 98, 236, 18, -192,
	32, -191, -284, -284, 96, 100, 332, -274, -276, 432,
	434, 165, -305, -300, 98, 34, 97, 96, -191, -326,
	-329, -331, -330, -332, -327, -328, 361, 362, 192, 365,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 378,
	390, 35, 276, 357, 358, 359, 360, 379, 380, 381,
	382, 384, 385, 386, 387, 342, 363, 595, 343, 344,
	345, 346, 347, 348, 350, 351, 354, 352, 353, 355,
	356, -301, -300, 95, 97, 96, -336, 95, -146, -138,
	253, -300, 254, 254, 254, -291, 258, 487, -359, -359,
	-359, 284, 23, -47, -44, -385, 22, -43, -44, 245,
	135, 136, 242, 95, -348, 95, -357, -301, -300, 95,
	151, 259, 150, -356, -353, -356, -357, -300, -223, -300,
	151, 151, -300, -300, -270, -300, -270, -270, 41, -270,
	41, -270, 41, 105, -300, -270, 41, -270, 41, -270,
	41, -270, 41, -270, 41, 34, 87, 88, 89, 34,
	91, 92, 93, -223, -300, -300, -223, -348, -223, -191,
	-300, -277, 105, 105, 105, -359, -359, 105, 98, 98,
	98, -359, -359, 105, 98, -308, -306, 98, 98, -397,
	270, 314, 316, 105, 105, 105, 105, 34, 98, -398,
	34, 738, 737, 739, 740, 741, 98, 105, 34, 105,
	34, 105, -300, 95, -191, -144, 304, 240, 242, 245,
	85, 98, 322, 320, 321, 318, 323, 324, 325, 165,
	50, 96, 256, 253, -300, -290, 258, -290, -300, -307,
	-306, -298, -191, 256, 398, 98, -146, -355, 18, 176,
	-311, -311, -288, -191, -355, -311, -288, -191, -288, -288,
	-288, -288, -311, -311, -311, -288, -306, -306, -191, -191,
	-191, -191, -191, -191, -191, -318, -289, -288, 713, 98,
	-282, 18, 85, -318, -318, -297, 26, 26, 96, 338,
	435, 436, -316, 335, -82, -300, 98, -10, -29, -18,
	-17, -19, 165, -10, 96, 597, -184, -191, 713, 713,
	713, 713, 713, 713, -146, -146, -146, -146, 621, -209,
	-416, 157, 132, 133, 130, 131, -163, 42, 43, 41,
	-146, -210, -216, -221, 115, 176, 159, 173, -251, -151,
	-154, -151, -151, -151, -151, -151, -151, 235, -151, 235,
	-151, -151, -151, -151, -151, -151, -319, -300, 98, 192,
	-159, -158, 114, -414, -159, 594, 96, -226, 236, -146,
	-146, -392, -120, 460, 461, 462, 463, 465, 466, 467,
	470, 471, 475, 476, 459, 477, 464, 469, 472, 473,
	474, 468, 360, -146, -212, -211, -212, -146, -146, -228,
	-229, 161, -223, -146, -425, -425, 105, 183, -128, 27,
	44, -128, -128, -128, -128, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -128, -146, -121, 459, 477,
	464, 469, 472, 473, 474, 468, 360, 478, 479, 480,
	481, 482, 483, 484, 485, 486, -121, -120, -146, -146,
	-146, -146, -146, -146, -146, -146, -88, -146, 142, 143,
	144, -211, -146, -151, -146, -146, -146, -425, -146, -146,
	-146, -212, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -391, -390,
	-389, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -211, -211, -211, -211, -211, -146,
	-425, -146, -165, -149, 105, -266, 114, 101, -146, -146,
	-146, -146, -146, -146, -212, -302, -307, -298, -299, -211,
	-212, -212, -211, -211, -146, -146, -146, -146, -146, -146,
	-146, -146, -425, -146, -146, -146, -146, -146, -258, -425,
	-211, 96, -407, 434, 435, 711, -309, 289, -308, 28,
	-212, 98, 18, -268, 86, -300, -240, -240, 69, 70,
	65, -132, -133, -137, -425, -38, 28, -260, -300, 96,
	-424, 646, 646, 68, 98, -338, -277, 388, 389, 192,
	-146, -146, 96, -239, 30, 31, -191, -303, 183, -307,
	-191, -269, 289, -191, -169, -171, -172, -173, -194, -222,
	-424, -174, -31, 617, 614, 18, -184, -185, -193, -306,
	-275, -320, -274, 96, 433, 435, 436, 85, 134, -146,
	-339, 191, -367, -366, -365, -348, -350, -351, -352, 97,
	-339, -344, 395, 394, -336, -336, -336, -336, -336, -338,
	-338, -338, -338, 95, -336, 95, -336, -336, -336, -336,
	-341, 95, -341, -341, -342, -341, 95, -342, -343, 95,
	-343, -378, -146, -375, -374, -372, -373, 263, 110, 689,
	645, 597, 638, 679, 86, -370, -239, 105, -425, -144,
	-291, -376, -373, -300, -300, -300, -306, 157, 100, 98,
	100, 98, 100, 98, -113, -61, -1, 750, 751, 752,
	96, 23, -349, -348, -60, 314, -381, -382, 289, -377,
	-371, -357, 151, -356, -357, -357, -300, 96, 32, 139,
	139, 139, 139, 597, 242, 35, -292, 637, 157, 689,
	645, -348, -60, 256, 256, -319, -319, -319, 98, 98,
	-287, 746, -184, -140, 306, 165, 295, 295, 253, 308,
	253, 308, -191, 319, 322, 320, 321, 318, 323, 324,
	325, 326, 41, 41, 41, 41, 41, 41, 41, 307,
	309, 311, 297, -191, -191, -290, 85, -186, -191, 29,
	-306, 98, 98, -191, -288, -288, -191, -288, -288, -191,
	98, -306, -420, 339, -300, 375, 704, 706, -124, 434,
	96, 597, 26, -125, 26, -424, -416, 132, 133, -221,
	-221, -221, -210, -151, -154, -151, 156, 277, -151, -151,
	-424, -223, -425, -302, 28, 96, 86, -425, 181, 96,
	-425, -425, 96, 18, 96, -231, -229, 163, -146, -425,
	96, -425, -425, -211, -146, -146, -146, -146, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -211, -425,
	96, 96, 18, -323, 28, -425, -425, -425, -425, 96,
	-425, -425, -230, -425, 18, -425, 86, 96, 176, 96,
	-425, -425, -425, 96, 96, -425, -425, 96, -425, 96,
	-425, -425, -425, -425, -425, -425, 96, -425, 96, -425,
	-425, -425, 96, -425, 96, -425, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, -425, -425, 96, -425, 96, -425, 96,
	-425, -425, 96, -425, 96, -425, 96, -425, 96, 96,
	-425, 96, 96, 96, -425, 96, 96, 96, 96, -425,
	-425, -425, -425, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, -425, -425, -425, -425, -425, -425, 96,
	-95, 622, -425, -425, 96, -425, 96, 96, 96, 96,
	96, -425, -424, 236, -425, -425, -425, -425, -425, 96,
	96, 96, 96, 96, 96, -425, -425, -425, 96, 96,
	-425, 96, -425, 96, -425, -406, 710, 435, -198, -197,
	-195, 83, 257, 84, -424, -308, -425, -159, -266, -267,
	-266, -204, -300, 105, 114, -242, -168, 96, -170, 18,
	-221, 97, 96, -219, -425, -338, -246, -252, -285, -300,
	98, 192, -340, 192, -340, 388, 389, -238, 236, -199,
	19, -203, 35, 63, -29, -424, -424, 35, 96, -187,
	-189, -188, -190, 75, 79, 81, 76, 77, 78, 82,
	-314, 28, -31, -169, -31, -424, -191, -184, -426, 18,
	86, -426, 96, 236, -276, -279, 437, 434, 440, -392,
	98, -112, 96, -365, -352, -243, -141, 46, -345, 396,
	-338, 605, -338, -347, 98, -347, 105, 105, 105, 97,
	-50, -45, -46, 36, 90, -372, -359, 98, 45, -359,
	-359, -300, 97, -239, -140, -191, 85, -376, -376, -376,
	29, -2, 749, 755, 151, 95, 401, 22, -260, 96,
	97, -224, 315, 97, -114, -300, 97, 95, -357, -357,
	-300, -424, 253, 34, 34, 689, 645, 637, -60, -224,
	-223, -300, -339, 748, 747, 97, 255, 313, -145, 454,
	-142, 98, 100, -191, -191, -191, -191, -191, -191, 245,
	242, 424, -415, 327, 98, -415, 298, 256, -184, -191,
	96, -85, 272, 267, -311, -311, 36, -191, 434, 722,
	720, -146, 156, 277, -163, -154, -120, -120, -151, -321,
	192, 361, 276, 359, 355, 375, 366, 394, 357, 395,
	352, 351, 350, -321, -319, -151, -211, -146, -146, -146,
	164, -146, 162, -146, -96, -95, -425, -425, -425, -425,
	-425, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -235, -146, -146, -146, -425, 192, 361, -96, -146,
	18, -146, -319, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -389, -146,
	-211, -146, -211, -146, -146, -146, -146, -146, -390, -390,
	-390, -390, -390, -211, -211, -211, -211, -146, -424, -300,
	-99, -98, -97, 672, 257, -95, -165, -99, -165, 235,
	-146, 235, 235, 235, -146, -212, -302, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -195, -353, 295,
	-353, 295, -353, -270, 96, -281, 26, 18, 63, 63,
	-168, -199, -133, -169, -300, -249, 703, -255, 52, -253,
	-254, 53, -250, 54, 62, -340, -340, 183, -240, -146,
	-271, 85, -272, -280, -223, -215, -218, -216, -424, -259,
	-425, -300, -270, -272, -171, -172, -172, -171, -172, 75,
	75, 75, 80, 75, 80, 75, -188, -306, -425, -146,
	-309, 86, -169, -169, -193, -306, 183, 434, 438, 439,
	-365, -413, 130, 157, 34, 85, 392, 110, -411, 191,
	634, 684, 689, 645, 638, 679, -412, 259, 150, 151,
	271, 28, 47, 97, 96, 97, 96, 97, 97, 96,
	-293, -292, -46, -45, -359, -359, 105, -392, 98, 98,
	255, -191, 85, 85, 85, -115, 753, 105, 95, -3,
	90, -146, 95, 23, -348, -223, -383, -333, -384, -334,
	-335, -5, -6, -360, -118, 63, 110, -64, 50, 254,
	733, 734, 139, -424, 746, -375, -260, -379, -381, -191,
	-150, -424, -162, -148, -147, -149, -155, 181, 182, 276,
	357, 358, -224, -191, -139, 304, 312, 95, -143, 101,
	-394, 86, 295, 392, 295, 392, 98, -417, 328, 98,
	-417, -191, -85, -50, -191, -288, -288, 36, -392, -425,
	-163, -154, -127, 176, 597, -324, 604, -336, -336, -336,
	-343, -336, 347, -336, 347, -336, -425, -425, -425, 96,
	-425, 26, -425, 96, -146, 96, -96, -96, -96, -96,
	-96, -123, 493, 96, 96, -425, 95, 95, -425, -146,
	-425, -425, -425, 96, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, -425,
	96, -425, -425, -425, 96, -425, 96, -425, 96, -425,
	-425, -425, 96, -322, 690, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -94, -301, -95, 654,
	654, -425, -95, -232, 96, -151, -425, -151, -151, -151,
	-425, -425, -425, 96, -425, 96, 96, -425, 96, -425,
	96, -425, -425, -425, -425, 96, -196, 26, -424, -196,
	-424, -196, -425, -266, -191, -199, -233, 20, -246, 57,
	367, -257, -256, 61, 53, -254, 23, 55, 23, 33,
	-271, 96, 165, -313, 96, 28, -425, -425, 96, 63,
	236, -425, -199, -182, -181, 85, 86, -183, 85, -181,
	75, 75, -261, 96, -269, -169, -199, -199, 236, 130,
	-424, -150, 16, 98, 98, -392, -410, 737, 738, 34,
	739, 105, -359, -359, 151, 151, -191, 95, -338, 98,
	-338, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, -191, -191, -191, -191, -380, 95, 23, -146, 95,
	165, 97, -260, -260, 291, 176, -359, 731, 297, 297,
	-359, -359, -359, -117, -116, 753, 97, -425, 96, -346,
	597, 600, -146, -156, -156, -261, 97, -388, 597, -393,
	-300, -300, -300, -300, 105, 107, -425, 595, 82, 598,
	-425, -338, -146, -146, -146, -146, -240, 98, -146, -146,
	105, 105, -96, -425, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -211, -146, -425, -179, -178, -180,
	714, 130, 34, -321, -425, -213, 289, -102, -101, -100,
	18, -425, -146, -120, -120, -120, -120, -146, -146, -146,
	-146, -146, -146, -424, 75, 22, 20, -263, -300, 259,
	-424, -263, -424, -309, -233, -234, 21, 23, -247, 59,
	-245, 58, -245, -256, 23, 23, 98, 23, 98, 151,
	-280, -146, -218, -308, 63, -29, -300, -215, -300, -235,
	-146, 95, -146, -159, -199, -199, -146, -206, 517, 519,
	520, 521, 518, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 522, 533, 494, 495, 496, 117, 119,
	118, 127, 128, 497, 498, 499, 361, 545, 546, 540,
	543, 544, 542, 541, 376, 377, 500, 563, 564, 568,
	567, 565, 566, 569, 572, 573, 574, 575, 576, 577,
	579, 578, 570, 571, 548, 547, 549, 550, 551, 552,
	553, 554, 556, 555, 557, 558, 559, 560, 561, 562,
	580, 581, 582, 583, 584, 586, 585, 590, 589, 587,
	588, 592, 591, 501, 502, 120, 121, 122, 123, 124,
	125, 126, 503, 506, 504, 507, 508, 509, 514, 515,
	510, 511, 512, 513, 516, 387, 385, 386, 382, 381,
	380, 441, 446, 447, 449, 534, 535, 536, 537, 538,
	539, 695, 696, 697, 698, 699, 700, 701, 702, 98,
	98, 95, -146, 97, 97, -261, -379, -61, 97, -262,
	-260, 105, 97, 292, -216, -424, 98, -359, -359, -359,
	105, 105, -308, -425, 96, -300, -412, -381, 601, 601,
	-425, 28, -387, -386, -302, 95, 86, 68, 596, 599,
	-425, -425, -425, 96, -425, -425, -425, 97, 97, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, 96, -425, -178, -180, -425, 85, -159, -235, 23,
	-99, 314, 316, -99, -425, -425, -425, -425, -425, 96,
	-425, -425, 96, -425, 96, -425, -425, -263, -425, 23,
	23, 96, -425, -263, -425, -263, -198, -234, -109, -108,
	-107, 628, -146, -211, -248, 60, 85, 134, 98, 98,
	98, 16, -424, -215, 236, -313, -240, -260, -176, 401,
	-235, -425, -260, 97, 28, 97, 755, 151, 97, -216,
	-126, -424, 288, -308, 98, 98, -116, -119, -29, 96,
	165, -260, -191, 68, -146, -211, -425, 85, 609, 714,
	-93, -92, -89, 725, 751, -211, -95, -95, -146, -146,
	-146, -425, -300, 259, -425, -425, -109, 96, -106, -105,
	-300, -325, 597, 85, 134, -272, -260, -313, -300, 97,
	-425, -424, -240, 97, -244, -29, 95, -3, 288, -333,
	-384, -334, -335, -5, -6, -360, -83, 597, -386, -364,
	-306, -302, 98, 105, 97, 597, -425, -425, -91, 159,
	723, 687, -156, 235, -425, 96, -425, 96, -425, 96,
	-107, 96, 28, 602, -425, -309, -177, -175, -300, 651,
	-403, -402, 593, -413, -409, 130, 157, 110, -411, 684,
	689, 645, 140, 141, -83, -146, 95, -425, -84, 303,
	710, 236, -394, 598, -91, 724, 665, 640, 665, 640,
	-151, -146, -146, -146, -105, -424, -425, 96, 26, -326,
	-63, 662, -400, -401, 85, -404, 407, 661, 682, 130,
	98, 105, 97, -260, 264, -307, -388, 599, 156, -120,
	-425, 96, -425, 96, -425, -94, -175, 658, -339, -159,
	-401, 85, -400, 85, 17, 16, -4, 754, 97, 305,
	-91, 665, 640, -146, -146, -425, -62, 29, -176, -399,
	272, 267, 270, 35, -399, 105, -4, -425, -425, 662,
	266, 34, 130, -159, -179, -178, -178,
}

var yyDef = [...]int{
	894, -2, -2, 896, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 894, 894, 894, 0, 894, 0,
	0, 894, -2, -2, 894, 1655, 0, 894, 0, 889,
	0, -2, 809, 815, 0, 824, -2, 0, 0, 894,
	894, 2300, 2300, 889, 0, 0, 0, 0, 0, 894,
	894, 894, 894, 1660, 1507, 50, 894, 0, 88, 89,
	844, 845, 846, 65, 0, 2298, 85, 894, 895, 1,
	3, 71, 75, 0, 0, 0, 58, 1516, 0, 78,
	0, 0, 898, 0, 0, 1638, 894, 894, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 614, 531, 583, 529, 568, -2, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 406, 406, 0, 0, -2, 517, 517, 517,
	1640, 0, 0, 0, 565, 468, 406, 406, 406, 0,
	406, 406, 406, 406, 0, 0, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 1534, 168, 1656, 1653, 1654, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	0, 1632, 0, 727, 998, 0, 890, 891, 0, 798,
	798, 0, 798, 798, 798, 798, 0, 0, 0, 741,
	0, 0, 0, 0, 795, 0, 757, 758, 0, 795,
	0, 764, 801, 0, 0, 771, 798, 798, 774, 2301,
	0, 2301, 2301, 0, 0, 1623, 0, 792, 790, 804,
	805, 42, 808, 811, 812, 813, 814, 817, 0, 828,
	831, 1649, 1650, 0, 833, 838, 857, 858, 0, 45,
	1158, 0, 1022, 0, 1033, -2, 1044, 1061, 1062, 1063,
	1064, 1065, 1067, 1068, 1069, 0, 0, 0, 0, 1074,
	1075, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 2020, 1478, 0, 0, 1440, 1440, 1174, 1440, 1440,
	1442, 1442, 1442, 1869, 2012, 2021, 2202, 1830, 1836, 1837,
	1838, 2148, 2149, 2150, 2151, 2244, 2245, 2249, 1933, 1825,
	2216, 2217, 0, 2297, 1972, 1980, 1981, 1957, 1966, 2005,
	2110, 2228, 1848, 2000, 2072, 1930, 1952, 1953, 2091, 2092,
	1976, 1977, 1956, 2154, 2156, 2172, 2173, 2158, 2160, 2169,
	2175, 2180, 2159, 2171, 2176, 2189, 2193, 2196, 2197, 2198,
	2166, 2164, 2177, 2181, 2183, 2185, 2191, 2194, 2167, 2165,
	2178, 2182, 2184, 2186, 2192, 2195, 2153, 2157, 2161, 2170,
	2188, 2168, 2187, 2162, 2174, 2179, 2190, 2163, 2155, 1970,
	1973, 1960, 1961, 1963, 1965, 1971, 1978, 1984, 1962, 1983,
	1982, 0, 1958, 1959, 1964, 1975, 1979, 1967, 1968, 1969,
	1974, 1985, 2027, 2026, 2025, 2071, 1996, 2070, 0, 0,
	0, 0, 0, 1819, 1875, 1876, 2199, 1362, 1363, 1364,
	1365, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	1491, 1492, 44, 1157, 1619, 1442, 1442, 1442, 1442, 1442,
	1442, 1096, 1097, 1098, 1099, 1100, 1126, 1127, 1133, 1134,
	2086, 2087, 2088, 2089, 1913, 2239, 1922, 1923, 2067, 2068,
	1935, 1936, 2271, 2272, -2, -2, -2, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 1874, 2214, 2215, 233,
	0, 1617, 1618, 300, 297, 298, 299, 1140, 1141, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
	294, 0, 302, 303, 2300, 0, 867, 0, 0, 0,
	0, 0, 0, 1661, 1662, 1516, 0, 1508, 1507, 63,
	0, 894, -2, 0, 0, 0, 0, 47, 0, 52,
	955, 0, 897, 77, 76, 1556, 1559, 0, 0, 0,
	59, 1517, 67, 69, 1518, 0, 899, 900, 0, 931,
	935, 0, 0, 0, 1639, 1638, 1638, 105, 0, 0,
	106, 126, 127, 128, 0, 0, 112, 113, 1625, 1626,
	43, 0, 0, 180, 181, 0, 1114, 433, 0, 176,
	0, 426, 365, 0, 1534, 0, 0, 0, 0, 0,
	1636, 0, 1633, 157, 158, 165, 166, 167, 406, 406,
	406, 580, 0, 0, 168, 168, 538, 539, 540, 0,
	0, -2, 431, 0, 518, 0, 0, 420, 420, 424,
	422, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	557, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 675, 0, 407, 0, 578, 579, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1642, 0,
	555, 556, 0, 0, 0, 406, 406, 0, 0, 0,
	0, 406, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 1547, 0, 0, 0, -2, 0, 719, 0,
	0, 0, 1634, 1634, 0, 726, 0, 0, 0, 731,
	0, 0, 732, 0, 795, 795, 793, 794, 734, 735,
	736, 737, 798, 0, 0, 415, 416, 417, 795, 798,
	0, 798, 798, 798, 798, 795, 795, 795, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2301, 801,
	798, 0, 765, 0, 766, 767, 768, 769, 772, 773,
	775, 2302, 2303, 1651, 1652, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 2301, 2301,
	779, 783, 787, 785, 1624, 810, 816, 818, 819, 0,
	0, 829, 832, 851, 49, 1921, 837, 49, 839, 840,
	841, 842, 843, 869, 870, 875, 0, 0, 0, 0,
	881, 882, 883, 0, 0, 886, 887, 888, 0, 0,
	0, 0, 0, 1020, 0, 0, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 1046, 0, 0, 0, 1070, 1071, 1072,
	1073, 1076, 0, 1087, 0, 1089, 1487, -2, 0, 0,
	0, 1081, 1082, 0, 0, 0, 1644, 1644, 0, 0,
	0, 1479, 0, 0, 1172, 0, 1173, 1175, 1176, 1177,
	0, 1178, 1179, 904, 904, 904, 904, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	1644, 1644, 0, 0, 225, 226, 227, 228, 229, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 245, 246, 247, 248, 249,
	304, 250, 251, 252, 1157, 0, 0, 894, 0, 46,
	859, 860, 0, 981, 1644, 0, 0, 910, 0, 1659,
	57, 66, 68, 1516, 61, 1516, 0, 914, 0, 0,
	-2, -2, 915, 916, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 54, 2299, 55, 0, 74, 0, 48,
	0, 0, 79, 80, 1607, 1611, 0, 1557, 0, 1560,
	0, 0, 0, 379, 1564, 0, 0, 1509, 1510, 1513,
	0, 932, 2018, 936, 0, 938, 939, 0, 0, 103,
	0, 997, 0, 0, 0, 114, 0, 116, 117, 0,
	0, 0, 390, 1627, 1628, 1629, -2, 413, 0, 390,
	374, 312, 313, 314, 365, 316, 365, 365, 365, 365,
	379, 379, 379, 379, 347, 348, 349, 350, 351, 0,
	365, 0, 333, 365, 365, 365, 365, 355, 356, 357,
	358, 359, 360, 361, 362, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 367, 367, 367, 367, 367, 371,
	371, 0, 1115, 0, 394, 0, 1513, 0, 0, 1547,
	1636, 1646, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 581, 625, 532, 569, 582, 0, 535, 536, -2,
	0, 0, 517, 0, 519, 0, 414, 0, -2, 0,
	424, 0, 420, 424, 421, 424, 412, 425, 559, 560,
	561, 0, 563, 564, 655, 967, 0, 0, 0, 0,
	0, 661, 662, 663, 0, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 519, 0, 566,
	0, 0, 470, 471, 472, 0, 0, 475, 476, 477,
	478, 0, 0, 481, 482, 483, 984, 985, 484, 485,
	510, 511, 512, 486, 487, 488, 489, 490, 491, 492,
	504, 505, 506, 507, 508, 509, 493, 494, 495, 496,
	497, 498, 501, 0, 150, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 0, 913, 999,
	1657, 1658, 728, 0, 0, 799, 800, 0, 418, 419,
	798, 798, 738, 780, 0, 798, 742, 781, 743, 745,
	744, 746, 759, 760, 798, 749, 796, 797, 750, 751,
	752, 753, 754, 755, 756, 776, 761, 762, 763, 802,
	0, 806, 807, 777, 778, 0, 788, 0, 0, 0,
	822, 823, 0, 830, 854, 852, 853, 855, 847, 848,
	849, 850, 0, 856, 0, 0, 872, 99, 877, 878,
	879, 880, 892, 885, 1159, 1017, 1018, 1019, 0, 1021,
	1027, 0, 1142, 1144, 1025, 1026, 1029, 0, 0, 0,
	1023, 1034, 1154, 1155, 1156, 0, 0, 0, 0, 0,
	1038, 1042, 1047, 1048, 1049, 1050, 1051, 0, 1052, 0,
	1055, 1056, 1057, 1058, 1059, 1060, 1066, 1455, 1456, 1457,
	1085, 305, 306, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1158, 0, 1645, 0, 0, 0, 1485,
	1482, 0, 0, 0, 1441, 1443, 0, 0, 0, 905,
	906, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 0, 0, 1458, 0,
	0, 0, 0, 0, 0, 0, 1478, 0, 1091, 1092,
	1093, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 1367, 1368, 1369, 41, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 1615,
	0, 0, 862, 863, 865, 0, 1001, 0, 982, 0,
	0, 868, 0, 909, 0, 912, 60, 62, 918, 919,
	0, 940, 929, 917, 56, 51, 0, 0, 959, 0,
	0, 1558, 1561, 1562, 379, 1584, 0, 388, 388, 385,
	1519, 1520, 0, 1512, 1514, 1515, 81, 937, 933, 0,
	1015, 0, 0, 996, 0, 943, 945, 946, 947, 979,
	0, 950, 951, 0, 0, 0, 0, 0, 101, 998,
	107, 0, 115, 0, 0, 120, 121, 108, 109, 110,
	111, 0, 614, -2, 465, 182, 184, 185, 186, 177,
	-2, 377, 375, 376, 315, 379, 379, 341, 342, 343,
	344, 345, 346, 0, 353, 0, 334, 335, 336, 337,
	326, 0, 327, 328, 329, 369, 0, 330, 331, 0,
	332, 432, 0, 1521, 395, 396, 398, 406, 0, 401,
	402, 0, 406, 406, 0, 427, 428, 0, 1513, 1538,
	0, 0, 1647, 1646, 1646, 1646, 155, 0, 170, 171,
	172, 173, 174, 175, 650, 0, 0, 626, 648, 649,
	168, 0, 0, 178, 521, 520, 0, 682, 0, 430,
	0, 0, 424, 424, 409, 410, 562, 0, 0, 657,
	658, 659, 660, 0, 0, 0, 548, 459, 0, 549,
	550, 519, 521, 0, 0, 390, 473, 474, 479, 480,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 598, 600, 603, 605, 523, 609,
	611, 0, 599, 602, 604, 606, 523, 610, 612, 1535,
	1536, 1537, 0, 0, 720, 0, 0, 456, 97, 1635,
	725, 729, 730, 795, 748, 782, 795, 740, 747, 770,
	784, 786, 820, 821, 826, 834, 835, 836, 876, 0,
	0, 0, 0, 884, 0, 0, 1028, 1143, 1145, 1030,
	1031, 1032, 1035, 0, 1039, 1043, 0, 0, 0, 0,
	0, 1090, 1088, 1489, 0, 0, 0, 1139, 0, 0,
	1162, 1163, 0, 0, 0, 0, 1483, 0, 0, 1170,
	0, 1444, 1120, 0, 0, 0, 0, 0, 1120, 1120,
	1120, 1120, 1120, 1120, 1120, 1120, 1120, 1120, 1507, 1197,
	0, 0, 0, 0, 0, 1202, 1203, 1204, 1120, 0,
	1207, 1208, 0, 1210, 0, 1211, 0, 0, 0, 0,
	1218, 1219, 1221, 0, 0, 1224, 1225, 0, 1227, 0,
	1229, 1230, 1231, 1232, 1233, 1234, 0, 1236, 0, 1238,
	1239, 1240, 0, 1242, 0, 1244, 1245, 0, 1247, 0,
	1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261, 0,
	1264, 0, 1267, 0, 1270, 0, 1273, 0, 1276, 0,
	1279, 0, 1282, 0, 1285, 0, 1288, 0, 1291, 0,
	1294, 0, 1297, 1298, 1299, 0, 1301, 0, 1303, 0,
	1306, 1307, 0, 1309, 0, 1312, 0, 1315, 0, 0,
	1316, 0, 0, 0, 1320, 0, 0, 0, 0, 1329,
	1330, 1331, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 1344, 1345, 1346, 1347, 1348, 0,
	1350, 0, 1121, 0, 0, 1121, 0, 0, 0, 0,
	0, 1160, 1644, 0, 1445, 1446, 1447, 1448, 1449, 0,
	0, 0, 0, 0, 0, 1389, 1390, 1392, 0, 0,
	1395, 0, 1397, 0, 1616, 861, 864, 866, 953, 1002,
	1003, 0, 0, 0, 0, 983, 1643, 907, 908, 911,
	961, 0, 1493, 0, 0, 940, 1015, 0, 941, 0,
	53, 956, 0, 1608, 1612, 1566, 1565, 1578, 1591, 388,
	388, 382, 383, 389, 384, 386, 387, 1511, 0, 1516,
	0, 1605, 0, 894, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 989, 0, 0, 0,
	0, 980, 951, 0, 952, 0, -2, 0, 0, 95,
	96, 0, 0, 0, 118, 119, 0, 0, 125, 391,
	392, 159, 168, 467, 183, 440, 0, 0, 311, 378,
	338, 339, 340, 0, 363, 0, 0, 0, 0, 461,
	131, 1525, 1524, 406, 406, 397, 0, 400, 0, 0,
	0, 1648, 366, 429, 0, 149, 0, 0, 0, 0,
	1637, 620, 0, 0, 627, 0, 0, 0, 530, 0,
	541, 542, 0, 654, -2, 716, 394, 0, 408, 411,
	968, 0, 0, 543, 0, 546, 547, 460, 521, 552,
	553, 567, 554, 502, 503, 500, 0, 0, 1548, 1549,
	1554, 1552, 1553, 136, 588, 590, 594, 589, 593, 0,
	0, 0, 525, 0, 613, 525, 586, 0, 456, 1521,
	0, 724, 457, 458, 798, 798, 871, 100, 0, 874,
	0, 0, 0, 0, 1036, 1040, 1053, 1054, 1450, 1476,
	365, 365, 1463, 365, 371, 1466, 365, 1468, 365, 1471,
	365, 1474, 1475, 0, 0, 1083, 0, 0, 0, 0,
	1169, 1486, 0, 0, 1180, 1119, 1120, 1120, 1120, 1120,
	1120, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1480, 0, 0, 0, 1201, 0, 0, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 148,
	0, 0, 0, 0, 0, 0, 1400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1114, 1118,
	0, 1122, 1123, 0, 0, 1352, 0, 0, 1370, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1004, 1011, 0,
	1011, 0, 1011, 0, 0, 0, 1630, 1631, 1494, 1495,
	1015, 1496, 930, 942, 960, 1584, 0, 1577, 0, -2,
	1586, 0, 0, 0, 1592, 380, 381, 934, 82, 1016,
	86, 0, 1605, 1620, 0, 1602, 1609, 1613, 0, 0,
	0, 1598, 0, 1015, 944, 975, 977, 0, 972, 987,
	988, 990, 0, 992, 0, 994, 995, 955, 949, 0,
	103, 0, 1015, 1015, 102, 0, 1000, 122, 123, 124,
	466, 187, 192, 0, 0, 0, 197, 0, 199, 0,
	0, 0, 204, 205, 406, 406, 441, 0, 308, 310,
	0, 0, 190, 379, 0, 379, 0, 370, 372, 0,
	442, 462, 1522, 1523, 0, 0, 399, 403, 404, 405,
	0, 151, 0, 0, 0, 623, 0, 651, 0, 0,
	0, 0, 0, 0, 179, 522, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 0, 406, 0, 0, 0,
	406, 406, 406, 0, 708, 393, 0, 0, 679, 676,
	544, 0, 223, 224, 231, 232, 234, 0, 0, 0,
	0, 0, 551, 955, 1539, 1540, 1541, 0, 1551, 1555,
	139, 0, 0, 0, 0, 596, 601, 607, 0, 524,
	608, 721, 722, 723, 98, 733, 739, 873, 893, 1024,
	1037, 1041, 0, 0, 0, 0, 1477, 1461, 379, 1464,
	1465, 1467, 1469, 1470, 1472, 1473, 1079, 1080, 1084, 0,
	1166, 0, 1168, 0, 1484, 0, 1181, 1182, 1183, 1184,
	1185, 1516, 0, 0, 0, 1200, 0, 0, 1120, 0,
	1213, 1212, 1214, 0, 1216, 1217, 1222, 1223, 1226, 1228,
	1235, 1237, 1241, 1243, 1246, 1248, 1250, 0, 1253, 0,
	1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268, 0,
	1271, 0, 1274, 0, 1277, 0, 1280, 0, 1283, 0,
	1286, 0, 1289, 0, 1292, 0, 1295, 0, 1300, 1302,
	0, 1305, 1308, 1310, 0, 1313, 0, 1317, 0, 1319,
	1321, 1322, 0, 0, 0, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1349, 0, 1112, 1351, 1124,
	1125, 1130, 1354, 0, 0, 0, 1357, 0, 0, 0,
	1361, 1161, 1372, 0, 1377, 0, 0, 1383, 0, 1387,
	0, 1393, 1394, 1396, 1398, 0, 0, 0, 0, 0,
	0, 0, 981, 962, 64, 1496, 1500, 0, 1571, 1569,
	1569, 1579, 1580, 0, 0, 1587, 0, 0, 0, 0,
	87, 0, 0, 1593, 0, 0, 1614, 0, 0, 0,
	0, 104, 1507, 969, 976, 0, 0, 970, 0, 971,
	991, 993, 948, 0, 1015, 1015, 93, 94, 0, 193,
	0, 195, 0, 198, 200, 201, 202, 208, 209, 210,
	211, 203, 0, 0, 307, 309, 0, 0, 352, 364,
	354, 0, 0, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 955, 152, 153, 154, 615, 0, 625, 0, 957,
	0, 618, 0, 533, 0, 0, 0, 406, 406, 406,
	0, 0, 0, 0, 693, 0, 0, 656, 0, 664,
	0, 0, 0, 235, 236, 0, 1550, 587, 0, 137,
	138, 0, 0, 592, 526, 527, 1077, 0, 0, 0,
	1078, 1462, 0, 0, 0, 0, 0, 1481, 0, 0,
	0, 0, 1206, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	645, 646, 0, 1401, 1117, 1507, 0, 1121, 1131, 1132,
	0, 1121, 1371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1012, 0, 0, 0, 963, 964,
	0, 0, 0, 1001, 1500, 1505, 0, 0, 1574, 0,
	1567, 1570, 1568, 1581, 0, 0, 1588, 0, 1590, 0,
	1621, 1622, 1610, 1603, 894, 1597, 1600, 1602, 1599, 1516,
	973, 0, 978, 0, 1507, 92, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	207, 0, 0, 368, 373, 0, 0, 0, 616, 0,
	958, 628, 619, 0, 706, 0, 710, 0, 0, 0,
	713, 714, 715, 692, 0, 696, 434, 680, 677, 678,
	545, 0, 140, 141, 0, 0, 0, 1451, 0, 1454,
	1164, 1167, 1165, 0, 1196, 1198, 1199, 1459, 1460, 1215,
	1251, 1254, 1257, 1260, 1263, 1266, 1269, 1272, 1275, 1278,
	1281, 1284, 1287, 1290, 1293, 1296, 1304, 1311, 1314, 1318,
	1323, 0, 1326, 0, 0, 1327, 0, 647, 1108, 0,
	0, 1128, 1129, 0, 1356, 1358, 1359, 1360, 1373, 0,
	1378, 1379, 0, 1384, 0, 1388, 1399, 0, 1006, 1013,
	1014, 0, 1009, 0, 1010, 0, 954, 1505, 84, 1506,
	1503, 0, 1501, 1498, 1563, 0, 1572, 1573, 1582, 1583,
	1589, 0, 0, 1602, 0, 1596, 90, 0, 0, 0,
	1516, 194, 0, 214, 0, 624, 0, 627, 617, 704,
	705, 0, 717, 709, 711, 712, 694, -2, 1542, 0,
	0, 0, 595, 1452, 0, 0, 1328, 0, 643, 644,
	1116, 1109, 0, 1094, 1095, 1113, 1353, 1355, 0, 0,
	0, 1005, 965, 966, 1007, 1008, 83, 0, 1502, 1136,
	0, 1497, 0, 1575, 1576, 1606, 0, 1595, 1601, 974,
	981, 0, 91, 447, 440, 1542, 0, 0, 0, 697,
	698, 699, 700, 701, 702, 703, 584, 1544, 142, 143,
	0, 514, 515, 516, 136, 0, 1171, 1324, 1110, 0,
	0, 0, 0, 0, 1374, 0, 1380, 0, 1385, 0,
	1504, 0, 0, 1499, 1604, 629, 0, 631, 0, -2,
	435, 448, 0, 188, 215, 216, 0, 0, 219, 0,
	221, 222, 212, 213, 132, 0, 0, 718, 0, 1545,
	1546, 0, 139, 0, 0, 1101, 1102, 1103, 1104, 1106,
	0, 0, 0, 0, 1137, 1114, 630, 0, 0, 390,
	0, 640, 436, 437, 0, 443, 444, 445, 446, 217,
	218, 220, 652, 0, 0, 513, 591, 1453, 0, 0,
	1375, 0, 1381, 0, 1386, 0, 632, 633, 641, 0,
	438, 0, 439, 0, 0, 0, 621, 0, 652, 1543,
	1111, 1105, 1107, 0, 0, 1135, 0, 642, 638, 449,
	451, 452, 0, 0, 450, 653, 622, 1376, 1382, 0,
	453, 454, 455, 634, 635, 636, 637,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 756,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:696
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:708
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:712
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:718
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:724
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:730
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:743
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:753
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:759
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:773
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:796
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:802
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:807
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:813
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:820
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:826
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:833
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:837
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:843
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:847
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:851
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:855
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:859
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:865
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:869
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:874
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:878
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:884
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:888
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:893
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:899
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:905
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:912
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:916
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:936
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:940
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:944
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:974
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:978
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1002
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1007
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1012
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1022
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1032
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1045
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1051
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1057
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1067
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1071
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1075
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1079
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1085
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1089
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1093
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1099
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1103
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1109
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1119
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1123
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1127
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1151
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1155
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1159
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1165
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1178
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1187
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].tableStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1191
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1222
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1227
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1233
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1253
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1259
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1275
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1289
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1294
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1299
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1304
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1311
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1318
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1329
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1340
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1346
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1350
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1354
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1386
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1396
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1412
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1416
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1422
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1432
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1437
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1446
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1470
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1479
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1569
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1584
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1588
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1592
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1596
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1602
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1606
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1615
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1620
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1625
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1630
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1635
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1640
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1645
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1650
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1739
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1747
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Armscii8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = ASCIIStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Big5Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = UBinaryStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp1250Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Cp1251Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Cp1256Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Cp1257Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Cp850Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Cp852Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Cp866Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Cp932Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Dec8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = EucjpmsStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = EuckrStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Gb18030Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Gb2312Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = GbkStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Geostd8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = GreekStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = HebrewStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Hp8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Keybcs2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Koi8rStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Koi8uStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Latin1Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Latin2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Latin5Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Latin7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = MacceStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = MacromanStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = SjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Swe7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Tis620Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = Ucs2Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = UjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = Utf16Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = Utf16leStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = Utf32Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = Utf8mb4Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = Utf8mb3Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1976
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1980
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1984
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1990
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1994
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2000
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2004
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2008
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2012
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2265
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2274
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2304
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2320
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2399
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2408
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2414
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2424
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2428
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2433
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2437
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2441
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2445
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2449
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2453
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2469
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2473
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2477
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2481
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2485
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = ""
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = yyDollar[2].str
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = yyDollar[1].str
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2552
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2562
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2566
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2572
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2576
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2582
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2586
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2592
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2598
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2602
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2606
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2610
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2614
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2623
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2629
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2635
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2641
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2645
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2649
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2654
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2658
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2664
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2676
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2680
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2684
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2688
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2692
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = ""
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2711
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2724
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2733
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2739
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2743
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2753
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2855
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2859
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2863
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2867
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2871
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2875
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2879
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2883
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2938
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2951
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2956
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2969
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2973
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2982
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2990
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2998
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3004
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3144
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3170
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3174
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3178
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3182
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3186
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3190
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3380
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3449
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3458
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3466
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3475
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3482
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3494
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3503
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3518
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3532
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3536
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3542
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3548
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3554
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3564
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3568
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3574
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3580
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3586
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3592
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3598
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3602
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3610
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3616
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3622
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3628
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3632
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3636
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3642
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3646
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3651
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3655
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3660
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3664
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3710
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3714
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3718
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3722
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3726
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3730
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3734
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3738
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3742
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3746
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3750
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3754
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3759
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3773
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3788
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3797
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3802
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3807
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3817
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3822
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3827
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3832
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3838
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3844
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3854
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3859
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3863
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3868
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3873
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3878
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3883
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3888
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3893
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3900
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3907
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3914
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3932
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3938
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3944
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3950
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3956
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3962
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3974
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3996
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4000
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4254
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = "extended "
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4299
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4303
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4337
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4341
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4351
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4428
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4434
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4444
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4448
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4452
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4479
		{
			yyVAL.empty = struct{}{}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4496
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4500
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4504
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4508
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4512
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4517
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4521
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4525
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4529
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4533
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4537
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.str = yyDollar[1].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = yyDollar[1].str
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = yyDollar[1].str
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4557
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4592
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4620
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4630
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4636
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4640
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4644
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4648
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4654
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4660
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4666
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4670
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4674
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4678
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4682
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4686
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4773
		{
			setAllowComments(yylex, true)
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.strs = nil
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4787
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4797
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4801
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = SQLCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4819
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4823
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4827
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4833
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4837
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4856
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4862
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4866
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			yyVAL.strs = nil
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.str = SQLCacheStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.str = DistinctStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.str = DistinctStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.str = HighPriorityStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = StraightJoinHint
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = SQLBigResultStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4937
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:4941
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4949
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4953
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4957
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4961
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4966
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4974
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4986
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4990
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4996
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5002
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5020
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5024
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5028
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5034
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5038
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5044
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5048
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5057
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5072
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5076
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5082
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5092
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5096
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5100
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5104
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5110
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5127
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5131
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5135
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5139
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5145
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5147
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5151
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5157
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5159
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5162
		{
			yyVAL.empty = struct{}{}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.empty = struct{}{}
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5167
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5171
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5175
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5188
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5192
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5196
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5202
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5208
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5212
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5216
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5220
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5226
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5230
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5240
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5244
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5254
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5275
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5279
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5285
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5289
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5293
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5297
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5301
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5305
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5310
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5314
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5318
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5322
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5634
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5638
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5644
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5648
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5654
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5658
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5662
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5668
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5672
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5679
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5683
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5687
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5691
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5695
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5701
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5705
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5709
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5713
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5717
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5721
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5725
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5734
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5740
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5744
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5753
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5758
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5768
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5774
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5778
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5784
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5800
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5806
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5810
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5816
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5820
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5826
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5830
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5842
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5848
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5852
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5858
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5864
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5868
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5874
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5878
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5884
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5888
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5895
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5899
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5903
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5907
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5913
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5917
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5923
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5927
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5931
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5935
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5939
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5943
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5949
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5953
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5957
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5964
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5970
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6935
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6947
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6951
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6968
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6974
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6978
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6982
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6986
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6990
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6994
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6998
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7002
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7006
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7010
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7026
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7030
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7034
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7038
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7042
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7046
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7050
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7068
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7096
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7100
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7104
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7108
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7112
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7116
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7120
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7124
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7134
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7138
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7142
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7152
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7156
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7168
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7174
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7178
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7182
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7186
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7190
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7196
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7200
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7214
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7274
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7278
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7282
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7301
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7306
		{
			yyVAL.str = string("")
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7310
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7316
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7320
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7326
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7335
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7341
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7345
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7349
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7353
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7359
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7363
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7369
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7378
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7382
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7391
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7410
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7416
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7422
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7426
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7435
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7444
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7450
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7456
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7460
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7466
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7471
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7475
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7479
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7488
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7494
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7498
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7502
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7511
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7515
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7519
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7523
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7530
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7534
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7538
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7542
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7548
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7552
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7556
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7560
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = "cascaded"
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7627
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7633
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7639
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7645
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7658
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = ""
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7667
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7673
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7677
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7681
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7685
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7689
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7693
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7697
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7703
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7707
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7711
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7733
		{
			yyVAL.str = " header"
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = ""
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7742
		{
			yyVAL.str = " manifest on"
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			yyVAL.str = " manifest off"
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7751
		{
			yyVAL.str = ""
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7755
		{
			yyVAL.str = " overwrite on"
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = " overwrite off"
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7765
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7770
		{
			yyVAL.str = ""
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7774
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7780
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7784
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = ""
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7809
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7813
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7819
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7827
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7832
		{
			yyVAL.str = ""
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7836
		{
			yyVAL.str = " optionally"
		}
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7849
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7853
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7857
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7861
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7865
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7871
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7875
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7879
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7883
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7892
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7896
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7905
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7911
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7915
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7921
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7925
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7931
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7935
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7941
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7945
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7951
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7957
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7967
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7977
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7981
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7987
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7994
		{
			yyVAL.str = "charset"
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8004
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8008
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8012
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8036
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8041
		{
			yyVAL.empty = struct{}{}
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8043
		{
			yyVAL.empty = struct{}{}
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8045
		{
			yyVAL.empty = struct{}{}
		}
	case 1643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8049
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8058
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8065
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8069
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8075
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8079
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8086
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8092
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8096
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8102
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8106
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8113
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8119
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8125
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8129
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8133
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8797
		{
		}
	case 2299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8802
		{
		}
	case 2300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8806
		{
			skipToEnd(yylex)
		}
	case 2301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8811
		{
			skipToEnd(yylex)
		}
	case 2302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8815
		{
			skipToEnd(yylex)
		}
	case 2303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8819
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
