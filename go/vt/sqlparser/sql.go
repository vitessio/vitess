// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const RETURNING = 57874
const FORMAT = 57875
const TREE = 57876
const VITESS = 57877
const TRADITIONAL = 57878
const LOCAL = 57879
const LOW_PRIORITY = 57880
const NO_WRITE_TO_BINLOG = 57881
const LOGS = 57882
const ERROR = 57883
const GENERAL = 57884
const HOSTS = 57885
const OPTIMIZER_COSTS = 57886
const USER_RESOURCES = 57887
const SLOW = 57888
const CHANNEL = 57889
const RELAY = 57890
const EXPORT = 57891
const AVG_ROW_LENGTH = 57892
const CONNECTION = 57893
const CHECKSUM = 57894
const DELAY_KEY_WRITE = 57895
const ENCRYPTION = 57896
const ENGINE = 57897
const INSERT_METHOD = 57898
const MAX_ROWS = 57899
const MIN_ROWS = 57900
const PACK_KEYS = 57901
const PASSWORD = 57902
const FIXED = 57903
const DYNAMIC = 57904
const COMPRESSED = 57905
const REDUNDANT = 57906
const COMPACT = 57907
const ROW_FORMAT = 57908
const STATS_AUTO_RECALC = 57909
const STATS_PERSISTENT = 57910
const STATS_SAMPLE_PAGES = 57911
const STORAGE = 57912
const MEMORY = 57913
const DISK = 57914
const PARTITIONS = 57915
const LINEAR = 57916
const RANGE = 57917
const LIST = 57918
const SUBPARTITION = 57919
const SUBPARTITIONS = 57920
const HASH = 57921

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	597, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 457,
	-1, 55,
	35, 672,
	231, 672,
	242, 672,
	277, 686,
	278, 686,
	-2, 674,
	-1, 60,
	233, 699,
	-2, 697,
	-1, 114,
	230, 1223,
	-2, 119,
	-1, 116,
	1, 146,
	597, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 451,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 466,
	-1, 677,
	215, 1244,
	-2, 1240,
	-1, 678,
	215, 1245,
	-2, 1241,
	-1, 752,
	59, 767,
	-2, 782,
	-1, 789,
	147, 1643,
	-2, 112,
	-1, 790,
	147, 1488,
	-2, 113,
	-1, 796,
	147, 1571,
	-2, 1217,
	-1, 944,
	147, 1419,
	-2, 1214,
	-1, 983,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1060,
	1, 505,
	597, 505,
	-2, 151,
	-1, 1297,
	59, 768,
	-2, 787,
	-1, 1298,
	59, 769,
	-2, 788,
	-1, 1351,
	131, 151,
	171, 151,
	327, 151,
	-2, 401,
	-1, 1429,
	132, 358,
	236, 358,
	-2, 451,
	-1, 1438,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1737,
	215, 1249,
	-2, 1243,
	-1, 1820,
	131, 151,
	171, 151,
	327, 151,
	-2, 402,
	-1, 1827,
	25, 170,
	-2, 172,
	-1, 2061,
	86, 39,
	-2, 824,
	-1, 2113,
	77, 94,
	86, 94,
	-2, 844,
	-1, 2178,
	572, 600,
	-2, 587,
	-1, 2311,
	49, 1185,
	-2, 1179,
	-1, 2518,
	86, 39,
	-2, 825,
	-1, 2556,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 816,
	-1, 2868,
	22, 1573,
	32, 1573,
	172, 1573,
	253, 1573,
	307, 1573,
	308, 1573,
	309, 1573,
	310, 1573,
	311, 1573,
	312, 1573,
	313, 1573,
	315, 1573,
	316, 1573,
	317, 1573,
	318, 1573,
	319, 1573,
	320, 1573,
	321, 1573,
	322, 1573,
	323, 1573,
	324, 1573,
	325, 1573,
	326, 1573,
	328, 1573,
	330, 1573,
	331, 1573,
	332, 1573,
	333, 1573,
	334, 1573,
	335, 1573,
	336, 1573,
	337, 1573,
	338, 1573,
	341, 1573,
	342, 1573,
	343, 1573,
	344, 1573,
	345, 1573,
	346, 1573,
	347, 1573,
	348, 1573,
	349, 1573,
	461, 1573,
	-2, 545,
}

const yyPrivate = 57344

const yyLast = 42614

var yyAct = [...]int{
	677, 686, 2646, 2648, 2270, 2647, 2919, 2800, 2913, 1817,
	1771, 2869, 2623, 2866, 2870, 2449, 2850, 1354, 2364, 2371,
	1751, 2015, 2405, 1753, 679, 2753, 2049, 767, 2661, 2322,
	2432, 2373, 2776, 1881, 2325, 2431, 1312, 670, 37, 1123,
	595, 3, 2326, 599, 2521, 2232, 2084, 2323, 96, 2268,
	671, 182, 745, 2666, 182, 592, 560, 182, 2527, 1775,
	680, 2269, 575, 668, 182, 669, 621, 2434, 1276, 2107,
	2547, 1790, 182, 2312, 2320, 2076, 2513, 1850, 2145, 1871,
	593, 2215, 591, 2175, 1855, 2146, 1013, 182, 2096, 1806,
	2147, 1408, 794, 38, 768, 2068, 1299, 1707, 154, 2051,
	140, 1647, 1731, 1637, 1795, 1782, 1890, 36, 947, 575,
	1870, 1857, 575, 182, 575, 749, 1706, 753, 1923, 2139,
	1794, 1595, 973, 1343, 978, 747, 2115, 1321, 1797, 91,
	604, 1279, 95, 1208, 1659, 770, 587, 1544, 1452, 1614,
	1144, 1540, 1443, 951, 954, 1868, 981, 1526, 791, 979,
	955, 980, 1734, 1436, 1846, 1342, 759, 984, 1776, 1340,
	1326, 1549, 1072, 157, 1703, 1121, 1115, 98, 117, 1403,
	118, 781, 1056, 755, 1101, 1428, 757, 123, 124, 1744,
	1215, 85, 89, 582, 2809, 991, 1211, 754, 178, 97,
	2920, 76, 1883, 1884, 1885, 1883, 2402, 2166, 2168, 2194,
	2193, 1921, 2606, 2223, 775, 8, 780, 2224, 2651, 756,
	77, 119, 120, 2830, 532, 7, 90, 2831, 1602, 6,
	761, 1512, 1145, 1601, 125, 162, 184, 185, 186, 1015,
	1748, 1749, 1600, 2651, 1599, 1598, 948, 1597, 1580, 585,
	1589, 586, 1029, 1030, 1018, 1033, 1034, 1035, 1036, 583,
	2885, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 746, 795, 788, 748,
	2047, 762, 2308, 2423, 994, 2501, 2078, 2933, 971, 769,
	119, 102, 159, 2895, 160, 970, 2420, 969, 2910, 1306,
	964, 959, 2650, 1019, 1020, 1021, 2582, 1607, 2831, 2749,
	2748, 1017, 1016, 2616, 177, 2388, 2617, 2932, 1862, 2860,
	2923, 2826, 2908, 995, 2624, 2851, 1031, 2650, 1145, 78,
	1909, 2859, 104, 105, 178, 108, 2825, 1155, 114, 2231,
	2421, 179, 1860, 2483, 527, 1961, 78, 1418, 2048, 1026,
	2361, 2362, 1812, 1813, 119, 1177, 1059, 2360, 120, 2202,
	142, 2222, 2427, 2201, 741, 742, 743, 744, 78, 1958,
	752, 162, 184, 185, 186, 1811, 2758, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1186, 1185, 1187, 1188, 1344, 1091,
	1345, 78, 2087, 739, 80, 2679, 1689, 738, 783, 784,
	1079, 1118, 152, 1750, 2169, 1080, 87, 141, 968, 1959,
	1065, 1066, 2801, 2124, 2136, 564, 2123, 2088, 2474, 2125,
	1096, 1097, 163, 87, 1079, 1830, 1829, 2472, 159, 1080,
	160, 168, 1151, 1155, 1092, 1143, 1085, 1078, 2451, 1077,
	564, 2524, 1068, 573, 2258, 87, 129, 130, 151, 150,
	177, 1588, 571, 577, 1283, 2176, 561, 2197, 963, 1891,
	2922, 965, 1527, 1590, 1591, 1592, 966, 1108, 87, 1110,
	2424, 1924, 1935, 1932, 1934, 1933, 1112, 1929, 564, 1502,
	1055, 1859, 564, 1681, 1670, 1671, 1672, 1673, 1683, 1674,
	1675, 1676, 1688, 1684, 1677, 1678, 1685, 1686, 1687, 1679,
	1680, 1682, 548, 1117, 1532, 968, 1054, 1107, 1109, 1061,
	2444, 1098, 1094, 1095, 546, 1093, 564, 1086, 2445, 2452,
	2210, 1099, 1032, 1503, 2608, 1504, 1100, 1937, 1151, 1938,
	2607, 1939, 1930, 1940, 2886, 1038, 1037, 182, 1928, 182,
	2453, 1926, 182, 2736, 155, 1002, 146, 127, 153, 134,
	126, 1894, 147, 148, 543, 968, 972, 960, 163, 1000,
	1791, 87, 974, 556, 962, 961, 975, 168, 135, 975,
	1058, 575, 1125, 575, 575, 2604, 1011, 1010, 553, 967,
	1927, 1009, 138, 136, 131, 132, 133, 137, 575, 575,
	1008, 1007, 1959, 1286, 128, 1006, 2259, 1005, 1004, 999,
	1105, 1421, 1012, 139, 1106, 2377, 1189, 2927, 2906, 952,
	952, 565, 1189, 966, 1111, 987, 986, 1150, 1147, 1148,
	1149, 1154, 1156, 1153, 2395, 1152, 1541, 37, 1442, 1869,
	952, 1137, 1146, 2917, 950, 782, 565, 1104, 2211, 1915,
	2052, 2054, 1537, 533, 1131, 535, 549, 1022, 567, 2196,
	566, 539, 1416, 537, 541, 550, 542, 2808, 536, 1415,
	547, 1414, 1057, 538, 551, 552, 554, 557, 558, 559,
	555, 2167, 545, 568, 565, 2387, 967, 2199, 565, 2170,
	155, 1028, 2759, 1089, 2186, 1538, 2603, 993, 1003, 2227,
	1412, 1192, 1193, 1194, 1195, 1973, 531, 1777, 1778, 526,
	1911, 1200, 1001, 1203, 1861, 1126, 1075, 1533, 1081, 1082,
	1083, 1084, 565, 1150, 1147, 1148, 1149, 1154, 1156, 1153,
	2525, 1152, 2214, 2797, 2824, 2563, 967, 993, 1146, 993,
	1119, 1120, 1441, 2543, 1531, 2120, 1274, 1113, 1127, 1128,
	1269, 2814, 2083, 2209, 2039, 2649, 2208, 1196, 1743, 182,
	2217, 1190, 1191, 575, 575, 2216, 1330, 149, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 182,
	2649, 1255, 1070, 116, 173, 174, 175, 176, 1514, 1513,
	1515, 1516, 1517, 1287, 86, 992, 1960, 1818, 575, 993,
	143, 1189, 182, 144, 1289, 1140, 1188, 575, 1293, 77,
	2053, 86, 2359, 575, 749, 1138, 1275, 747, 1292, 1139,
	1102, 1290, 81, 2425, 2426, 1217, 993, 1213, 764, 1214,
	1550, 1076, 1074, 86, 2233, 992, 2428, 992, 1067, 1064,
	996, 986, 1116, 986, 989, 990, 791, 952, 569, 2367,
	997, 983, 987, 2820, 1161, 2915, 86, 111, 2916, 1014,
	2914, 184, 185, 186, 1291, 1639, 562, 2599, 95, 1619,
	998, 2537, 982, 1261, 1262, 1263, 1264, 1265, 1275, 1925,
	1534, 563, 1346, 1620, 1621, 1618, 1528, 1280, 1529, 1088,
	2217, 1530, 993, 1141, 2368, 2216, 2251, 992, 1910, 1027,
	1090, 1660, 2159, 98, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 2235, 1159, 1160, 1161, 2370,
	173, 174, 175, 176, 992, 1160, 1660, 112, 1987, 2675,
	986, 989, 990, 2365, 952, 2574, 2480, 2573, 983, 987,
	1898, 1277, 1451, 1161, 1450, 1640, 1440, 1908, 1288, 1906,
	2375, 2376, 1002, 2004, 1308, 1311, 1903, 2366, 746, 1000,
	2902, 1161, 2564, 1103, 1060, 795, 1331, 182, 748, 87,
	2930, 1404, 1073, 1551, 2744, 1336, 1337, 2245, 2244, 2243,
	2237, 1413, 2241, 1617, 2236, 1158, 2234, 1159, 1160, 2372,
	992, 2239, 1521, 1907, 2253, 996, 986, 1609, 1611, 1612,
	2238, 1306, 575, 1161, 1438, 997, 1183, 1184, 1186, 1185,
	1187, 1188, 1447, 1903, 2836, 2743, 1449, 2240, 2242, 575,
	575, 1610, 575, 2790, 575, 575, 1306, 575, 575, 575,
	575, 575, 575, 1181, 1182, 1183, 1184, 1186, 1185, 1187,
	1188, 2903, 575, 2769, 1306, 1161, 182, 1485, 1341, 1158,
	1905, 1159, 1160, 1294, 2374, 1520, 2837, 2928, 1448, 1965,
	1966, 1967, 182, 2734, 2639, 2791, 2377, 2638, 1783, 1784,
	1519, 2581, 1161, 575, 1158, 182, 1159, 1160, 1419, 1420,
	691, 692, 693, 1480, 1481, 1498, 1539, 2580, 1161, 575,
	2403, 182, 1158, 1509, 1159, 1160, 2393, 2143, 1427, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1163, 182, 1306, 1996,
	1434, 2142, 1865, 1522, 182, 1664, 184, 185, 186, 1665,
	2571, 1507, 2817, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 575, 1518, 1158, 2816, 1159, 1160, 1488, 1489,
	1506, 2929, 1505, 1496, 1494, 1495, 575, 575, 1490, 1487,
	1482, 1411, 1486, 1445, 2478, 1306, 1508, 786, 1454, 1461,
	1455, 2794, 1457, 1459, 182, 1446, 1463, 1465, 1467, 1469,
	1471, 2369, 1424, 1437, 1425, 1423, 1158, 2793, 1159, 1160,
	2792, 1315, 2739, 1546, 1179, 1180, 1181, 1182, 1183, 1184,
	1186, 1185, 1187, 1188, 2876, 1444, 1444, 2674, 184, 185,
	186, 1483, 2127, 1158, 2672, 1159, 1160, 2635, 2874, 2578,
	1638, 2570, 1644, 1644, 2152, 1641, 1645, 2878, 2879, 1158,
	2140, 1159, 1160, 1650, 575, 2375, 2376, 1271, 1919, 1542,
	1316, 1918, 2875, 1774, 1756, 1642, 1642, 1581, 1547, 575,
	575, 1510, 1497, 1615, 119, 184, 185, 186, 1493, 970,
	1622, 969, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1492, 1417, 1613, 1554, 1556,
	1491, 1317, 1552, 1553, 1661, 1558, 1623, 1560, 1561, 1562,
	1563, 1161, 1114, 2448, 1567, 1130, 1557, 184, 185, 186,
	1161, 1879, 1306, 1564, 1565, 1566, 1579, 1577, 94, 1578,
	1983, 2766, 182, 101, 184, 185, 186, 575, 1877, 178,
	92, 1585, 1586, 101, 100, 1735, 99, 94, 1161, 1704,
	2765, 93, 1161, 1616, 100, 94, 99, 2074, 2921, 2374,
	2070, 182, 92, 120, 575, 2891, 1306, 2728, 1761, 1319,
	1762, 2377, 2727, 93, 182, 94, 162, 2622, 575, 1161,
	2074, 2857, 2177, 182, 100, 182, 1306, 182, 182, 575,
	2074, 2844, 575, 2024, 1306, 1161, 2074, 2840, 1737, 2321,
	1646, 1704, 1982, 575, 2155, 1306, 2354, 1652, 1653, 2536,
	1739, 1740, 1826, 1306, 1827, 1959, 1976, 2116, 2129, 95,
	1735, 1978, 2882, 1306, 1161, 2832, 1306, 1306, 791, 2536,
	1977, 791, 1974, 159, 1318, 160, 2074, 2810, 95, 2614,
	2807, 2092, 1158, 1736, 1159, 1160, 1767, 2497, 1306, 2538,
	1161, 1158, 1974, 1159, 1160, 177, 1793, 1157, 575, 1738,
	2085, 2016, 1741, 1742, 2819, 1872, 1873, 1874, 2074, 2735,
	1876, 1878, 2116, 1737, 2074, 1836, 1837, 1838, 1839, 1158,
	2117, 1159, 1160, 1158, 575, 1159, 1160, 1161, 761, 2119,
	575, 1447, 2614, 1306, 1447, 2093, 1447, 1755, 2093, 1766,
	1821, 1831, 1902, 1832, 1833, 1834, 1835, 2904, 2497, 1804,
	1158, 1822, 1159, 1160, 678, 2383, 1892, 1769, 1788, 1842,
	1843, 1844, 1845, 2074, 2612, 2085, 1158, 1825, 1159, 1160,
	1852, 2093, 575, 2805, 1638, 2117, 1858, 1904, 1786, 1638,
	1638, 1161, 1903, 1306, 1959, 1809, 2296, 795, 1808, 1810,
	795, 1974, 1824, 2009, 1823, 1158, 1993, 1159, 1160, 1161,
	2541, 1306, 1992, 163, 1864, 183, 1157, 1306, 183, 751,
	1306, 183, 168, 2009, 1306, 182, 576, 1903, 183, 2385,
	2384, 1158, 182, 1159, 1160, 1886, 183, 182, 182, 1781,
	1161, 182, 1889, 182, 1903, 1161, 2536, 1853, 2381, 2382,
	182, 183, 2381, 2380, 1848, 1849, 1310, 182, 1863, 1867,
	2093, 1306, 1746, 1875, 1593, 1161, 1974, 1306, 1158, 1536,
	1159, 1160, 1338, 576, 2732, 977, 576, 183, 576, 994,
	1177, 1853, 2226, 182, 1896, 1899, 976, 1914, 575, 1913,
	1912, 2558, 1916, 1917, 1897, 1895, 87, 1900, 2847, 1901,
	1959, 2195, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186,
	1185, 1187, 1188, 1407, 2180, 2173, 2174, 87, 995, 2755,
	1161, 2554, 1158, 2600, 1159, 1160, 2406, 2499, 1444, 1177,
	2074, 2073, 1173, 1313, 1174, 155, 1407, 1406, 1352, 1351,
	1158, 1161, 1159, 1160, 2725, 2686, 1922, 2495, 1175, 1176,
	1172, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1185,
	1187, 1188, 1177, 1161, 1972, 2598, 2595, 2583, 1161, 1615,
	2576, 1158, 2489, 1159, 1160, 1969, 1158, 1971, 1159, 1160,
	1943, 1177, 1161, 2488, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1186, 1185, 1187, 1188, 1409, 1158, 1851, 1159, 1160,
	2446, 1970, 2486, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1186, 1185, 1187, 1188, 2408, 1950, 1951, 2584, 2585, 2586,
	1953, 2587, 2553, 2485, 2404, 2181, 1847, 1841, 1840, 1954,
	1524, 1439, 1435, 1405, 1957, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1186, 1185, 1187, 1188, 2144, 182, 113, 1616,
	2033, 1158, 2149, 1159, 1160, 182, 1161, 1059, 1968, 1644,
	575, 2450, 2058, 2148, 2032, 2756, 575, 1583, 2588, 2589,
	2062, 1476, 1158, 1862, 1159, 1160, 1759, 575, 2056, 1161,
	2548, 2549, 1642, 2045, 2098, 2101, 2102, 2103, 2099, 1161,
	2100, 2104, 1473, 1986, 1158, 2899, 1159, 1160, 2897, 1158,
	182, 1159, 1160, 2871, 182, 2829, 2888, 2774, 1984, 2551,
	2149, 2400, 2399, 1158, 2398, 1159, 1160, 2321, 2160, 2126,
	1161, 1477, 1478, 1479, 1161, 1944, 2343, 2858, 37, 1584,
	2002, 2344, 2089, 1161, 2075, 2340, 1737, 2109, 2031, 1474,
	1475, 1773, 2341, 2345, 1161, 2102, 2103, 2342, 2339, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	1314, 2030, 1765, 575, 2071, 173, 174, 175, 176, 182,
	1161, 2029, 2542, 2789, 1161, 1280, 182, 2665, 2046, 2301,
	1161, 1736, 2313, 2315, 2300, 2036, 2037, 1158, 575, 1159,
	1160, 2316, 2137, 2138, 2667, 575, 2067, 2529, 2172, 1447,
	1447, 2072, 2028, 765, 575, 2528, 2027, 2108, 2532, 2082,
	1158, 766, 1159, 1160, 2310, 2026, 2192, 1161, 1535, 2130,
	1158, 737, 1159, 1160, 2191, 2114, 2025, 182, 182, 182,
	182, 182, 2118, 2379, 2121, 2134, 1858, 2153, 1024, 1023,
	2460, 2148, 2128, 2220, 182, 182, 2151, 2131, 1304, 1300,
	1129, 1158, 2019, 1159, 1160, 1158, 2018, 1159, 1160, 1656,
	182, 2141, 2017, 1301, 1158, 2188, 1159, 1160, 2150, 92,
	2187, 120, 2156, 1657, 2656, 1158, 2655, 1159, 1160, 1638,
	93, 2534, 94, 2161, 2162, 2163, 2157, 1427, 1763, 1764,
	1303, 183, 1302, 183, 2925, 92, 183, 2190, 2396, 2014,
	1947, 1158, 94, 1159, 1160, 1158, 93, 1159, 1160, 1783,
	1784, 1158, 2806, 1159, 1160, 2751, 1644, 2378, 1644, 2189,
	2106, 1644, 1161, 2246, 2654, 576, 1644, 576, 576, 1770,
	2299, 1161, 1936, 747, 773, 774, 1161, 2250, 2298, 1642,
	575, 1642, 576, 576, 1642, 2514, 101, 1161, 1158, 1642,
	1159, 1160, 2182, 2183, 2229, 2228, 575, 100, 2271, 99,
	2271, 101, 1963, 2271, 99, 2212, 2273, 2781, 2271, 2780,
	2673, 182, 100, 100, 99, 575, 2230, 2671, 2670, 2290,
	2663, 2276, 2247, 94, 575, 2596, 2277, 2533, 2531, 2409,
	1887, 575, 575, 1161, 182, 182, 182, 182, 182, 2283,
	2284, 2285, 2286, 1422, 2013, 772, 182, 2264, 2662, 2522,
	2085, 182, 2318, 2012, 182, 2303, 182, 2070, 2010, 182,
	182, 182, 2333, 2290, 2218, 2260, 101, 2219, 753, 2006,
	1994, 2324, 2901, 2900, 2353, 1757, 2324, 100, 1332, 2327,
	2304, 2289, 2278, 2279, 2280, 2281, 2282, 1323, 1293, 2109,
	2291, 106, 107, 1158, 2394, 1159, 1160, 2900, 2901, 2795,
	2569, 182, 1158, 2302, 1159, 1160, 763, 1158, 2305, 1159,
	1160, 103, 88, 1, 575, 2005, 2873, 544, 1158, 1747,
	1159, 1160, 575, 1278, 755, 2355, 1511, 182, 2356, 1501,
	2625, 1705, 2430, 2346, 2295, 2752, 2414, 182, 754, 2335,
	2336, 2412, 2338, 183, 95, 1893, 2594, 576, 576, 2357,
	1856, 985, 182, 1546, 2334, 182, 145, 2337, 2350, 2351,
	2411, 1819, 1820, 183, 1158, 2461, 1159, 1160, 2363, 2853,
	2332, 110, 945, 2390, 109, 2391, 2392, 2389, 2292, 2293,
	2294, 2419, 576, 1304, 1300, 988, 183, 1087, 1888, 2615,
	2135, 576, 2438, 1828, 2437, 2416, 2415, 576, 1301, 2413,
	1858, 1358, 1356, 1357, 1355, 2429, 1360, 1359, 2098, 2101,
	2102, 2103, 2099, 2441, 2100, 2104, 1995, 2500, 2548, 2549,
	1587, 572, 2410, 1297, 1298, 1303, 2105, 1302, 2494, 180,
	1347, 1324, 2456, 1025, 2455, 534, 2386, 575, 182, 1920,
	540, 1201, 1582, 2297, 2122, 792, 785, 1758, 2464, 2463,
	2060, 2329, 2526, 2309, 2311, 2470, 2077, 2314, 2307, 2788,
	2664, 2845, 2132, 1320, 1985, 2467, 2468, 1658, 2469, 1798,
	1608, 2471, 597, 2473, 596, 2475, 594, 2063, 2086, 1164,
	681, 2050, 1333, 2097, 2095, 2094, 1945, 1805, 2550, 2520,
	2546, 2865, 1800, 1796, 2069, 182, 605, 598, 590, 2566,
	2436, 2198, 2447, 2200, 2133, 2443, 1142, 1296, 584, 958,
	2515, 2516, 1655, 2572, 2757, 2812, 1962, 2482, 182, 1295,
	2545, 2458, 2459, 2523, 2555, 2530, 1668, 1669, 2401, 2178,
	1880, 63, 41, 1696, 579, 2884, 182, 2535, 1133, 182,
	182, 182, 2561, 2562, 779, 32, 31, 30, 2552, 575,
	575, 183, 29, 28, 23, 22, 21, 20, 19, 2601,
	2602, 25, 18, 17, 2560, 2559, 16, 2422, 2894, 2924,
	115, 2438, 50, 2437, 2567, 2568, 47, 45, 122, 121,
	2577, 48, 2579, 44, 1062, 42, 576, 27, 26, 15,
	14, 575, 575, 575, 575, 13, 12, 11, 10, 9,
	5, 4, 35, 576, 576, 34, 576, 33, 576, 576,
	1136, 576, 576, 576, 576, 576, 576, 24, 2, 2621,
	2418, 2417, 2165, 1882, 0, 0, 576, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 1644, 0, 1644,
	2619, 2620, 0, 0, 0, 0, 183, 0, 2605, 0,
	2634, 0, 2609, 2610, 2611, 0, 0, 576, 182, 183,
	1642, 2630, 1642, 0, 0, 0, 0, 0, 2631, 0,
	0, 0, 0, 576, 0, 183, 0, 0, 2659, 2271,
	0, 2271, 575, 0, 575, 2642, 0, 2652, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 2643,
	1644, 0, 0, 2688, 0, 2660, 0, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 576, 2682, 37, 2668,
	2324, 2678, 2680, 1642, 2676, 2669, 0, 0, 0, 2327,
	576, 576, 0, 2327, 747, 661, 0, 0, 2684, 575,
	0, 0, 0, 0, 0, 0, 2689, 2690, 183, 2733,
	2692, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 2729, 0, 0,
	2731, 2730, 0, 0, 0, 2745, 0, 0, 0, 0,
	0, 0, 0, 0, 2746, 2747, 0, 0, 0, 0,
	2772, 0, 2771, 1644, 575, 2737, 2775, 574, 575, 575,
	0, 0, 0, 0, 2754, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 1642, 0, 0, 0,
	0, 0, 0, 576, 576, 0, 2784, 575, 0, 2785,
	2782, 2783, 0, 2740, 2741, 2742, 0, 2799, 0, 0,
	0, 0, 0, 0, 793, 0, 0, 949, 0, 956,
	0, 0, 2798, 0, 2796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 0,
	2327, 0, 2787, 0, 0, 0, 2804, 0, 747, 0,
	0, 182, 2802, 0, 0, 0, 183, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 575, 182, 0, 0,
	0, 0, 0, 0, 2815, 0, 2821, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 2811, 183, 37,
	0, 0, 576, 2818, 0, 0, 0, 183, 575, 183,
	0, 183, 183, 576, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	575, 575, 0, 0, 0, 2838, 0, 0, 0, 0,
	2843, 0, 2848, 575, 0, 0, 0, 0, 0, 2324,
	0, 0, 182, 575, 37, 2852, 0, 0, 2846, 2861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2754,
	2854, 0, 2864, 2880, 2872, 2877, 0, 0, 0, 0,
	0, 0, 576, 2887, 0, 0, 0, 0, 0, 0,
	0, 0, 2898, 575, 2896, 2893, 0, 0, 0, 0,
	0, 0, 575, 2905, 0, 0, 1644, 178, 576, 2912,
	2907, 0, 0, 2911, 576, 2909, 0, 0, 2171, 0,
	2918, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	2926, 120, 0, 142, 0, 0, 0, 0, 2931, 0,
	0, 0, 0, 0, 162, 1644, 0, 2935, 2934, 2772,
	2936, 2937, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 183,
	2892, 159, 0, 160, 0, 0, 183, 0, 0, 0,
	1375, 183, 183, 0, 0, 183, 0, 183, 0, 1430,
	1431, 151, 150, 177, 183, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	578, 0, 576, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	1432, 153, 0, 1429, 0, 147, 148, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1363, 0, 0, 0, 0, 2694, 2696, 2695, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 627, 793, 0, 793, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1132, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 1376, 0, 0, 576, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 1389, 1392, 1393, 1394, 1395,
	1396, 1397, 1272, 1398, 1399, 1400, 1401, 1402, 1377, 1378,
	1379, 1380, 1361, 1362, 1390, 0, 1364, 0, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 0, 0, 1374,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 1284, 1285,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 143, 0, 0, 144, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	2700, 2701, 793, 0, 0, 0, 0, 0, 1348, 0,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 622, 676, 624, 673, 674, 0, 620, 623,
	675, 0, 0, 0, 0, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	0, 0, 0, 173, 174, 175, 176, 625, 626, 2693,
	2697, 2698, 2699, 2702, 2703, 2704, 2712, 2714, 650, 2713,
	2715, 2716, 2717, 2720, 2721, 2722, 2723, 2718, 2719, 2724,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 1063, 0, 1069, 0, 0, 1071, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 576, 576, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 183, 0, 949, 183, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 0, 0,
	1272, 0, 0, 0, 1453, 1453, 0, 1453, 0, 1453,
	1453, 0, 1462, 1453, 1453, 1453, 1453, 1453, 0, 0,
	0, 0, 0, 0, 0, 1272, 1272, 949, 0, 0,
	0, 662, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 1523, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 530, 183, 178, 570, 183,
	0, 0, 0, 0, 0, 530, 0, 0, 1426, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 142, 0, 0, 0, 793, 760, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 793, 793, 0, 778, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 183, 0, 0, 0, 0, 0, 1335, 0,
	0, 159, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1430,
	1431, 151, 150, 177, 0, 0, 0, 0, 0, 1651,
	1305, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 1666, 1667, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 576, 576, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 146,
	1432, 153, 0, 1429, 0, 147, 148, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 1772,
	168, 0, 0, 0, 0, 576, 576, 576, 576, 0,
	0, 0, 0, 1328, 0, 0, 793, 0, 0, 0,
	0, 0, 0, 1353, 793, 0, 0, 793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 956, 0, 0, 576, 0, 576, 0,
	0, 0, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 956, 0, 0, 0, 0,
	0, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 183, 949, 0, 0,
	1559, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	0, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 576, 576, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 143, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	530, 576, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 1363, 0,
	0, 0, 0, 173, 174, 175, 176, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 576, 1273, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	0, 1792, 0, 0, 1596, 0, 0, 0, 0, 1376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 1772, 576, 0, 0, 0,
	530, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 0, 1389, 1392, 1393, 1394, 1395, 1396, 1397,
	0, 1398, 1399, 1400, 1401, 1402, 1377, 1378, 1379, 1380,
	1361, 1362, 1390, 530, 1364, 0, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 0, 0, 1374, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	2179, 0, 0, 0, 0, 0, 0, 0, 0, 2184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 1931, 0,
	0, 0, 0, 1941, 1942, 0, 0, 1946, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 1391, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 1272, 0, 0, 1272, 1273, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 793, 0, 0, 0, 0,
	0, 1273, 1273, 0, 0, 0, 0, 530, 0, 0,
	0, 1453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	2306, 0, 0, 0, 0, 0, 530, 0, 0, 793,
	0, 0, 0, 1272, 0, 0, 2331, 1453, 1272, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 777, 0,
	0, 0, 0, 0, 1568, 1569, 530, 530, 530, 530,
	530, 530, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 530, 0, 0, 0, 949,
	0, 0, 1272, 0, 0, 0, 0, 1772, 0, 84,
	0, 0, 0, 43, 69, 70, 588, 67, 71, 0,
	2113, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 778,
	0, 0, 0, 0, 0, 56, 778, 778, 0, 0,
	0, 0, 1273, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 1545, 778, 778,
	778, 778, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2203, 2204, 2205, 2206, 2207, 778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 2213, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 2221, 0, 0, 0,
	0, 0, 1545, 0, 530, 0, 530, 0, 530, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 1772, 1772, 64, 65, 53, 0,
	0, 0, 0, 1662, 73, 74, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2626, 2627, 2628, 2629,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 2681, 0, 2683,
	0, 0, 0, 0, 0, 0, 530, 2397, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 530, 530,
	0, 0, 530, 0, 1948, 0, 0, 0, 0, 0,
	0, 530, 0, 2433, 0, 0, 0, 0, 530, 0,
	81, 0, 0, 2442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 2454, 0,
	0, 2457, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 86, 0, 0, 0, 0, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2778,
	0, 0, 0, 2778, 2778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 1772, 0, 2519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 778, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 2575, 1545, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 2590, 0, 0, 2591, 2592, 2593, 0, 0,
	0, 1272, 0, 2839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 793, 793, 0, 0, 0,
	0, 530, 0, 0, 0, 530, 0, 0, 2862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2867, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 1979, 0, 1980, 1981, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 1990, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 2867, 0, 0,
	530, 1322, 1997, 1998, 1999, 2000, 2001, 2164, 2003, 0,
	0, 0, 0, 0, 2007, 0, 2008, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 2020, 2021,
	2022, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 0, 0, 0, 0, 0, 0, 2040,
	2041, 2042, 2043, 2044, 0, 1768, 0, 0, 530, 530,
	530, 530, 530, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 1273, 0,
	0, 1273, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 688,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 1273, 530, 530, 530, 530, 530,
	0, 0, 0, 0, 0, 0, 0, 2347, 0, 0,
	0, 0, 530, 0, 0, 1499, 0, 530, 0, 0,
	530, 2358, 1545, 2822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 79,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 2257, 750, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 957, 0, 0, 2272, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 530, 2287, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2348, 2349,
	0, 0, 0, 0, 0, 0, 0, 1648, 1649, 530,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 1691, 1692, 1693, 1694, 1695, 1697, 1701, 1702, 588,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	530, 530, 530, 0, 0, 0, 2462, 0, 0, 0,
	0, 0, 0, 2466, 0, 0, 0, 1779, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 2476, 2477, 2479,
	2481, 0, 0, 0, 0, 0, 0, 2487, 0, 0,
	0, 0, 2491, 2492, 2493, 1816, 0, 0, 0, 2496,
	0, 0, 0, 0, 0, 2498, 0, 0, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 0, 0,
	2512, 87, 0, 0, 0, 0, 2517, 682, 689, 690,
	691, 692, 693, 683, 685, 0, 0, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 1273,
	0, 687, 694, 695, 1854, 0, 0, 0, 0, 2539,
	2540, 0, 0, 2544, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2556, 2557, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 2439, 2440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2613, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 1122, 1122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2640, 0, 0, 0, 2641, 0, 0, 0, 0,
	0, 2645, 0, 0, 0, 0, 750, 1197, 1198, 1199,
	0, 1202, 0, 1204, 1205, 1206, 1207, 0, 1210, 1212,
	1212, 0, 1212, 1216, 1216, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1499, 1256, 1257, 1258, 1259, 1260, 0, 0,
	0, 0, 1216, 1216, 1216, 1216, 1216, 0, 530, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 1273, 0, 2750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2760, 2761, 2762, 0, 2763, 2764, 0,
	1282, 0, 0, 2767, 0, 2768, 750, 2770, 2773, 0,
	750, 0, 0, 0, 2777, 0, 750, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2803, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 682, 689, 690, 691, 692, 693, 683, 685, 0,
	0, 0, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 694, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2828, 0, 0, 0, 0, 2833, 0, 0,
	0, 0, 0, 2834, 2835, 0, 0, 0, 0, 0,
	0, 2439, 2440, 0, 0, 0, 0, 0, 0, 0,
	0, 2841, 0, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 0, 0, 0, 0, 0, 0,
	2883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2889, 0, 0, 0, 2890, 0, 0, 2059,
	0, 0, 689, 690, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 2225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 2249, 0, 0, 0, 2252, 0, 0, 0,
	0, 2254, 2255, 2256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2261, 2262, 2263, 0, 0, 1708, 2265,
	0, 2266, 2267, 0, 0, 0, 2274, 2275, 0, 0,
	0, 0, 0, 0, 1708, 1708, 1708, 1708, 1708, 588,
	588, 588, 588, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2319, 0, 0, 0, 689, 690,
	0, 1122, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 1122, 0, 0, 672,
	0, 2352, 676, 0, 673, 674, 0, 0, 0, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2407, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2484, 0, 0, 0, 0, 0, 0, 2490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2632, 0, 2633,
	0, 0, 0, 0, 2636, 2637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2685, 0, 0,
	2687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2786, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2827, 0,
	2090, 2091, 0, 0, 0, 0, 0, 0, 0, 2110,
	0, 2111, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2328, 0,
	79, 0, 0, 1799, 1799, 1799, 1799, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 750, 0, 0, 0, 1799, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2653, 0, 2657, 2658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2328, 0,
	79, 0, 2328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2813, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 0, 927, 912,
	450, 79, 858, 930, 827, 846, 940, 849, 852, 894,
	806, 872, 370, 843, 798, 831, 801, 838, 802, 829,
	860, 244, 826, 914, 876, 929, 325, 241, 808, 832,
	384, 848, 193, 896, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 936, 329,
	882, 2842, 435, 355, 0, 0, 79, 862, 918, 870,
	908, 857, 895, 816, 881, 931, 844, 891, 932, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2855, 0, 2856, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 840, 888, 926, 841, 890,
	239, 285, 246, 238, 454, 937, 917, 805, 869, 925,
	0, 0, 209, 928, 864, 0, 893, 0, 943, 800,
	884, 0, 803, 807, 939, 921, 835, 249, 0, 0,
	0, 0, 0, 0, 0, 861, 871, 905, 855, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 880, 0,
	0, 0, 812, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 0, 0, 815,
	0, 834, 906, 0, 797, 268, 809, 356, 231, 0,
	910, 920, 856, 488, 924, 854, 853, 900, 813, 916,
	847, 324, 811, 293, 188, 205, 0, 845, 366, 407,
	413, 915, 830, 839, 229, 837, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 879, 898, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 1124, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 825, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 911, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 903, 942, 379, 412, 219, 474, 434,
	820, 824, 818, 885, 819, 874, 875, 821, 933, 934,
	935, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	907, 814, 0, 822, 823, 0, 913, 922, 923, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	878, 187, 202, 327, 938, 401, 261, 503, 482, 478,
	799, 817, 236, 828, 836, 0, 842, 850, 851, 863,
	865, 866, 867, 868, 886, 887, 889, 897, 899, 902,
	904, 909, 919, 941, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 877, 883, 338, 254,
	273, 284, 892, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 873, 901, 334, 451, 452, 280, 352, 0,
	0, 927, 912, 450, 0, 858, 930, 827, 846, 940,
	849, 852, 894, 806, 872, 370, 843, 798, 831, 801,
	838, 802, 829, 860, 244, 826, 914, 876, 929, 325,
	241, 808, 832, 384, 848, 193, 896, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 936, 329, 882, 0, 435, 355, 0, 0, 0,
	862, 918, 870, 908, 857, 895, 816, 881, 931, 844,
	891, 932, 287, 226, 192, 367, 436, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 840, 888,
	926, 841, 890, 239, 285, 246, 238, 454, 937, 917,
	805, 869, 925, 0, 0, 209, 928, 864, 0, 893,
	0, 943, 800, 884, 0, 803, 807, 939, 921, 835,
	249, 0, 0, 0, 0, 0, 0, 0, 861, 871,
	905, 855, 0, 0, 0, 0, 0, 2359, 0, 833,
	0, 880, 0, 0, 0, 812, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 859, 0,
	0, 0, 815, 0, 834, 906, 0, 797, 268, 809,
	356, 231, 0, 910, 920, 856, 488, 924, 854, 853,
	900, 813, 916, 847, 324, 811, 293, 188, 205, 0,
	845, 366, 407, 413, 915, 830, 839, 229, 837, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 879,
	898, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 1124, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 825, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 911, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 903, 942, 379, 412,
	219, 474, 434, 820, 824, 818, 885, 819, 874, 875,
	821, 933, 934, 935, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 907, 814, 0, 822, 823, 0, 913,
	922, 923, 525, 341, 425, 471, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 878, 187, 202, 327, 938, 401, 261,
	503, 482, 478, 799, 817, 236, 828, 836, 0, 842,
	850, 851, 863, 865, 866, 867, 868, 886, 887, 889,
	897, 899, 902, 904, 909, 919, 941, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 877,
	883, 338, 254, 273, 284, 892, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 873, 901, 334, 451, 452,
	280, 352, 0, 0, 927, 912, 450, 0, 858, 930,
	827, 846, 940, 849, 852, 894, 806, 872, 370, 843,
	798, 831, 801, 838, 802, 829, 860, 244, 826, 914,
	876, 929, 325, 241, 808, 832, 384, 848, 193, 896,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 936, 329, 882, 0, 435, 355,
	0, 0, 0, 862, 918, 870, 908, 857, 895, 816,
	881, 931, 844, 891, 932, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 840, 888, 926, 841, 890, 239, 285, 246, 238,
	454, 937, 917, 805, 869, 925, 0, 0, 209, 928,
	864, 0, 893, 0, 943, 800, 884, 0, 803, 807,
	939, 921, 835, 249, 0, 0, 0, 0, 0, 0,
	0, 861, 871, 905, 855, 0, 0, 0, 0, 0,
	2317, 0, 833, 0, 880, 0, 0, 0, 812, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 0, 0, 815, 0, 834, 906, 0,
	797, 268, 809, 356, 231, 0, 910, 920, 856, 488,
	924, 854, 853, 900, 813, 916, 847, 324, 811, 293,
	188, 205, 0, 845, 366, 407, 413, 915, 830, 839,
	229, 837, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 879, 898, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 1124, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 825, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 911, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 903,
	942, 379, 412, 219, 474, 434, 820, 824, 818, 885,
	819, 874, 875, 821, 933, 934, 935, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 907, 814, 0, 822,
	823, 0, 913, 922, 923, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 878, 187, 202, 327,
	938, 401, 261, 503, 482, 478, 799, 817, 236, 828,
	836, 0, 842, 850, 851, 863, 865, 866, 867, 868,
	886, 887, 889, 897, 899, 902, 904, 909, 919, 941,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 877, 883, 338, 254, 273, 284, 892, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 873, 901,
	334, 451, 452, 280, 352, 0, 0, 927, 912, 450,
	0, 858, 930, 827, 846, 940, 849, 852, 894, 806,
	872, 370, 843, 798, 831, 801, 838, 802, 829, 860,
	244, 826, 914, 876, 929, 325, 241, 808, 832, 384,
	848, 193, 896, 426, 228, 335, 332, 457, 255, 247,
	243, 227, 281, 342, 382, 444, 376, 936, 329, 882,
	0, 435, 355, 0, 0, 0, 862, 918, 870, 908,
	857, 895, 816, 881, 931, 844, 891, 932, 287, 226,
	192, 367, 436, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 840, 888, 926, 841, 890, 239,
	285, 246, 238, 454, 937, 917, 805, 869, 925, 0,
	0, 209, 928, 864, 0, 893, 0, 943, 800, 884,
	0, 803, 807, 939, 921, 835, 249, 0, 0, 0,
	0, 0, 0, 0, 861, 871, 905, 855, 0, 0,
	0, 0, 0, 1787, 0, 833, 0, 880, 0, 0,
	0, 812, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 859, 0, 0, 0, 815, 0,
	834, 906, 0, 797, 268, 809, 356, 231, 0, 910,
	920, 856, 488, 924, 854, 853, 900, 813, 916, 847,
	324, 811, 293, 188, 205, 0, 845, 366, 407, 413,
	915, 830, 839, 229, 837, 411, 380, 472, 213, 257,
	404, 385, 409, 392, 260, 879, 898, 410, 330, 459,
	399, 469, 489, 490, 237, 360, 479, 448, 485, 502,
	206, 234, 374, 441, 475, 432, 353, 455, 456, 292,
	431, 266, 191, 328, 495, 204, 419, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	462, 463, 230, 505, 208, 484, 201, 1124, 483, 362,
	458, 466, 350, 340, 200, 464, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 825, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 911, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 361, 278, 433,
	294, 331, 903, 942, 379, 412, 219, 474, 434, 820,
	824, 818, 885, 819, 874, 875, 821, 933, 934, 935,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 907,
	814, 0, 822, 823, 0, 913, 922, 923, 525, 341,
	425, 471, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 878,
	187, 202, 327, 938, 401, 261, 503, 482, 478, 799,
	817, 236, 828, 836, 0, 842, 850, 851, 863, 865,
	866, 867, 868, 886, 887, 889, 897, 899, 902, 904,
	909, 919, 941, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 420,
	270, 468, 492, 0, 336, 877, 883, 338, 254, 273,
	284, 892, 481, 439, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 424, 445, 446, 447, 449, 351, 240,
	386, 873, 901, 334, 451, 452, 280, 352, 0, 0,
	927, 912, 450, 0, 858, 930, 827, 846, 940, 849,
	852, 894, 806, 872, 370, 843, 798, 831, 801, 838,
	802, 829, 860, 244, 826, 914, 876, 929, 325, 241,
	808, 832, 384, 848, 193, 896, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	936, 329, 882, 0, 435, 355, 0, 0, 0, 862,
	918, 870, 908, 857, 895, 816, 881, 931, 844, 891,
	932, 287, 226, 192, 367, 436, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 840, 888, 926,
	841, 890, 239, 285, 246, 238, 454, 937, 917, 805,
	869, 925, 0, 0, 209, 928, 864, 0, 893, 0,
	943, 800, 884, 0, 803, 807, 939, 921, 835, 249,
	0, 0, 0, 0, 0, 0, 0, 861, 871, 905,
	855, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	880, 0, 0, 0, 812, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 859, 0, 0,
	0, 815, 0, 834, 906, 0, 797, 268, 809, 356,
	231, 0, 910, 920, 856, 488, 924, 854, 853, 900,
	813, 916, 847, 324, 811, 293, 188, 205, 0, 845,
	366, 407, 413, 915, 830, 839, 229, 837, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 879, 898,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	1124, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 825, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 911, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 903, 942, 379, 412, 219,
	474, 434, 820, 824, 818, 885, 819, 874, 875, 821,
	933, 934, 935, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 907, 814, 0, 822, 823, 0, 913, 922,
	923, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 878, 187, 202, 327, 938, 401, 261, 503,
	482, 478, 799, 817, 236, 828, 836, 0, 842, 850,
	851, 863, 865, 866, 867, 868, 886, 887, 889, 897,
	899, 902, 904, 909, 919, 941, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 877, 883,
	338, 254, 273, 284, 892, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 873, 901, 334, 451, 452, 280,
	352, 0, 0, 927, 912, 450, 0, 858, 930, 827,
	846, 940, 849, 852, 894, 806, 872, 370, 843, 798,
	831, 801, 838, 802, 829, 860, 244, 826, 914, 876,
	929, 325, 241, 808, 832, 384, 848, 193, 896, 426,
	228, 335, 332, 457, 255, 247, 243, 227, 281, 342,
	382, 444, 376, 936, 329, 882, 0, 435, 355, 0,
	0, 0, 862, 918, 870, 908, 857, 895, 816, 881,
	931, 844, 891, 932, 287, 226, 192, 367, 436, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	840, 888, 926, 841, 890, 239, 285, 246, 238, 454,
	937, 917, 805, 869, 925, 0, 0, 209, 928, 864,
	0, 893, 0, 943, 800, 884, 0, 803, 807, 939,
	921, 835, 249, 0, 0, 0, 0, 0, 0, 0,
	861, 871, 905, 855, 0, 0, 0, 0, 0, 0,
	0, 833, 0, 880, 0, 0, 0, 812, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	859, 0, 0, 0, 815, 0, 834, 906, 0, 797,
	268, 809, 356, 231, 0, 910, 920, 856, 488, 924,
	854, 853, 900, 813, 916, 847, 324, 811, 293, 188,
	205, 0, 845, 366, 407, 413, 915, 830, 839, 229,
	837, 411, 380, 472, 213, 257, 404, 385, 409, 392,
	260, 879, 898, 410, 330, 459, 399, 469, 489, 490,
	237, 360, 479, 448, 485, 502, 206, 234, 374, 441,
	475, 432, 353, 455, 456, 292, 431, 266, 191, 328,
	495, 204, 419, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 462, 463, 230, 505,
	208, 484, 201, 1124, 483, 362, 458, 466, 350, 340,
	200, 464, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 825, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	911, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 361, 278, 433, 294, 331, 903, 942,
	379, 412, 219, 474, 434, 820, 824, 818, 885, 819,
	874, 875, 821, 933, 934, 935, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 907, 814, 0, 822, 823,
	0, 913, 922, 923, 525, 341, 425, 471, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 878, 187, 202, 327, 938,
	401, 261, 503, 482, 478, 799, 817, 236, 828, 836,
	0, 842, 850, 851, 863, 865, 866, 867, 868, 886,
	887, 889, 897, 899, 902, 904, 909, 919, 941, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 420, 270, 468, 492, 0,
	336, 877, 883, 338, 254, 273, 284, 892, 481, 439,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 424,
	445, 446, 447, 449, 351, 240, 386, 873, 901, 334,
	451, 452, 280, 352, 0, 0, 927, 912, 450, 0,
	858, 930, 827, 846, 940, 849, 852, 894, 806, 872,
	370, 843, 798, 831, 801, 838, 802, 829, 860, 244,
	826, 914, 876, 929, 325, 241, 808, 832, 384, 848,
	193, 896, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 936, 329, 882, 0,
	435, 355, 0, 0, 0, 862, 918, 870, 908, 857,
	895, 816, 881, 931, 844, 891, 932, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 840, 888, 926, 841, 890, 239, 285,
	246, 238, 454, 937, 917, 805, 869, 925, 0, 0,
	944, 928, 864, 0, 893, 0, 943, 800, 884, 0,
	803, 807, 939, 921, 835, 249, 0, 0, 0, 0,
	0, 0, 0, 861, 871, 905, 855, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 880, 0, 0, 0,
	812, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 0, 815, 0, 834,
	906, 0, 797, 268, 809, 356, 231, 0, 910, 920,
	856, 488, 924, 854, 853, 900, 813, 916, 847, 324,
	811, 293, 188, 205, 0, 845, 366, 407, 413, 915,
	830, 839, 229, 837, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 879, 898, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 810, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	825, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 911, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 796, 790, 789, 294,
	331, 903, 942, 379, 412, 219, 474, 434, 820, 824,
	818, 885, 819, 874, 875, 821, 933, 934, 935, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 907, 814,
	0, 822, 823, 0, 913, 922, 923, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 878, 187,
	202, 327, 938, 401, 261, 503, 482, 478, 799, 817,
	236, 828, 836, 0, 842, 850, 851, 863, 865, 866,
	867, 868, 886, 887, 889, 897, 899, 902, 904, 909,
	919, 941, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 877, 883, 338, 254, 273, 284,
	892, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	873, 901, 334, 451, 452, 280, 352, 0, 0, 927,
	912, 450, 0, 858, 930, 827, 846, 940, 849, 852,
	894, 806, 872, 370, 843, 798, 831, 801, 838, 802,
	829, 860, 244, 826, 914, 876, 929, 325, 241, 808,
	832, 384, 848, 193, 896, 426, 228, 335, 332, 457,
	255, 247, 243, 227, 281, 342, 382, 444, 376, 936,
	329, 882, 0, 435, 355, 0, 0, 0, 862, 918,
	870, 908, 857, 895, 816, 881, 931, 844, 891, 932,
	287, 226, 192, 367, 436, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 840, 888, 926, 841,
	890, 239, 285, 246, 238, 454, 937, 917, 805, 869,
	925, 0, 0, 944, 928, 864, 0, 893, 0, 943,
	800, 884, 0, 803, 807, 939, 921, 835, 249, 0,
	0, 0, 0, 0, 0, 0, 861, 871, 905, 855,
	0, 0, 0, 0, 0, 0, 0, 833, 0, 880,
	0, 0, 0, 812, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 0, 0,
	815, 0, 834, 906, 0, 797, 268, 809, 356, 231,
	0, 910, 920, 856, 488, 924, 854, 853, 900, 813,
	916, 847, 324, 811, 293, 188, 205, 0, 845, 366,
	407, 413, 915, 830, 839, 229, 837, 411, 380, 472,
	213, 257, 404, 385, 409, 392, 260, 879, 898, 410,
	330, 459, 399, 469, 489, 490, 237, 360, 479, 448,
	485, 502, 206, 234, 374, 441, 475, 432, 353, 455,
	456, 292, 431, 266, 191, 328, 495, 204, 419, 221,
	211, 197, 443, 1339, 218, 423, 0, 0, 504, 199,
	465, 440, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 462, 463, 230, 505, 208, 484, 201, 810,
	483, 362, 458, 466, 350, 340, 200, 464, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 825, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 911, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 796,
	790, 789, 294, 331, 903, 942, 379, 412, 219, 474,
	434, 820, 824, 818, 885, 819, 874, 875, 821, 933,
	934, 935, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 907, 814, 0, 822, 823, 0, 913, 922, 923,
	525, 341, 425, 471, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 878, 187, 202, 327, 938, 401, 261, 503, 482,
	478, 799, 817, 236, 828, 836, 0, 842, 850, 851,
	863, 865, 866, 867, 868, 886, 887, 889, 897, 899,
	902, 904, 909, 919, 941, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 420, 270, 468, 492, 0, 336, 877, 883, 338,
	254, 273, 284, 892, 481, 439, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 424, 445, 446, 447, 449,
	351, 240, 386, 873, 901, 334, 451, 452, 280, 352,
	0, 0, 927, 912, 450, 0, 858, 930, 827, 846,
	940, 849, 852, 894, 806, 872, 370, 843, 798, 831,
	801, 838, 802, 829, 860, 244, 826, 914, 876, 929,
	325, 241, 808, 832, 384, 848, 193, 896, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 936, 329, 882, 0, 435, 355, 0, 0,
	0, 862, 918, 870, 908, 857, 895, 816, 881, 931,
	844, 891, 932, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 840,
	888, 926, 841, 890, 239, 285, 246, 238, 454, 937,
	917, 805, 869, 925, 0, 0, 944, 928, 864, 0,
	893, 0, 943, 800, 884, 0, 803, 807, 939, 921,
	835, 249, 0, 0, 0, 0, 0, 0, 0, 861,
	871, 905, 855, 0, 0, 0, 0, 0, 0, 0,
	833, 0, 880, 0, 0, 0, 812, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	0, 0, 0, 815, 0, 834, 906, 0, 797, 268,
	809, 356, 231, 0, 910, 920, 856, 488, 924, 854,
	853, 900, 813, 916, 847, 324, 811, 293, 188, 205,
	0, 845, 366, 407, 413, 915, 830, 839, 229, 837,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	879, 898, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 787, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 810, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 825, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 911,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 796, 790, 789, 294, 331, 903, 942, 379,
	412, 219, 474, 434, 820, 824, 818, 885, 819, 874,
	875, 821, 933, 934, 935, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 907, 814, 0, 822, 823, 0,
	913, 922, 923, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 878, 187, 202, 327, 938, 401,
	261, 503, 482, 478, 799, 817, 236, 828, 836, 0,
	842, 850, 851, 863, 865, 866, 867, 868, 886, 887,
	889, 897, 899, 902, 904, 909, 919, 941, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	877, 883, 338, 254, 273, 284, 892, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 873, 901, 334, 451,
	452, 280, 352, 0, 0, 0, 0, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 1732, 0, 606, 0, 0, 0, 244, 611,
	0, 0, 0, 325, 241, 0, 1733, 384, 0, 193,
	0, 426, 228, 335, 332, 457, 255, 247, 243, 227,
	281, 342, 382, 444, 376, 618, 329, 0, 0, 435,
	355, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 367,
	436, 259, 0, 87, 0, 0, 184, 185, 186, 682,
	689, 690, 691, 692, 693, 683, 685, 0, 0, 217,
	684, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 687, 694, 695, 0, 239, 285, 246,
	238, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 776, 0, 0, 0, 666, 0, 602, 0, 0,
	610, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 356, 231, 0, 665, 0, 0,
	488, 0, 0, 663, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 366, 407, 413, 0, 0,
	0, 229, 0, 411, 380, 472, 213, 257, 404, 385,
	409, 392, 260, 0, 0, 410, 330, 459, 399, 469,
	489, 490, 237, 360, 479, 448, 485, 502, 206, 234,
	374, 441, 475, 432, 353, 455, 456, 292, 431, 266,
	191, 328, 495, 204, 419, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 462, 463,
	230, 505, 208, 484, 201, 0, 483, 362, 458, 466,
	350, 340, 200, 464, 348, 339, 295, 635, 636, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 361, 278, 433, 294, 331,
	0, 0, 379, 412, 219, 474, 434, 672, 664, 622,
	676, 624, 673, 674, 619, 620, 623, 675, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 667, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	327, 0, 401, 261, 503, 482, 478, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 420, 270, 468,
	492, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	481, 439, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 424, 445, 446, 447, 449, 351, 240, 386, 0,
	352, 334, 451, 452, 280, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 606, 0, 0, 0, 244, 611, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 426,
	228, 335, 332, 457, 255, 247, 243, 227, 281, 342,
	382, 444, 376, 618, 329, 0, 0, 435, 355, 0,
	0, 0, 0, 0, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 436, 259,
	0, 87, 0, 0, 184, 185, 186, 682, 689, 690,
	691, 692, 693, 683, 685, 0, 0, 217, 684, 224,
	629, 631, 630, 640, 641, 642, 643, 644, 645, 646,
	627, 687, 694, 695, 0, 239, 285, 246, 238, 454,
	0, 0, 1698, 1699, 1700, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 589, 603, 0, 617, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 0,
	0, 0, 0, 666, 0, 602, 0, 0, 610, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 665, 0, 0, 488, 0,
	0, 663, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 472, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 459, 399, 469, 489, 490,
	237, 360, 479, 448, 485, 502, 206, 234, 374, 441,
	475, 432, 353, 455, 456, 292, 431, 266, 191, 328,
	495, 204, 419, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 462, 463, 230, 505,
	208, 484, 201, 0, 483, 362, 458, 466, 350, 340,
	200, 464, 348, 339, 295, 635, 636, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 361, 278, 433, 294, 331, 0, 0,
	379, 412, 219, 474, 434, 672, 664, 622, 676, 624,
	673, 674, 619, 620, 623, 675, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 667, 609, 608, 0, 615,
	616, 0, 625, 626, 628, 632, 633, 634, 637, 638,
	639, 647, 649, 650, 648, 651, 652, 653, 656, 657,
	658, 659, 654, 655, 660, 607, 187, 202, 327, 0,
	401, 261, 503, 482, 478, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 420, 270, 468, 492, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 481, 439,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 424,
	445, 446, 447, 449, 351, 240, 386, 0, 352, 334,
	451, 452, 280, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	606, 0, 0, 0, 244, 611, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 618, 329, 0, 0, 435, 355, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 0, 0,
	1814, 0, 287, 226, 192, 367, 436, 259, 0, 87,
	0, 0, 184, 185, 186, 682, 689, 690, 691, 692,
	693, 683, 685, 0, 0, 217, 684, 224, 629, 631,
	630, 640, 641, 642, 643, 644, 645, 646, 627, 687,
	694, 695, 1815, 239, 285, 246, 238, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 589, 603, 0, 617, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 0, 0, 0,
	0, 666, 0, 602, 0, 0, 610, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 665, 0, 0, 488, 0, 0, 663,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 0, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 635, 636, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 0, 0, 379, 412,
	219, 474, 434, 672, 664, 622, 676, 624, 673, 674,
	619, 620, 623, 675, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 667, 609, 608, 0, 615, 616, 0,
	625, 626, 628, 632, 633, 634, 637, 638, 639, 647,
	649, 650, 648, 651, 652, 653, 656, 657, 658, 659,
	654, 655, 660, 607, 187, 202, 327, 0, 401, 261,
	503, 482, 478, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 0, 0, 334, 451, 452,
	280, 352, 0, 0, 0, 78, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 606, 0, 0, 0, 244, 611, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 618, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 87, 0, 0, 184, 185, 186, 682, 689,
	690, 691, 692, 693, 683, 685, 0, 0, 217, 684,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 687, 694, 695, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 666, 0, 602, 0, 0, 610,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 665, 0, 0, 488,
	0, 0, 663, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 635, 636, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 672, 664, 622, 676,
	624, 673, 674, 619, 620, 623, 675, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 667, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 327,
	86, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 606, 0, 0, 0, 244, 611, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 618, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	87, 0, 0, 184, 185, 186, 682, 689, 690, 691,
	692, 693, 683, 685, 0, 0, 217, 684, 224, 629,
	631, 630, 640, 641, 642, 643, 644, 645, 646, 627,
	687, 694, 695, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 589, 603, 0, 617, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 0, 0,
	0, 0, 666, 0, 602, 0, 0, 610, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 665, 0, 0, 488, 0, 0,
	663, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	2849, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 635, 636, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 672, 664, 622, 676, 624, 673,
	674, 619, 620, 623, 675, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 667, 609, 608, 0, 615, 616,
	0, 625, 626, 628, 632, 633, 634, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 607, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 606,
	0, 0, 0, 244, 611, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	618, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 87, 0,
	1306, 184, 185, 186, 682, 689, 690, 691, 692, 693,
	683, 685, 0, 0, 217, 684, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 687, 694,
	695, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	666, 0, 602, 0, 0, 610, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 665, 0, 0, 488, 0, 0, 663, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 635, 636, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 672, 664, 622, 676, 624, 673, 674, 619,
	620, 623, 675, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 667, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 606, 0, 0,
	0, 244, 611, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 618, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 87, 0, 0, 184,
	185, 186, 682, 689, 690, 691, 692, 693, 683, 685,
	0, 0, 217, 684, 224, 629, 631, 630, 640, 641,
	642, 643, 644, 645, 646, 627, 687, 694, 695, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	589, 603, 0, 617, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 776, 0, 0, 0, 666, 0,
	602, 0, 0, 610, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	665, 0, 0, 488, 0, 0, 663, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	635, 636, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	672, 664, 622, 676, 624, 673, 674, 619, 620, 623,
	675, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	667, 609, 608, 0, 615, 616, 0, 625, 626, 628,
	632, 633, 634, 637, 638, 639, 647, 649, 650, 648,
	651, 652, 653, 656, 657, 658, 659, 654, 655, 660,
	607, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 606, 0, 0, 0, 244,
	611, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 618, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 87, 0, 0, 184, 185, 186,
	682, 689, 690, 691, 692, 693, 683, 685, 0, 0,
	217, 684, 224, 629, 631, 630, 640, 641, 642, 643,
	644, 645, 646, 627, 687, 694, 695, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 589, 603,
	0, 617, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 0, 0, 0, 0, 666, 0, 602, 0,
	0, 610, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 665, 0,
	0, 488, 0, 0, 663, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 635, 636,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 672, 664,
	622, 676, 624, 673, 674, 619, 620, 623, 675, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 667, 609,
	608, 0, 615, 616, 0, 625, 626, 628, 632, 633,
	634, 637, 638, 639, 647, 649, 650, 648, 651, 652,
	653, 656, 657, 658, 659, 654, 655, 660, 607, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 606, 0, 0, 0, 244, 611, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 618, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 87, 0, 0, 184, 185, 186, 682, 689,
	690, 691, 692, 693, 683, 685, 0, 0, 217, 684,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 687, 694, 695, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 617,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 666, 0, 602, 0, 0, 610,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 665, 0, 0, 488,
	0, 0, 663, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 635, 636, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 672, 664, 622, 676,
	624, 673, 674, 619, 620, 623, 675, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 667, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 689, 690, 0,
	0, 0, 0, 1643, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 992, 488, 0, 0, 0, 0,
	0, 989, 990, 324, 952, 293, 188, 205, 983, 987,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 0, 334, 451, 452, 280,
	352, 0, 0, 0, 78, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 426,
	228, 335, 332, 457, 255, 247, 243, 227, 281, 342,
	382, 444, 376, 0, 329, 0, 0, 435, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 436, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 472, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 459, 399, 469, 489, 490,
	237, 360, 479, 448, 485, 502, 206, 234, 374, 441,
	475, 432, 353, 455, 456, 292, 431, 266, 191, 328,
	495, 204, 419, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 462, 463, 230, 505,
	208, 484, 201, 0, 483, 362, 458, 466, 350, 340,
	200, 464, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 361, 278, 433, 294, 331, 0, 0,
	379, 412, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 341, 425, 471, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 86,
	401, 261, 503, 482, 478, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 420, 270, 468, 492, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 481, 439,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 424,
	445, 446, 447, 449, 351, 240, 386, 0, 1325, 334,
	451, 452, 280, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 1327,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 0, 329, 0, 0, 435, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 436, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1329, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 1158,
	0, 1159, 1160, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 0, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 0, 0, 379, 412,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 341, 425, 471, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	503, 482, 478, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 0, 352, 334, 451, 452,
	280, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 426, 228, 335, 332, 457,
	255, 247, 243, 227, 281, 342, 382, 444, 376, 0,
	329, 0, 0, 435, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 436, 259, 0, 0, 0, 0,
	184, 185, 186, 1268, 1271, 0, 0, 0, 0, 1267,
	1270, 0, 0, 217, 1266, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 472,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 459, 399, 469, 489, 490, 237, 360, 479, 448,
	485, 502, 206, 234, 374, 441, 475, 432, 353, 455,
	456, 292, 431, 266, 191, 328, 495, 204, 419, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 462, 463, 230, 505, 208, 484, 201, 0,
	483, 362, 458, 466, 350, 340, 200, 464, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 361,
	278, 433, 294, 331, 0, 0, 379, 412, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 341, 425, 471, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 503, 482,
	478, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 420, 270, 468, 492, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 481, 439, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 424, 445, 446, 447, 449,
	351, 240, 386, 0, 0, 334, 451, 452, 280, 352,
	0, 0, 0, 78, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	87, 0, 1306, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 86, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 1754, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 1752, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	952, 293, 188, 205, 950, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 1754, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 1306, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 2779, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 2065, 0, 0, 0, 2066,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	1350, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 2863, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 2779,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 1594, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1472, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1470, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	1468, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 1466, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 1464, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1460, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1458, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	1456, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	1433, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 1334, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 580, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 528, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 2868, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 2518, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 2061, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 0,
	334, 451, 452, 280,
}

var yyPact = [...]int{
	4751, -1000, -415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1973, 2054, -1000, -1000,
	-1000, -1000, 2139, -1000, 752, 1663, -1000, 1940, 317, -1000,
	40841, 459, -1000, 39665, 456, 274, 40841, -1000, 141, -1000,
	127, 40841, 139, 39077, -1000, -1000, -315, 17899, 1877, 12,
	8, 40841, -1000, -1000, -1000, -1000, 2119, 1511, -1000, 311,
	-1000, -1000, -1000, -1000, -1000, -1000, 38489, -1000, -1000, -1000,
	1953, 1947, 2154, 651, 1861, -1000, 2044, 1511, -1000, 17899,
	2086, 2011, 17311, -1000, 17311, 391, -1000, -1000, 13185, -1000,
	-1000, 23789, 40841, 29081, 316, -1000, 1940, -1000, -1000, 375,
	-1000, 290, 1500, -1000, 1489, -1000, 586, 584, 323, 426,
	412, 322, 321, 319, 315, 314, 305, 301, 300, 331,
	-1000, 692, 692, -165, -166, 181, 369, 369, 369, 404,
	1904, 1903, -1000, 646, -1000, 692, 692, 341, 692, 692,
	692, 692, 252, 251, 692, 692, 692, 692, 692, 692,
	692, 692, 692, 692, 692, 692, 692, 692, 692, 266,
	1940, 223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40841, 169, 40841, -1000,
	547, 40841, 797, 797, 54, 797, 797, 797, 797, 149,
	638, 4, -1000, 147, 225, 133, 239, 786, 227, -1000,
	-1000, 188, 786, 1170, 667, 118, -1000, 797, 797, -1000,
	10813, 138, 10813, 10813, -1000, 1918, -1000, -1000, -1000, -1000,
	1176, -1000, 401, -1000, -1000, -1000, -1000, 40841, 37901, 373,
	726, -1000, -1000, -1000, 50, -1000, -1000, 1321, 979, 17899,
	932, -1000, 1493, 610, -1000, -1000, -1000, -1000, -1000, 525,
	18487, 18487, 18487, 18487, -1000, -1000, 1532, 1532, 1532, 1532,
	18487, 1532, 18487, 1532, 1532, 1532, 1532, 17899, 1532, 1532,
	1532, -1000, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 546, 1532, 1532, 1532, 1532, 1532, -1000, -1000,
	-1000, -1000, 1532, 1532, 1532, 1532, 1532, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21432, -1000, 15547, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40841, -1000,
	1532, 150, 40841, 40841, 320, 2044, 1511, -1000, 2119, 2039,
	311, -1000, 2220, 1276, 1268, 1185, 1511, 1470, 40841, -1000,
	1548, -1000, -1000, -1000, 1799, 1118, 1159, -1000, -1000, -1000,
	-1000, 1298, 17899, -1000, -1000, 2133, -1000, 20844, 531, 846,
	2124, 37313, -1000, 391, 391, 1486, 12592, -12, -1000, -1000,
	-1000, 715, 26729, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1552, 40841, -1000, -1000, 4076,
	1137, -1000, 1648, -1000, 1550, -1000, 1610, 17899, 1677, 450,
	1137, 420, 418, 411, -1000, -92, -1000, -1000, -1000, -1000,
	-1000, 692, 692, -1000, 330, 2084, 317, 3670, -1000, -1000,
	-1000, 36725, 1647, 1137, -1000, 1646, -1000, 793, 486, 544,
	544, 1137, -1000, -1000, 40841, 1137, 791, 789, 40841, 40841,
	-1000, 36137, -1000, 35549, 34961, 1045, 40841, 34373, 33785, 33197,
	32609, 32021, -1000, 1761, -1000, 1740, -1000, -1000, -1000, 40841,
	40841, 40841, 299, -1000, -1000, 40841, 1137, -1000, -1000, 1038,
	1035, 692, 692, 1034, 1158, 1153, 1136, 692, 692, 1029,
	1130, 27905, 222, 1028, 1026, 1007, 1042, 1129, 190, 1019,
	941, 999, 40841, 1645, 40841, -1000, 171, 648, 402, 713,
	1940, 1874, 1483, 399, 445, 1137, 381, 381, 40841, -1000,
	11406, -1000, -1000, 1126, 17899, -1000, 796, 786, 786, -1000,
	-1000, -1000, -1000, -1000, -1000, 797, 40841, 796, -1000, -1000,
	-1000, 786, 797, 40841, 797, 797, 797, 797, 786, 786,
	786, 797, 40841, 40841, 40841, 40841, 40841, 40841, 40841, 40841,
	40841, 10813, 667, 797, -319, -1000, 1125, -1000, 1753, -1000,
	-1000, -1000, -1000, -1000, -1000, 10813, 10813, -1000, -1000, -1000,
	-1000, 137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -98, 1478, 31433, -1000, -320, -322, -323, -325, -1000,
	-1000, -1000, -334, -339, -1000, -1000, -1000, 17899, 17899, 17899,
	17899, -188, -1000, 862, 18487, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 864, 708, 18487, 18487, 18487, 18487, 18487, 18487,
	18487, 18487, 18487, 18487, 18487, 18487, 18487, 18487, 18487, 753,
	6716, 6716, 610, 610, 610, 610, -1000, 17311, 17899, 17899,
	610, -1000, 1137, 30845, 17311, 17311, 17899, 1935, 738, 979,
	40841, -1000, 1185, -1000, -1000, -1000, 1001, -1000, 40841, 40841,
	63, 17899, 17899, 17899, 17899, 17899, 17899, 14366, 17899, 17899,
	17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899,
	17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899, 17899,
	17899, 17899, 17899, 17899, 13778, 11406, 17311, 17311, 17311, 17311,
	17311, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 523, 1286, 1290, 1430, -1000, 1476, -1000,
	-162, 23201, 17899, 1122, 2121, 1699, 40841, -1000, -1000, -1000,
	2044, -1000, 2044, 1286, 1925, 1803, 17311, -1000, -1000, 1925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1249, -1000,
	40841, 1470, 2004, 40841, 1779, 1121, 337, -1000, 17899, 17899,
	1453, -1000, 1021, 40841, -1000, -188, -1000, 30257, -1000, -1000,
	10220, -1000, 40841, 284, 40841, -1000, 22613, 29669, 11999, -12,
	-1000, 11999, 1413, -1000, -26, -51, 14954, 606, -1000, -1000,
	-1000, 181, 19663, 1275, 606, 60, -1000, -1000, -1000, 1610,
	-1000, 1610, 1610, 1610, 1610, 337, 337, 337, 337, -1000,
	-1000, -1000, -1000, -1000, 1643, 1642, -1000, 1610, 1610, 1610,
	1610, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1641, 1641,
	1641, 1612, 1612, 358, -1000, 17899, 231, 29081, 1982, 998,
	1433, 171, 384, 1696, 1137, 1137, 1137, 384, -1000, 1196,
	1179, -1000, -399, 1449, -1000, -1000, 2071, -1000, -1000, 673,
	816, 809, 739, 40841, 158, 275, -1000, 359, -1000, 29081,
	1137, 787, 544, 1137, -1000, 1137, -1000, -1000, -1000, -1000,
	-1000, 1137, 1441, -1000, 1458, 907, 806, 850, 804, 1441,
	-1000, -1000, -143, 1441, -1000, 1441, -1000, 1441, -1000, 1441,
	-1000, 1441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	658, 40841, 158, 753, -1000, 396, -1000, -1000, 753, 753,
	-1000, -1000, -1000, -1000, 1119, 1116, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -386, 40841, -1000, 178, 712, 259, 298,
	237, 40841, 167, 2009, 233, 249, 40841, 40841, 381, 1749,
	40841, 1974, 40841, -1000, -1000, -1000, -1000, -1000, 979, 40841,
	-1000, -1000, 797, 797, -1000, -1000, 40841, 797, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 797, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40841, -1000, -1000, -1000, -1000, 40841, -1000, -1000,
	-1000, -1000, -1000, 146, -33, 313, -1000, -1000, -1000, -1000,
	-1000, 2040, -1000, 979, 759, 767, -1000, 1532, -1000, -1000,
	924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 864, 18487,
	18487, 18487, 1526, 431, 1545, 1577, 1005, 852, 852, 823,
	823, 618, 618, 618, 618, 618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1115, -1000, 1480, -1000, 1341, 1294,
	1185, -1000, 1480, 1480, 1266, 17311, -1000, -1000, 763, -1000,
	17899, 1185, -1000, -1000, 1185, 1185, 1426, 1420, 2116, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1064, 1433, 1433, 1433, 1433, 1433, 17899, 919, -1000, -1000,
	-1000, 2089, 2043, 1185, 1321, 1185, 1417, -1000, 2032, 1433,
	2027, 2018, 1913, 1325, 1876, 1870, 1866, 1433, 1433, 1433,
	1257, 1840, 1829, 1820, 1816, 1785, 1775, 1752, 1678, 1664,
	1433, 1185, 17311, 17311, 1415, 1532, 519, -1000, 1480, 1185,
	1185, 1480, 1480, 11406, 1185, -1000, 40841, -1000, -284, -1000,
	-55, 556, 1532, -1000, 27905, 1185, -1000, 6580, -1000, 42017,
	-1000, -1000, -1000, -1000, -1000, 26141, 1296, 1925, -1000, -1000,
	1532, 1544, -1000, -1000, 337, 30, 25553, -1000, -1000, 979,
	979, 17899, -1000, -1000, -1000, -1000, -1000, -1000, 517, 2095,
	350, 1532, -1000, 1359, 1718, -1000, -1000, -1000, 1995, 20256,
	-1000, 1532, 1532, 40841, 1408, 1353, -1000, 510, -1000, 1413,
	-12, 11, -1000, -1000, -1000, -1000, 979, -1000, 1090, 293,
	1282, -1000, 379, -1000, -1000, -1000, -1000, 1895, 47, -1000,
	-1000, -1000, 337, 337, -1000, -1000, -1000, -1000, -1000, -1000,
	1108, 1108, -1000, -1000, -1000, -1000, -1000, 997, -1000, -1000,
	-1000, 983, -1000, -1000, 1659, 1730, 231, -1000, -1000, 692,
	1102, 1898, 40841, -1000, -1000, 1267, 1982, 178, 40841, 743,
	1742, -1000, 1696, 1696, 1696, 40841, -1000, -1000, -1000, -1000,
	-393, 65, 309, -1000, -1000, -1000, 2890, 40841, 1529, -1000,
	153, -1000, 1245, -1000, 40841, -1000, 1527, 1640, 1137, 1137,
	-1000, -1000, -1000, 40841, 1532, -1000, -1000, -1000, -1000, 444,
	1939, 1934, 158, 153, 606, 1137, -1000, -1000, -1000, -1000,
	-1000, -389, 1514, 407, 157, 261, 40841, 40841, 40841, 40841,
	40841, 513, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	235, 395, -1000, 40841, 40841, 626, -1000, -1000, -1000, 786,
	-1000, -1000, 786, -1000, -1000, -1000, -1000, -1000, 1910, 40841,
	-41, -363, -1000, -357, 17899, -1000, -1000, -1000, -1000, 1444,
	425, 1545, 18487, 18487, 17311, -131, 642, 642, 753, -1000,
	-1000, -1000, 17899, 17899, 1316, 730, -1000, 17899, 830, -1000,
	-1000, -1000, 17899, 17899, 17899, 1185, 262, -1000, -1000, -1000,
	-1000, -1000, 2111, -1000, 17899, 17899, 17899, -1000, -1000, 17899,
	17899, -1000, 17899, 17899, 19075, 1185, 19075, 17899, 17899, 19075,
	-1000, -1000, -1000, -1000, 19075, 17899, 17899, 17899, 17899, 17899,
	17899, 17899, 17899, 17899, -1000, -1000, 1480, 1480, 17311, 11406,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	556, -1000, 544, 544, 544, 40841, -1000, -1000, -1000, -1000,
	-1000, -1000, 1410, 2016, -1000, 1827, 1822, 2103, 2095, -1000,
	22613, 1925, -1000, -1000, 40841, -278, -1000, 1868, 1835, -1000,
	-1000, -1000, -1000, 9627, 2044, 17899, 1741, 40841, 1532, -1000,
	22025, 40841, 40841, 22613, 22613, 22613, 22613, 22613, -1000, 1782,
	1769, -1000, 1776, 1760, 1777, 40841, -1000, 1474, 1185, 2039,
	20256, 311, 17899, 24377, 1279, 22613, -1000, -1000, 22613, 40841,
	9034, -1000, -1000, -45, -56, -1000, -1000, -1000, -1000, 181,
	-1000, -1000, 798, 1992, 1892, -1000, -1000, -1000, -1000, 1466,
	-1000, 1462, 1379, 1443, 166, -1000, 1672, 1908, 692, 692,
	-1000, 982, -1000, 1137, -1000, -1000, -1000, 382, -1000, 1972,
	40841, 1738, 1736, 1735, -1000, -398, 976, 1639, 1546, 17899,
	1629, 2070, 1338, 40841, -1000, -1000, 40841, -1000, 229, -1000,
	231, 40841, -1000, -1000, -1000, 275, 40841, -1000, 6006, 153,
	-1000, -1000, -1000, -1000, -1000, -1000, 40841, 219, -1000, 1615,
	1174, -1000, -1000, 1684, -1000, -1000, -1000, -1000, 156, 258,
	-1000, 40841, 496, 1730, 40841, -1000, -1000, -1000, 797, 797,
	-1000, -1000, 1907, -1000, 1137, 1433, 18487, 18487, -1000, 610,
	-1000, 1532, 1185, 1610, 1610, -1000, 1610, 1612, -1000, 1610,
	105, 1610, 96, 1610, -1000, -1000, 1185, 1185, 1048, 894,
	-102, -1000, 979, 17899, 1637, 1616, 1433, -1000, 1598, 1587,
	17899, 1433, 1433, 1433, -1000, 979, 1325, 1561, 1311, -1000,
	-1000, -1000, -1000, 1372, 1433, 1541, -274, 1185, 1437, 1437,
	1437, 1437, 1437, 1430, 1430, 1430, 1430, -1000, -1000, 1185,
	-1000, -1000, 2023, 2023, 2023, 1406, 41429, 40841, -1000, -1000,
	-1000, -1000, 2095, 2093, 1362, -1000, -1000, 30, 380, -1000,
	1850, 1835, -1000, 2069, 1859, 2068, -1000, -1000, -1000, 979,
	-1000, 1951, 1273, -1000, 704, 1313, -1000, -1000, 16723, 1424,
	1815, 508, 1406, 1460, 1718, 1704, 1733, 2202, -1000, -1000,
	-1000, -1000, 1656, -1000, 1555, -1000, -1000, 1548, -1000, -1000,
	1290, 1185, 1505, 284, 22613, 1395, 1395, -1000, 500, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 827, 6430, 2148, -1000,
	1099, -1000, 1008, -1000, 784, 782, -1000, 40841, 1585, -1000,
	337, 1097, 337, 973, -1000, 957, -1000, -1000, -203, -1000,
	-1000, 1636, 1690, -1000, -1000, 40841, -1000, -1000, 40841, 40841,
	40841, 1581, 2066, -1000, 17899, 1580, 700, 1536, 40841, 40841,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	408, 692, -370, 246, 240, 692, 692, 692, -1000, -1000,
	1387, 1356, -1000, -160, -1000, 17899, -1000, -1000, -1000, 966,
	966, -1000, 1548, -1000, -1000, -1000, 1240, -1000, -1000, -149,
	40841, 40841, 40841, 40841, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 610, 18487, -1000, -1000, 337, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17899, -1000,
	17899, -1000, 2044, 1095, 979, 17899, 17899, -1000, 953, 950,
	1433, -1000, -1000, -1000, 1185, 19075, -1000, 19075, -1000, 17899,
	202, 642, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1532, 1958, 1532, 1532, 24377, -1000, -1000,
	2093, 2091, 2061, 1824, 1842, 1842, 1850, -1000, 2059, 2058,
	-1000, 1092, 2051, 1085, 776, -1000, 40841, 17899, 1532, -1000,
	328, 40841, 1532, 40841, -1000, 2055, -1000, -1000, 17899, 1560,
	-1000, 17899, -1000, -1000, -1000, -1000, -1000, -1000, 6716, 2095,
	1395, -1000, -1000, 629, -1000, 17899, -1000, -1000, -1000, 3041,
	-1000, -1000, -1000, -1000, -1000, 1559, 17899, -1000, -1000, -1000,
	1235, 1230, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1548, -1000, -1000, -1000, -1000, 275, -396, 1487, 40841, 949,
	-1000, 1332, 1338, 264, 1532, 1070, 692, 692, 692, 901,
	860, 27905, 347, -1000, 275, -1000, -167, -168, 1433, -1000,
	-1000, 1990, -1000, -1000, 11406, -1000, -1000, 1534, 1688, -1000,
	209, -1000, 1433, 1433, 1185, -1000, 1433, 1433, 1213, 1194,
	-1000, -1000, 1311, -1000, 937, -1000, 202, 1185, 1731, -1000,
	-1000, 6716, -1000, 24965, -1000, 2050, 2048, 28493, 28493, 556,
	2091, -1000, 17899, 17899, 1819, 927, -1000, -1000, -1000, -1000,
	1068, 1065, -1000, 1049, -1000, 2147, -1000, 979, -1000, 1532,
	-1000, 498, 1313, -1000, 2044, 979, 40841, 979, 42, 2055,
	-1000, 1433, -1000, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 40841, 1396, -1000, -1000, 1987,
	1303, 51, -1000, 1300, -1000, -1000, 466, -1000, 17899, -1000,
	27905, 1023, 1010, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 311, 1328, -1000, 686, 40841, 40841, 1185, 253, -153,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17899,
	-1000, 1185, 1729, -1000, -260, -1000, 1289, -1000, -1000, -1000,
	-1000, -1000, 1289, 1289, -1000, -1000, 979, 1321, -1000, 918,
	-1000, -1000, -1000, -1000, -1000, 40841, 1313, 40841, -1000, 1260,
	1185, 1532, 2044, -1000, 1254, -1000, 311, -1000, 1513, 1546,
	-1000, -1000, -1000, 16135, -1000, -1000, -1000, -1000, -148, 11406,
	8441, 1244, -1000, -1000, 1765, -141, -156, 1325, -1000, -341,
	-1000, -1000, 27317, -1000, -1000, -1000, -1000, -1000, 1293, -1000,
	-1000, 24377, 40253, -1000, 1727, 1073, -148, 17899, 1287, 1185,
	-1000, -30, -1000, -1000, -1000, -1000, -1000, 1684, -1000, 1744,
	-1000, 1185, -1000, -1000, -1000, 1229, -1000, 2968, -240, 1722,
	1719, 2120, -1000, -1000, -1000, 825, 929, -1000, -1000, -1000,
	-1000, 1370, 40841, -1000, 357, -1000, -1000, -149, -151, -1000,
	-1000, 40253, -232, 606, 6716, -1000, -1000, 2146, -1000, 2144,
	591, 591, -1000, -1000, -405, 1221, 168, -1000, -154, -1000,
	-1000, 1968, 42, -1000, -1000, -1000, 354, 1006, -1000, -1000,
	856, -405, -1000, -158, -246, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6716, 177, 177, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2483, 2482, 22, 6, 2481, 2480, 2478, 37, 107,
	191, 41, 181, 93, 2477, 2470, 2467, 2465, 2462, 2461,
	2460, 219, 215, 205, 2459, 2458, 2457, 2456, 2455, 2450,
	2449, 2448, 2447, 2445, 209, 156, 176, 2444, 2443, 2441,
	100, 175, 85, 90, 178, 2439, 2438, 78, 2437, 2436,
	2432, 170, 168, 763, 2430, 163, 106, 33, 2429, 2428,
	2427, 2426, 2423, 2422, 2421, 2418, 2417, 2416, 2415, 2414,
	2413, 2412, 2407, 2406, 2405, 281, 2404, 2398, 16, 2395,
	81, 2394, 2393, 2392, 2391, 122, 2390, 2389, 2388, 2387,
	2386, 2379, 2377, 140, 2376, 2375, 2374, 2372, 189, 2369,
	2368, 152, 102, 101, 2367, 2366, 96, 172, 2365, 118,
	2364, 2363, 2362, 147, 2361, 4718, 2360, 67, 65, 2359,
	55, 80, 63, 60, 24, 4, 2358, 2357, 66, 82,
	2356, 95, 69, 2354, 120, 104, 2353, 2352, 13, 7,
	2351, 5, 2, 3, 70, 2350, 2348, 121, 2347, 2346,
	2345, 88, 2344, 2343, 2986, 2342, 89, 128, 99, 76,
	2341, 26, 46, 2340, 2339, 2338, 2337, 2336, 40, 2334,
	2332, 2330, 139, 68, 164, 34, 50, 42, 130, 2329,
	43, 83, 2327, 134, 133, 2324, 44, 28, 52, 2323,
	48, 127, 105, 27, 94, 129, 2322, 2321, 53, 75,
	2320, 2319, 2318, 2317, 2316, 2314, 73, 2313, 58, 2312,
	179, 2311, 10, 2310, 36, 32, 2307, 71, 138, 74,
	29, 2306, 158, 2305, 47, 159, 123, 155, 2304, 2303,
	2302, 2301, 171, 276, 2300, 2299, 162, 166, 141, 145,
	2296, 291, 2295, 2293, 92, 1464, 2595, 39, 160, 2291,
	2290, 3621, 137, 23, 20, 2289, 174, 2286, 2281, 2280,
	183, 165, 103, 1028, 45, 2277, 2276, 17, 2267, 2266,
	2264, 2263, 2262, 2261, 91, 2259, 2256, 2255, 180, 59,
	9, 154, 77, 2253, 2250, 2249, 119, 108, 2248, 151,
	149, 124, 185, 2247, 161, 142, 153, 2245, 86, 2241,
	2234, 2232, 2231, 2229, 98, 2222, 2221, 2216, 2211, 150,
	144, 111, 79, 2210, 84, 110, 157, 143, 35, 2206,
	30, 2205, 2201, 2196, 177, 25, 2195, 12, 61, 49,
	21, 97, 116, 2191, 0, 2190, 15, 169, 290, 146,
	2189, 2186, 8, 11, 14, 2183, 131, 2179, 2177, 2176,
	19, 31, 18, 1, 2173, 2172, 5699, 3800, 126, 2171,
	186,
}

//line sql.y:6759
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 354, 355, 355, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 334, 334,
	334, 337, 337, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	358, 358, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 336, 336, 335, 327, 327, 326, 326, 325, 333,
	333, 332, 332, 331, 38, 39, 48, 48, 48, 48,
	49, 50, 338, 338, 300, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 302, 302, 288,
	288, 301, 301, 301, 301, 301, 301, 301, 287, 287,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 349, 349, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 350, 350, 350,
	350, 267, 267, 267, 267, 270, 270, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 269, 269, 269, 269,
	269, 271, 271, 271, 271, 271, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 286,
	286, 274, 274, 281, 281, 282, 282, 282, 283, 283,
	283, 284, 284, 279, 279, 279, 279, 279, 279, 280,
	280, 280, 289, 314, 314, 313, 313, 311, 311, 311,
	311, 298, 298, 308, 308, 308, 308, 308, 297, 297,
	293, 293, 293, 294, 294, 295, 295, 292, 292, 296,
	296, 310, 310, 309, 309, 290, 290, 291, 291, 316,
	351, 351, 351, 351, 351, 352, 352, 317, 343, 344,
	342, 342, 342, 342, 342, 80, 80, 80, 240, 240,
	240, 306, 306, 305, 305, 305, 307, 307, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 235, 235, 235, 341,
	341, 341, 341, 341, 341, 340, 340, 340, 303, 303,
	303, 339, 339, 56, 56, 181, 181, 45, 45, 45,
	45, 45, 45, 44, 44, 44, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 46,
	46, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	85, 85, 86, 86, 86, 86, 88, 88, 88, 319,
	319, 57, 57, 3, 3, 137, 139, 140, 140, 138,
	138, 138, 138, 138, 138, 59, 59, 58, 58, 142,
	141, 143, 143, 143, 1, 1, 2, 2, 4, 4,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 285, 285, 285, 318, 318, 320, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 322, 322, 322,
	60, 60, 323, 275, 276, 277, 5, 6, 299, 321,
	95, 95, 28, 37, 37, 29, 29, 29, 29, 30,
	30, 61, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 234, 234, 242, 242, 233, 233, 256, 256,
	256, 236, 236, 236, 237, 237, 348, 348, 348, 230,
	230, 63, 63, 63, 65, 65, 66, 67, 67, 258,
	258, 259, 259, 68, 69, 81, 81, 81, 81, 81,
	81, 84, 84, 84, 15, 15, 15, 15, 77, 77,
	77, 14, 14, 64, 64, 71, 345, 345, 346, 347,
	347, 347, 347, 72, 74, 31, 31, 31, 31, 31,
	31, 105, 105, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 94, 94,
	359, 75, 76, 76, 98, 98, 98, 91, 91, 91,
	97, 97, 97, 16, 16, 17, 216, 216, 18, 18,
	102, 102, 104, 104, 104, 104, 104, 106, 106, 106,
	106, 106, 106, 106, 101, 101, 103, 103, 103, 103,
	249, 249, 249, 248, 248, 131, 131, 133, 132, 132,
	134, 134, 135, 135, 135, 135, 179, 179, 157, 157,
	214, 214, 212, 212, 213, 213, 215, 215, 215, 215,
	218, 218, 136, 136, 136, 136, 144, 144, 145, 145,
	146, 146, 257, 257, 254, 254, 254, 253, 253, 150,
	150, 150, 152, 151, 151, 151, 151, 153, 153, 155,
	155, 154, 154, 156, 161, 161, 160, 160, 158, 158,
	158, 158, 159, 159, 159, 159, 162, 162, 115, 115,
	115, 115, 115, 115, 115, 126, 126, 126, 126, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 82, 82, 82, 231,
	231, 163, 163, 171, 171, 171, 171, 164, 164, 164,
	164, 164, 164, 164, 172, 172, 172, 178, 173, 173,
	169, 169, 169, 169, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 265, 265, 330, 330, 329, 329, 328, 328,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 360, 360, 278, 278, 278, 278, 170, 170, 170,
	170, 170, 96, 96, 96, 96, 96, 262, 262, 262,
	266, 266, 266, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 184, 184,
	92, 92, 182, 182, 183, 185, 185, 180, 180, 180,
	166, 166, 166, 186, 186, 187, 187, 188, 188, 190,
	189, 189, 191, 192, 192, 192, 193, 193, 194, 194,
	194, 47, 47, 47, 47, 47, 42, 42, 42, 42,
	43, 43, 43, 107, 107, 107, 107, 109, 109, 108,
	108, 78, 78, 79, 79, 79, 113, 113, 114, 114,
	114, 111, 111, 112, 112, 210, 210, 195, 195, 195,
	202, 202, 202, 198, 198, 200, 200, 200, 201, 201,
	201, 199, 207, 207, 209, 209, 208, 208, 204, 204,
	205, 205, 206, 206, 206, 203, 203, 165, 165, 165,
	165, 165, 211, 211, 211, 211, 219, 219, 175, 175,
	177, 177, 176, 130, 220, 220, 224, 221, 221, 225,
	225, 225, 225, 225, 222, 222, 223, 223, 250, 250,
	250, 229, 229, 241, 241, 238, 238, 239, 239, 232,
	232, 243, 243, 243, 73, 174, 174, 315, 315, 312,
	246, 246, 247, 247, 251, 251, 255, 255, 252, 252,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 356, 357, 260, 261,
	261, 261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 0, 2, 0, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -354, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -356,
	11, 429, 252, 251, 28, -12, 463, 85, -355, 597,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -359, -75, -75, 12, 13, -75, -300,
	-302, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -324, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -307, 219, 225, 226, 430,
	122, 121, 75, 221, -304, 353, 567, -55, 569, 101,
	103, 568, 44, 231, 570, 571, 572, 573, 240, 574,
	575, 576, 577, 583, 584, 585, 586, 123, 7, -75,
	-255, -251, -334, -245, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 567, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 564, 324, 131,
	569, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	582, 297, 497, 580, 103, 568, 79, 51, 44, 253,
	322, 227, 318, 570, 281, 498, 471, 274, 122, 119,
	589, 36, 316, 50, 30, 579, 121, 49, 571, 146,
	499, 572, 362, 341, 558, 48, 363, 259, 500, 83,
	264, 465, 566, 364, 317, 365, 291, 578, 224, 501,
	550, 366, 367, 559, 502, 342, 346, 503, 388, 368,
	596, 52, 504, 505, 560, 120, 506, 78, 573, 311,
	312, 507, 289, 242, 390, 338, 442, 449, 450, 107,
	108, 445, 109, 451, 110, 452, 453, 454, 443, 111,
	104, 444, 455, 456, 339, 340, 112, 457, 106, 105,
	446, 448, 113, 458, 240, 35, 369, 462, 293, 58,
	268, 391, 46, 344, 593, 45, 554, 508, 557, 337,
	333, 439, 53, 509, 510, 511, 512, 574, 336, 310,
	332, 588, 4, 286, 575, 62, 226, 348, 347, 349,
	275, 387, 329, 513, 514, 515, 247, 81, 516, 319,
	21, 517, 518, 370, 282, 519, 56, 520, 521, 394,
	256, 522, 54, 576, 39, 261, 590, 577, 523, 524,
	525, 526, 263, 527, 372, 528, 371, 343, 345, 270,
	373, 464, 529, 315, 260, 581, 530, 248, 565, 262,
	267, 255, 395, 249, 531, 532, 533, 534, 535, 296,
	549, 536, 537, 303, 583, 440, 43, 538, 539, 540,
	541, 290, 285, 389, 398, 61, 82, 355, 542, 563,
	309, 283, 543, 300, 55, 584, 585, 586, 277, 587,
	9, 594, 595, 375, 123, 287, 288, 47, 330, 269,
	544, 545, 320, 321, 335, 308, 331, 301, 551, 271,
	376, 441, 257, 546, 397, 284, 351, 356, 468, 276,
	377, 562, 467, 328, 325, 278, 547, 378, 232, 272,
	273, 548, 552, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -75, 230, -154,
	-251, 230, -222, 359, -242, 361, 374, 369, 379, 367,
	-234, 370, 372, 270, -348, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-334, 172, 572, 587, 131, 327, 366, 364, 389, 554,
	-251, 301, -258, 306, -246, -334, -245, 304, -154, -81,
	550, 222, -260, -260, -100, 554, 556, -173, -115, 139,
	-126, -129, -120, -121, -167, -168, -169, -170, -127, -180,
	161, 162, 169, 140, -178, -130, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -128, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -246, -251, 235, 400, 229, 167, 429, -122, -118,
	-8, -176, 399, 404, 405, 409, 402, -334, -245, -124,
	-123, -163, 91, 97, 102, 98, -353, 115, -356, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 44, 375, 375,
	-154, -75, -75, -75, -75, -188, -98, -190, -10, -8,
	-356, 8, -75, -8, -9, -13, -34, -36, 489, -35,
	-251, -195, -210, 12, 157, 42, 50, -193, -194, -12,
	-8, -115, 19, 23, 24, -103, 163, -115, -251, -76,
	-103, -232, 234, -75, -75, -221, -263, 301, -225, 389,
	388, -247, -223, -246, -244, -222, 387, 223, 23, 469,
	138, 25, 27, 141, 172, 126, 19, 142, 37, 225,
	327, 241, 171, 237, 430, 218, 72, 470, 401, 403,
	399, 406, 432, 433, 400, 361, 31, 13, 472, 28,
	251, 24, 38, 165, 220, 145, 473, 254, 26, 252,
	114, 117, 475, 22, 75, 246, 14, 239, 40, 16,
	476, 477, 17, 235, 234, 157, 231, 70, 11, 214,
	29, 154, 66, 478, 133, 479, 480, 481, 482, 127,
	68, 155, 20, 591, 404, 405, 33, 555, 459, 265,
	167, 73, 59, 556, 139, 402, 483, 484, 115, 485,
	118, 76, 561, 135, 18, 71, 42, 486, 266, 487,
	236, 592, 488, 392, 489, 156, 221, 429, 69, 490,
	229, 374, 8, 435, 32, 250, 238, 125, 67, 491,
	230, 144, 436, 437, 233, 128, 116, 7, 132, 34,
	12, 74, 77, 407, 408, 409, 57, 124, 463, 143,
	15, 492, 393, 137, 131, -301, 155, -287, -291, -246,
	245, -317, 241, -154, -310, -309, -246, -356, -99, -241,
	231, 239, 238, 132, -338, 135, 287, 400, 229, -51,
	-52, -222, 171, -85, 262, 266, 86, 86, -291, -290,
	-289, -339, 266, 245, -316, -308, 237, 246, -297, 238,
	239, -292, 231, 133, -339, -292, 236, 246, 266, 266,
	123, 266, 123, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 261, -298, 147, -298, 467, 467, -304, -339,
	-339, -339, 233, 35, 35, -243, -292, 233, 25, -298,
	-298, -222, 171, -298, -298, -298, -298, 274, 274, -298,
	-298, -298, -298, -298, -298, -298, -298, -298, -298, -298,
	-298, -298, -298, -298, 230, -338, -107, 386, 294, 80,
	-53, 276, -37, -154, -241, 231, 232, -338, 263, -154,
	215, -154, -236, 155, 15, -236, -233, 375, 373, 360,
	365, -236, -236, -236, -236, 277, 358, -293, 231, 35,
	242, 375, 277, 358, 277, 278, 277, 278, 368, 378,
	277, -256, 14, 157, 400, 363, 367, 270, 230, 271,
	232, 377, 278, -256, 92, -237, 155, 375, 273, -236,
	-236, -261, -356, -247, 327, -334, 557, -261, -261, 32,
	89, 233, -246, -77, -246, 92, -15, -11, -22, -21,
	-23, 147, -105, 375, -93, 172, 572, 558, 559, 560,
	557, 372, 565, 563, 561, 277, 562, 86, 135, 137,
	138, 4, -115, 154, -164, 147, 148, 149, 150, 151,
	152, 153, 157, 139, 141, 155, 156, 136, 158, 159,
	160, 161, 162, 163, 164, 166, 165, 167, 168, 171,
	216, 217, -121, -121, -121, -121, -178, -356, -356, -356,
	-121, -231, -356, -121, -356, -356, -356, -356, -184, -115,
	-356, -360, -356, -360, -360, -278, -356, -278, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, 215, -356, -356, -356, -356,
	-356, -278, -278, -278, -278, -278, 102, 97, 91, -180,
	98, 92, -246, -251, -8, -9, -173, -260, -345, -346,
	-157, -154, -356, 294, -246, -246, 263, -193, -12, -8,
	-188, -194, -190, -8, -75, -91, -104, 63, 64, -106,
	24, 38, 67, 65, 23, -357, 87, -357, -210, -357,
	86, -36, -214, 85, 61, 43, 92, 92, 86, 21,
	-189, -191, -115, 14, -249, 4, -248, 25, -246, 92,
	215, 100, 14, -155, 29, -154, -232, -232, 86, 301,
	-225, -263, -227, -226, 390, 392, 147, -250, -246, 92,
	31, 87, 86, -154, -267, -270, -272, -271, -273, -268,
	-269, 324, 325, 172, 328, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 341, 32, 253, 320, 321, 322,
	323, 342, 343, 344, 345, 346, 347, 348, 349, 307,
	326, 461, 308, 309, 310, 311, 312, 313, 315, 316,
	317, 318, 319, -337, -334, 85, 87, 86, -274, 85,
	-115, -107, 230, -334, 231, 231, 231, -75, 429, -298,
	-298, 261, 19, -44, -41, -324, 18, -40, -41, 223,
	119, 120, 220, 85, -287, 85, -296, -337, -334, 85,
	133, 236, 132, -295, -292, -295, -296, -334, -180, -334,
	133, 133, -218, -246, -218, -218, 23, -218, 23, -218,
	23, 94, -246, -218, 23, -218, 23, -218, 23, -218,
	23, -218, 23, 31, 78, 79, 31, 81, 82, 83,
	-180, -180, -287, -222, -154, -334, 94, 94, -298, -298,
	94, 92, 92, 92, -298, -298, 94, 92, -253, -251,
	92, -340, 247, 291, 293, 94, 94, 94, 94, 31,
	92, -341, 31, 579, 578, 580, 581, 582, 94, 31,
	94, 31, 94, -246, 85, -154, -113, 281, 218, 220,
	223, 76, 92, 295, 147, 44, 86, 233, 230, -334,
	-238, 235, -238, -246, -252, -251, -244, 92, -115, -294,
	14, 157, -256, -256, -236, -154, -294, -256, -236, -154,
	-236, -236, -236, -236, -256, -256, -256, -236, -251, -251,
	-154, -154, -154, -154, -154, -154, -154, -261, -237, -236,
	557, 92, -230, 14, 76, -261, -261, -259, 304, 338,
	551, 552, 553, 86, 463, -147, -154, 557, 557, 557,
	557, 557, 557, -115, -115, -115, -115, 485, -171, 115,
	139, 116, 117, -129, -172, -176, -178, 99, 157, 141,
	155, 156, -120, -121, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -262, -334, 92,
	172, -125, -124, 98, -353, -125, -101, -103, -115, -115,
	-334, -246, -101, -101, -115, -97, 24, 38, -182, -183,
	143, -180, -357, -357, 94, 98, -246, -246, -90, -89,
	411, 412, 413, 414, 416, 417, 418, 421, 422, 426,
	427, 410, 428, 415, 420, 423, 424, 425, 419, 323,
	-115, -115, -115, -115, -115, -115, -82, -115, 126, 127,
	128, -115, -115, -174, -173, -333, -332, -331, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -102, 24, 38, -101, -247, -252, -244, -101, -102,
	-102, -101, -101, 215, -210, -357, 86, -347, 392, 393,
	555, -254, 266, -253, 25, -174, 92, 14, -216, 77,
	-246, -193, -193, 63, 64, 59, -101, -106, -357, -35,
	25, -212, -246, 62, 92, -279, -222, 350, 351, -115,
	-115, 86, -192, 27, 28, -154, -248, 163, -252, -154,
	-217, 266, -154, -132, -134, -135, -136, -157, -179, -356,
	-137, 481, 478, 14, -147, -148, -156, -251, -225, -227,
	86, 391, 393, 394, 76, 118, -115, -280, 171, -306,
	-305, -304, -287, -289, -290, -291, 87, -280, -283, 356,
	355, -274, -274, -274, -274, -274, -279, -279, -279, -279,
	85, 85, -274, -274, -274, -274, -281, 85, -281, -281,
	-282, 85, -282, -317, -115, -314, -313, -311, -312, 240,
	101, 463, 77, -309, -192, 94, -357, -113, -239, 235,
	-315, -312, -334, -334, -334, -239, -334, 92, -334, 92,
	-86, -57, -1, 591, 592, 593, 86, 19, -288, -287,
	-56, 291, -320, -321, 266, -316, -310, -296, 133, -295,
	-296, -296, -334, 86, 29, 123, 123, 123, 123, 463,
	220, 32, -287, -56, -262, 233, -262, -262, 92, 92,
	-235, 587, -147, -109, 283, 147, 272, 272, 230, 230,
	285, -154, 296, 298, 297, 295, 23, 284, 286, 288,
	274, -154, -154, -238, 76, -149, -154, 26, -251, -154,
	-236, -236, -154, -236, -236, -154, -246, -93, 392, 86,
	463, 22, -94, 22, -356, 115, 116, 117, -172, -120,
	-121, -120, 138, 254, 86, -357, 25, 86, 77, -357,
	-357, -357, 86, 14, -101, -185, -183, 145, -115, -357,
	-357, -357, 86, 86, 14, -266, 25, -357, -357, -357,
	-357, -357, -184, -357, 14, 86, 86, -357, -357, 86,
	86, -357, 86, 86, 86, -330, 86, 86, 86, 86,
	-357, -357, -357, -357, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, -357, -357, -101, -101, -356, 215,
	-357, -357, -357, -357, -357, -247, -346, 554, 393, -161,
	-160, -158, 74, 234, 75, -356, -253, -357, -125, 89,
	-213, 89, -212, -166, -246, 94, 98, -195, -131, -133,
	14, -106, -178, 87, 86, -279, -199, -204, -233, -246,
	92, 172, -191, 215, -162, 15, -165, 32, 57, -11,
	-356, -356, 32, 86, -150, -152, -151, -153, 66, 70,
	72, 67, 68, 69, 73, -257, 25, -132, -9, -8,
	-356, -356, -356, -154, -147, -358, 14, 77, -358, 86,
	215, -226, -228, 395, 392, 398, -334, 92, -85, 86,
	-304, -291, -196, -110, 40, -284, 357, -279, -279, -286,
	92, -286, 94, 94, 87, -47, -42, -43, 33, 80,
	-311, -298, 92, 39, -246, 87, -192, -109, -154, 139,
	76, -315, -315, -315, -251, -2, 590, 596, 133, 85,
	360, 18, -212, 86, 87, -181, 292, 87, -87, -246,
	87, 85, -296, -296, -246, -356, 230, 31, 31, -56,
	-181, -280, -334, 589, 588, 87, 232, 290, -114, 406,
	-111, 92, 88, -154, -154, -154, -154, -154, 223, 220,
	275, 233, -147, -154, 86, -80, 249, 244, -256, -256,
	33, -154, 392, 566, 564, -115, 138, 254, -129, -121,
	-103, 460, -264, 172, 324, 253, 322, 318, 338, 329,
	355, 320, 356, 317, 316, 315, -264, -262, -115, -115,
	-188, 146, -115, 144, -115, -115, -115, -357, 172, 324,
	14, -115, -115, -115, -331, -115, -115, -115, -329, -328,
	-125, -180, -357, -329, -115, -115, -328, -328, -332, -332,
	-332, -332, -332, -173, -173, -173, -173, -357, -357, -102,
	-247, -158, -292, -292, -292, -218, 86, -229, 22, 14,
	57, 57, -131, -162, -132, -106, -246, -202, 550, -207,
	46, -205, -206, 47, -203, 48, 56, 163, -193, -115,
	-219, 76, -220, -224, -180, -175, -177, -176, -356, -211,
	-357, -246, -218, -220, -134, -135, -135, -134, -135, 66,
	66, 66, 71, 66, 71, 66, -151, -251, -357, -357,
	-9, -9, -115, -254, 77, -132, -132, -156, -251, 163,
	392, 396, 397, -304, -352, 115, 139, 31, 76, 353,
	101, -350, 171, -351, 236, 132, 133, 248, 25, 41,
	87, 86, 87, 86, 87, 86, -240, 499, 139, -43,
	-42, -298, -298, 94, -334, 232, 26, -154, 76, 76,
	76, -88, 594, 94, 85, -3, 80, -115, 85, 19,
	-287, -180, -322, -275, -323, -276, -277, -5, -6, -299,
	57, 101, -60, 44, 231, 574, 575, 123, 587, -314,
	-212, -318, -320, -154, -117, -356, -116, -118, -122, 161,
	162, -181, -154, -108, 281, 289, 85, -112, 89, -336,
	77, 272, 353, 272, -154, -80, -47, -154, -236, -236,
	33, -334, -357, -129, -121, -356, -357, -274, -274, -274,
	-282, -274, 312, -274, 312, -274, -357, -357, 86, -357,
	22, -357, -92, 435, -115, 86, 86, -357, 85, 85,
	-115, -357, -357, -357, -330, 86, -357, 86, -357, 86,
	-265, 549, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -159, 22, -159, -159, -357, 89, -154,
	-162, -186, 16, -199, 51, 330, -209, -208, 55, 47,
	-206, 19, 49, 19, 30, -219, 86, 147, 86, -357,
	-357, 86, 57, 215, -357, -162, -145, -144, 76, 77,
	-146, 76, -144, 66, 66, -214, -357, -357, 86, -217,
	-132, -162, -162, 215, 115, -356, -119, -128, -117, 12,
	92, 92, -334, 133, 133, -154, 85, -279, 92, -279,
	94, 94, 499, 31, 81, 82, 83, 31, 78, 79,
	-154, -154, -154, -154, -319, 85, 19, -115, 85, 147,
	87, -212, -212, 268, 157, -298, 572, 274, 274, -298,
	-298, -298, 87, -357, 86, -285, 463, 466, -115, -123,
	-123, -214, 87, -327, 463, -335, -246, -246, -246, -246,
	-120, -279, -115, -115, -193, 92, -115, -115, 94, 94,
	-357, -357, -329, -328, -115, -357, -142, -141, -143, 558,
	115, 31, -264, -356, 66, 18, 16, -356, -356, -254,
	-186, -187, 17, 19, -200, 53, -198, 52, -198, -208,
	19, 19, 92, 19, 92, 133, -224, -115, -177, 57,
	-11, -246, -175, -246, -188, -115, 85, -115, -125, -162,
	-162, -115, -168, 438, 104, 106, 105, 439, 440, 441,
	339, 340, 442, 443, 444, 107, 108, 109, 110, 111,
	112, 113, 445, 448, 446, 449, 450, 451, 456, 457,
	452, 453, 454, 455, 458, 85, -115, 87, 87, -214,
	-318, -57, 87, -212, 94, 87, 269, -176, -356, 92,
	-298, -298, -298, 94, 94, -253, -351, -320, 467, 467,
	-357, 25, -326, -325, -247, 85, 77, -96, 157, 463,
	-357, -357, -357, -357, -357, 87, 87, -357, -357, 86,
	-357, -141, -143, -357, 76, -125, -215, -357, -246, 236,
	19, 19, -215, -215, -161, -187, -115, -173, -201, 54,
	76, 118, 92, 92, 92, 12, -175, 215, -193, -212,
	-139, 360, -188, -357, -212, 87, 25, 87, 596, 133,
	87, -176, -95, -356, 265, -253, 92, 92, -11, 86,
	147, -212, -154, -357, 461, 73, 464, -115, -357, 76,
	473, 558, 86, -357, -357, -357, 76, 118, -220, -246,
	87, -357, -356, -193, 87, -197, -11, 85, -3, 265,
	-78, 463, -325, -303, -247, 92, 94, 87, 62, 462,
	465, -330, -246, 236, -254, -140, -138, -246, 513, -343,
	-344, 76, -352, -349, 115, 139, 101, -350, 124, 125,
	-78, -115, 85, -357, -79, 280, 554, -336, 62, -357,
	-357, 86, 22, -267, -59, 523, -344, 76, -343, 76,
	13, 12, 115, 92, 87, -212, 241, -327, 463, -138,
	520, -280, -125, -342, 249, 244, 247, 32, -342, -4,
	595, 87, 282, 464, -58, 26, -139, 243, 31, 115,
	94, -4, 465, 523, -125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 760,
	760, 760, 0, 760, 0, 0, 760, -2, -2, 760,
	1246, 0, 760, 0, 0, -2, 692, 694, 0, 696,
	-2, 0, 0, 705, 1738, 1738, 755, 0, 0, 0,
	0, 0, 760, 760, 760, 760, 1107, 48, 760, 0,
	83, 84, 711, 712, 713, 63, 0, 1736, 1, 3,
	69, 73, 0, 0, 0, 56, 1116, 0, 76, 0,
	0, 764, 0, 762, 0, 1229, 760, 760, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 520, 460, 503, 458, 489, -2, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 351, 351, 0, 0, -2, 451, 451, 451, 0,
	0, 0, 486, 1231, 406, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1133,
	151, 1247, 1244, 1245, 38, 39, 40, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 0, 1223, 0, 620,
	861, 0, 681, 681, 0, 681, 681, 681, 681, 0,
	0, 0, 632, 0, 0, 0, 0, 678, 0, 648,
	649, 0, 678, 0, 684, 0, 659, 681, 681, 662,
	1739, 0, 1739, 1739, 1214, 0, 675, 673, 687, 688,
	691, 695, 0, 700, 703, 1240, 1241, 0, 718, 47,
	1480, 710, 723, 724, 0, 756, 757, 43, 958, 0,
	883, 888, 899, 912, 913, 914, 915, 916, 918, 919,
	0, 0, 0, 0, 924, 925, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 1088, 0, 1051,
	1051, 975, 1051, 1053, 1053, 0, 0, 0, 1735, 1520,
	1528, 1529, 1551, 1635, 1681, 1524, 1525, 1506, 1518, 1521,
	1509, 1510, 1512, 1514, 1519, 1526, 1532, 1511, 1531, 1530,
	0, 1507, 1508, 1513, 1523, 1527, 1515, 1516, 1517, 1522,
	1533, 1097, 0, 0, 0, 0, 0, 0, 257, 258,
	957, 1203, 1053, 1053, 1053, 1053, 1053, -2, -2, 204,
	205, 206, 207, 208, 209, 210, 0, 200, 0, 262,
	263, 259, 260, 261, 941, 942, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 1738, 0, 733,
	0, 0, 0, 0, 0, 1116, 0, 1108, 1107, 61,
	0, 760, -2, 0, 0, 0, 0, 45, 0, 50,
	820, 75, 74, 1155, 0, 0, 0, 57, 1117, 65,
	67, 1118, 0, 765, 766, 0, 796, 800, 0, 761,
	0, 0, 1230, 1229, 1229, 100, 0, 1677, 1207, -2,
	-2, 0, 0, 1242, 1243, 1216, -2, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, -2, 0, 0, 161, 162, 0,
	41, 378, 0, 157, 0, 371, 321, 0, 1133, 0,
	0, 0, 0, 0, 760, 0, 1224, 142, 143, 149,
	150, 351, 351, 500, 0, 0, 151, 151, 467, 468,
	469, 0, 0, -2, 376, 0, 452, 0, 0, 365,
	365, 369, 367, 368, 0, 0, 0, 0, 0, 0,
	480, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 352, 0, 498, 499, 407, 0,
	0, 0, 0, 478, 479, 0, 0, 1232, 1233, 0,
	0, 351, 351, 0, 0, 0, 0, 351, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1146, 0, 0, 0,
	-2, 0, 612, 0, 0, 0, 1225, 1225, 0, 619,
	0, 621, 622, 0, 0, 623, 0, 678, 678, 676,
	677, 625, 626, 627, 628, 681, 0, 0, 360, 361,
	362, 678, 681, 0, 681, 681, 681, 681, 678, 678,
	678, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 684, 681, 0, 655, 0, 656, 657, 660,
	661, 663, 1740, 1741, 1263, 1739, 1739, 667, 671, 1215,
	693, 701, 704, 721, 719, 720, 722, 714, 715, 716,
	717, 0, 735, 736, 741, 0, 0, 0, 0, 747,
	748, 749, 0, 0, 752, 753, 754, 0, 0, 0,
	0, 0, 881, 0, 0, 947, 948, 949, 950, 951,
	952, 953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 921, 922, 923, 926, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 770, 0, 1089,
	0, 973, 0, 974, 976, 977, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 780, 780, 0,
	0, 193, 194, 195, 196, 197, 211, 212, 213, 214,
	215, 264, 1097, 0, 957, 0, 0, 44, 725, 726,
	0, 844, 1235, 0, 0, 776, 0, 55, 64, 66,
	1116, 59, 1116, 0, 782, 0, 0, -2, -2, 783,
	789, 790, 791, 792, 793, 52, 1737, 53, 0, 72,
	0, 46, 0, 0, 0, 0, 333, 1158, 0, 0,
	1109, 1110, 1113, 0, 797, 1562, 801, 0, 803, 804,
	0, 763, 0, 98, 0, 860, 0, 0, 0, 1677,
	1213, 0, 102, 103, 0, 0, 0, 339, 1218, 1219,
	1220, -2, 358, 0, 339, 328, 272, 273, 274, 321,
	276, 321, 321, 321, 321, 333, 333, 333, 333, 304,
	305, 306, 307, 308, 0, 0, 291, 321, 321, 321,
	321, 311, 312, 313, 314, 315, 316, 317, 318, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 323, 323,
	323, 325, 325, 0, 42, 0, 343, 0, 1113, 0,
	0, 1146, 1227, 1237, 0, 0, 0, 1227, 120, 0,
	0, 501, 531, 461, 490, 502, 0, 464, 465, -2,
	0, 0, 451, 0, 453, 0, 359, 0, -2, 0,
	369, 0, 365, 369, 366, 369, 357, 370, 482, 483,
	484, 0, 561, 830, 0, 0, 0, 0, 0, 567,
	568, 569, 0, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 491, 492, 493, 494, 495, 496, 497,
	0, 0, 453, 0, 487, 0, 408, 409, 0, 0,
	412, 413, 414, 415, 0, 0, 418, 419, 420, 847,
	848, 421, 445, 446, 447, 422, 423, 424, 425, 426,
	427, 428, 439, 440, 441, 442, 443, 444, 429, 430,
	431, 432, 433, 436, 0, 135, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 779, 862, 1248, 1249, 682, 683, 0,
	363, 364, 681, 681, 629, 668, 0, 681, 633, 669,
	634, 636, 635, 637, 650, 651, 681, 640, 679, 680,
	641, 642, 643, 644, 645, 646, 647, 664, 652, 653,
	654, 685, 0, 689, 690, 665, 666, 0, 702, 706,
	707, 708, 709, 0, 0, 738, 94, 743, 744, 745,
	746, 758, 751, 959, 878, 879, 880, 0, 882, 885,
	0, 943, 945, 887, 889, 954, 955, 956, 0, 0,
	0, 0, 0, 893, 897, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 917, 1067, 1068,
	1069, 934, 265, 266, 0, 935, 0, 794, 0, 0,
	0, 933, 0, 0, 0, 0, 771, 772, 1095, 1092,
	0, 0, 1052, 1054, 0, 0, 0, 0, 0, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1070, 0, 0, 0, 0, 0, 1088, 0, 936, 937,
	938, 0, 0, 0, 1236, 0, 130, 131, 0, 0,
	0, 0, 0, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 1098, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1202, 0, 728, 729, 731,
	0, 864, 0, 845, 0, 0, 734, 0, 775, 0,
	778, 58, 60, 787, 788, 0, 805, 784, 54, 49,
	0, 0, 822, 1156, 333, 1178, 0, 337, 338, 1119,
	1120, 0, 1112, 1114, 1115, 77, 802, 798, 0, 876,
	0, 0, 859, 0, 808, 810, 811, 812, 842, 0,
	815, 0, 0, 0, 0, 0, 96, 861, 1208, 101,
	0, 0, 106, 107, 1209, 1210, 1211, 1212, 0, 520,
	-2, 403, 163, 165, 166, 167, 158, -2, 331, 329,
	330, 275, 333, 333, 298, 299, 300, 301, 302, 303,
	0, 0, 292, 293, 294, 295, 286, 0, 287, 288,
	289, 0, 290, 377, 0, 1121, 344, 345, 347, 351,
	0, 0, 0, 372, 373, 0, 1113, 1137, 0, 0,
	0, 1238, 1237, 1237, 1237, 0, 153, 154, 155, 156,
	556, 0, 0, 532, 554, 555, 151, 0, 0, 159,
	455, 454, 0, 588, 0, 375, 0, 0, 369, 369,
	354, 355, 485, 0, 0, 563, 564, 565, 566, 0,
	0, 0, 453, 455, 339, 0, 410, 411, 416, 417,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 517, 518, 519, 1134, 1135, 1136,
	0, 0, 613, 0, 0, 395, 92, 1226, 618, 678,
	639, 670, 678, 631, 638, 658, 698, 742, 0, 0,
	0, 0, 750, 0, 0, 886, 944, 946, 890, 0,
	894, 898, 0, 0, 0, 0, 0, 0, 0, 940,
	964, 965, 0, 0, 1107, 0, 1093, 0, 0, 972,
	1055, 1056, 0, 0, 0, 0, 0, 983, 984, 985,
	986, 987, 0, 989, 0, 0, 0, 993, 994, 0,
	0, 995, 0, 0, 0, 0, 0, 0, 0, 0,
	1007, 1008, 1009, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1021, 960, 0, 0, 780, 0,
	1057, 1058, 1059, 1060, 1061, 1098, 727, 730, 732, 818,
	865, 866, 0, 0, 0, 0, 846, 1234, 773, 774,
	777, -2, 0, 0, 1100, 0, 0, 805, 876, 806,
	0, 785, 51, 821, 0, 1160, 1159, 1172, 1185, 334,
	335, 336, 1111, 0, 1116, 0, 1196, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	0, 852, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 340, 341, 144, 151,
	405, 164, 385, 0, 0, 271, 332, 296, 297, 0,
	319, 0, 0, 0, 398, 116, 1125, 1124, 351, 351,
	346, 0, 349, 0, 1239, 322, 374, 0, 134, 0,
	0, 0, 0, 0, 140, 526, 0, 0, 533, 0,
	0, 0, 459, 0, 470, 471, 0, 560, -2, 609,
	343, 0, 353, 356, 831, 0, 0, 472, 0, 455,
	476, 477, 488, 437, 438, 435, 0, 0, 1147, 1148,
	1153, 1151, 1152, 121, 508, 510, 509, 513, 0, 0,
	506, 0, 395, 1121, 0, 617, 396, 397, 681, 681,
	737, 95, 0, 740, 0, 0, 0, 0, 891, 895,
	795, 0, 0, 321, 321, 1075, 321, 325, 1078, 321,
	1080, 321, 1083, 321, 1086, 1087, 0, 0, 0, 0,
	1090, 971, 1096, 0, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 132, 133, 1024, 0, 0, 1026,
	1028, 1029, 999, 1025, 0, 0, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 962, 0,
	1099, 867, 872, 872, 872, 0, 0, 0, 1221, 1222,
	1101, 1102, 876, 1103, 807, 786, 823, 1178, 0, 1171,
	0, -2, 1180, 0, 0, 0, 1186, 799, 78, 877,
	81, 0, 1196, 1204, 0, 1187, 1198, 1200, 0, 0,
	0, 1192, 0, 876, 809, 838, 840, 0, 835, 850,
	851, 853, 0, 855, 0, 857, 858, 820, 814, 816,
	0, 0, 0, 98, 0, 876, 876, 97, 0, 863,
	108, 109, 110, 404, 168, 173, 0, 0, 0, 178,
	0, 180, 0, 386, 0, 268, 270, 0, 0, 171,
	333, 0, 333, 0, 326, 0, 387, 399, 0, 1122,
	1123, 0, 0, 348, 350, 0, 1228, 136, 0, 0,
	0, 529, 0, 557, 0, 0, 0, 0, 0, 0,
	160, 456, 589, 590, 591, 592, 593, 594, 595, 596,
	0, 351, 0, 0, 0, 351, 351, 351, 601, 342,
	0, 0, 585, 582, 473, 0, 198, 199, 201, 0,
	0, 475, 820, 1138, 1139, 1140, 0, 1150, 1154, 124,
	0, 0, 0, 0, 614, 615, 616, 93, 624, 630,
	739, 759, 884, 892, 896, 0, 928, 1073, 333, 1076,
	1077, 1079, 1081, 1082, 1084, 1085, 929, 930, 0, 967,
	0, 969, 1116, 0, 1094, 0, 0, 981, 0, 0,
	0, 990, 991, 992, 0, 0, 998, 0, 1000, 0,
	0, 0, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 963, 0, 0, 0, 0, 844, -2, 62,
	1103, 1105, 0, 1165, 1163, 1163, 1173, 1174, 0, 0,
	1181, 0, 0, 0, 0, 82, 0, 0, 0, 1201,
	0, 0, 0, 0, 99, 1107, 832, 839, 0, 0,
	833, 0, 834, 854, 856, 813, -2, 817, 0, 876,
	876, 88, 89, 0, 174, 0, 176, 191, 192, 0,
	179, 181, 182, 267, 269, 0, 0, 309, 320, 310,
	0, 0, 400, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	820, 137, 138, 139, 521, 0, 531, 0, 0, 0,
	524, 0, 462, 0, 0, 0, 351, 351, 351, 0,
	0, 0, 0, 562, 0, 570, 0, 0, 0, 202,
	203, 0, 1149, 507, 0, 122, 123, 0, 0, 512,
	1062, 1074, 0, 0, 0, 1091, 0, 0, 0, 0,
	988, 996, 0, 1027, 0, 1003, 0, 0, 0, 551,
	552, 0, 1023, 0, 873, 0, 0, 0, 0, 864,
	1105, 80, 0, 0, 1168, 0, 1161, 1164, 1162, 1175,
	0, 0, 1182, 0, 1184, 0, 1205, 1206, 1199, 0,
	1191, 1194, 1190, 1193, 1116, 836, 0, 841, 0, 1107,
	87, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 327, 0,
	0, 0, 522, 0, 534, 525, 0, 599, 0, 603,
	0, 0, 0, 606, 607, 608, 379, 586, 583, 584,
	474, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	966, 968, 970, 979, 980, 1071, 1072, 997, 1001, 0,
	1004, 0, 0, 1005, 0, 553, 0, 869, 826, 827,
	874, 875, 0, 0, 819, 79, 1106, 1104, 1157, 0,
	1166, 1167, 1176, 1177, 1183, 0, 1189, 0, 85, 0,
	0, 0, 1116, 175, 0, 185, 0, 530, 0, 533,
	523, 597, 598, 0, 610, 602, 604, 605, 1141, 0,
	0, 0, 514, 927, 0, 0, 0, 1024, 1006, 0,
	549, 550, 0, 868, 870, 871, 1169, 1170, 1197, 1195,
	837, 844, 0, 86, 380, 385, 1141, 0, 0, 0,
	504, 1143, 127, 128, 448, 449, 450, 121, 1063, 0,
	1066, 0, 828, 829, 535, 0, 537, 0, -2, 381,
	382, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 611, 0, 1144, 1145, 124, 1064, 1002,
	536, 0, 0, 339, 0, 546, 383, 0, 384, 0,
	0, 0, 188, 189, 558, 0, 0, 511, 0, 538,
	539, 547, 0, 388, 390, 391, 0, 0, 389, 527,
	0, 558, 1142, 0, 0, 548, 544, 392, 393, 394,
	559, 528, 1065, 0, 540, 541, 542, 543,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 597,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:929
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1038
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1091
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1098
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1127
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1134
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1166
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1215
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1221
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1231
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1236
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1245
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1269
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1278
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1341
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1361
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1470
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1719
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1723
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1954
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1971
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2053
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2068
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2078
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2082
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2087
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2091
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2107
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2111
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2115
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2119
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2123
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2191
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2201
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2205
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2211
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2215
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2221
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2225
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2231
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2237
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2241
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2245
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2249
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2253
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2262
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2268
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2274
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2280
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2286
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2290
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2294
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2298
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2302
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2324
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2328
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2337
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2343
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2357
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2467
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2471
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2475
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2539
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2548
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2552
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2556
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2564
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2570
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2578
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2678
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2682
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2708
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2720
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2733
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2828
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2867
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2878
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2887
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2895
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2904
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2911
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2923
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2932
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2947
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2961
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2965
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2971
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2977
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2983
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2993
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2997
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3003
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3009
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3015
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3021
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3045
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3051
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3057
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3061
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3065
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3071
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3075
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3080
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3084
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3089
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3093
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3099
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3103
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3107
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3111
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3115
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3119
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3123
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3171
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3175
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3179
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3183
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3203
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3218
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3222
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3227
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3232
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3237
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3242
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3247
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3253
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3259
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3266
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3273
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3280
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3298
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3304
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3310
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3316
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3322
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3328
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3340
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3362
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3366
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3506
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = "extended "
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3625
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3629
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3649
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3663
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3667
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3677
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.empty = struct{}{}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.empty = struct{}{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.empty = struct{}{}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3769
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3773
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3777
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3781
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3785
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3789
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = yyDollar[1].str
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3866
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3876
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3882
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3886
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3890
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3894
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			setAllowComments(yylex, true)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4023
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4029
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.str = SQLCacheStr
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4104
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4123
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.strs = nil
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4144
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = SQLCacheStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = DistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = DistinctStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = StraightJoinHint
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4180
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4184
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4190
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4194
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4198
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4202
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4227
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4231
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4237
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4243
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4247
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4257
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4261
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4265
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4269
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4275
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4279
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4285
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4289
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4298
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4304
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4314
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4324
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4328
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4342
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4359
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4363
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4367
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4371
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4377
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4379
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4420
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4424
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4428
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4434
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4440
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4444
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4448
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4452
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4458
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4462
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4501
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4507
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4517
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4521
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4525
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4529
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4534
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4538
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4542
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4546
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4556
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4784
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4796
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4808
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4814
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4818
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4822
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4838
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4842
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4849
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4853
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4857
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4861
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4867
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4871
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4875
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4879
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4883
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4887
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4891
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4897
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4901
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4905
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4912
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4918
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5201
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5210
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5216
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5220
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5238
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5242
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5246
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5250
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5254
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5258
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5262
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5266
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5270
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5278
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5284
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5288
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5292
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5296
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5300
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5304
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5308
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5312
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5316
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5371
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5375
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5379
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5383
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5387
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5421
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5425
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5463
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5467
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5475
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5479
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = string("")
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5504
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5508
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5514
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5529
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5533
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5537
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5566
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5584
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5590
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5596
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5600
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5606
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5611
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5615
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5619
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5628
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5634
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5638
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5642
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5651
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5655
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5659
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5663
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5670
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5674
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5678
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5682
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5688
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5692
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5696
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = ""
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5728
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5732
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = ""
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = "cascaded"
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5763
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5769
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5775
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5781
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5799
		{
			yyVAL.str = ""
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5809
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5813
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5819
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5823
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5827
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5840
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = ""
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = " header"
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5854
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = " manifest on"
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = " manifest off"
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = " overwrite on"
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.str = " overwrite off"
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5896
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5906
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5910
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = ""
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5919
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5939
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5943
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = " optionally"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5965
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5969
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5973
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5977
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5981
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5987
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5991
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5999
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6008
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6014
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6024
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6028
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6034
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6049
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6053
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6059
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6065
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6069
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6075
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6079
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6083
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6087
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6091
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = "charset"
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6126
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6128
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6131
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6136
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6146
		{
			yyVAL.empty = struct{}{}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.empty = struct{}{}
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.empty = struct{}{}
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6154
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6163
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6170
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6174
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6184
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6201
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6207
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6729
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			decNesting(yylex)
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6743
		{
			skipToEnd(yylex)
		}
	case 1739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6748
		{
			skipToEnd(yylex)
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6752
		{
			skipToEnd(yylex)
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6756
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
