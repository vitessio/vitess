// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const ADDDATE = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_DATE = 57750
const CURDATE = 57751
const DATE_ADD = 57752
const DATE_SUB = 57753
const NOW = 57754
const SUBDATE = 57755
const CURTIME = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const CURRENT_USER = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const SYSDATE = 57764
const DAY = 57765
const DAY_HOUR = 57766
const DAY_MICROSECOND = 57767
const DAY_MINUTE = 57768
const DAY_SECOND = 57769
const HOUR = 57770
const HOUR_MICROSECOND = 57771
const HOUR_MINUTE = 57772
const HOUR_SECOND = 57773
const MICROSECOND = 57774
const MINUTE = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const MONTH = 57778
const QUARTER = 57779
const SECOND = 57780
const SECOND_MICROSECOND = 57781
const YEAR_MONTH = 57782
const WEEK = 57783
const SQL_TSI_DAY = 57784
const SQL_TSI_WEEK = 57785
const SQL_TSI_HOUR = 57786
const SQL_TSI_MINUTE = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MICROSECOND = 57791
const SQL_TSI_YEAR = 57792
const REPLACE = 57793
const CONVERT = 57794
const CAST = 57795
const SUBSTR = 57796
const SUBSTRING = 57797
const SEPARATOR = 57798
const TIMESTAMPADD = 57799
const TIMESTAMPDIFF = 57800
const WEIGHT_STRING = 57801
const LTRIM = 57802
const RTRIM = 57803
const TRIM = 57804
const JSON_ARRAY = 57805
const JSON_OBJECT = 57806
const JSON_QUOTE = 57807
const JSON_DEPTH = 57808
const JSON_TYPE = 57809
const JSON_LENGTH = 57810
const JSON_VALID = 57811
const JSON_ARRAY_APPEND = 57812
const JSON_ARRAY_INSERT = 57813
const JSON_INSERT = 57814
const JSON_MERGE = 57815
const JSON_MERGE_PATCH = 57816
const JSON_MERGE_PRESERVE = 57817
const JSON_REMOVE = 57818
const JSON_REPLACE = 57819
const JSON_SET = 57820
const JSON_UNQUOTE = 57821
const COUNT = 57822
const AVG = 57823
const MAX = 57824
const MIN = 57825
const SUM = 57826
const GROUP_CONCAT = 57827
const BIT_AND = 57828
const BIT_OR = 57829
const BIT_XOR = 57830
const STD = 57831
const STDDEV = 57832
const STDDEV_POP = 57833
const STDDEV_SAMP = 57834
const VAR_POP = 57835
const VAR_SAMP = 57836
const VARIANCE = 57837
const ANY_VALUE = 57838
const REGEXP_INSTR = 57839
const REGEXP_LIKE = 57840
const REGEXP_REPLACE = 57841
const REGEXP_SUBSTR = 57842
const ExtractValue = 57843
const UpdateXML = 57844
const GET_LOCK = 57845
const RELEASE_LOCK = 57846
const RELEASE_ALL_LOCKS = 57847
const IS_FREE_LOCK = 57848
const IS_USED_LOCK = 57849
const LOCATE = 57850
const POSITION = 57851
const ST_GeometryCollectionFromText = 57852
const ST_GeometryFromText = 57853
const ST_LineStringFromText = 57854
const ST_MultiLineStringFromText = 57855
const ST_MultiPointFromText = 57856
const ST_MultiPolygonFromText = 57857
const ST_PointFromText = 57858
const ST_PolygonFromText = 57859
const ST_GeometryCollectionFromWKB = 57860
const ST_GeometryFromWKB = 57861
const ST_LineStringFromWKB = 57862
const ST_MultiLineStringFromWKB = 57863
const ST_MultiPointFromWKB = 57864
const ST_MultiPolygonFromWKB = 57865
const ST_PointFromWKB = 57866
const ST_PolygonFromWKB = 57867
const ST_AsBinary = 57868
const ST_AsText = 57869
const ST_Dimension = 57870
const ST_Envelope = 57871
const ST_IsSimple = 57872
const ST_IsEmpty = 57873
const ST_GeometryType = 57874
const ST_X = 57875
const ST_Y = 57876
const ST_Latitude = 57877
const ST_Longitude = 57878
const ST_EndPoint = 57879
const ST_IsClosed = 57880
const ST_Length = 57881
const ST_NumPoints = 57882
const ST_StartPoint = 57883
const ST_PointN = 57884
const ST_Area = 57885
const ST_Centroid = 57886
const ST_ExteriorRing = 57887
const ST_InteriorRingN = 57888
const ST_NumInteriorRings = 57889
const ST_NumGeometries = 57890
const ST_GeometryN = 57891
const ST_LongFromGeoHash = 57892
const ST_PointFromGeoHash = 57893
const ST_LatFromGeoHash = 57894
const ST_GeoHash = 57895
const ST_AsGeoJSON = 57896
const ST_GeomFromGeoJSON = 57897
const MATCH = 57898
const AGAINST = 57899
const BOOLEAN = 57900
const LANGUAGE = 57901
const WITH = 57902
const QUERY = 57903
const EXPANSION = 57904
const WITHOUT = 57905
const VALIDATION = 57906
const UNUSED = 57907
const ARRAY = 57908
const BYTE = 57909
const CUME_DIST = 57910
const DESCRIPTION = 57911
const DENSE_RANK = 57912
const EMPTY = 57913
const EXCEPT = 57914
const FIRST_VALUE = 57915
const GROUPING = 57916
const GROUPS = 57917
const JSON_TABLE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LATERAL = 57921
const LEAD = 57922
const NTH_VALUE = 57923
const NTILE = 57924
const OF = 57925
const OVER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const RECURSIVE = 57929
const ROW_NUMBER = 57930
const SYSTEM = 57931
const WINDOW = 57932
const ACTIVE = 57933
const ADMIN = 57934
const AUTOEXTEND_SIZE = 57935
const BUCKETS = 57936
const CLONE = 57937
const COLUMN_FORMAT = 57938
const COMPONENT = 57939
const DEFINITION = 57940
const ENFORCED = 57941
const ENGINE_ATTRIBUTE = 57942
const EXCLUDE = 57943
const FOLLOWING = 57944
const GET_MASTER_PUBLIC_KEY = 57945
const HISTOGRAM = 57946
const HISTORY = 57947
const INACTIVE = 57948
const INVISIBLE = 57949
const LOCKED = 57950
const MASTER_COMPRESSION_ALGORITHMS = 57951
const MASTER_PUBLIC_KEY_PATH = 57952
const MASTER_TLS_CIPHERSUITES = 57953
const MASTER_ZSTD_COMPRESSION_LEVEL = 57954
const NESTED = 57955
const NETWORK_NAMESPACE = 57956
const NOWAIT = 57957
const NULLS = 57958
const OJ = 57959
const OLD = 57960
const OPTIONAL = 57961
const ORDINALITY = 57962
const ORGANIZATION = 57963
const OTHERS = 57964
const PARTIAL = 57965
const PATH = 57966
const PERSIST = 57967
const PERSIST_ONLY = 57968
const PRECEDING = 57969
const PRIVILEGE_CHECKS_USER = 57970
const PROCESS = 57971
const RANDOM = 57972
const REFERENCE = 57973
const REQUIRE_ROW_FORMAT = 57974
const RESOURCE = 57975
const RESPECT = 57976
const RESTART = 57977
const RETAIN = 57978
const REUSE = 57979
const ROLE = 57980
const SECONDARY = 57981
const SECONDARY_ENGINE = 57982
const SECONDARY_ENGINE_ATTRIBUTE = 57983
const SECONDARY_LOAD = 57984
const SECONDARY_UNLOAD = 57985
const SIMPLE = 57986
const SKIP = 57987
const SRID = 57988
const THREAD_PRIORITY = 57989
const TIES = 57990
const UNBOUNDED = 57991
const VCPU = 57992
const VISIBLE = 57993
const RETURNING = 57994
const FORMAT_BYTES = 57995
const FORMAT_PICO_TIME = 57996
const PS_CURRENT_THREAD_ID = 57997
const PS_THREAD_ID = 57998
const GTID_SUBSET = 57999
const GTID_SUBTRACT = 58000
const WAIT_FOR_EXECUTED_GTID_SET = 58001
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58002
const FORMAT = 58003
const TREE = 58004
const VITESS = 58005
const TRADITIONAL = 58006
const VTEXPLAIN = 58007
const VEXPLAIN = 58008
const PLAN = 58009
const LOCAL = 58010
const LOW_PRIORITY = 58011
const NO_WRITE_TO_BINLOG = 58012
const LOGS = 58013
const ERROR = 58014
const GENERAL = 58015
const HOSTS = 58016
const OPTIMIZER_COSTS = 58017
const USER_RESOURCES = 58018
const SLOW = 58019
const CHANNEL = 58020
const RELAY = 58021
const EXPORT = 58022
const CURRENT = 58023
const ROW = 58024
const ROWS = 58025
const AVG_ROW_LENGTH = 58026
const CONNECTION = 58027
const CHECKSUM = 58028
const DELAY_KEY_WRITE = 58029
const ENCRYPTION = 58030
const ENGINE = 58031
const INSERT_METHOD = 58032
const MAX_ROWS = 58033
const MIN_ROWS = 58034
const PACK_KEYS = 58035
const PASSWORD = 58036
const FIXED = 58037
const DYNAMIC = 58038
const COMPRESSED = 58039
const REDUNDANT = 58040
const COMPACT = 58041
const ROW_FORMAT = 58042
const STATS_AUTO_RECALC = 58043
const STATS_PERSISTENT = 58044
const STATS_SAMPLE_PAGES = 58045
const STORAGE = 58046
const MEMORY = 58047
const DISK = 58048
const PARTITIONS = 58049
const LINEAR = 58050
const RANGE = 58051
const LIST = 58052
const SUBPARTITION = 58053
const SUBPARTITIONS = 58054
const HASH = 58055

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	731, 158,
	-2, 166,
	-1, 52,
	135, 166,
	177, 166,
	346, 166,
	-2, 522,
	-1, 60,
	36, 771,
	240, 771,
	251, 771,
	286, 785,
	287, 785,
	-2, 773,
	-1, 65,
	242, 809,
	-2, 807,
	-1, 120,
	239, 1584,
	-2, 132,
	-1, 122,
	1, 159,
	731, 159,
	-2, 166,
	-1, 133,
	136, 407,
	245, 407,
	-2, 511,
	-1, 152,
	135, 166,
	177, 166,
	346, 166,
	-2, 531,
	-1, 731,
	163, 40,
	-2, 44,
	-1, 937,
	87, 1601,
	-2, 1455,
	-1, 938,
	87, 1602,
	222, 1606,
	-2, 1456,
	-1, 939,
	222, 1605,
	-2, 41,
	-1, 1019,
	60, 883,
	-2, 898,
	-1, 1106,
	250, 42,
	255, 42,
	-2, 418,
	-1, 1191,
	1, 579,
	731, 579,
	-2, 166,
	-1, 1492,
	222, 1606,
	-2, 1456,
	-1, 1700,
	60, 884,
	-2, 903,
	-1, 1701,
	60, 885,
	-2, 904,
	-1, 1752,
	135, 166,
	177, 166,
	346, 166,
	-2, 457,
	-1, 1833,
	136, 407,
	245, 407,
	-2, 511,
	-1, 1842,
	250, 43,
	255, 43,
	-2, 419,
	-1, 2279,
	222, 1610,
	-2, 1604,
	-1, 2280,
	222, 1606,
	-2, 1602,
	-1, 2380,
	135, 166,
	177, 166,
	346, 166,
	-2, 458,
	-1, 2387,
	26, 187,
	-2, 189,
	-1, 2840,
	78, 97,
	88, 97,
	-2, 962,
	-1, 2909,
	706, 695,
	-2, 669,
	-1, 3116,
	50, 1552,
	-2, 1546,
	-1, 3930,
	706, 695,
	-2, 683,
	-1, 4017,
	90, 627,
	95, 627,
	105, 627,
	179, 627,
	180, 627,
	181, 627,
	182, 627,
	183, 627,
	184, 627,
	185, 627,
	186, 627,
	187, 627,
	188, 627,
	189, 627,
	190, 627,
	191, 627,
	192, 627,
	193, 627,
	194, 627,
	195, 627,
	196, 627,
	197, 627,
	198, 627,
	199, 627,
	200, 627,
	201, 627,
	202, 627,
	203, 627,
	204, 627,
	205, 627,
	206, 627,
	207, 627,
	208, 627,
	209, 627,
	210, 627,
	211, 627,
	212, 627,
	213, 627,
	214, 627,
	215, 627,
	216, 627,
	217, 627,
	218, 627,
	219, 627,
	220, 627,
	-2, 1968,
}

const yyPrivate = 57344

const yyLast = 55033

var yyAct = [...]int{
	953, 3592, 3593, 85, 3591, 4092, 3911, 3996, 3266, 4105,
	941, 4060, 4059, 1258, 948, 1961, 940, 2073, 3543, 2377,
	3984, 3895, 4015, 3226, 3168, 3175, 3231, 3394, 3820, 3228,
	2085, 2308, 3227, 3225, 1755, 3230, 1256, 3217, 3129, 3893,
	3229, 3530, 2736, 2310, 3246, 3183, 2451, 3961, 3069, 2016,
	3245, 735, 5, 3133, 3130, 3439, 3433, 3630, 2972, 2332,
	3117, 2800, 902, 901, 762, 730, 3248, 2348, 906, 2874,
	3127, 41, 2954, 1811, 2414, 1715, 3272, 2906, 2439, 2419,
	2351, 1068, 2875, 2482, 1017, 2876, 85, 161, 2365, 2352,
	1036, 1014, 1858, 1702, 2353, 3459, 2825, 42, 2806, 1114,
	2776, 1138, 40, 2231, 2792, 1017, 2024, 2275, 2230, 2263,
	2069, 2108, 2946, 2460, 2438, 2813, 1840, 147, 2421, 2867,
	1078, 1101, 1096, 2340, 2499, 1744, 2842, 1724, 2355, 1682,
	1504, 2112, 102, 103, 2044, 98, 2328, 1431, 1416, 1847,
	729, 1075, 1072, 1957, 3425, 745, 3132, 1107, 2436, 1076,
	1939, 2410, 1016, 1102, 1020, 1103, 1104, 2411, 1743, 1053,
	1729, 1055, 1026, 3625, 2181, 1488, 2139, 1035, 2120, 1464,
	3883, 1023, 2774, 1038, 83, 2015, 1247, 105, 2276, 740,
	1968, 2333, 125, 1022, 165, 1806, 123, 130, 1021, 1012,
	124, 131, 1187, 1832, 1048, 720, 903, 733, 1024, 732,
	739, 97, 96, 4093, 1254, 1233, 1508, 3531, 82, 2453,
	2454, 2455, 1513, 3214, 2453, 3946, 2929, 2928, 104, 91,
	2897, 1043, 1047, 2497, 1924, 3523, 4042, 2962, 2963, 3941,
	3942, 2305, 2306, 1029, 1118, 3486, 126, 2031, 2030, 1069,
	1143, 3947, 665, 2029, 1678, 2028, 132, 2027, 2026, 1999,
	1203, 1140, 723, 2544, 724, 4036, 1151, 2772, 3113, 4063,
	1427, 1085, 3073, 1080, 1157, 1158, 1159, 721, 1162, 1163,
	1164, 1165, 4115, 2486, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1117, 1015, 3596, 1062, 1204, 1063, 2, 4098, 3920,
	1030, 1013, 4058, 2899, 2802, 1092, 93, 126, 1093, 1091,
	1144, 1147, 1148, 1090, 3236, 4083, 3596, 2485, 725, 4046,
	705, 4044, 3399, 4097, 1037, 3398, 93, 3233, 705, 2922,
	3942, 3896, 2737, 2036, 3236, 3291, 93, 1448, 3816, 3815,
	907, 109, 110, 111, 4045, 114, 4043, 1160, 120, 699,
	188, 189, 1142, 1141, 659, 2047, 93, 3536, 4073, 4040,
	3537, 3826, 1061, 1065, 905, 3555, 718, 719, 2919, 1418,
	3234, 3544, 699, 1709, 127, 126, 1008, 1009, 1010, 1011,
	3595, 3985, 1019, 84, 3993, 2479, 3825, 170, 2078, 3311,
	3234, 1094, 4020, 957, 958, 959, 3240, 1821, 2773, 957,
	958, 959, 3171, 3595, 3165, 3166, 699, 2816, 84, 3164,
	1050, 1051, 1061, 1065, 905, 696, 3240, 2851, 84, 2961,
	2850, 2484, 2550, 2852, 2372, 2373, 2945, 2553, 2008, 2009,
	2856, 2371, 2817, 1089, 1251, 1196, 1197, 1745, 1223, 1746,
	1228, 1229, 3997, 167, 1006, 2430, 168, 3172, 1005, 1211,
	1211, 1186, 4025, 3912, 1212, 1212, 699, 3643, 2863, 3268,
	3554, 93, 1210, 681, 1209, 2390, 2389, 1199, 2424, 187,
	4023, 3174, 1445, 1428, 1446, 1447, 679, 2809, 2810, 4029,
	4030, 2148, 3007, 699, 3299, 1964, 93, 3185, 3186, 3169,
	699, 1087, 2551, 3925, 4024, 84, 93, 3297, 86, 699,
	2542, 1224, 2307, 2007, 713, 2011, 3185, 3186, 717, 3237,
	1741, 4064, 1240, 3170, 1242, 711, 676, 1217, 4001, 3273,
	1945, 2947, 2907, 1686, 4001, 691, 2336, 2461, 1914, 3237,
	2973, 1417, 4065, 3867, 3261, 3868, 4095, 1465, 2500, 2932,
	686, 1161, 3262, 1940, 1230, 1226, 1227, 3176, 1249, 1250,
	689, 3269, 1239, 1241, 1231, 2505, 3270, 1244, 2949, 3288,
	700, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1473,
	1475, 1476, 1915, 93, 1916, 2545, 2546, 2548, 2547, 2140,
	1232, 1192, 171, 700, 2142, 3525, 2502, 1054, 2147, 2143,
	3524, 177, 2144, 2145, 2146, 1225, 3184, 2141, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2523, 3187, 1167,
	2506, 1218, 1166, 3800, 2975, 3184, 2423, 700, 666, 1088,
	668, 682, 1965, 702, 2504, 701, 672, 3187, 670, 674,
	683, 675, 2520, 669, 2521, 680, 2522, 3521, 671, 684,
	685, 688, 692, 693, 694, 690, 687, 3008, 678, 703,
	2464, 4037, 2900, 1097, 2936, 2937, 3600, 1098, 1237, 2349,
	1479, 1825, 1238, 1098, 1136, 1135, 2503, 700, 1134, 1133,
	3072, 1132, 1243, 2512, 2508, 2510, 2511, 2509, 2513, 2514,
	1131, 1064, 1058, 1056, 2985, 2984, 2983, 1130, 1129, 2977,
	1124, 2981, 1689, 2976, 700, 2974, 1255, 1236, 1255, 1255,
	2979, 700, 1137, 3187, 4116, 4070, 1073, 1146, 3436, 2978,
	700, 1110, 1073, 1109, 1073, 162, 1071, 1145, 2334, 2335,
	1109, 1958, 2437, 1049, 2950, 1819, 2490, 2980, 2982, 2489,
	1954, 1064, 1058, 1056, 1948, 1742, 1946, 1947, 1419, 1949,
	1950, 1154, 3207, 3173, 2931, 1818, 2966, 1817, 1017, 1489,
	1494, 1495, 3520, 1498, 1500, 1501, 1502, 1503, 2917, 1506,
	1507, 1509, 1509, 1955, 1509, 1509, 1514, 1514, 1514, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1245, 3919, 1486, 2483, 1639, 2898, 1641, 1642, 1643,
	1644, 1645, 1410, 1411, 1926, 1925, 1927, 1928, 1929, 1514,
	1514, 1514, 1514, 1514, 1514, 3484, 3485, 1409, 954, 1095,
	1426, 1198, 704, 1195, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 954, 1482,
	1483, 1484, 1485, 697, 2427, 1490, 1432, 2901, 954, 1496,
	3594, 92, 163, 1499, 87, 1679, 1057, 1432, 698, 175,
	2921, 3553, 1207, 3999, 1213, 1214, 1215, 1216, 1510, 3999,
	1511, 1512, 1208, 3594, 3289, 4028, 92, 3238, 3239, 1515,
	1516, 2552, 1127, 3177, 2428, 1190, 92, 3181, 1252, 1253,
	3242, 2426, 1479, 1084, 3180, 3998, 1086, 3238, 3239, 2934,
	183, 3998, 3382, 1708, 2920, 3437, 1057, 1846, 1685, 1125,
	3242, 2551, 1116, 1815, 1017, 663, 4109, 658, 1017, 4027,
	1944, 2481, 1676, 4038, 1017, 2429, 1116, 2944, 3182, 699,
	2943, 1480, 1481, 3178, 2953, 2425, 1153, 1116, 3179, 1221,
	2777, 2779, 3908, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 1442, 3473, 1677, 3455, 2847, 182,
	184, 185, 186, 92, 2812, 1442, 2749, 2081, 1733, 1640,
	1201, 3081, 2336, 3080, 1116, 122, 2807, 664, 2565, 2378,
	1476, 1479, 1692, 3163, 2576, 1116, 1696, 1459, 1709, 1032,
	1234, 1969, 1016, 1248, 2993, 1089, 117, 1081, 1471, 1472,
	1474, 1473, 1475, 1476, 1083, 1082, 3933, 1694, 1695, 1139,
	3516, 102, 103, 2121, 3449, 1115, 1845, 1206, 2501, 2020,
	1677, 1646, 1647, 1648, 1649, 1650, 1651, 2122, 1951, 1115,
	1128, 1747, 2113, 2890, 1683, 1109, 1112, 1113, 4074, 1073,
	1115, 1089, 1185, 1106, 1110, 1119, 1109, 1116, 1447, 1670,
	1121, 1448, 3639, 1087, 1122, 1120, 105, 1126, 2113, 3491,
	2585, 3490, 1438, 2468, 1105, 1430, 2576, 1855, 118, 1941,
	1854, 1942, 1844, 1438, 1943, 1123, 2956, 1115, 1446, 1447,
	1690, 2955, 2478, 1109, 1112, 1113, 1838, 1073, 1115, 2476,
	1127, 1106, 1110, 1119, 1109, 1822, 1823, 1824, 1121, 2956,
	1680, 1125, 1122, 1120, 2955, 1693, 1189, 4117, 2778, 2473,
	3963, 4066, 1848, 1848, 1909, 1963, 2480, 1860, 1831, 1861,
	2473, 1863, 1865, 1711, 1714, 1869, 1871, 1873, 1875, 1877,
	1891, 1850, 1015, 1691, 1013, 3901, 4107, 1235, 1970, 4108,
	700, 4106, 3474, 1220, 1255, 1738, 1739, 2268, 2477, 2105,
	1115, 1028, 1152, 1849, 1222, 3964, 1149, 2119, 4111, 2475,
	1205, 2049, 1899, 1900, 2334, 2335, 1191, 3808, 1905, 1906,
	3807, 3265, 1814, 3798, 1465, 2050, 1477, 1478, 2048, 1934,
	3902, 1088, 1448, 2557, 2558, 2559, 1445, 1829, 1446, 1447,
	1448, 1827, 1841, 1828, 4118, 2995, 1448, 3566, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476, 3306,
	3565, 1188, 1448, 3550, 1852, 3551, 1697, 1467, 1468, 1469,
	1470, 1471, 1472, 1474, 1473, 1475, 1476, 1088, 1469, 1470,
	1471, 1472, 1474, 1473, 1475, 1476, 1895, 957, 958, 959,
	3498, 1887, 1959, 1933, 1890, 1448, 1892, 2097, 2086, 2087,
	2088, 2089, 2099, 2090, 2091, 2092, 2104, 2100, 2093, 2094,
	2101, 2102, 2103, 2095, 2096, 2098, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1450, 1092, 1709, 126, 3497, 1091, 1932,
	4079, 1709, 1090, 1820, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1474, 1473, 1475, 1476, 2268, 4077, 1709, 1709, 2265,
	1975, 1921, 1448, 3487, 1413, 2118, 3215, 1448, 2267, 1255,
	1255, 3203, 2872, 2871, 2870, 1971, 1972, 1445, 2620, 1446,
	1447, 1997, 952, 85, 2433, 1445, 85, 1446, 1447, 1976,
	1709, 1445, 1935, 1446, 1447, 1919, 1983, 1984, 1985, 2038,
	2040, 2041, 1918, 1931, 1917, 1907, 1901, 1445, 1996, 1446,
	1447, 1898, 1897, 188, 1896, 1867, 1437, 1434, 1435, 1436,
	1441, 1443, 1440, 2039, 1439, 1920, 705, 1437, 1434, 1435,
	1436, 1441, 1443, 1440, 1433, 1439, 2105, 127, 2865, 1741,
	1445, 1718, 1446, 1447, 4067, 1433, 4007, 1709, 1709, 108,
	170, 41, 1709, 3921, 41, 2076, 2076, 2074, 2074, 2077,
	107, 3928, 106, 3481, 705, 2854, 705, 3927, 1448, 2449,
	2448, 101, 3905, 1973, 1448, 108, 3904, 2042, 2447, 2446,
	1977, 3903, 1979, 1980, 1981, 1982, 107, 1719, 106, 1986,
	3803, 1465, 2341, 2342, 1461, 3834, 1462, 1445, 3787, 1446,
	1447, 1998, 1445, 99, 1446, 1447, 167, 2445, 2444, 168,
	1463, 1477, 1478, 1460, 100, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1474, 1473, 1475, 1476, 3786, 2159, 3638, 1676,
	1709, 3833, 187, 3636, 2097, 2086, 2087, 2088, 2089, 2099,
	2090, 2091, 2092, 2104, 2100, 2093, 2094, 2101, 2102, 2103,
	2095, 2096, 2098, 1465, 83, 2965, 1709, 83, 4005, 1709,
	2622, 2021, 3562, 1677, 2798, 4094, 2046, 1448, 1465, 1709,
	1444, 1709, 3791, 2004, 2005, 4054, 1709, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476, 1444, 1709,
	2624, 2051, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474,
	1473, 1475, 1476, 1445, 1448, 1446, 1447, 1675, 1448, 1445,
	1674, 1446, 1447, 1673, 2279, 2080, 2278, 1448, 2798, 3992,
	3790, 2053, 2052, 3495, 2054, 2055, 2056, 2057, 2058, 2059,
	2061, 2063, 2064, 2065, 2066, 2067, 2068, 2277, 1448, 3480,
	2107, 2109, 1465, 3274, 2564, 171, 1490, 2123, 2124, 2125,
	2126, 4003, 1709, 1465, 177, 2264, 2798, 3971, 2798, 3967,
	3542, 2137, 2158, 2114, 3954, 1709, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1474, 1473, 1475, 1476, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476, 3880, 1709,
	2908, 2574, 3878, 1709, 3534, 3918, 3811, 1709, 2886, 2357,
	3271, 2573, 1445, 2386, 1446, 1447, 2173, 2279, 1448, 2346,
	2282, 2283, 3206, 99, 2798, 3799, 3448, 1448, 3534, 1709,
	101, 3205, 3875, 1709, 100, 2798, 3532, 102, 103, 2881,
	2277, 2473, 1709, 2266, 2868, 2387, 1448, 3453, 1709, 1445,
	1448, 1446, 1447, 1445, 1672, 1446, 1447, 102, 103, 2171,
	2704, 1709, 1445, 2533, 1446, 1447, 2324, 2532, 2612, 2182,
	2495, 2045, 3196, 3195, 93, 1448, 2494, 2359, 3193, 3194,
	4033, 1078, 2331, 1445, 2313, 1446, 1447, 2000, 162, 1709,
	2281, 3191, 3192, 2284, 2285, 1966, 2396, 2397, 2398, 2399,
	3191, 3190, 3857, 1709, 2391, 2382, 2392, 2393, 2394, 2395,
	2381, 3424, 1709, 1448, 1078, 1930, 2363, 1029, 2822, 1709,
	2312, 101, 2402, 2403, 2404, 2405, 2551, 2930, 1810, 2911,
	1448, 2318, 2814, 2319, 3417, 1709, 2904, 2905, 2843, 2255,
	2256, 2257, 2258, 2259, 1922, 2385, 2326, 1448, 2323, 2300,
	2416, 1912, 1448, 1445, 2462, 1446, 1447, 1908, 2422, 3414,
	1709, 2344, 1445, 1904, 1446, 1447, 2798, 2797, 1448, 1903,
	2368, 2369, 2367, 2578, 1709, 2079, 1709, 2384, 1902, 2383,
	1709, 1445, 1720, 1446, 1447, 1445, 1448, 1446, 1447, 2459,
	1062, 1246, 1063, 1444, 2302, 1810, 1809, 3412, 1709, 3158,
	2182, 2844, 1753, 1752, 2822, 2432, 1118, 1448, 107, 2551,
	1445, 2846, 1446, 1447, 3374, 1709, 1848, 1448, 2821, 2417,
	188, 2814, 3450, 3959, 1448, 2413, 2794, 2406, 2408, 2409,
	2431, 2467, 4068, 1448, 2470, 2435, 2471, 3916, 3932, 2443,
	2474, 101, 2487, 1448, 127, 2798, 149, 2843, 1445, 1448,
	1446, 1447, 3372, 1709, 2417, 2466, 2469, 170, 1448, 2465,
	2822, 3403, 1448, 1117, 3193, 1445, 1448, 1446, 1447, 3101,
	3368, 1709, 1448, 2822, 2370, 2488, 2491, 1444, 2578, 2704,
	2492, 2493, 1445, 2609, 1446, 1447, 3128, 1445, 160, 1446,
	1447, 3365, 1709, 3448, 148, 1710, 1712, 3448, 2473, 2578,
	3218, 3363, 1709, 1445, 2608, 1446, 1447, 2556, 3361, 1709,
	2844, 2473, 2456, 167, 2498, 2339, 168, 3359, 1709, 1713,
	2551, 1445, 2303, 1446, 1447, 163, 2079, 3357, 1709, 2022,
	2006, 1500, 175, 1500, 3795, 136, 137, 159, 158, 187,
	1953, 1740, 1445, 3517, 1446, 1447, 3355, 1709, 1100, 2568,
	3353, 1709, 1445, 1099, 1446, 1447, 3351, 1709, 1018, 1445,
	3974, 1446, 1447, 1448, 3822, 2279, 1716, 2278, 1445, 2526,
	1446, 1447, 1448, 183, 3788, 3650, 3515, 3512, 1445, 3493,
	1446, 1447, 3316, 3315, 1445, 1448, 1446, 1447, 2571, 1448,
	1812, 2415, 3263, 1445, 3220, 1446, 1447, 1445, 1448, 1446,
	1447, 1445, 3216, 1446, 1447, 2912, 1448, 1445, 2412, 1446,
	1447, 2407, 1448, 2401, 3499, 2541, 164, 169, 166, 172,
	173, 174, 176, 178, 179, 180, 181, 1448, 2400, 1937,
	2549, 1448, 182, 184, 185, 186, 93, 1843, 1839, 153,
	134, 156, 141, 133, 1448, 154, 155, 3349, 1709, 1808,
	119, 2878, 171, 2560, 2877, 1448, 3347, 1709, 1190, 3466,
	4089, 177, 142, 2002, 2046, 3500, 3501, 3502, 1448, 3345,
	1709, 3267, 1448, 3343, 1709, 3823, 145, 143, 138, 139,
	140, 144, 3341, 1709, 3460, 3461, 1448, 2430, 135, 2316,
	3339, 1709, 1448, 4087, 4061, 3940, 3829, 146, 1445, 1448,
	1446, 1447, 2878, 1448, 3936, 3862, 3463, 1445, 3212, 1446,
	1447, 3337, 1709, 2584, 3211, 3335, 1709, 3465, 2562, 2561,
	1445, 2563, 1446, 1447, 1445, 2003, 1446, 1447, 3321, 1709,
	2566, 3210, 2567, 1445, 1448, 1446, 1447, 2535, 2536, 3304,
	1709, 1445, 2538, 1446, 1447, 2582, 2569, 1445, 2748, 1446,
	1447, 2539, 2769, 1709, 3128, 1448, 2767, 1709, 2891, 3147,
	1448, 1883, 1445, 2527, 1446, 1447, 1445, 2618, 1446, 1447,
	2742, 1709, 1448, 1722, 3146, 3824, 2719, 1709, 1448, 1445,
	2780, 1446, 1447, 2711, 1709, 162, 3150, 2702, 1709, 3148,
	1445, 3151, 1446, 1447, 3149, 2330, 1717, 2322, 1017, 2076,
	3454, 2074, 2783, 1445, 3106, 1446, 1447, 1445, 3105, 1446,
	1447, 3629, 1884, 1885, 1886, 3900, 1448, 3503, 2581, 2819,
	2820, 1445, 3631, 1446, 1447, 2781, 3444, 1445, 2357, 1446,
	1447, 1017, 2839, 1448, 1445, 2591, 1446, 1447, 1445, 1721,
	1446, 1447, 1448, 3441, 2700, 1709, 3152, 1448, 2831, 2832,
	1033, 3440, 2606, 3115, 1952, 1004, 2687, 1709, 1034, 2045,
	3189, 2799, 2685, 1709, 3504, 3505, 3506, 2861, 2818, 1445,
	2882, 1446, 1447, 1448, 3620, 2121, 3619, 1156, 1448, 3282,
	1155, 157, 2877, 1448, 2918, 2959, 1879, 41, 2795, 2122,
	1445, 1412, 1446, 1447, 99, 1445, 2836, 1446, 1447, 2838,
	2683, 1709, 1683, 2771, 2808, 100, 3446, 1445, 2837, 1446,
	1447, 101, 1448, 1445, 127, 1446, 1447, 2681, 1709, 2341,
	2342, 4103, 2864, 2866, 3618, 2784, 3468, 2786, 1448, 2791,
	1677, 2679, 1709, 1880, 1881, 1882, 3208, 2811, 2857, 2841,
	3118, 3120, 2530, 2796, 4012, 2916, 3917, 1448, 3818, 3121,
	2572, 1445, 3188, 1446, 1447, 1448, 2835, 2677, 1709, 2327,
	2519, 2845, 2675, 1709, 1041, 1042, 2848, 3419, 1445, 2422,
	1446, 1447, 2855, 1448, 2858, 106, 2518, 1445, 3104, 1446,
	1447, 2927, 1445, 2116, 1446, 1447, 3103, 99, 2117, 150,
	1448, 2869, 151, 3426, 101, 2880, 2673, 1709, 100, 2517,
	2883, 2884, 1448, 2516, 2515, 2555, 3626, 3888, 1445, 2879,
	1446, 1447, 1448, 1445, 3887, 1446, 1447, 3865, 1445, 3637,
	1446, 1447, 163, 3635, 2177, 2892, 2893, 2894, 2887, 175,
	2888, 2671, 1709, 3634, 3627, 108, 2924, 3513, 3445, 2669,
	1709, 3443, 3221, 2457, 1831, 1826, 107, 1445, 106, 1446,
	1447, 1448, 1040, 107, 3434, 2913, 2914, 2667, 1709, 1448,
	2814, 108, 4090, 1445, 2903, 1446, 1447, 2969, 2970, 1448,
	183, 2923, 107, 3604, 2665, 1709, 2794, 1448, 3009, 4091,
	4090, 1448, 1445, 2610, 1446, 1447, 2663, 1709, 1448, 2314,
	1445, 1734, 1446, 1447, 1448, 1726, 2661, 1709, 4091, 1448,
	2967, 2948, 2986, 2951, 2261, 3906, 1448, 3479, 1445, 1031,
	1446, 1447, 3, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 1448, 1445, 95, 1446, 1447, 182,
	184, 185, 186, 1448, 2294, 2659, 1709, 1445, 1, 1446,
	1447, 112, 113, 2657, 1709, 2019, 1448, 1445, 10, 1446,
	1447, 1710, 2301, 2655, 1709, 2987, 2925, 1415, 1414, 3483,
	2990, 2653, 1709, 4022, 2017, 2648, 1709, 9, 2018, 1448,
	677, 8, 2644, 1709, 1448, 2304, 1681, 4062, 2642, 1709,
	1448, 4018, 4019, 2635, 1709, 2325, 1445, 1923, 1446, 1447,
	2633, 1709, 1913, 3545, 1445, 2229, 1446, 1447, 3819, 3224,
	2463, 1448, 3511, 3011, 1445, 2420, 1446, 1447, 3067, 2873,
	2957, 1108, 1445, 2958, 1446, 1447, 1445, 3415, 1446, 1447,
	152, 2379, 2380, 1445, 3987, 1446, 1447, 116, 1066, 1445,
	3380, 1446, 1447, 2968, 1445, 115, 1446, 1447, 2971, 1448,
	1111, 1445, 1219, 1446, 1447, 2458, 2988, 3535, 2862, 2388,
	1759, 1757, 3074, 3376, 1758, 1756, 3085, 1761, 3313, 1445,
	3076, 1446, 1447, 1760, 3312, 2357, 3002, 3290, 1445, 108,
	1446, 1447, 1448, 2264, 2611, 2264, 3381, 2010, 3047, 712,
	107, 1445, 106, 1446, 1447, 3309, 2834, 2434, 3135, 706,
	85, 101, 2989, 2357, 2357, 2357, 2357, 2357, 190, 3057,
	3058, 3059, 3060, 3061, 1445, 1748, 1446, 1447, 1727, 1445,
	1448, 1446, 1447, 2357, 3395, 1445, 2357, 1446, 1447, 3085,
	3075, 1150, 3077, 2765, 667, 3197, 3084, 1448, 2496, 673,
	3140, 1963, 1448, 2359, 1497, 2001, 1445, 1448, 1446, 1447,
	3102, 1448, 3157, 3100, 2849, 3109, 3096, 3097, 3098, 3099,
	1060, 2266, 1448, 2266, 1052, 2315, 2764, 2785, 1020, 3110,
	1059, 2359, 2359, 2359, 2359, 2359, 3107, 3796, 3136, 3438,
	1448, 3114, 3122, 3123, 1445, 1448, 1446, 1447, 3108, 3116,
	3241, 2359, 3141, 3139, 2359, 3144, 2801, 1022, 3142, 3143,
	3249, 3145, 1021, 3159, 2760, 3119, 3160, 102, 103, 3112,
	3153, 1448, 3899, 3628, 3972, 3161, 2859, 1445, 1723, 1446,
	1447, 2759, 3402, 1448, 3167, 2583, 2758, 2111, 1487, 2356,
	3599, 2757, 3049, 2037, 3051, 2756, 737, 3198, 736, 3200,
	1448, 3199, 734, 2787, 2815, 1451, 2755, 942, 2775, 1735,
	3062, 3063, 3064, 3065, 2826, 1445, 2824, 1446, 1447, 3201,
	3202, 3125, 3251, 3252, 2746, 2823, 3222, 2528, 2364, 2745,
	2422, 3243, 1445, 3462, 1446, 1447, 3458, 1445, 4014, 1446,
	1447, 3258, 1445, 2358, 1446, 1447, 1445, 2354, 1446, 1447,
	1448, 2793, 893, 3131, 892, 2744, 1448, 1445, 3131, 1446,
	1447, 746, 3278, 738, 3277, 3275, 728, 2743, 891, 890,
	3476, 3285, 3250, 2933, 3264, 1445, 2935, 1446, 1447, 2860,
	1445, 3260, 1446, 1447, 2740, 1429, 1448, 3292, 3293, 3244,
	3294, 1699, 3295, 3296, 722, 3298, 1079, 3300, 2827, 2830,
	2831, 2832, 2828, 3287, 2829, 2833, 1445, 3923, 1446, 1447,
	2554, 3310, 1698, 3930, 3232, 3529, 3213, 2909, 1445, 1500,
	1446, 1447, 2450, 1500, 2570, 68, 45, 3894, 2575, 3960,
	885, 882, 3601, 3602, 2735, 1445, 3603, 1446, 1447, 3070,
	2728, 3071, 3943, 3944, 3223, 881, 3945, 2166, 1425, 1422,
	4035, 2579, 3397, 2580, 2012, 94, 36, 35, 2587, 3401,
	34, 33, 2589, 2590, 32, 26, 25, 24, 23, 22,
	2727, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 29, 2607, 19, 21, 1445, 20, 1446, 1447, 18,
	3235, 1445, 4057, 1446, 1447, 4102, 121, 54, 3134, 2357,
	51, 49, 726, 129, 3286, 2613, 2614, 2615, 2616, 2617,
	128, 2619, 3475, 1448, 3435, 2621, 52, 3442, 48, 2626,
	2627, 1445, 2628, 1446, 1447, 2631, 1448, 2632, 2634, 2636,
	2637, 2638, 2639, 2640, 2641, 2643, 2645, 2646, 2647, 2649,
	3447, 2651, 2652, 2654, 2656, 2658, 2660, 2662, 2664, 2666,
	2668, 2670, 2672, 2674, 2676, 2678, 2680, 2682, 2684, 2686,
	2688, 2689, 2690, 3432, 2692, 3469, 2694, 2359, 2696, 2697,
	3467, 2699, 2701, 2703, 3251, 3252, 3477, 2706, 3478, 3470,
	3464, 2710, 3430, 3427, 3428, 2715, 2716, 2717, 2718, 1193,
	3494, 46, 3496, 3280, 3281, 31, 3457, 2726, 2729, 2730,
	2731, 2732, 2733, 2734, 3539, 3540, 2738, 2739, 30, 1039,
	2725, 17, 1045, 1045, 2741, 3471, 3472, 16, 3404, 2747,
	3406, 3407, 3408, 3488, 3489, 2750, 2751, 2752, 2753, 2754,
	955, 15, 2268, 14, 13, 956, 2761, 2762, 12, 2763,
	11, 7, 2766, 2768, 2325, 2075, 2770, 6, 1445, 39,
	1446, 1447, 38, 28, 37, 27, 2782, 4, 2896, 2452,
	0, 1445, 0, 1446, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3541, 3522, 1448, 0, 0,
	3526, 3527, 3528, 0, 2827, 2830, 2831, 2832, 2828, 0,
	2829, 2833, 0, 3557, 3460, 3461, 0, 3518, 3519, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	1448, 0, 0, 0, 1448, 0, 0, 0, 1448, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 2724, 0, 0, 0, 0, 3617, 0, 3621, 3622,
	1448, 0, 0, 0, 0, 3607, 1448, 3608, 3609, 3610,
	0, 3597, 0, 0, 0, 2723, 0, 0, 0, 0,
	0, 3135, 1448, 85, 2722, 3135, 0, 0, 2721, 0,
	0, 3623, 2720, 0, 0, 1448, 0, 0, 0, 1448,
	0, 0, 1445, 0, 1446, 1447, 0, 0, 3561, 0,
	0, 0, 1448, 2076, 0, 2074, 3652, 0, 0, 3624,
	0, 0, 0, 1448, 3633, 3632, 1445, 0, 1446, 1447,
	1448, 0, 3644, 3640, 3642, 1445, 0, 1446, 1447, 1445,
	0, 1446, 1447, 1445, 2714, 1446, 1447, 1707, 1703, 0,
	2713, 41, 3802, 0, 0, 0, 0, 0, 0, 0,
	0, 3656, 1704, 0, 0, 0, 2712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2709,
	0, 0, 0, 2708, 0, 0, 0, 2320, 2321, 1706,
	3794, 1705, 0, 3793, 0, 1445, 2707, 1446, 1447, 0,
	0, 1445, 3809, 1446, 1447, 0, 0, 2705, 3813, 3814,
	0, 3821, 0, 3792, 2698, 3653, 3654, 1445, 0, 1446,
	1447, 0, 0, 3859, 3860, 2997, 2998, 2999, 3000, 3001,
	1445, 3646, 1446, 1447, 1445, 0, 1446, 1447, 0, 0,
	0, 2076, 0, 2074, 3863, 3006, 0, 1445, 0, 1446,
	1447, 3588, 0, 0, 0, 3804, 3805, 3806, 1445, 0,
	1446, 1447, 0, 0, 0, 1445, 0, 1446, 1447, 0,
	0, 0, 0, 0, 3135, 3131, 0, 3648, 0, 0,
	3866, 0, 3797, 0, 3869, 0, 0, 0, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1635,
	1636, 1637, 1638, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 3910, 3892, 3864,
	3907, 3134, 3889, 3890, 0, 3134, 3891, 0, 1448, 0,
	0, 3924, 1448, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 1448, 1707, 1703, 3909, 0, 0, 85,
	0, 0, 0, 3137, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 1448, 0, 0,
	0, 3155, 1448, 3913, 0, 0, 0, 4055, 3926, 0,
	1448, 0, 0, 3929, 1700, 1701, 1706, 1776, 1705, 0,
	0, 0, 3801, 0, 0, 0, 0, 0, 3931, 1448,
	0, 0, 3898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2695, 0, 0, 0, 2693, 41, 0, 0,
	1449, 0, 0, 2691, 0, 0, 0, 2650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3949,
	0, 0, 3950, 3969, 0, 0, 0, 0, 85, 0,
	1505, 2630, 0, 0, 0, 3915, 2629, 0, 0, 0,
	0, 0, 3958, 1445, 2625, 1446, 1447, 1445, 0, 1446,
	1447, 0, 0, 0, 1445, 3965, 1446, 1447, 1445, 0,
	1446, 1447, 0, 2623, 3978, 0, 4000, 3983, 3975, 3934,
	3980, 3986, 0, 3979, 3977, 0, 3982, 3973, 3284, 3821,
	3989, 3981, 1445, 0, 1446, 1447, 0, 1445, 0, 1446,
	1447, 4010, 0, 0, 3134, 1445, 41, 1446, 1447, 0,
	3301, 3302, 0, 3303, 4031, 3305, 3307, 4021, 4026, 0,
	4013, 4039, 1764, 0, 1445, 4041, 1446, 1447, 4000, 3314,
	0, 0, 0, 4052, 3318, 3319, 3320, 3322, 3323, 3324,
	3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334,
	3336, 3338, 3340, 3342, 3344, 3346, 3348, 3350, 3352, 3354,
	3356, 3358, 3360, 3362, 3364, 3366, 3367, 3369, 3370, 3371,
	3373, 4056, 1963, 3375, 4071, 3377, 3378, 3379, 4072, 4051,
	3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392,
	3393, 4086, 2076, 4088, 2074, 4085, 4084, 4082, 4075, 3400,
	4081, 3970, 4096, 3405, 0, 4000, 1777, 3409, 3410, 0,
	3411, 3413, 4104, 3416, 3418, 0, 3420, 3421, 3422, 3423,
	4112, 4110, 3938, 3131, 3429, 1448, 0, 0, 0, 0,
	3948, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 4121, 4122, 3860, 4120, 0, 0, 0, 0, 0,
	2076, 1776, 2074, 4119, 0, 0, 0, 0, 0, 3451,
	3452, 3922, 0, 3456, 0, 0, 0, 0, 1790, 1793,
	1794, 1795, 1796, 1797, 1798, 0, 1799, 1800, 1802, 1803,
	1801, 1804, 1805, 1778, 1779, 1780, 1781, 1762, 1763, 1791,
	4069, 1765, 0, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 0, 0, 1775, 1782, 1783, 1784, 1785, 2588,
	1786, 1787, 1788, 1789, 0, 0, 0, 2577, 0, 0,
	0, 4047, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 1813, 1446, 1447, 0, 0, 0, 0, 1445, 3533,
	1446, 1447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3552, 0, 0, 3556, 0, 0, 0, 0, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 193,
	1777, 0, 0, 710, 0, 0, 0, 0, 716, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 955, 0, 0, 0, 3590, 956, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 2075, 0, 3598, 1792,
	0, 0, 0, 0, 0, 0, 3605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	193, 716, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 0,
	1799, 1800, 1802, 1803, 1801, 1804, 1805, 1778, 1779, 1780,
	1781, 1762, 1763, 1791, 0, 1765, 0, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 0, 0, 1775, 1782,
	1783, 1784, 1785, 0, 1786, 1787, 1788, 1789, 0, 0,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3810, 0, 0, 0, 0, 0, 0,
	0, 0, 3817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3827, 3828, 0, 3830, 0, 3831, 3832, 0,
	0, 0, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842,
	3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852,
	3853, 3854, 3855, 3856, 0, 3858, 3861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 2033, 2034,
	2035, 3870, 3871, 3872, 3873, 3874, 3876, 3877, 3879, 3881,
	3882, 3884, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 2083, 3914,
	0, 0, 0, 2106, 1045, 1045, 2110, 0, 0, 0,
	2115, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 0, 2138, 0, 0, 0,
	2160, 2161, 2162, 2163, 2164, 2165, 2167, 0, 2172, 0,
	2174, 2175, 2176, 0, 2178, 2179, 2180, 0, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 0, 0, 0,
	0, 0, 2260, 0, 2262, 0, 2269, 2270, 2271, 2272,
	2273, 2274, 1045, 0, 1045, 1045, 1045, 1045, 1045, 0,
	0, 0, 0, 0, 0, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 0, 2295, 2296, 2297, 2298, 2299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 43, 44, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 3939, 0, 90, 0, 0, 0, 47,
	75, 76, 0, 73, 77, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 2337, 2338, 0, 3955, 0, 0,
	0, 0, 0, 3956, 3957, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2902, 0, 0,
	2376, 61, 0, 0, 0, 3968, 0, 0, 0, 0,
	127, 0, 149, 93, 937, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 3994, 3995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4002, 4004, 4006, 0, 0,
	193, 0, 193, 0, 160, 193, 0, 0, 0, 0,
	148, 2418, 0, 0, 0, 0, 0, 0, 0, 0,
	4034, 0, 0, 0, 0, 695, 0, 0, 0, 167,
	0, 715, 168, 0, 0, 0, 0, 716, 0, 716,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 1835, 159, 158, 187, 0, 0, 4053, 716,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 715, 0, 0, 0, 0, 0,
	1492, 0, 4076, 4078, 4080, 0, 0, 0, 0, 0,
	0, 0, 50, 53, 56, 55, 58, 0, 72, 0,
	0, 81, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 89, 88, 0, 0,
	70, 71, 57, 4113, 4114, 0, 0, 0, 79, 80,
	0, 0, 0, 0, 0, 153, 1836, 156, 0, 1833,
	0, 154, 155, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2592, 2593, 2594, 2595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 193, 0, 0,
	0, 716, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 716, 716, 0, 716, 0,
	716, 716, 0, 716, 716, 716, 716, 716, 716, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 1492,
	716, 1492, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 151, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 716, 1725, 193, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 716, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	0, 0, 0, 0, 0, 182, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 1408, 715, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 716, 0, 0, 0, 0, 0, 0, 0, 2964,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 2991, 2992, 0, 0, 2994, 0,
	0, 2996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3003, 3004, 3005, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 3010, 0, 0, 3012, 3013, 3014, 0,
	0, 1492, 3015, 3016, 0, 0, 3017, 0, 3018, 0,
	0, 0, 0, 0, 0, 3019, 0, 3020, 1492, 0,
	0, 3021, 0, 3022, 0, 0, 3023, 0, 3024, 0,
	3025, 0, 3026, 0, 3027, 0, 3028, 0, 3029, 0,
	3030, 0, 3031, 0, 3032, 0, 3033, 0, 3034, 0,
	3035, 0, 3036, 0, 3037, 0, 3038, 0, 3039, 0,
	3040, 0, 0, 0, 3041, 0, 3042, 0, 3043, 0,
	0, 3044, 0, 3045, 0, 3046, 0, 2232, 3048, 0,
	0, 3050, 0, 1491, 3052, 3053, 3054, 3055, 0, 0,
	0, 0, 3056, 2232, 2232, 2232, 2232, 2232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3066, 0,
	0, 0, 0, 0, 0, 0, 3079, 0, 0, 3083,
	0, 1045, 0, 0, 0, 0, 0, 0, 3086, 3087,
	3088, 3089, 3090, 3091, 0, 0, 0, 3092, 3093, 0,
	3094, 0, 3095, 0, 715, 715, 0, 0, 0, 0,
	0, 0, 2280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 3126, 0, 0,
	0, 0, 0, 0, 0, 715, 193, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 3156, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 193, 715,
	0, 1842, 716, 0, 0, 2280, 193, 0, 193, 1851,
	193, 193, 1491, 1853, 0, 0, 1856, 1857, 715, 715,
	0, 715, 0, 715, 715, 716, 715, 715, 715, 715,
	715, 715, 0, 3219, 0, 0, 0, 0, 0, 1491,
	1888, 1889, 1491, 715, 1491, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1007, 0, 0, 715, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 716, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 3317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 716, 0, 0,
	0, 716, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 193, 0, 0, 193,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 3514,
	0, 1492, 0, 2280, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 1046,
	1046, 0, 3538, 0, 1491, 0, 0, 0, 662, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 0, 3559,
	0, 0, 3560, 0, 0, 3563, 3564, 0, 0, 0,
	0, 0, 0, 0, 3568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3569, 0,
	3570, 0, 3571, 0, 3572, 0, 3573, 0, 3574, 0,
	3575, 0, 3576, 0, 3577, 0, 3578, 0, 3579, 0,
	3580, 0, 3581, 0, 3582, 0, 3583, 0, 3584, 0,
	0, 3585, 0, 0, 0, 3586, 0, 3587, 0, 0,
	0, 0, 0, 3589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 3606, 0, 0, 0,
	0, 0, 0, 0, 0, 3611, 0, 3612, 3613, 0,
	3614, 0, 3615, 0, 0, 0, 0, 3616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 3641, 193, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 3649, 716, 0, 3651, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 3655, 0,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 3789, 0, 715, 193,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 1200, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 715, 0, 0, 193, 0,
	0, 0, 2440, 2441, 2442, 193, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 715, 0, 0, 0, 716, 0, 715, 1851,
	0, 0, 1851, 0, 1851, 716, 0, 0, 0, 0,
	2472, 0, 0, 0, 0, 0, 0, 0, 0, 3897,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 193, 193, 193, 193, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	715, 0, 0, 0, 715, 715, 0, 0, 193, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	662, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 715, 0, 0, 0,
	714, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3951, 716,
	0, 3952, 0, 3953, 0, 0, 0, 0, 1493, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 1077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 193, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 1492, 0,
	0, 716, 716, 1492, 193, 193, 193, 193, 193, 0,
	0, 0, 0, 0, 0, 0, 193, 4032, 0, 0,
	0, 0, 193, 0, 193, 0, 0, 193, 193, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4048, 0, 4049, 0,
	4050, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 1492,
	0, 0, 0, 1938, 716, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	4099, 0, 4100, 0, 0, 0, 1974, 715, 1493, 0,
	0, 0, 193, 1978, 0, 193, 0, 0, 715, 0,
	0, 0, 0, 0, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2853, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 1851, 1851, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 2926, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 1493, 0, 1493,
	662, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 193, 193, 193, 0, 0, 0, 662, 0,
	0, 0, 716, 716, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 1988, 662, 662, 662, 662,
	662, 662, 662, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	716, 716, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 1257,
	0, 1257, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 715, 160, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	1834, 1835, 159, 158, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	662, 193, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 1491, 0, 0, 715, 715, 1491, 0, 0, 0,
	1492, 0, 0, 0, 2343, 716, 0, 716, 0, 0,
	0, 0, 2347, 0, 2350, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 1046, 0, 0, 0, 1493, 3204, 0, 0,
	0, 0, 0, 0, 153, 1836, 156, 716, 1833, 0,
	154, 155, 0, 0, 0, 0, 0, 171, 0, 715,
	193, 0, 1491, 716, 0, 0, 177, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 716, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1046,
	1962, 1046, 1046, 1046, 1046, 1046, 0, 0, 0, 0,
	0, 0, 716, 1687, 1688, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 2507, 0, 0, 0, 0, 0, 0, 0,
	0, 2524, 2525, 0, 1910, 2529, 0, 0, 0, 1731,
	0, 0, 715, 0, 0, 0, 2534, 0, 0, 1046,
	0, 0, 0, 2537, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 2540,
	0, 0, 0, 1962, 662, 0, 662, 0, 662, 2366,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1859, 0,
	1859, 0, 1859, 1859, 0, 1868, 1859, 1859, 1859, 1859,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 3482, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 193, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 715, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1257, 0, 0,
	0, 0, 715, 715, 715, 715, 0, 163, 716, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 1492, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 2280, 0, 662, 0, 0,
	0, 0, 0, 0, 662, 183, 0, 0, 0, 0,
	0, 0, 0, 662, 662, 0, 716, 662, 0, 2531,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	193, 716, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 0,
	0, 662, 0, 0, 182, 184, 185, 186, 0, 0,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1257, 1257, 716, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 0, 715, 1493,
	715, 1962, 0, 0, 0, 0, 93, 0, 0, 955,
	2840, 0, 0, 943, 956, 957, 958, 959, 944, 0,
	0, 945, 946, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 960,
	961, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 2889, 0, 3253, 3254, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2938, 2939, 2940, 2941, 2942, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 715, 715, 0, 0,
	0, 0, 0, 0, 2025, 2952, 0, 0, 0, 0,
	0, 3255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 2960,
	0, 0, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 1910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2317, 0, 0, 0, 0, 3256, 3257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	2329, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 0, 0, 0, 0, 0, 912, 0,
	0, 0, 909, 910, 0, 0, 662, 911, 913, 0,
	0, 0, 0, 2895, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 1077, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 662, 662, 662, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 0, 662, 662, 0, 0,
	0, 1491, 0, 715, 1070, 0, 0, 0, 0, 2070,
	0, 0, 0, 2070, 2070, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 715, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 3247, 0, 0, 0, 0,
	0, 0, 0, 0, 2543, 0, 0, 93, 715, 3259,
	955, 0, 0, 0, 943, 956, 957, 958, 959, 944,
	0, 0, 945, 946, 0, 947, 0, 715, 3276, 715,
	0, 3279, 0, 0, 0, 0, 0, 0, 0, 952,
	960, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3253, 3254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 1493, 662, 662, 662, 662, 662, 0, 0, 0,
	3431, 0, 3255, 0, 3154, 0, 0, 0, 0, 0,
	1910, 0, 662, 0, 0, 662, 3162, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 3256,
	3257, 0, 0, 0, 0, 3492, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 3507, 0, 0, 3508, 3509,
	3510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2329, 662, 0, 0, 0, 0, 0, 2910, 0,
	0, 0, 0, 0, 0, 0, 0, 2915, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	662, 662, 662, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3677, 3679, 3678, 3742, 3743, 3744, 3745,
	3746, 3747, 3748, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 1910,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3111, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 1257, 0, 0, 0,
	0, 0, 0, 3138, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3691, 3692, 0, 0, 3767, 3766, 3765,
	0, 0, 3763, 3764, 3762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 3935, 0, 0, 0, 0, 2329, 3768, 908, 0,
	763, 764, 3769, 3770, 912, 3771, 766, 767, 909, 910,
	0, 761, 765, 911, 913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3674,
	3675, 3676, 3680, 3681, 3682, 3693, 3740, 3741, 3749, 3751,
	864, 3750, 3752, 3753, 3754, 3757, 3758, 3759, 3760, 3755,
	3756, 3761, 3657, 3661, 3658, 3659, 3660, 3672, 3662, 3663,
	3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3673, 3772,
	3773, 3774, 3775, 3776, 3777, 3686, 3690, 3689, 3687, 3688,
	3684, 3685, 3712, 3711, 3713, 3714, 3715, 3716, 3717, 3718,
	3720, 3719, 3721, 3722, 3723, 3724, 3725, 3726, 3694, 3695,
	3698, 3699, 3697, 3696, 3700, 3709, 3710, 3701, 3702, 3703,
	3704, 3705, 3706, 3708, 3707, 3727, 3728, 3729, 3730, 3731,
	3733, 3732, 3736, 3737, 3735, 3734, 3739, 3738, 0, 0,
	0, 3396, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 915, 0, 0, 919, 0, 0, 0, 921,
	920, 0, 922, 884, 883, 0, 0, 916, 917, 0,
	918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1910, 3778, 3779, 3780, 3781, 3782,
	3783, 3784, 3785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2329, 2329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 3546, 3547, 3548, 3549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3645, 0, 3647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3885, 0, 0, 0, 3885, 3885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1257, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 3396, 0, 4016, 1391,
	1377, 518, 0, 1320, 1394, 1289, 1308, 1404, 1311, 1314,
	1356, 1267, 1334, 409, 1305, 1260, 1293, 1262, 1300, 1263,
	1291, 1322, 267, 1288, 1379, 1338, 1393, 360, 264, 1269,
	1294, 423, 1310, 201, 1358, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 1400,
	364, 1344, 0, 489, 394, 0, 0, 0, 1324, 1383,
	1332, 1370, 1319, 1357, 1277, 1343, 1395, 1306, 1353, 1396,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 3990, 939, 0, 0, 0, 0, 3991, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 1302,
	1350, 1390, 1303, 1352, 262, 317, 269, 261, 570, 1401,
	1382, 1266, 1331, 1389, 0, 0, 226, 1392, 1326, 0,
	1355, 0, 1407, 1261, 1346, 0, 1264, 1268, 1403, 1387,
	1297, 272, 0, 0, 0, 0, 0, 0, 0, 1323,
	1333, 1367, 1371, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 1342, 0, 0, 0, 1273, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 1276, 0, 1296,
	1368, 0, 1259, 294, 1270, 395, 254, 0, 446, 1375,
	1386, 1318, 614, 1388, 1316, 1315, 1362, 1274, 1381, 1309,
	359, 1272, 326, 195, 222, 0, 1307, 405, 454, 466,
	1380, 1292, 1301, 250, 1299, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 1341, 1360, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 1271, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 1287, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 1376, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 1365, 1406, 418, 465,
	237, 594, 488, 197, 1281, 1286, 1279, 0, 251, 252,
	1347, 565, 1282, 1280, 1336, 1337, 1283, 1397, 1398, 1399,
	1384, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 1369,
	1275, 0, 1284, 1285, 1378, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 1340, 194, 218, 362, 1402, 447,
	285, 635, 604, 599, 203, 220, 1278, 259, 1290, 1298,
	0, 1304, 1312, 1313, 1325, 1327, 1328, 1329, 1330, 1348,
	1349, 1351, 1359, 1361, 1364, 1366, 1373, 1385, 1405, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 1339, 1345, 375,
	278, 301, 316, 1354, 603, 494, 224, 459, 287, 248,
	1372, 1374, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 1335, 1363, 370, 566,
	567, 312, 390, 0, 0, 0, 1391, 1377, 518, 0,
	1320, 1394, 1289, 1308, 1404, 1311, 1314, 1356, 1267, 1334,
	409, 1305, 1260, 1293, 1262, 1300, 1263, 1291, 1322, 267,
	1288, 1379, 1338, 1393, 360, 264, 1269, 1294, 423, 1310,
	201, 1358, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 1400, 364, 1344, 0,
	489, 394, 0, 0, 0, 1324, 1383, 1332, 1370, 1319,
	1357, 1277, 1343, 1395, 1306, 1353, 1396, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 1302, 1350, 1390, 1303,
	1352, 262, 317, 269, 261, 570, 1401, 1382, 1266, 1331,
	1389, 0, 0, 226, 1392, 1326, 0, 1355, 0, 1407,
	1261, 1346, 0, 1264, 1268, 1403, 1387, 1297, 272, 0,
	0, 0, 0, 0, 0, 0, 1323, 1333, 1367, 1371,
	1317, 0, 0, 0, 0, 0, 0, 3163, 0, 1295,
	0, 1342, 0, 0, 0, 1273, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 1276, 0, 1296, 1368, 0, 1259,
	294, 1270, 395, 254, 0, 446, 1375, 1386, 1318, 614,
	1388, 1316, 1315, 1362, 1274, 1381, 1309, 359, 1272, 326,
	195, 222, 0, 1307, 405, 454, 466, 1380, 1292, 1301,
	250, 1299, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 1341, 1360, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 1271, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 1287, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 1376, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 1365, 1406, 418, 465, 237, 594, 488,
	197, 1281, 1286, 1279, 0, 251, 252, 1347, 565, 1282,
	1280, 1336, 1337, 1283, 1397, 1398, 1399, 1384, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 1369, 1275, 0, 1284,
	1285, 1378, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 1340, 194, 218, 362, 1402, 447, 285, 635, 604,
	599, 203, 220, 1278, 259, 1290, 1298, 0, 1304, 1312,
	1313, 1325, 1327, 1328, 1329, 1330, 1348, 1349, 1351, 1359,
	1361, 1364, 1366, 1373, 1385, 1405, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 1339, 1345, 375, 278, 301, 316,
	1354, 603, 494, 224, 459, 287, 248, 1372, 1374, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 1335, 1363, 370, 566, 567, 312, 390,
	0, 0, 0, 1391, 1377, 518, 0, 1320, 1394, 1289,
	1308, 1404, 1311, 1314, 1356, 1267, 1334, 409, 1305, 1260,
	1293, 1262, 1300, 1263, 1291, 1322, 267, 1288, 1379, 1338,
	1393, 360, 264, 1269, 1294, 423, 1310, 201, 1358, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 1400, 364, 1344, 0, 489, 394, 0,
	0, 0, 1324, 1383, 1332, 1370, 1319, 1357, 1277, 1343,
	1395, 1306, 1353, 1396, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 1302, 1350, 1390, 1303, 1352, 262, 317,
	269, 261, 570, 1401, 1382, 1266, 1331, 1389, 0, 0,
	226, 1392, 1326, 0, 1355, 0, 1407, 1261, 1346, 0,
	1264, 1268, 1403, 1387, 1297, 272, 0, 0, 0, 0,
	0, 0, 0, 1323, 1333, 1367, 1371, 1317, 0, 0,
	0, 0, 0, 0, 3124, 0, 1295, 0, 1342, 0,
	0, 0, 1273, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 1276, 0, 1296, 1368, 0, 1259, 294, 1270, 395,
	254, 0, 446, 1375, 1386, 1318, 614, 1388, 1316, 1315,
	1362, 1274, 1381, 1309, 359, 1272, 326, 195, 222, 0,
	1307, 405, 454, 466, 1380, 1292, 1301, 250, 1299, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 1341,
	1360, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 1271, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 1287, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 1376, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	1365, 1406, 418, 465, 237, 594, 488, 197, 1281, 1286,
	1279, 0, 251, 252, 1347, 565, 1282, 1280, 1336, 1337,
	1283, 1397, 1398, 1399, 1384, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 1369, 1275, 0, 1284, 1285, 1378, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 1340, 194,
	218, 362, 1402, 447, 285, 635, 604, 599, 203, 220,
	1278, 259, 1290, 1298, 0, 1304, 1312, 1313, 1325, 1327,
	1328, 1329, 1330, 1348, 1349, 1351, 1359, 1361, 1364, 1366,
	1373, 1385, 1405, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 1339, 1345, 375, 278, 301, 316, 1354, 603, 494,
	224, 459, 287, 248, 1372, 1374, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	1335, 1363, 370, 566, 567, 312, 390, 0, 0, 0,
	1391, 1377, 518, 0, 1320, 1394, 1289, 1308, 1404, 1311,
	1314, 1356, 1267, 1334, 409, 1305, 1260, 1293, 1262, 1300,
	1263, 1291, 1322, 267, 1288, 1379, 1338, 1393, 360, 264,
	1269, 1294, 423, 1310, 201, 1358, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	1400, 364, 1344, 0, 489, 394, 0, 0, 0, 1324,
	1383, 1332, 1370, 1319, 1357, 1277, 1343, 1395, 1306, 1353,
	1396, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	1302, 1350, 1390, 1303, 1352, 262, 317, 269, 261, 570,
	1401, 1382, 1266, 1331, 1389, 0, 0, 226, 1392, 1326,
	0, 1355, 0, 1407, 1261, 1346, 0, 1264, 1268, 1403,
	1387, 1297, 272, 0, 0, 0, 0, 0, 0, 0,
	1323, 1333, 1367, 1371, 1317, 0, 0, 0, 0, 0,
	0, 2345, 0, 1295, 0, 1342, 0, 0, 0, 1273,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 1276, 0,
	1296, 1368, 0, 1259, 294, 1270, 395, 254, 0, 446,
	1375, 1386, 1318, 614, 1388, 1316, 1315, 1362, 1274, 1381,
	1309, 359, 1272, 326, 195, 222, 0, 1307, 405, 454,
	466, 1380, 1292, 1301, 250, 1299, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 1341, 1360, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 1271, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 1287, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 1376, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 1365, 1406, 418,
	465, 237, 594, 488, 197, 1281, 1286, 1279, 0, 251,
	252, 1347, 565, 1282, 1280, 1336, 1337, 1283, 1397, 1398,
	1399, 1384, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	1369, 1275, 0, 1284, 1285, 1378, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 1340, 194, 218, 362, 1402,
	447, 285, 635, 604, 599, 203, 220, 1278, 259, 1290,
	1298, 0, 1304, 1312, 1313, 1325, 1327, 1328, 1329, 1330,
	1348, 1349, 1351, 1359, 1361, 1364, 1366, 1373, 1385, 1405,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 1339, 1345,
	375, 278, 301, 316, 1354, 603, 494, 224, 459, 287,
	248, 1372, 1374, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 1335, 1363, 370,
	566, 567, 312, 390, 0, 0, 0, 1391, 1377, 518,
	0, 1320, 1394, 1289, 1308, 1404, 1311, 1314, 1356, 1267,
	1334, 409, 1305, 1260, 1293, 1262, 1300, 1263, 1291, 1322,
	267, 1288, 1379, 1338, 1393, 360, 264, 1269, 1294, 423,
	1310, 201, 1358, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 1400, 364, 1344,
	0, 489, 394, 0, 0, 0, 1324, 1383, 1332, 1370,
	1319, 1357, 1277, 1343, 1395, 1306, 1353, 1396, 319, 245,
	321, 200, 406, 490, 283, 0, 93, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 1302, 1350, 1390,
	1303, 1352, 262, 317, 269, 261, 570, 1401, 1382, 1266,
	1331, 1389, 0, 0, 226, 1392, 1326, 0, 1355, 0,
	1407, 1261, 1346, 0, 1264, 1268, 1403, 1387, 1297, 272,
	0, 0, 0, 0, 0, 0, 0, 1323, 1333, 1367,
	1371, 1317, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 1342, 0, 0, 0, 1273, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 1276, 0, 1296, 1368, 0,
	1259, 294, 1270, 395, 254, 0, 446, 1375, 1386, 1318,
	614, 1388, 1316, 1315, 1362, 1274, 1381, 1309, 359, 1272,
	326, 195, 222, 0, 1307, 405, 454, 466, 1380, 1292,
	1301, 250, 1299, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 1341, 1360, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 1271, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 1287, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 1376, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 1365, 1406, 418, 465, 237, 594,
	488, 197, 1281, 1286, 1279, 0, 251, 252, 1347, 565,
	1282, 1280, 1336, 1337, 1283, 1397, 1398, 1399, 1384, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 1369, 1275, 0,
	1284, 1285, 1378, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 1340, 194, 218, 362, 1402, 447, 285, 635,
	604, 599, 203, 220, 1278, 259, 1290, 1298, 0, 1304,
	1312, 1313, 1325, 1327, 1328, 1329, 1330, 1348, 1349, 1351,
	1359, 1361, 1364, 1366, 1373, 1385, 1405, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 1339, 1345, 375, 278, 301,
	316, 1354, 603, 494, 224, 459, 287, 248, 1372, 1374,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 1335, 1363, 370, 566, 567, 312,
	390, 0, 0, 0, 1391, 1377, 518, 0, 1320, 1394,
	1289, 1308, 1404, 1311, 1314, 1356, 1267, 1334, 409, 1305,
	1260, 1293, 1262, 1300, 1263, 1291, 1322, 267, 1288, 1379,
	1338, 1393, 360, 264, 1269, 1294, 423, 1310, 201, 1358,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 1400, 364, 1344, 0, 489, 394,
	0, 0, 0, 1324, 1383, 1332, 1370, 1319, 1357, 1277,
	1343, 1395, 1306, 1353, 1396, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 1302, 1350, 1390, 1303, 1352, 262,
	317, 269, 261, 570, 1401, 1382, 1266, 1331, 1389, 0,
	0, 226, 1392, 1326, 0, 1355, 0, 1407, 1261, 1346,
	0, 1264, 1268, 1403, 1387, 1297, 272, 0, 0, 0,
	0, 0, 0, 0, 1323, 1333, 1367, 1371, 1317, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 1342,
	0, 0, 0, 1273, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 1276, 0, 1296, 1368, 0, 1259, 294, 1270,
	395, 254, 0, 446, 1375, 1386, 1318, 614, 1388, 1316,
	1315, 1362, 1274, 1381, 1309, 359, 1272, 326, 195, 222,
	0, 1307, 405, 454, 466, 1380, 1292, 1301, 250, 1299,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	1341, 1360, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 1271, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 1287,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 1376, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 1365, 1406, 418, 465, 237, 594, 488, 197, 1281,
	1286, 1279, 0, 251, 252, 1347, 565, 1282, 1280, 1336,
	1337, 1283, 1397, 1398, 1399, 1384, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 1369, 1275, 0, 1284, 1285, 1378,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 1340,
	194, 218, 362, 1402, 447, 285, 635, 604, 599, 203,
	220, 1278, 259, 1290, 1298, 0, 1304, 1312, 1313, 1325,
	1327, 1328, 1329, 1330, 1348, 1349, 1351, 1359, 1361, 1364,
	1366, 1373, 1385, 1405, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 1339, 1345, 375, 278, 301, 316, 1354, 603,
	494, 224, 459, 287, 248, 1372, 1374, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 1335, 1363, 370, 566, 567, 312, 390, 0, 0,
	0, 1391, 1377, 518, 0, 1320, 1394, 1289, 1308, 1404,
	1311, 1314, 1356, 1267, 1334, 409, 1305, 1260, 1293, 1262,
	1300, 1263, 1291, 1322, 267, 1288, 1379, 1338, 1393, 360,
	264, 1269, 1294, 423, 1310, 201, 1358, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 1400, 364, 1344, 0, 489, 394, 0, 0, 0,
	1324, 1383, 1332, 1370, 1319, 1357, 1277, 1343, 1395, 1306,
	1353, 1396, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 1302, 1350, 1390, 1303, 1352, 262, 317, 269, 261,
	570, 1401, 1382, 1266, 1331, 1389, 0, 0, 226, 1392,
	1326, 0, 1355, 0, 1407, 1261, 1346, 0, 1264, 1268,
	1403, 1387, 1297, 272, 0, 0, 0, 0, 0, 0,
	0, 1323, 1333, 1367, 1371, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 1342, 0, 0, 0,
	1273, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 1276,
	0, 1296, 1368, 0, 1259, 294, 1270, 395, 254, 0,
	446, 1375, 1386, 1318, 614, 1388, 1316, 1315, 1362, 1274,
	1381, 1309, 359, 1272, 326, 195, 222, 0, 1307, 405,
	454, 466, 1380, 1292, 1301, 250, 1299, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 1341, 1360, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 1271,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 1287, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 1376,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 1365, 1406,
	418, 465, 237, 594, 488, 197, 1281, 1286, 1279, 0,
	251, 252, 1347, 565, 1282, 1280, 1336, 1337, 1283, 1397,
	1398, 1399, 1384, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 1369, 1275, 0, 1284, 1285, 1378, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 1340, 194, 218, 362,
	1402, 447, 285, 635, 604, 599, 203, 220, 1278, 259,
	1290, 1298, 0, 1304, 1312, 1313, 1325, 1327, 1328, 1329,
	1330, 1348, 1349, 1351, 1359, 1361, 1364, 1366, 1373, 1385,
	1405, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 1339,
	1345, 375, 278, 301, 316, 1354, 603, 494, 224, 459,
	287, 248, 1372, 1374, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 1335, 1363,
	370, 566, 567, 312, 390, 0, 0, 0, 1391, 1377,
	518, 0, 1320, 1394, 1289, 1308, 1404, 1311, 1314, 1356,
	1267, 1334, 409, 1305, 1260, 1293, 1262, 1300, 1263, 1291,
	1322, 267, 1288, 1379, 1338, 1393, 360, 264, 1269, 1294,
	423, 1310, 201, 1358, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 1400, 364,
	1344, 0, 489, 394, 0, 0, 0, 1324, 1383, 1332,
	1370, 1319, 1357, 1277, 1343, 1395, 1306, 1353, 1396, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 1302, 1350,
	1390, 1303, 1352, 262, 317, 269, 261, 570, 1401, 1382,
	1266, 1331, 1389, 0, 0, 226, 1392, 1326, 0, 1355,
	0, 1407, 1261, 1346, 0, 1264, 1268, 1403, 1387, 1297,
	272, 0, 0, 0, 0, 0, 0, 0, 1323, 1333,
	1367, 1371, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 1342, 0, 0, 0, 1273, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 1276, 0, 1296, 1368,
	0, 1259, 294, 1270, 395, 254, 0, 446, 1375, 1386,
	1318, 614, 1388, 1316, 1315, 1362, 1274, 1381, 1309, 359,
	1272, 326, 195, 222, 0, 1307, 405, 454, 466, 1380,
	1292, 1301, 250, 1299, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 1341, 1360, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 1271, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 1287, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 1376, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 1365, 1406, 418, 465, 237,
	594, 488, 197, 1281, 1286, 1279, 0, 251, 252, 1347,
	565, 1282, 1280, 1336, 1337, 1283, 1397, 1398, 1399, 1384,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 1369, 1275,
	0, 1284, 1285, 1378, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 1340, 194, 218, 362, 1402, 447, 285,
	635, 604, 599, 203, 220, 1278, 259, 1290, 1298, 0,
	1304, 1312, 1313, 1325, 1327, 1328, 1329, 1330, 1348, 1349,
	1351, 1359, 1361, 1364, 1366, 1373, 1385, 1405, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 1339, 1345, 375, 278,
	301, 316, 1354, 603, 494, 224, 459, 287, 248, 1372,
	1374, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 1335, 1363, 370, 566, 567,
	312, 390, 0, 0, 0, 0, 0, 518, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 747, 0, 0, 0, 267, 752,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 758, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 754, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 93, 0, 0, 955, 939, 731,
	905, 943, 956, 957, 958, 959, 944, 0, 235, 945,
	946, 242, 947, 0, 904, 789, 791, 790, 854, 855,
	856, 857, 858, 859, 860, 787, 952, 960, 961, 0,
	262, 317, 269, 261, 570, 0, 0, 2168, 2169, 2170,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 0, 757, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 742, 0, 0, 0, 0,
	899, 0, 743, 0, 0, 751, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 898, 0, 0, 614, 0,
	0, 896, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 949,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 950, 951, 253, 637,
	795, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 803, 804, 277, 303, 880,
	879, 878, 302, 304, 876, 877, 875, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 886,
	908, 897, 763, 764, 887, 888, 912, 889, 766, 767,
	909, 910, 760, 761, 765, 911, 913, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 900, 750, 749, 0, 756,
	0, 785, 786, 788, 792, 793, 794, 805, 852, 853,
	861, 863, 864, 862, 865, 866, 867, 870, 871, 872,
	873, 868, 869, 874, 768, 772, 769, 770, 771, 783,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	784, 923, 924, 925, 926, 927, 928, 798, 802, 801,
	799, 800, 796, 797, 824, 823, 825, 826, 827, 828,
	829, 830, 832, 831, 833, 834, 835, 836, 837, 838,
	806, 807, 810, 811, 809, 808, 812, 821, 822, 813,
	814, 815, 816, 817, 818, 820, 819, 839, 840, 841,
	842, 843, 845, 844, 848, 849, 847, 846, 851, 850,
	748, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 914, 259, 915, 0, 0, 919, 0, 0,
	0, 921, 920, 0, 922, 884, 883, 0, 0, 916,
	917, 0, 918, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 929, 930, 931,
	932, 933, 934, 935, 936, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 954, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 747, 0, 0, 0, 267,
	752, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 758, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 754, 755, 0,
	0, 0, 0, 0, 0, 2374, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 93, 0, 0, 955, 939,
	731, 905, 943, 956, 957, 958, 959, 944, 0, 235,
	945, 946, 242, 947, 0, 904, 789, 791, 790, 854,
	855, 856, 857, 858, 859, 860, 787, 952, 960, 961,
	2375, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 727, 744, 0, 757, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 741, 742, 0, 0, 0,
	0, 899, 0, 743, 0, 0, 751, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 898, 0, 0, 614,
	0, 0, 896, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	949, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 950, 951, 253,
	637, 795, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 803, 804, 277, 303,
	880, 879, 878, 302, 304, 876, 877, 875, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	886, 908, 897, 763, 764, 887, 888, 912, 889, 766,
	767, 909, 910, 760, 761, 765, 911, 913, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 900, 750, 749, 0,
	756, 0, 785, 786, 788, 792, 793, 794, 805, 852,
	853, 861, 863, 864, 862, 865, 866, 867, 870, 871,
	872, 873, 868, 869, 874, 768, 772, 769, 770, 771,
	783, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 784, 923, 924, 925, 926, 927, 928, 798, 802,
	801, 799, 800, 796, 797, 824, 823, 825, 826, 827,
	828, 829, 830, 832, 831, 833, 834, 835, 836, 837,
	838, 806, 807, 810, 811, 809, 808, 812, 821, 822,
	813, 814, 815, 816, 817, 818, 820, 819, 839, 840,
	841, 842, 843, 845, 844, 848, 849, 847, 846, 851,
	850, 748, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 914, 259, 915, 0, 0, 919, 0,
	0, 0, 921, 920, 0, 922, 884, 883, 0, 0,
	916, 917, 0, 918, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 929, 930,
	931, 932, 933, 934, 935, 936, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 954, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 0, 390, 370, 566, 567, 312, 84,
	518, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 747, 0, 0,
	0, 267, 752, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 758, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 754,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 93, 0, 0,
	955, 939, 731, 905, 943, 956, 957, 958, 959, 944,
	0, 235, 945, 946, 242, 947, 0, 904, 789, 791,
	790, 854, 855, 856, 857, 858, 859, 860, 787, 952,
	960, 961, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 727, 744, 0, 757, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 742, 0,
	0, 0, 0, 899, 0, 743, 0, 0, 751, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 898, 0,
	0, 614, 0, 0, 896, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 949, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 950,
	951, 253, 637, 795, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 803, 804,
	277, 303, 880, 879, 878, 302, 304, 876, 877, 875,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 886, 908, 897, 763, 764, 887, 888, 912,
	889, 766, 767, 909, 910, 760, 761, 765, 911, 913,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 900, 750,
	749, 0, 756, 0, 785, 786, 788, 792, 793, 794,
	805, 852, 853, 861, 863, 864, 862, 865, 866, 867,
	870, 871, 872, 873, 868, 869, 874, 768, 772, 769,
	770, 771, 783, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 784, 923, 924, 925, 926, 927, 928,
	798, 802, 801, 799, 800, 796, 797, 824, 823, 825,
	826, 827, 828, 829, 830, 832, 831, 833, 834, 835,
	836, 837, 838, 806, 807, 810, 811, 809, 808, 812,
	821, 822, 813, 814, 815, 816, 817, 818, 820, 819,
	839, 840, 841, 842, 843, 845, 844, 848, 849, 847,
	846, 851, 850, 748, 194, 218, 362, 92, 447, 285,
	635, 604, 599, 203, 220, 914, 259, 915, 0, 0,
	919, 0, 0, 0, 921, 920, 0, 922, 884, 883,
	0, 0, 916, 917, 0, 918, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	929, 930, 931, 932, 933, 934, 935, 936, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 954,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 747, 0,
	0, 0, 267, 752, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 758,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	754, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 93, 0,
	0, 955, 939, 731, 905, 943, 956, 957, 958, 959,
	944, 0, 235, 945, 946, 242, 947, 0, 904, 789,
	791, 790, 854, 855, 856, 857, 858, 859, 860, 787,
	952, 960, 961, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 0, 757, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 742,
	0, 0, 0, 0, 899, 0, 743, 0, 0, 751,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 898,
	0, 0, 614, 0, 0, 896, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 949, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 3976, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	950, 951, 253, 637, 795, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 803,
	804, 277, 303, 880, 879, 878, 302, 304, 876, 877,
	875, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 886, 908, 897, 763, 764, 887, 888,
	912, 889, 766, 767, 909, 910, 760, 761, 765, 911,
	913, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 900,
	750, 749, 0, 756, 0, 785, 786, 788, 792, 793,
	794, 805, 852, 853, 861, 863, 864, 862, 865, 866,
	867, 870, 871, 872, 873, 868, 869, 874, 768, 772,
	769, 770, 771, 783, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 784, 923, 924, 925, 926, 927,
	928, 798, 802, 801, 799, 800, 796, 797, 824, 823,
	825, 826, 827, 828, 829, 830, 832, 831, 833, 834,
	835, 836, 837, 838, 806, 807, 810, 811, 809, 808,
	812, 821, 822, 813, 814, 815, 816, 817, 818, 820,
	819, 839, 840, 841, 842, 843, 845, 844, 848, 849,
	847, 846, 851, 850, 748, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 914, 259, 915, 0,
	0, 919, 0, 0, 0, 921, 920, 0, 922, 884,
	883, 0, 0, 916, 917, 0, 918, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 929, 930, 931, 932, 933, 934, 935, 936, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	954, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 747,
	0, 0, 0, 267, 752, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	758, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 754, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 93,
	0, 1709, 955, 939, 731, 905, 943, 956, 957, 958,
	959, 944, 0, 235, 945, 946, 242, 947, 0, 904,
	789, 791, 790, 854, 855, 856, 857, 858, 859, 860,
	787, 952, 960, 961, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 727, 744, 0, 757, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	742, 0, 0, 0, 0, 899, 0, 743, 0, 0,
	751, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	898, 0, 0, 614, 0, 0, 896, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 949, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 950, 951, 253, 637, 795, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	803, 804, 277, 303, 880, 879, 878, 302, 304, 876,
	877, 875, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 886, 908, 897, 763, 764, 887,
	888, 912, 889, 766, 767, 909, 910, 760, 761, 765,
	911, 913, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	900, 750, 749, 0, 756, 0, 785, 786, 788, 792,
	793, 794, 805, 852, 853, 861, 863, 864, 862, 865,
	866, 867, 870, 871, 872, 873, 868, 869, 874, 768,
	772, 769, 770, 771, 783, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 784, 923, 924, 925, 926,
	927, 928, 798, 802, 801, 799, 800, 796, 797, 824,
	823, 825, 826, 827, 828, 829, 830, 832, 831, 833,
	834, 835, 836, 837, 838, 806, 807, 810, 811, 809,
	808, 812, 821, 822, 813, 814, 815, 816, 817, 818,
	820, 819, 839, 840, 841, 842, 843, 845, 844, 848,
	849, 847, 846, 851, 850, 748, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 914, 259, 915,
	0, 0, 919, 0, 0, 0, 921, 920, 0, 922,
	884, 883, 0, 0, 916, 917, 0, 918, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 929, 930, 931, 932, 933, 934, 935, 936,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 954, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	747, 0, 0, 0, 267, 752, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 758, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 754, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	93, 0, 0, 955, 939, 731, 905, 943, 956, 957,
	958, 959, 944, 0, 235, 945, 946, 242, 947, 0,
	904, 789, 791, 790, 854, 855, 856, 857, 858, 859,
	860, 787, 952, 960, 961, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 0, 757,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 742, 1044, 0, 0, 0, 899, 0, 743, 0,
	0, 751, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 898, 0, 0, 614, 0, 0, 896, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 949, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 950, 951, 253, 637, 795, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 803, 804, 277, 303, 880, 879, 878, 302, 304,
	876, 877, 875, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 886, 908, 897, 763, 764,
	887, 888, 912, 889, 766, 767, 909, 910, 760, 761,
	765, 911, 913, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 900, 750, 749, 0, 756, 0, 785, 786, 788,
	792, 793, 794, 805, 852, 853, 861, 863, 864, 862,
	865, 866, 867, 870, 871, 872, 873, 868, 869, 874,
	768, 772, 769, 770, 771, 783, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 784, 923, 924, 925,
	926, 927, 928, 798, 802, 801, 799, 800, 796, 797,
	824, 823, 825, 826, 827, 828, 829, 830, 832, 831,
	833, 834, 835, 836, 837, 838, 806, 807, 810, 811,
	809, 808, 812, 821, 822, 813, 814, 815, 816, 817,
	818, 820, 819, 839, 840, 841, 842, 843, 845, 844,
	848, 849, 847, 846, 851, 850, 748, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 914, 259,
	915, 0, 0, 919, 0, 0, 0, 921, 920, 0,
	922, 884, 883, 0, 0, 916, 917, 0, 918, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 929, 930, 931, 932, 933, 934, 935,
	936, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 954, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 747, 0, 0, 0, 267, 752, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 758, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 754, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 93, 0, 0, 955, 939, 731, 905, 943, 956,
	957, 958, 959, 944, 0, 235, 945, 946, 242, 947,
	0, 904, 789, 791, 790, 854, 855, 856, 857, 858,
	859, 860, 787, 952, 960, 961, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 727, 744, 0,
	757, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 742, 0, 0, 0, 0, 899, 0, 743,
	0, 0, 751, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 898, 0, 0, 614, 0, 0, 896, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 949, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 950, 951, 253, 637, 795, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 803, 804, 277, 303, 880, 879, 878, 302,
	304, 876, 877, 875, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 886, 908, 897, 763,
	764, 887, 888, 912, 889, 766, 767, 909, 910, 760,
	761, 765, 911, 913, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 900, 750, 749, 0, 756, 0, 785, 786,
	788, 792, 793, 794, 805, 852, 853, 861, 863, 864,
	862, 865, 866, 867, 870, 871, 872, 873, 868, 869,
	874, 768, 772, 769, 770, 771, 783, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 784, 923, 924,
	925, 926, 927, 928, 798, 802, 801, 799, 800, 796,
	797, 824, 823, 825, 826, 827, 828, 829, 830, 832,
	831, 833, 834, 835, 836, 837, 838, 806, 807, 810,
	811, 809, 808, 812, 821, 822, 813, 814, 815, 816,
	817, 818, 820, 819, 839, 840, 841, 842, 843, 845,
	844, 848, 849, 847, 846, 851, 850, 748, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 914,
	259, 915, 0, 0, 919, 0, 0, 0, 921, 920,
	0, 922, 884, 883, 0, 0, 916, 917, 0, 918,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 929, 930, 931, 932, 933, 934,
	935, 936, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 954, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 747, 0, 0, 0, 267, 752, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 758, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 754, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 93, 0, 0, 955, 939, 731, 905, 943,
	956, 957, 958, 959, 944, 0, 235, 945, 946, 242,
	947, 0, 904, 789, 791, 790, 854, 855, 856, 857,
	858, 859, 860, 787, 952, 960, 961, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	0, 757, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 741, 742, 0, 0, 0, 0, 899, 0,
	743, 0, 0, 751, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 3082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 898, 0, 0, 614, 0, 0, 896,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 949, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 950, 951, 253, 637, 795, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 803, 804, 277, 303, 880, 879, 878,
	302, 304, 876, 877, 875, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 886, 908, 897,
	763, 764, 887, 888, 912, 889, 766, 767, 909, 910,
	760, 761, 765, 911, 913, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 900, 750, 749, 0, 756, 0, 785,
	786, 788, 792, 793, 794, 805, 852, 853, 861, 863,
	864, 862, 865, 866, 867, 870, 871, 872, 873, 868,
	869, 874, 768, 772, 769, 770, 771, 783, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 784, 923,
	924, 925, 926, 927, 928, 798, 802, 801, 799, 800,
	796, 797, 824, 823, 825, 826, 827, 828, 829, 830,
	832, 831, 833, 834, 835, 836, 837, 838, 806, 807,
	810, 811, 809, 808, 812, 821, 822, 813, 814, 815,
	816, 817, 818, 820, 819, 839, 840, 841, 842, 843,
	845, 844, 848, 849, 847, 846, 851, 850, 748, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	914, 259, 915, 0, 0, 919, 0, 0, 0, 921,
	920, 0, 922, 884, 883, 0, 0, 916, 917, 0,
	918, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 929, 930, 931, 932, 933,
	934, 935, 936, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 954, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 747, 0, 0, 0, 267, 752, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 758, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 754, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 93, 0, 0, 955, 939, 731, 905,
	943, 956, 957, 958, 959, 944, 0, 235, 945, 946,
	242, 947, 0, 904, 789, 791, 790, 854, 855, 856,
	857, 858, 859, 860, 787, 952, 960, 961, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 727,
	744, 0, 757, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 742, 0, 0, 0, 0, 899,
	0, 743, 0, 0, 751, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 3078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 898, 0, 0, 614, 0, 0,
	896, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 949, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 950, 951, 253, 637, 795,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 803, 804, 277, 303, 880, 879,
	878, 302, 304, 876, 877, 875, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 886, 908,
	897, 763, 764, 887, 888, 912, 889, 766, 767, 909,
	910, 760, 761, 765, 911, 913, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 900, 750, 749, 0, 756, 0,
	785, 786, 788, 792, 793, 794, 805, 852, 853, 861,
	863, 864, 862, 865, 866, 867, 870, 871, 872, 873,
	868, 869, 874, 768, 772, 769, 770, 771, 783, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 784,
	923, 924, 925, 926, 927, 928, 798, 802, 801, 799,
	800, 796, 797, 824, 823, 825, 826, 827, 828, 829,
	830, 832, 831, 833, 834, 835, 836, 837, 838, 806,
	807, 810, 811, 809, 808, 812, 821, 822, 813, 814,
	815, 816, 817, 818, 820, 819, 839, 840, 841, 842,
	843, 845, 844, 848, 849, 847, 846, 851, 850, 748,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 914, 259, 915, 0, 0, 919, 0, 0, 0,
	921, 920, 0, 922, 884, 883, 0, 0, 916, 917,
	0, 918, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 929, 930, 931, 932,
	933, 934, 935, 936, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 954, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 747, 0, 0, 0, 267, 752,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 758, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 754, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 93, 0, 0, 955, 939, 1065,
	905, 943, 956, 957, 958, 959, 944, 0, 235, 945,
	946, 242, 947, 0, 904, 789, 791, 790, 854, 855,
	856, 857, 858, 859, 860, 787, 952, 960, 961, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 757, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 742, 0, 0, 0, 0,
	899, 0, 743, 0, 0, 751, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 898, 0, 0, 614, 0,
	0, 896, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 949,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 950, 951, 253, 637,
	795, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 803, 804, 277, 303, 880,
	879, 878, 302, 304, 876, 877, 875, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 886,
	908, 897, 763, 764, 887, 888, 912, 889, 766, 767,
	909, 910, 760, 761, 765, 911, 913, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 900, 750, 749, 0, 756,
	0, 785, 786, 788, 792, 793, 794, 805, 852, 853,
	861, 863, 864, 862, 865, 866, 867, 870, 871, 872,
	873, 868, 869, 874, 768, 772, 769, 770, 771, 783,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	784, 923, 924, 925, 926, 927, 928, 798, 802, 801,
	799, 800, 796, 797, 824, 823, 825, 826, 827, 828,
	829, 830, 832, 831, 833, 834, 835, 836, 837, 838,
	806, 807, 810, 811, 809, 808, 812, 821, 822, 813,
	814, 815, 816, 817, 818, 820, 819, 839, 840, 841,
	842, 843, 845, 844, 848, 849, 847, 846, 851, 850,
	748, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 914, 259, 915, 0, 0, 919, 0, 0,
	0, 921, 920, 0, 922, 884, 883, 0, 0, 916,
	917, 0, 918, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 929, 930, 931,
	932, 933, 934, 935, 936, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 954, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 747, 0, 0, 0, 267,
	752, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 758, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 754, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 93, 0, 0, 955, 939,
	1065, 905, 943, 956, 957, 958, 959, 944, 0, 235,
	945, 946, 242, 947, 0, 904, 789, 791, 790, 854,
	855, 856, 857, 858, 859, 860, 787, 952, 960, 961,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 757, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 741, 742, 0, 0, 0,
	0, 899, 0, 743, 0, 0, 751, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 898, 0, 0, 614,
	0, 0, 896, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	949, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 950, 951, 253,
	637, 795, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 803, 804, 277, 303,
	880, 879, 878, 302, 304, 876, 877, 875, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	886, 908, 897, 763, 764, 887, 888, 912, 889, 766,
	767, 909, 910, 760, 761, 765, 911, 913, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 900, 750, 749, 0,
	756, 0, 785, 786, 788, 792, 793, 794, 805, 852,
	853, 861, 863, 864, 862, 865, 866, 867, 870, 871,
	872, 873, 868, 869, 874, 768, 772, 769, 770, 771,
	783, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 784, 923, 924, 925, 926, 927, 928, 798, 802,
	801, 799, 800, 796, 797, 824, 823, 825, 826, 827,
	828, 829, 830, 832, 831, 833, 834, 835, 836, 837,
	838, 806, 807, 810, 811, 809, 808, 812, 821, 822,
	813, 814, 815, 816, 817, 818, 820, 819, 839, 840,
	841, 842, 843, 845, 844, 848, 849, 847, 846, 851,
	850, 748, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 914, 259, 915, 0, 0, 919, 0,
	0, 0, 921, 920, 0, 922, 884, 883, 0, 0,
	916, 917, 0, 918, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 929, 930,
	931, 932, 933, 934, 935, 936, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 954, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 747, 0, 0, 0,
	267, 752, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 758, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 754, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 93, 0, 0, 955,
	939, 1065, 905, 943, 956, 957, 958, 959, 944, 0,
	235, 945, 946, 242, 947, 0, 904, 789, 791, 790,
	854, 855, 856, 857, 858, 859, 860, 787, 952, 960,
	961, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 0, 757, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 742, 0, 0,
	0, 0, 899, 0, 743, 0, 0, 751, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 898, 0, 0,
	614, 0, 0, 896, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 949, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 950, 951,
	253, 637, 795, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 803, 804, 277,
	303, 880, 879, 878, 302, 304, 876, 877, 875, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 886, 908, 897, 763, 764, 887, 888, 912, 889,
	766, 767, 909, 910, 760, 761, 765, 911, 913, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 900, 750, 749,
	0, 756, 0, 785, 786, 788, 792, 793, 794, 805,
	852, 853, 861, 863, 864, 862, 865, 866, 867, 870,
	871, 872, 873, 868, 869, 874, 768, 772, 769, 770,
	771, 783, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 784, 923, 924, 925, 926, 927, 928, 798,
	802, 801, 799, 800, 796, 797, 824, 823, 825, 826,
	827, 828, 829, 830, 832, 831, 833, 834, 835, 836,
	837, 838, 806, 807, 810, 811, 809, 808, 812, 821,
	822, 813, 814, 815, 816, 817, 818, 820, 819, 839,
	840, 841, 842, 843, 845, 844, 848, 849, 847, 846,
	851, 850, 748, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 914, 259, 915, 0, 0, 919,
	0, 0, 0, 921, 920, 0, 922, 884, 883, 0,
	0, 916, 917, 0, 918, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 929,
	930, 931, 932, 933, 934, 935, 936, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 954, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 1116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	1115, 614, 0, 0, 0, 0, 0, 1112, 1113, 359,
	1073, 326, 195, 222, 1106, 1110, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 1672, 939, 0, 0, 1669, 0, 0, 0, 0,
	1667, 0, 235, 1668, 1666, 242, 1671, 0, 904, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 0, 390, 370, 566,
	567, 312, 84, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	93, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	92, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 2361, 0, 0, 2360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 1728, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	1730, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 1732, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 1445, 0, 1446, 1447, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 0,
	390, 370, 566, 567, 312, 84, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 93, 0, 1709, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 92, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 93, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 2360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 2311, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 1911, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 2309, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 1073,
	326, 195, 222, 1071, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 2311, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	1911, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	1709, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 3886, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 2071, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 2804, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	2789, 0, 0, 0, 0, 235, 0, 0, 242, 2790,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 1751, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 1750, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 707, 708, 709,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 4009, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 1911, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 3886, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 93, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 2362, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 1732, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	2023, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 2014, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 1878,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	1876, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 1874, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 1872, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 1870, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 1866, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 1864, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 1862, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	1837, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 1736, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 93, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 1423, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 660, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 4017,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 0, 0, 370,
	566, 567, 312,
}

var yyPact = [...]int{
	-1000, -1000, 4836, -1000, -529, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2494, 2791, -1000, -1000, -1000, -1000, 2658, -1000, 1009, 2093,
	-1000, 2412, 1942, -1000, 54302, 778, -1000, 51418, 776, 899,
	237, 35556, -1000, 199, -1000, 183, 52860, 189, -1000, -1000,
	-1000, -1000, -433, 21134, 2340, 51, 47, 54302, -1000, -1000,
	-1000, -1000, 2583, 2079, -1000, 409, -1000, -1000, -1000, -1000,
	-1000, -1000, 50697, -1000, 1151, -1000, -1000, 2411, 2401, 2626,
	927, 2337, -1000, 2484, 2079, -1000, 21134, 2562, 2470, 20413,
	20413, 480, -1000, -1000, 271, -1000, -1000, 30509, 54302, 38440,
	857, -1000, 2412, -1000, -1000, -1000, 214, -1000, 382, 1995,
	-1000, 1990, -1000, 889, 900, 415, 882, 855, 413, 412,
	405, 396, 394, 393, 390, 389, 432, -1000, 958, 958,
	-228, -229, 1445, 467, 474, 474, 1010, 499, 2374, 2371,
	-1000, -1000, 958, 958, 958, 364, 958, 958, 958, 958,
	329, 326, 958, 958, 958, 958, 958, 958, 958, 958,
	958, 958, 958, 958, 958, 958, 958, 958, 958, 903,
	2412, 296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54302, 195,
	54302, -1000, 848, 54302, -438, 1101, 1101, 67, 1101, 1101,
	1101, 1101, 231, 1003, 41, -1000, 215, 259, 154, 294,
	1075, 273, -1000, -1000, 270, 1075, 1831, -1000, 934, 262,
	152, -1000, 1101, 1101, -1000, 13899, 229, 13899, 13899, -1000,
	2388, -1000, -1000, -1000, -1000, -1000, 1312, -1000, -1000, -1000,
	-1000, -46, 496, -1000, -1000, -1000, -1000, 52860, 49976, 236,
	-1000, -1000, 768, -1000, -1000, 1835, 1278, 21134, 1215, 924,
	-1000, -1000, 1391, 904, -1000, -1000, -1000, -1000, -1000, 807,
	-1000, 23297, 23297, 23297, 23297, -1000, -1000, 1717, 49255, 1717,
	1717, 23297, 1717, 23297, 1717, 1717, 1717, 21134, 1717, 1717,
	1717, 1717, -1000, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	-1000, -1000, -1000, -1000, 1717, 847, 1717, 1717, 1717, 1717,
	1717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1717, 1717,
	1717, 1717, 1717, 1717, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26181, 1563,
	1560, 1557, -1000, 18250, 1717, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 54302, -1000, 1717, 220, 52860,
	52860, 420, 2484, 2079, -1000, 2583, 2557, 409, -1000, 3790,
	1481, 1730, 1399, 2079, 1961, 54302, -1000, 2009, -1000, -1000,
	-1000, -1000, 2264, 1437, 1822, -1000, -1000, -1000, -1000, 2281,
	21134, -1000, -1000, 2610, -1000, 27624, 846, 2606, 48534, -1000,
	480, 480, 1983, 419, 24, -1000, -1000, -1000, -1000, 980,
	34835, -1000, -1000, -1000, -1000, -1000, 1844, 54302, -1000, -1000,
	4098, 1375, -1000, 2092, -1000, 1837, -1000, 2033, 21134, 2106,
	774, 1375, 507, 505, 485, -1000, -71, -1000, -1000, -1000,
	-1000, -1000, -1000, 958, 958, 958, -1000, 391, 2555, 1942,
	7587, -1000, -1000, -1000, 47813, 2081, 1375, -1000, 2080, -1000,
	1035, 871, 875, 875, 1375, -1000, -1000, 53581, 1375, 1033,
	1030, 1375, 1375, 52860, 52860, -1000, 47092, -1000, 46371, 45650,
	1359, 52860, 44929, 44208, 43487, 42766, 42045, -1000, 2384, -1000,
	2259, -1000, -1000, -1000, 53581, 1375, 1375, 53581, 52860, 53581,
	54302, 1375, -1000, -1000, 355, -1000, -1000, 1358, 1356, 1355,
	958, 958, 1350, 1818, 1809, 1803, 958, 958, 1349, 1797,
	36998, 1791, 272, 1348, 1346, 1339, 1369, 1784, 192, 1755,
	1347, 1247, 1336, 52860, 2072, 54302, -1000, 253, 943, 430,
	977, 2412, 2339, 1982, 488, 524, 1375, 477, 477, 52860,
	-1000, 14626, -1000, 243, -1000, 1735, 21134, -1000, 1076, 1075,
	1075, -1000, -1000, -1000, -1000, -1000, -1000, 1101, 54302, 1076,
	-1000, -1000, -1000, 1075, 1101, 54302, 1101, 1101, 1101, 1101,
	1075, 1075, 1075, 1101, 54302, 54302, 54302, 54302, 54302, 54302,
	54302, 54302, 54302, 13899, 934, 1101, -439, -1000, 1727, -1000,
	-1000, 2178, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13899, 13899,
	-1000, -1000, -1000, -1000, -1000, 1972, -1000, 181, 12, 186,
	-1000, 41324, 486, 968, -1000, 486, -1000, -1000, -1000, 1971,
	40603, -1000, -440, -441, -443, -445, -1000, -1000, -1000, -450,
	-451, -1000, -1000, -1000, 21134, 21134, 21134, 21134, -267, -1000,
	1320, 23297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21134,
	249, 1116, 23297, 23297, 23297, 23297, 23297, 23297, 23297, 24739,
	24018, 23297, 23297, 23297, 23297, 23297, 23297, -1000, -1000, 32672,
	4291, 4291, 904, 904, 904, 904, -1000, -186, 1968, 53581,
	-1000, -1000, -1000, 845, 21134, 21134, 904, -1000, 1375, 1134,
	18250, 20413, 20413, 21134, 985, 1278, 53581, 21134, -1000, 1399,
	-1000, -1000, -1000, -1000, 1309, -1000, -1000, 1088, 2380, 2380,
	2380, 2380, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 2380, 21134, 139, 139, 907, 21134, 21134, 21134,
	21134, 21134, 21134, 16807, 21134, 21134, 23297, 21134, 21134, 21134,
	1399, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	1399, 21134, 1303, 21134, 21134, 21134, 21134, 21134, 21134, 20413,
	16080, 20413, 20413, 20413, 20413, 20413, -1000, -1000, -1000, -1000,
	-1000, -1000, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134,
	1399, 21134, 21134, 21134, 21134, 21134, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1507, 1520, 1540, 21134,
	-1000, 1964, -1000, -184, 29788, 21134, 1724, 2604, 2141, 52860,
	-1000, -1000, -1000, 2484, -1000, 2484, 1507, 3493, 2267, 20413,
	-1000, -1000, 3493, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1821, -1000, 54302, 1961, 2463, 52860, 2262, 1722, 348,
	-1000, 21134, 21134, 1957, -1000, 1504, 54302, -1000, -267, -1000,
	39882, -1000, -1000, 13172, 54302, 384, 54302, -1000, 29067, 39161,
	321, -1000, 24, 1916, -1000, 17, 8, 17528, 902, -1000,
	-1000, -1000, 1445, 25460, 1654, 902, 90, -1000, -1000, -1000,
	2033, -1000, 2033, 2033, 2033, 2033, 348, 348, 348, 348,
	-1000, -1000, -1000, -1000, -1000, 2071, 2056, -1000, 2033, 2033,
	2033, 2033, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2054,
	2054, 2054, 2051, 2051, 2034, 2034, 464, -1000, 21134, 367,
	38440, 2421, 1328, 1341, 253, 478, 2139, 1375, 1375, 1375,
	478, -1000, 1457, 1428, 1419, -1000, -516, 1954, -1000, -1000,
	2553, -1000, -1000, 937, 1074, 1063, 948, 52860, 227, 375,
	-1000, 456, -1000, 38440, 1375, 1026, 875, 1375, -1000, 1375,
	-1000, -1000, -1000, -1000, -1000, 1375, -1000, -1000, 1953, -1000,
	1940, 1132, 1062, 1121, 1055, 1953, -1000, -1000, -192, 1953,
	-1000, 1953, -1000, 1953, -1000, 1953, -1000, 1953, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 988, 278, -351,
	52860, 227, 487, -1000, 484, 32672, -1000, -1000, -1000, 32672,
	32672, -1000, -1000, -1000, -1000, 1716, 1710, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -498, 54302, -1000, 246,
	967, 305, 385, 316, 54302, 369, 2510, 2509, 2505, 2482,
	2466, 339, 324, 54302, 54302, 477, 2216, 54302, 2445, 54302,
	-1000, -1000, -1000, -1000, 1707, 1703, -1000, 1278, 54302, -1000,
	-1000, 1101, 1101, -1000, -1000, 54302, 1101, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1101, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54302, -1000, -1000, -1000, -1000, -46, 177, -1000, -1000,
	52860, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-104, -1000, 779, 7, 404, -1000, -1000, -1000, -1000, -1000,
	2512, -1000, 1278, 1037, 1006, -1000, 1717, -1000, -1000, 1164,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 249, 23297,
	23297, 23297, 1542, 815, 1553, 1220, 1152, 1161, 1161, 929,
	23297, 929, 23297, 906, 906, 906, 906, 906, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1694, -1000, 1717, 53581,
	1817, 16080, 2454, 1653, 1399, 917, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4109, 1815, -1000, 1815,
	2260, 1011, -1000, 21134, 1399, 4101, -1000, -1000, 1399, 1399,
	21134, -1000, -1000, 21134, 21134, 21134, 21134, 1341, 1341, 1341,
	1341, 1341, 1341, 1341, 1341, 1341, 1341, 21134, 1341, 1946,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1925, 2598,
	1772, 1341, 1341, 1341, 1341, 1341, 21134, 1403, -1000, -1000,
	-1000, 1522, 3865, 1468, 3846, 1341, 1341, -1000, 1341, 3838,
	3833, 1399, 1835, 2632, 2625, 1341, 1341, 1341, 1341, 1341,
	2620, 2614, 1341, 1341, 2607, 1341, 3809, 1341, 2603, 2595,
	2585, 2577, 2538, 2528, 2516, 2499, 2481, 2473, 2438, 2404,
	2399, 2373, 2359, 2342, 2304, 2298, 1341, 1341, 1341, 3805,
	1341, 3798, 1341, 3794, 1341, 1341, 3496, 2286, 2229, 1399,
	1921, -1000, 3489, 1341, 3478, 3465, 3461, 2225, 3448, 3432,
	3426, 1341, 1341, 1341, 2218, 3374, 3370, 3366, 3357, 3333,
	3182, 3169, 3042, 3012, 1341, 1540, 1540, 1540, 1540, 1540,
	3006, -269, 1341, 1399, -1000, -1000, -1000, -1000, -1000, 2956,
	2212, 2939, 2927, 2901, 2896, 1399, 1920, 1717, 844, -1000,
	-1000, 1815, 1399, 1399, 1815, 1815, 2878, 2867, 2863, 2858,
	2853, 2836, 1341, 1341, -1000, 1341, 2798, 2765, 2198, 2194,
	1399, -1000, 1540, 54302, -1000, -428, -1000, -18, 965, 1717,
	-1000, 36998, 1399, -1000, 3200, -1000, 1155, -1000, -1000, -1000,
	-1000, -1000, 34114, 1941, 3493, -1000, -1000, 1717, 1808, -1000,
	-1000, 348, 68, 33393, 898, 898, 107, 1278, 1278, 21134,
	-1000, -1000, -1000, -1000, -1000, -1000, 842, 2574, 374, 1717,
	-1000, 1915, 2991, -1000, -1000, -1000, 2460, 26903, -1000, -1000,
	1717, 1717, 54302, 1962, 1853, -1000, 836, -1000, 1388, 1916,
	24, 2, -1000, -1000, -1000, -1000, 1278, -1000, 1415, 388,
	342, -1000, 462, -1000, -1000, -1000, -1000, 2356, 81, -1000,
	-1000, -1000, 894, 348, -1000, -1000, -1000, -1000, -1000, -1000,
	1684, 1684, -1000, -1000, -1000, -1000, -1000, 1318, -1000, -1000,
	-1000, -1000, 1317, -1000, -1000, 1316, -1000, -1000, 2650, 2150,
	367, -1000, -1000, 958, 1679, -1000, -1000, 2360, 958, 958,
	52860, -1000, -1000, 1649, 2421, 246, 54302, 990, 2211, -1000,
	2139, 2139, 2139, 54302, -1000, -1000, -1000, -1000, -1000, -1000,
	-504, 166, 565, -1000, -1000, -1000, 4888, 52860, 1778, -1000,
	221, -1000, 1641, -1000, 52860, -1000, 1770, 2048, 1375, 1375,
	-1000, -1000, -1000, 52860, 1717, -1000, -1000, -1000, -1000, 519,
	2382, 336, -1000, -1000, -287, -1000, -1000, 227, 221, 53581,
	1375, 902, -1000, -1000, -1000, -1000, -1000, -506, 1768, 503,
	240, 564, 54302, 54302, 54302, 54302, 54302, 799, -1000, -1000,
	21, -1000, -1000, 210, -1000, -1000, -1000, -1000, 210, -1000,
	-1000, -1000, -1000, 274, 482, -1000, 54302, 54302, 946, -1000,
	-1000, -1000, -1000, -1000, 1075, -1000, -1000, 1075, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2381, 54302, 4, -470, -1000, -467, 21134, -1000, -1000, -1000,
	-1000, 1453, 483, 1553, 23297, 23297, 1134, 1134, 23297, -1000,
	-1000, -1000, 352, 352, 32672, -1000, 23297, 21134, 20413, -1000,
	-1000, 21134, 21134, 944, -1000, 21134, 1147, -1000, 21134, -1000,
	-1000, 1540, 1341, 1341, 1341, 1341, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1919, -1000, 21134, 21134,
	21134, 1399, 304, -1000, -1000, -1000, -1000, -1000, 2593, -1000,
	21134, -1000, 32672, 21134, 21134, 21134, -1000, -1000, -1000, 21134,
	21134, -1000, -1000, 21134, -1000, 21134, -1000, -1000, -1000, -1000,
	-1000, -1000, 21134, -1000, 21134, -1000, -1000, -1000, 21134, -1000,
	21134, -1000, -1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134, -1000, -1000,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, -1000, 21134, -1000,
	21134, -1000, 21134, -1000, 21134, 21134, -1000, 21134, 21134, 21134,
	-1000, 21134, 21134, 21134, 21134, -1000, -1000, -1000, -1000, 21134,
	21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, 21134, -1000,
	-1000, -1000, -1000, -1000, -1000, 21134, -1000, 38440, 19, -269,
	1303, 19, 1303, 22576, 852, 850, 21855, -1000, 20413, 15353,
	-1000, -1000, -1000, -1000, -1000, 21134, 21134, 21134, 21134, 21134,
	21134, -1000, -1000, -1000, 21134, 21134, -1000, 21134, -1000, 21134,
	-1000, -1000, -1000, -1000, -1000, 965, -1000, 875, 875, 875,
	52860, -1000, -1000, -1000, -1000, 1911, -1000, 2493, -1000, 2280,
	2276, 2591, 2574, -1000, 29067, 3493, -1000, -1000, 52860, -420,
	-1000, 2336, 2422, 898, 898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12445, 2484, 21134, 2207, 53581, 239, -1000, 28346,
	52860, 53581, 29067, 29067, 29067, 29067, 29067, -1000, 2237, 2222,
	-1000, 2252, 2249, 2309, 54302, -1000, 1507, 1760, -1000, 21134,
	31230, 1851, 29067, -1000, -1000, 29067, 54302, 11718, -1000, -1000,
	-6, -15, -1000, -1000, -1000, -1000, 1445, -1000, -1000, 370,
	2456, 2348, -1000, -1000, -1000, -1000, -1000, 1742, -1000, 1733,
	1906, 1720, 1714, 278, -1000, 2099, 2378, 958, 958, -1000,
	1315, -1000, 1375, 1671, 1662, -1000, -1000, -1000, 501, -1000,
	2439, 54302, 2184, 2167, 2161, -1000, -515, 1310, 2045, 1948,
	21134, 2037, 2552, 1887, 52860, -1000, -1000, 53581, -1000, 269,
	-1000, 367, 52860, -1000, -1000, -1000, 375, 54302, -1000, 8870,
	-1000, -1000, -1000, 221, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54302, 244, -1000, 2035, 1179, -1000, -1000, 2123, -1000,
	-1000, -1000, -1000, 178, 275, 1650, 207, 1593, 207, -1000,
	54302, 923, 2150, 54302, -1000, -1000, -1000, 1101, 1101, -1000,
	-1000, 2375, -1000, 1375, 1341, 23297, 23297, -1000, 904, -1000,
	-1000, 397, -248, 2033, 2033, -1000, 2033, 2034, -1000, 2033,
	168, 2033, 155, 2033, -1000, -1000, 1399, 1399, -1000, 1540,
	-1000, 2181, 1286, -1000, 1278, 21134, 2727, -1000, -1000, -1000,
	-1000, -1000, -84, 2706, 2700, 1341, -1000, 2026, 2025, 21134,
	1341, 1399, 2170, 1341, 1341, 1341, 1341, 1341, 1341, 1341,
	1341, 1341, 1341, 1341, 1341, 2157, 2153, 2132, 2124, 2115,
	2111, 2098, 2089, 1998, 1992, 1988, 1969, 1959, 1950, 1943,
	1933, 1341, 1341, 1912, 1341, 1894, 1856, -1000, 1278, 1540,
	2695, 1540, 1341, 1341, 2672, 333, 1341, 1702, 1702, 1702,
	1702, 1702, 1540, 1540, 1540, 1540, 1341, 52860, -1000, -269,
	-1000, -1000, -308, -311, -1000, 1399, -269, 1903, 23297, 1341,
	23297, 23297, 23297, 1341, 1399, -1000, 1839, 1801, 2659, 1776,
	1341, 2409, 1341, 1341, 1341, 1753, -1000, 2500, 2500, 2500,
	1683, 1155, 54302, -1000, -1000, -1000, -1000, 2574, 2567, 1902,
	-1000, -1000, 68, 656, -1000, 2325, 2422, -1000, 2551, 2306,
	2548, -1000, -1000, -1000, -1000, -1000, 1278, -1000, 2405, 1939,
	-1000, 963, 1864, -1000, -1000, 19692, 1689, 2272, 835, 1683,
	1935, 2991, 2137, 2159, 3277, -1000, -1000, -1000, -1000, 2180,
	-1000, 2122, -1000, -1000, 2009, -1000, 2368, 384, 29067, 1846,
	1846, -1000, 833, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1123, 8299, 2624, -1000, 1589, -1000, 1413, 203, 1307, -1000,
	-1000, 958, 958, -1000, 1024, 1022, -1000, 54302, 2022, -1000,
	348, 1573, 348, 1281, -1000, -1000, 1244, -1000, -1000, -1000,
	-1000, 2112, 2315, -1000, -1000, -1000, -1000, 54302, -1000, -1000,
	54302, 54302, 54302, 2020, 2547, -1000, 21134, 2019, 959, 1984,
	52860, 52860, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 475, 958, -481, 307, 302, 958, 958,
	958, -521, -1000, -1000, 1677, 1670, -1000, -220, -1000, 21134,
	-1000, -1000, -1000, 1241, 1241, 1563, 1560, 1557, -1000, 2009,
	-1000, -1000, -1000, 1611, -1000, -1000, -206, 52860, 52860, 52860,
	52860, -1000, -1000, 1217, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 904, 1399, 386, -213,
	1399, -1000, -1000, 348, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21134, -1000, 21134, -1000, 1278, 21134,
	2484, 1512, 21134, 21134, -1000, 1214, 1201, 1341, -1000, -1000,
	-1000, 21134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134, -1000, 21134,
	-1000, 21134, -1000, 21134, -1000, 21134, -1000, -1000, 21134, -1000,
	-1000, -1000, 21134, -1000, 21134, -1000, 21134, -1000, -1000, -1000,
	21134, 284, 352, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1399, 381, -1000, -1000, -1000, -1000,
	2588, -1000, 1399, 21134, 1134, -1000, 1134, 1134, 1134, -1000,
	-1000, -1000, 21134, -1000, 21134, 21134, -1000, 21134, -1000, 21134,
	-1000, -1000, -1000, -1000, 21134, 1717, 2387, 1717, 1717, 31230,
	-1000, -1000, 2567, 2518, 2544, 2287, 2299, 2299, 2325, -1000,
	2543, 2533, -1000, 1483, 2529, 1478, 1015, -1000, 53581, 21134,
	239, -1000, 399, 52860, 239, 52860, -1000, 2564, -1000, -1000,
	21134, 2018, -1000, 21134, -1000, -1000, -1000, -1000, 4291, 2574,
	1846, -1000, -1000, 914, -1000, 21134, -1000, -1000, -1000, 9435,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1476, 1448,
	-1000, -1000, 2017, 21134, -1000, -1000, -1000, 1571, 1523, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2009, -1000, -1000,
	-1000, -1000, 375, -511, 1975, 52860, 1177, -1000, 1666, 1887,
	335, 239, 1440, 958, 958, 958, 1174, 1171, 36998, 1648,
	-1000, 52860, 446, -1000, 375, -1000, -242, -243, 1341, -1000,
	-1000, 2452, -1000, -1000, 15353, -1000, -1000, 2007, 2127, -1000,
	-1000, -1000, -1000, 2242, -190, -218, -1000, -1000, 1341, 1341,
	2138, 1399, -1000, 1341, 1341, 1482, 1446, -1000, 1341, 1341,
	1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341,
	1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341, 1540, 1744,
	-1000, 284, 1399, 2158, -1000, -1000, 4291, -1000, -1000, 2564,
	2527, 19, -1000, -1000, 233, 19, 1278, 999, 1399, 1399,
	999, 1674, 1341, 1644, 1640, 1341, 1341, 31951, -1000, 2524,
	2517, 37719, 37719, 965, 2518, -276, 21134, 21134, 2290, 1158,
	-1000, -1000, -1000, -1000, 1431, 1426, -1000, 1422, -1000, 2622,
	-1000, 1278, -1000, 239, -1000, 820, 1864, -1000, 2484, 1278,
	52860, 1278, 71, 2564, -1000, 1341, -1000, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
	1717, 1717, 1717, 1717, 1717, 1717, -1000, -1000, 52860, 1878,
	-1000, -1000, 2450, 1646, 162, -1000, 1404, 1887, -1000, -1000,
	219, -1000, 21134, -1000, 36998, 1417, 1411, -1000, -1000, -1000,
	-1000, -521, -1000, -1000, -1000, -1000, -1000, -1000, 409, 1880,
	-1000, 955, 52860, 54302, -1000, 2171, -1000, -1000, -1000, 21134,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21134, -1000, 1399,
	2148, -1000, -359, -1000, -485, 21134, -269, -1000, -1000, -269,
	-1000, -1000, -1000, -1000, -1000, 21134, -1000, -1000, 21134, -1000,
	21134, -1000, -1000, 1616, -1000, -1000, -1000, -1000, -1000, 1616,
	1616, -1000, -276, -1000, 1865, -1000, 52860, 1278, 1835, -1000,
	1133, -1000, -1000, -1000, -1000, -1000, 53581, 1864, 52860, -1000,
	1610, 1399, 1717, 2484, -1000, 1608, -1000, 409, -1000, 2003,
	1948, -1000, -1000, -1000, 18971, -1000, -1000, -1000, -1000, -1000,
	289, -196, 15353, 10991, 1570, -1000, -193, 1341, 1540, -1000,
	-459, -1000, -1000, -1000, -1000, 297, -1000, -1000, 1835, -1000,
	-1000, 1603, 1510, 1398, 36277, -1000, -1000, -1000, -1000, -276,
	-1000, -1000, 2448, -1000, -1000, 1668, -1000, -1000, 31230, 52139,
	-1000, -181, 351, -196, 21134, 1723, 1399, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -34, -1000, -1000, 801, -1000,
	-1000, -1000, 2123, -219, -1000, -1000, -1000, 303, -473, -298,
	-300, 23297, -1000, 21134, -1000, 21134, -1000, 21134, -1000, -1000,
	-1000, 52860, 1717, -1000, 1527, -1000, 3824, -339, 2147, -1000,
	-129, -1000, -1000, -1000, 1092, 1394, -1000, -1000, -1000, -1000,
	-1000, -1000, 1873, 52860, -1000, 455, -1000, -1000, 14626, -206,
	-221, 996, -1000, -1000, -1000, -1000, -1000, 1134, 1308, 1292,
	1341, -1000, 52860, -1000, 52139, -322, 902, 4291, -1000, 2146,
	2113, 2596, -1000, -1000, -1000, -1000, -1000, -1000, -526, 1516,
	245, -1000, -1000, -1000, 303, -321, -1000, 21134, -1000, 21134,
	-1000, 1399, -1000, -1000, 2424, 71, -1000, 2615, -1000, 2578,
	983, 983, -1000, 1162, -526, -1000, -1000, -1000, -1000, 1341,
	1341, -1000, -369, -1000, -1000, -1000, -1000, -1000, 452, 1175,
	-1000, -1000, -1000, -1000, -1000, 4291, -1000, -1000, -1000, 261,
	261, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3319, 3318, 37, 5, 40, 35, 3317, 68, 102,
	208, 49, 219, 97, 3315, 175, 3314, 3313, 3312, 3309,
	3307, 3301, 2698, 2694, 2675, 3300, 3298, 3294, 3293, 3291,
	3277, 3271, 3268, 3255, 3251, 171, 162, 198, 3249, 3178,
	3176, 117, 193, 82, 85, 191, 3170, 3163, 69, 3161,
	3160, 3157, 190, 186, 182, 1075, 3156, 184, 113, 46,
	3155, 3152, 3150, 3149, 3146, 3144, 3143, 3141, 3129, 3128,
	3127, 3126, 3125, 3124, 3121, 3120, 3117, 3116, 297, 3115,
	3114, 20, 3110, 72, 3109, 3108, 3107, 3106, 3105, 7,
	3103, 3102, 27, 42, 3101, 3099, 48, 3096, 3093, 3092,
	3091, 3090, 47, 3089, 21, 3087, 39, 3086, 3085, 122,
	3082, 3077, 3076, 41, 3075, 3074, 3073, 30, 166, 3072,
	3071, 137, 3070, 3067, 3063, 168, 218, 3056, 3054, 178,
	107, 111, 3051, 3045, 93, 192, 3041, 124, 3039, 3036,
	3034, 150, 3033, 3162, 3032, 66, 62, 3030, 199, 3029,
	3028, 197, 63, 10, 16, 17, 3026, 3023, 64, 65,
	3021, 109, 3014, 3012, 104, 80, 3011, 89, 94, 3007,
	3003, 22, 6, 2998, 1, 4, 2, 95, 2996, 2993,
	106, 2988, 2987, 2985, 96, 2976, 2974, 6027, 2969, 88,
	128, 100, 144, 2968, 172, 115, 2967, 2965, 2964, 2963,
	2962, 51, 2958, 2956, 2953, 134, 244, 164, 2950, 146,
	340, 53, 145, 2949, 196, 77, 200, 165, 2948, 2947,
	131, 130, 2945, 2942, 56, 163, 189, 2938, 91, 127,
	123, 167, 90, 135, 2936, 2934, 57, 61, 2933, 2932,
	2929, 2925, 169, 2916, 2909, 60, 2901, 55, 2899, 201,
	2898, 136, 75, 2897, 170, 179, 2890, 140, 2887, 2885,
	67, 92, 70, 38, 2884, 158, 161, 125, 181, 2880,
	2874, 54, 2870, 2865, 2864, 194, 304, 2859, 2858, 295,
	176, 143, 148, 83, 2855, 263, 2854, 2851, 13, 4301,
	6943, 2844, 36, 160, 2838, 2835, 6299, 15, 43, 31,
	2828, 205, 2819, 2816, 2809, 2807, 195, 204, 110, 159,
	58, 2806, 2804, 2797, 34, 2793, 2787, 2785, 2784, 2781,
	2780, 73, 33, 32, 29, 212, 59, 19, 98, 157,
	151, 74, 2779, 2778, 2777, 119, 81, 2775, 155, 153,
	121, 99, 2772, 180, 139, 116, 2770, 101, 26, 2765,
	2758, 2757, 2754, 87, 2752, 2751, 2750, 2741, 149, 141,
	118, 78, 2735, 79, 114, 147, 142, 50, 2732, 44,
	2730, 2729, 23, 187, 28, 2728, 18, 103, 108, 2725,
	4924, 185, 2723, 8, 261, 156, 2722, 2717, 9, 12,
	11, 2712, 2711, 2707, 2706, 129, 2705, 2700, 2693, 2689,
	25, 45, 24, 14, 112, 76, 2688, 2687, 138, 2668,
	2656, 0, 1003, 126, 2642, 206,
}

//line sql.y:8538
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 409, 410, 410, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	257, 380, 381, 381, 255, 255, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 413, 413, 182, 182, 180, 180, 181,
	181, 260, 260, 25, 264, 264, 266, 266, 266, 266,
	256, 256, 256, 26, 26, 265, 265, 267, 267, 267,
	270, 270, 270, 270, 309, 309, 309, 27, 27, 27,
	27, 27, 127, 127, 383, 383, 382, 376, 376, 375,
	375, 374, 379, 379, 378, 378, 377, 39, 40, 49,
	49, 49, 49, 50, 51, 384, 384, 349, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 351, 351, 337, 337, 350, 350,
	350, 350, 350, 350, 350, 336, 336, 138, 138, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 399, 399, 399, 398,
	398, 235, 235, 235, 235, 235, 235, 235, 235, 147,
	147, 158, 158, 158, 158, 158, 158, 145, 145, 146,
	144, 144, 144, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 157, 157, 153, 153, 153, 154, 154, 154,
	155, 155, 400, 400, 400, 400, 314, 314, 314, 314,
	317, 317, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 316, 316, 316, 316, 316, 316, 316, 318, 318,
	318, 318, 318, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 320,
	320, 320, 320, 320, 320, 320, 320, 335, 335, 321,
	321, 329, 329, 330, 330, 331, 331, 331, 332, 332,
	332, 333, 333, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 328, 328, 327, 327, 327, 338, 363, 363,
	362, 362, 360, 360, 360, 360, 360, 360, 360, 360,
	347, 347, 357, 357, 357, 357, 357, 346, 346, 342,
	342, 342, 343, 343, 344, 344, 341, 341, 345, 345,
	359, 359, 358, 358, 339, 339, 340, 340, 365, 401,
	401, 401, 401, 401, 402, 402, 366, 391, 393, 393,
	393, 392, 392, 389, 390, 388, 388, 388, 388, 388,
	83, 83, 83, 283, 283, 284, 284, 355, 355, 354,
	354, 354, 356, 356, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 278, 278, 278, 387, 387,
	387, 387, 387, 387, 386, 386, 386, 352, 352, 352,
	352, 385, 385, 58, 58, 215, 215, 404, 404, 405,
	405, 405, 46, 46, 46, 46, 46, 46, 45, 45,
	45, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 47, 47, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 109, 109, 110, 110, 110, 110, 112, 112,
	112, 368, 368, 59, 59, 3, 3, 170, 172, 173,
	173, 171, 171, 171, 171, 171, 171, 61, 61, 60,
	60, 175, 174, 176, 176, 176, 1, 1, 2, 2,
	4, 4, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 334, 334, 334, 367, 367, 369,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	115, 114, 114, 113, 116, 116, 116, 116, 116, 116,
	116, 116, 371, 371, 371, 62, 62, 372, 322, 323,
	324, 5, 6, 348, 370, 123, 123, 29, 38, 38,
	30, 30, 30, 30, 31, 31, 63, 66, 66, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 277, 277, 286, 286, 276, 276, 301, 301, 301,
	279, 279, 279, 280, 280, 397, 397, 397, 273, 273,
	65, 65, 65, 302, 302, 302, 302, 68, 68, 406,
	406, 407, 407, 408, 408, 408, 69, 70, 70, 304,
	304, 305, 305, 71, 72, 84, 84, 84, 84, 84,
	84, 84, 85, 85, 85, 85, 108, 108, 108, 15,
	15, 15, 15, 80, 80, 80, 14, 14, 17, 67,
	67, 74, 394, 394, 395, 396, 396, 396, 396, 75,
	77, 32, 32, 32, 32, 32, 32, 133, 133, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 128, 128, 128, 122, 122, 414, 78, 79, 79,
	126, 126, 126, 119, 119, 119, 125, 125, 125, 16,
	16, 18, 259, 259, 19, 19, 130, 130, 132, 132,
	132, 132, 132, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 131, 131, 131, 131, 294, 294, 294, 293,
	293, 164, 164, 166, 165, 165, 167, 167, 168, 168,
	168, 168, 213, 213, 190, 190, 252, 252, 253, 253,
	251, 251, 258, 258, 254, 254, 254, 254, 261, 261,
	169, 169, 169, 169, 177, 177, 178, 178, 179, 179,
	303, 303, 299, 299, 299, 298, 298, 183, 183, 183,
	185, 184, 184, 184, 184, 186, 186, 188, 188, 187,
	187, 189, 194, 194, 193, 193, 191, 191, 191, 191,
	192, 192, 192, 192, 195, 195, 143, 143, 143, 143,
	143, 143, 143, 143, 156, 156, 156, 156, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 242,
	242, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 218, 218, 217, 217, 86, 86, 86, 87, 87,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 91, 91, 90, 90, 208, 208, 291, 291,
	92, 93, 93, 96, 96, 95, 94, 94, 100, 100,
	97, 97, 99, 99, 98, 101, 101, 102, 103, 103,
	274, 274, 196, 196, 204, 204, 204, 204, 197, 197,
	197, 197, 197, 197, 197, 205, 205, 205, 212, 206,
	206, 202, 202, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 161, 161, 161, 161, 223, 223,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 150, 150, 162, 162, 162,
	162, 163, 163, 163, 163, 163, 163, 163, 311, 311,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 415, 415,
	325, 325, 325, 203, 203, 203, 203, 203, 124, 124,
	124, 124, 124, 308, 308, 308, 312, 312, 312, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 313, 313, 221, 221, 120, 120,
	219, 219, 220, 222, 222, 214, 214, 214, 214, 216,
	216, 199, 199, 199, 224, 224, 225, 225, 104, 105,
	105, 106, 106, 226, 226, 228, 227, 227, 229, 230,
	230, 230, 231, 231, 232, 232, 232, 48, 48, 48,
	48, 48, 43, 43, 43, 43, 44, 44, 44, 44,
	135, 135, 135, 135, 137, 137, 136, 136, 81, 81,
	82, 82, 82, 141, 141, 142, 142, 142, 139, 139,
	140, 140, 249, 249, 233, 233, 233, 240, 240, 240,
	236, 236, 238, 238, 238, 239, 239, 239, 237, 246,
	246, 248, 248, 247, 247, 243, 243, 244, 244, 245,
	245, 245, 241, 241, 198, 198, 198, 198, 198, 250,
	250, 250, 250, 262, 262, 209, 209, 211, 211, 210,
	210, 160, 263, 263, 271, 268, 268, 269, 269, 295,
	295, 295, 272, 272, 285, 285, 281, 281, 282, 282,
	275, 275, 287, 287, 287, 76, 207, 207, 364, 364,
	361, 290, 290, 292, 292, 296, 296, 300, 300, 297,
	297, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 411, 412, 306, 307, 307, 307,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 4, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 6, 4, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 4, 4, 4, 6,
	4, 6, 4, 4, 6, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 4, 4, 6, 4,
	6, 4, 8, 6, 4, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	5, 9, 6, 9, 8, 6, 8, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -409, -78, -414, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	226, -50, -40, 227, -51, 229, 228, 266, 230, 378,
	259, 75, 314, 315, 317, 318, 319, 320, -108, 683,
	264, 265, 232, 37, 46, 34, 35, 38, 236, 272,
	273, 235, -10, -35, 9, -411, 12, 468, 261, 260,
	29, -12, 577, 87, -79, -410, 731, -249, -233, 23,
	34, 30, -232, -228, -126, -233, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -349, -351, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-373, -45, -42, 231, 228, 276, 123, 124, 266, 267,
	268, 230, 250, 265, 269, 264, 285, -41, 82, 34,
	577, 580, -356, 227, 233, 234, 229, 469, 126, 125,
	76, -353, 373, 610, 701, -57, 703, 101, 104, 702,
	45, 240, 704, 705, 706, 617, 707, 249, 708, 709,
	710, 711, 717, 658, 718, 719, 720, 127, 8, -78,
	-300, -296, 91, -289, 574, 252, 608, 422, 609, 301,
	82, 42, 513, 583, 370, 373, 610, 498, 701, 379,
	314, 330, 324, 503, 504, 505, 353, 345, 575, 611,
	584, 304, 253, 289, 695, 343, 135, 703, 308, 612,
	267, 380, 381, 613, 382, 101, 317, 419, 716, 307,
	614, 714, 104, 702, 322, 80, 497, 52, 698, 45,
	262, 427, 428, 341, 235, 337, 704, 290, 615, 586,
	283, 126, 123, 723, 37, 333, 51, 31, 713, 125,
	50, 705, 150, 616, 706, 617, 384, 360, 689, 49,
	385, 268, 618, 85, 273, 579, 311, 697, 386, 518,
	334, 387, 300, 712, 232, 619, 678, 670, 671, 388,
	389, 690, 365, 361, 366, 520, 620, 411, 502, 390,
	674, 675, 730, 53, 621, 622, 691, 124, 623, 79,
	707, 81, 328, 329, 624, 298, 251, 523, 524, 413,
	357, 480, 487, 488, 111, 112, 483, 113, 489, 114,
	490, 491, 492, 481, 115, 108, 482, 493, 494, 358,
	359, 116, 495, 110, 109, 484, 486, 117, 496, 249,
	36, 391, 576, 302, 59, 306, 277, 414, 47, 363,
	727, 46, 685, 525, 625, 688, 356, 352, 477, 54,
	626, 627, 628, 629, 499, 708, 355, 327, 351, 722,
	4, 295, 500, 709, 63, 234, 368, 367, 369, 284,
	410, 348, 630, 631, 632, 256, 83, 633, 338, 22,
	634, 635, 392, 291, 636, 57, 637, 638, 417, 265,
	639, 55, 710, 40, 640, 270, 724, 711, 641, 642,
	643, 684, 644, 272, 645, 394, 646, 672, 673, 393,
	362, 364, 526, 279, 395, 378, 237, 578, 647, 312,
	332, 269, 715, 648, 257, 514, 515, 516, 517, 696,
	522, 521, 271, 276, 264, 418, 258, 649, 650, 651,
	652, 653, 305, 669, 654, 655, 318, 717, 478, 44,
	656, 657, 658, 659, 660, 299, 294, 412, 421, 62,
	84, 375, 661, 662, 694, 326, 323, 292, 459, 461,
	462, 463, 464, 465, 460, 467, 663, 315, 56, 718,
	719, 720, 286, 721, 506, 507, 508, 509, 10, 560,
	543, 571, 544, 561, 545, 554, 546, 562, 570, 572,
	527, 535, 528, 536, 566, 549, 563, 555, 548, 547,
	569, 552, 556, 529, 537, 567, 553, 530, 538, 531,
	539, 532, 540, 565, 564, 557, 568, 533, 541, 559,
	534, 542, 558, 550, 551, 430, 728, 729, 501, 397,
	127, 296, 297, 48, 349, 278, 664, 309, 665, 339,
	340, 474, 475, 354, 325, 350, 681, 316, 679, 280,
	398, 479, 266, 666, 420, 293, 371, 376, 310, 582,
	519, 285, 399, 693, 581, 510, 511, 347, 344, 287,
	512, 667, 683, 400, 241, 281, 282, 668, 680, 401,
	402, 303, 403, 404, 405, 406, 407, 409, 313, 408,
	682, 676, 677, 288, 458, 580, 321, 342, 377, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 476, 239, -78,
	239, -187, -296, 239, 178, -268, 381, -286, 383, 396,
	391, 401, 389, -277, 392, 394, 279, -397, 411, 239,
	398, 226, 384, 393, 402, 403, 303, 409, 404, 313,
	408, 288, 405, 406, 407, -380, 178, 706, 721, 135,
	346, 388, 386, 412, 685, 91, -302, 91, 92, 93,
	-289, 316, -304, 321, -290, -380, -289, 319, -78, -78,
	-306, -306, -128, 685, 687, -206, -143, 143, -156, -257,
	-159, 92, -148, -151, -200, -201, -202, -203, -157, -216,
	-255, 167, 168, 175, 144, -212, -160, 27, 573, 470,
	469, 178, 32, 221, 69, 70, 472, 146, 58, 12,
	435, 436, -158, 425, 426, 437, 431, 432, 497, 499,
	500, 501, 498, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 502, 513, 474, 475, 118, 476, 108,
	110, 109, 477, 478, 479, 343, 525, 526, 520, 523,
	524, 522, 521, 358, 359, 480, 543, 544, 548, 547,
	545, 546, 549, 552, 553, 554, 555, 556, 557, 559,
	558, 550, 551, 528, 527, 529, 530, 531, 532, 533,
	534, 536, 535, 537, 538, 539, 540, 541, 542, 560,
	561, 562, 563, 564, 566, 565, 570, 569, 567, 568,
	572, 571, 481, 482, 111, 112, 113, 114, 115, 116,
	117, 483, 486, 484, 485, 487, 488, 489, 494, 495,
	490, 491, 492, 493, 496, 369, 367, 368, 364, 363,
	362, -88, -100, 599, 598, -101, 422, 427, 428, 430,
	-149, -150, -162, -163, -290, -296, 244, 424, 238, 173,
	468, -152, -146, -214, 107, 93, -8, -210, 423, 433,
	434, 438, 429, 439, 585, 587, 602, 603, 605, 590,
	595, 594, 597, 514, 515, 516, 517, 518, 519, 670,
	671, 672, 673, 674, 675, 676, 677, -380, -289, 91,
	-154, -153, -196, 94, 99, 102, 103, 105, -403, 262,
	339, 340, 119, -411, 699, 90, 95, 96, 97, 98,
	120, 121, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 45, 397, 397, -187, -78, -78,
	-78, -78, -226, -126, -228, -10, -8, -411, 9, -78,
	-8, -9, -13, -35, -37, 604, -36, -296, 100, -233,
	-249, 13, 162, 43, 51, -231, -232, -12, -8, -143,
	20, 24, 25, -131, 169, -143, -296, -131, -275, 243,
	-78, -78, -264, -309, 316, -266, 412, 685, 411, -256,
	-269, 91, -255, -268, 410, 92, -350, 159, -336, -340,
	-290, 254, -366, 250, -187, -359, -358, -290, -411, -127,
	-285, 240, 248, 247, 136, -384, 139, 296, 424, 238,
	-52, -53, -54, -268, 177, 705, -109, 271, 275, 88,
	88, -340, -339, -338, -385, 275, 254, -365, -357, 246,
	255, -346, 247, 248, -341, 240, 137, -385, -341, 245,
	255, 250, 254, 275, 275, 127, 275, 127, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 270, -347, 151,
	-347, 581, 581, -353, -385, 250, 240, -385, -385, 246,
	-287, -341, 242, 26, 242, 36, 36, -347, -347, -347,
	-268, 177, -347, -347, -347, -347, 283, 283, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, 239, -384, -135, 408, 303,
	82, -55, 285, -38, -187, -285, 240, 241, -384, 272,
	-187, 222, -187, 688, -279, 159, 16, -279, -276, 397,
	395, 382, 387, -279, -279, -279, -279, 286, 380, -342,
	240, 36, 251, 397, 286, 380, 286, 287, 286, 287,
	390, 400, 286, -301, 15, 162, 424, 385, 389, 279,
	239, 280, 241, 399, 287, -301, 90, -280, 159, 286,
	397, 282, -279, -279, -307, -411, -292, -290, -288, 231,
	24, 142, 26, 28, 145, 178, 130, 20, 146, 38,
	233, 346, 250, 177, 246, 469, 226, 73, 585, 425,
	432, 423, 431, 435, 471, 472, 424, 383, 32, 14,
	587, 29, 260, 25, 39, 171, 228, 149, 588, 263,
	27, 261, 118, 121, 590, 23, 76, 255, 15, 248,
	41, 17, 591, 592, 18, 244, 243, 162, 240, 71,
	12, 221, 30, 158, 67, 593, 137, 594, 595, 596,
	597, 131, 69, 159, 21, 725, 433, 434, 34, 686,
	573, 274, 173, 74, 60, 687, 143, 429, 598, 599,
	119, 600, 122, 77, 692, 139, 19, 72, 43, 601,
	275, 602, 245, 726, 603, 415, 604, 160, 229, 468,
	70, 161, 699, 605, 700, 238, 396, 9, 473, 33,
	259, 247, 129, 68, 439, 606, 239, 148, 242, 132,
	120, 8, 136, 35, 13, 75, 78, 436, 437, 438,
	58, 128, 577, 147, 16, 607, 416, 141, -380, 688,
	-307, -307, 33, 92, -406, -407, -408, 577, 415, 242,
	-290, -187, -84, 678, 230, -85, 684, 24, 237, -133,
	397, -121, 178, 706, 689, 690, 691, 688, 394, 696,
	694, 692, 286, 693, 88, 139, 141, 142, 4, -143,
	158, -197, 151, 152, 153, 154, 155, 156, 157, 163,
	162, 143, 145, 159, -242, 140, 164, 165, 166, 167,
	168, 169, 170, 172, 171, 173, 174, 160, 161, 177,
	224, 225, -151, -151, -151, -151, -212, -218, -217, -411,
	-214, -380, -289, -296, -411, -411, -151, -274, -411, -148,
	-411, -411, -411, -411, -221, -143, -411, -411, -415, -411,
	-415, -415, -415, -325, -411, -325, -325, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	222, -411, -411, -411, -411, -411, -325, -325, -325, -325,
	-325, -325, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, 103, 99, 102, 94,
	-216, 105, 90, 90, 90, 90, -8, -9, -206, -411,
	-306, -394, -395, -190, -187, -411, 303, -290, -290, 272,
	-231, -12, -8, -226, -232, -228, -8, -78, -119, -132,
	64, 65, -134, 25, 39, 68, 66, 24, -412, 89,
	-412, -249, -412, 88, -37, -252, 87, 62, 44, 90,
	90, 88, 22, -227, -229, -143, 15, -294, 4, -293,
	26, -290, 90, 222, 15, -188, 30, -187, -275, -275,
	88, 91, 316, -265, -267, 413, 415, 151, -295, -290,
	90, 32, 89, 88, -187, -314, -317, -319, -318, -320,
	-315, -316, 343, 344, 178, 347, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 360, 33, 262, 339, 340,
	341, 342, 361, 362, 363, 364, 366, 367, 368, 369,
	324, 345, 575, 325, 326, 327, 328, 329, 330, 332,
	333, 336, 334, 335, 337, 338, -381, -380, 87, 89,
	88, -321, 87, -143, -135, 239, -380, 240, 240, 240,
	-78, 468, -347, -347, -347, 270, 20, -45, -42, -373,
	19, -41, -42, 231, 123, 124, 228, 87, -336, 87,
	-345, -381, -380, 87, 137, 245, 136, -344, -341, -344,
	-345, -380, -214, -380, 137, 137, -380, -380, -261, -290,
	-261, -261, 24, -261, 24, -261, 24, 96, -290, -261,
	24, -261, 24, -261, 24, -261, 24, -261, 24, 32,
	79, 80, 81, 32, 83, 84, 85, -214, -380, -380,
	-214, -336, -214, -187, -380, -268, 96, 96, 96, -347,
	-347, 96, 90, 90, 90, -347, -347, 96, 90, -298,
	-296, 90, 90, -386, 256, 300, 302, 96, 96, 96,
	96, 32, 90, -387, 32, 713, 712, 714, 715, 716,
	90, 96, 32, 96, 32, 96, -290, 87, -187, -141,
	290, 226, 228, 231, 77, 90, 306, 307, 304, 309,
	310, 151, 45, 88, 242, 239, -380, -281, 244, -281,
	-290, -297, -296, -288, 242, 379, 90, -143, -343, 15,
	162, -301, -301, -279, -187, -343, -301, -279, -187, -279,
	-279, -279, -279, -301, -301, -301, -279, -296, -296, -187,
	-187, -187, -187, -187, -187, -187, -307, -280, -279, 688,
	90, -273, 15, 77, -307, -307, 88, 322, 416, 417,
	-305, 319, -80, -290, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 577, -180, -187, 688, 688, 688, 688,
	688, 688, -143, -143, -143, -143, 600, -204, 119, 143,
	120, 121, -159, -143, -205, -210, -212, 106, 162, 145,
	159, -242, -148, -151, -148, -148, -148, -148, -148, -148,
	221, -148, 221, -148, -148, -148, -148, -148, -148, -308,
	-290, 90, 178, -155, -154, 105, -403, -155, 574, 88,
	-217, 222, -143, -143, -380, -117, 441, 442, 443, 444,
	446, 447, 448, 451, 452, 456, 457, 440, 458, 445,
	450, 453, 454, 455, 449, 342, -143, -129, -131, -129,
	-143, -219, -220, 147, -214, -143, -412, -412, 96, 169,
	-125, 25, 39, -125, -125, -125, -125, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -125, -143, -118,
	440, 458, 445, 450, 453, 454, 455, 449, 342, 459,
	460, 461, 462, 463, 464, 465, 466, 467, -118, -117,
	-143, -143, -143, -143, -143, -143, -86, -143, 130, 131,
	132, -206, -143, -148, -143, -143, -143, -412, -143, -143,
	-143, -207, -206, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -379,
	-378, -377, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -206, -206, -206, -206, -206,
	-143, -412, -143, -161, -146, 96, -257, 105, 92, -143,
	-143, -143, -143, -143, -143, -130, -129, -292, -297, -288,
	-289, -129, -130, -130, -129, -129, -143, -143, -143, -143,
	-143, -143, -143, -143, -412, -143, -143, -143, -143, -143,
	-249, -412, -206, 88, -396, 415, 416, 686, -299, 275,
	-298, 26, -207, 90, 15, -259, 78, -290, -231, -231,
	64, 65, 60, -129, -134, -412, -36, 26, -251, -290,
	63, 90, -326, -268, 370, 371, 178, -143, -143, 88,
	-230, 28, 29, -187, -293, 169, -297, -187, -260, 275,
	-187, -165, -167, -168, -169, -190, -213, -411, -170, -8,
	596, 593, 15, -180, -181, -189, -296, -266, -309, -265,
	88, 414, 416, 417, 77, 122, -143, -327, 177, -355,
	-354, -353, -336, -338, -339, -340, 89, -327, -332, 376,
	375, -321, -321, -321, -321, -321, -326, -326, -326, -326,
	87, 87, -321, -321, -321, -321, -329, 87, -329, -329,
	-330, -329, 87, -330, -331, 87, -331, -366, -143, -363,
	-362, -360, -361, 249, 101, 668, 624, 577, 617, 658,
	78, -358, -230, 96, -412, -141, -282, 244, -364, -361,
	-380, -380, -380, -282, 91, 90, 91, 90, 91, 90,
	-110, -59, -1, 725, 726, 727, 88, 20, -337, -336,
	-58, 300, -369, -370, 275, -365, -359, -345, 137, -344,
	-345, -345, -380, 88, 30, 127, 127, 127, 127, 577,
	228, 33, -283, 616, 143, 668, 624, -336, -58, 242,
	242, -308, -308, -308, 90, 90, -278, 721, -180, -137,
	292, 151, 281, 281, 239, 239, 294, -187, 305, 308,
	306, 307, 304, 309, 310, 24, 24, 24, 24, 24,
	293, 295, 297, 283, -187, -187, -281, 77, -182, -187,
	27, -296, 90, 90, -187, -279, -279, -187, -279, -279,
	-187, -408, 323, -290, 357, 679, 680, 682, 681, -121,
	415, 88, 577, 23, -122, 23, -411, 119, 120, 121,
	-205, -148, -151, -148, 142, 263, -148, -148, -411, -214,
	-412, -292, 26, 88, 78, -412, 167, 88, 88, -412,
	-412, 88, 15, -222, -220, 149, -143, -412, 88, -412,
	-412, -206, -143, -143, -143, -143, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -206, -412, 88, 88,
	15, -312, 26, -412, -412, -412, -412, -412, -221, -412,
	15, -412, 78, 88, 162, 88, -412, -412, -412, 88,
	88, -412, -412, 88, -412, 88, -412, -412, -412, -412,
	-412, -412, 88, -412, 88, -412, -412, -412, 88, -412,
	88, -412, -412, 88, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, 88, -412, -412,
	-412, 88, -412, 88, -412, 88, -412, -412, 88, -412,
	88, -412, 88, -412, 88, 88, -412, 88, 88, 88,
	-412, 88, 88, 88, 88, -412, -412, -412, -412, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -412,
	-412, -412, -412, -412, -412, 88, -93, 601, -412, -412,
	88, -412, 88, 88, 88, 88, 88, -412, -411, 222,
	-412, -412, -412, -412, -412, 88, 88, 88, 88, 88,
	88, -412, -412, -412, 88, 88, -412, 88, -412, 88,
	-412, -395, 685, 416, -194, -193, -191, 75, 243, 76,
	-411, -298, -412, -155, -257, -258, -257, -199, -290, 96,
	105, -233, -164, -166, 15, -134, -212, 89, 88, -326,
	-237, -243, -276, -290, 90, 178, -328, 178, -328, 370,
	371, -229, 222, -195, 16, -198, 33, 58, -11, -411,
	-411, 33, 88, -183, -185, -184, -186, 67, 71, 73,
	68, 69, 70, 74, -303, 26, -8, -165, -8, -411,
	-187, -180, -413, 15, 78, -413, 88, 222, -267, -270,
	418, 415, 421, -380, 90, -109, 88, -353, -340, -234,
	-138, 41, -333, 377, -326, 584, -326, -335, 90, -335,
	96, 96, 96, 89, -48, -43, -44, 34, 82, -360,
	-347, 90, 40, -347, -347, -290, 89, -230, -137, -187,
	143, 77, -364, -364, -364, -296, -2, 724, 730, 137,
	87, 382, 19, -251, 88, 89, -215, 301, 89, -111,
	-290, 89, 87, -345, -345, -290, -411, 239, 32, 32,
	668, 624, 616, -58, -215, -214, -380, -327, 723, 722,
	89, 241, 299, -142, 435, -139, 90, 91, -187, -187,
	-187, -187, -187, 231, 228, 405, -404, 311, -404, 284,
	242, -180, -187, 88, -83, 258, 253, -301, -301, 34,
	-187, 415, 697, 695, -143, 142, 263, -159, -151, -117,
	-117, -148, -310, 178, 343, 262, 341, 337, 357, 348,
	375, 339, 376, 334, 333, 332, -310, -308, -148, -206,
	-131, -143, -143, 150, -143, 148, -143, -412, -412, -412,
	-412, -412, -226, -143, -143, -143, -412, 178, 343, 15,
	-143, -308, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -377, -143, -206,
	-143, -206, -143, -143, -143, -143, -143, -378, -378, -378,
	-378, -378, -206, -206, -206, -206, -143, -411, -290, -96,
	-95, -94, 651, 243, -93, -161, -96, -161, 221, -143,
	221, 221, 221, -143, -130, -292, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -191, -341, -341, -341,
	-261, 88, -272, 23, 15, 58, 58, -164, -195, -165,
	-134, -290, -240, 678, -246, 47, -244, -245, 48, -241,
	49, 57, -328, -328, 169, -231, -143, -262, 77, -263,
	-271, -214, -209, -211, -210, -411, -250, -412, -290, -261,
	-263, -167, -168, -168, -167, -168, 67, 67, 67, 72,
	67, 72, 67, -184, -296, -412, -143, -299, 78, -165,
	-165, -189, -296, 169, 415, 419, 420, -353, -402, 119,
	143, 32, 77, 373, 101, -400, 177, 613, 663, 668,
	624, 617, 658, -401, 245, 136, 137, 257, 26, 42,
	89, 88, 89, 88, 89, 89, 88, -284, -283, -44,
	-43, -347, -347, 96, -380, 90, 90, 241, 27, -187,
	77, 77, 77, -112, 728, 96, 87, -3, 82, -143,
	87, 20, -336, -214, -371, -322, -372, -323, -324, -5,
	-6, -348, -115, 58, 101, -62, 45, 240, 708, 709,
	127, -411, 721, -363, -251, -367, -369, -187, -145, -411,
	-144, -146, -152, 167, 168, 262, 339, 340, -215, -187,
	-136, 290, 298, 87, -140, 92, -383, 78, 281, 373,
	281, 90, -405, 312, 90, -405, -187, -83, -48, -187,
	-279, -279, 34, -380, -412, -159, -151, -124, 162, 577,
	-313, 583, -321, -321, -321, -331, -321, 329, -321, 329,
	-321, -412, -412, -412, 88, -412, 23, -412, -143, 88,
	-120, 473, 88, 88, -412, 87, 87, -143, -412, -412,
	-412, 88, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, 88, -412, 88,
	-412, 88, -412, 88, -412, 88, -412, -412, 88, -412,
	-412, -412, 88, -412, 88, -412, 88, -412, -412, -412,
	88, -311, 669, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -92, -291, -290, -93, 633, 633,
	-412, -93, -223, 88, -148, -412, -148, -148, -148, -412,
	-412, -412, 88, -412, 88, 88, -412, 88, -412, 88,
	-412, -412, -412, -412, 88, -192, 23, -192, -192, -412,
	-257, -187, -195, -224, 17, -237, 52, 349, -248, -247,
	56, 48, -245, 20, 50, 20, 31, -262, 88, 151,
	88, -412, -412, 88, 58, 222, -412, -195, -178, -177,
	77, 78, -179, 77, -177, 67, 67, -252, 88, -260,
	-165, -195, -195, 222, 119, -411, -147, -158, -145, 13,
	90, 90, -380, -399, 712, 713, 32, 96, -347, -347,
	137, 137, -187, 87, -326, 90, -326, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -187, -187, -187,
	-187, -368, 87, 20, -143, 87, 151, 89, -251, -251,
	277, 162, -347, 706, 283, 283, -347, -347, -347, -114,
	-113, 728, 89, -412, 88, -334, 577, 580, -143, -153,
	-153, -252, 89, -376, 577, -382, -290, -290, -290, -290,
	96, 98, -412, 575, 74, 578, -412, -326, -143, -143,
	-143, -231, 90, -143, -143, 96, 96, -412, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -206, -143,
	-412, -175, -174, -176, 689, 119, 32, -310, -412, -208,
	275, -99, -98, -97, 15, -412, -143, -117, -117, -117,
	-117, -143, -143, -143, -143, -143, -143, -411, 67, 19,
	17, -411, -411, -299, -224, -225, 18, 20, -238, 54,
	-236, 53, -236, -247, 20, 20, 90, 20, 90, 137,
	-271, -143, -211, 58, -11, -290, -209, -290, -226, -143,
	87, -143, -155, -195, -195, -143, -201, 497, 499, 500,
	501, 498, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 502, 513, 474, 475, 476, 108, 110, 109,
	477, 478, 479, 343, 525, 526, 520, 523, 524, 522,
	521, 358, 359, 480, 543, 544, 548, 547, 545, 546,
	549, 552, 553, 554, 555, 556, 557, 559, 558, 550,
	551, 528, 527, 529, 530, 531, 532, 533, 534, 536,
	535, 537, 538, 539, 540, 541, 542, 560, 561, 562,
	563, 564, 566, 565, 570, 569, 567, 568, 572, 571,
	481, 482, 111, 112, 113, 114, 115, 116, 117, 483,
	486, 484, 487, 488, 489, 494, 495, 490, 491, 492,
	493, 496, 369, 367, 368, 364, 363, 362, 422, 427,
	428, 430, 514, 515, 516, 517, 518, 519, 670, 671,
	672, 673, 674, 675, 676, 677, 90, 90, 87, -143,
	89, 89, -252, -367, -59, 89, -253, -251, 96, 89,
	278, -210, -411, 90, -347, -347, -347, 96, 96, -298,
	-412, 88, -290, -401, -369, 581, 581, -412, 26, -375,
	-374, -292, 87, 78, 63, 576, 579, -412, -412, 88,
	-412, -412, -412, 89, 89, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, 88, -412, -174,
	-176, -412, 77, -155, -226, 20, -96, 300, 302, -96,
	-412, -412, -412, -412, -412, 88, -412, -412, 88, -412,
	88, -412, -412, -254, -412, -290, 245, 20, 20, -254,
	-254, -194, -225, -106, -105, -104, 607, -143, -206, -239,
	55, 77, 122, 90, 90, 90, 13, -209, 222, -231,
	-251, -172, 382, -226, -412, -251, 89, 26, 89, 730,
	137, 89, -210, -123, -411, 274, -298, 90, 90, -113,
	-116, -11, 88, 151, -251, -187, 63, -143, -206, -412,
	77, 588, 689, -91, -90, -87, 700, 726, -206, -93,
	-93, -143, -143, -143, 88, -412, -412, -412, -106, 88,
	-103, -102, -290, 77, 122, -263, -290, 89, -412, -411,
	-231, 89, -235, -11, 87, -3, 274, -322, -372, -323,
	-324, -5, -6, -348, -81, 577, -374, -352, -296, -292,
	90, 96, 89, 577, -412, -412, -89, 145, 698, 666,
	-153, 221, -412, 88, -412, 88, -412, 88, -290, 245,
	-104, 88, 26, -299, -173, -171, -290, 630, -392, -391,
	573, -402, -398, 119, 143, 101, -400, 668, 624, 128,
	129, -81, -143, 87, -412, -82, 289, 685, 222, -383,
	578, -89, 699, 644, 619, 644, 619, -148, -143, -143,
	-143, -102, -411, -412, 88, 23, -314, -61, 641, -389,
	-390, 77, -393, 388, 640, 661, 119, 90, 89, -251,
	250, -297, -376, 579, 142, -117, -412, 88, -412, 88,
	-412, -92, -171, 637, -327, -155, -390, 77, -389, 77,
	14, 13, -4, 729, 89, 291, -89, 644, 619, -143,
	-143, -412, -60, 27, -172, -388, 258, 253, 256, 33,
	-388, 96, -4, -412, -412, 641, 252, 32, 119, -155,
	-175, -174, -174,
}

var yyDef = [...]int{
	876, -2, -2, 878, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 876, 876, 876, 0, 876, 0, 0,
	876, -2, -2, 876, 1607, 0, 876, 0, 0, 0,
	-2, 791, 797, 0, 806, -2, 0, 0, 876, 876,
	2226, 2226, 871, 0, 0, 0, 0, 0, 876, 876,
	876, 876, 1473, 51, 876, 0, 86, 87, 826, 827,
	828, 66, 0, 2224, 877, 1, 3, 72, 76, 0,
	0, 0, 59, 1482, 0, 79, 0, 0, 880, 0,
	0, 1590, 876, 876, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 602, 525,
	577, 523, 562, -2, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 400, 400,
	0, 0, -2, 511, 511, 511, 1592, 0, 0, 0,
	559, 462, 400, 400, 400, 0, 400, 400, 400, 400,
	0, 0, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 1500,
	166, 1608, 1605, 1606, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 0, 1584,
	0, 715, 979, 0, 0, 780, 780, 0, 780, 780,
	780, 780, 0, 0, 0, 729, 0, 0, 0, 0,
	777, 0, 745, 746, 0, 777, 0, 752, 783, 0,
	0, 758, 780, 780, 761, 2227, 0, 2227, 2227, 1575,
	0, 774, 772, 786, 787, 41, 790, 793, 794, 795,
	796, 799, 0, 810, 813, 1601, 1602, 0, 815, 822,
	839, 840, 0, 872, 873, 46, 1129, 0, 1001, 0,
	1007, -2, 1018, 1035, 1036, 1037, 1038, 1039, 1041, 1042,
	1043, 0, 0, 0, 0, 1048, 1049, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 1446, 0, 0,
	1408, 1408, 1144, 1408, 1408, 1410, 1410, 1410, 1812, 1950,
	1958, 2134, 1773, 1779, 1780, 1781, 2080, 2081, 2082, 2083,
	2171, 2172, 2176, 1874, 1768, 2147, 2148, 0, 2223, 1911,
	1919, 1920, 1944, 2044, 2157, 1791, 1939, 2008, 1871, 1893,
	1894, 2026, 2027, 1915, 1916, 1897, 2086, 2088, 2104, 2105,
	2090, 2092, 2101, 2107, 2112, 2091, 2103, 2108, 2121, 2125,
	2128, 2129, 2130, 2098, 2096, 2109, 2113, 2115, 2117, 2123,
	2126, 2099, 2097, 2110, 2114, 2116, 2118, 2124, 2127, 2085,
	2089, 2093, 2102, 2120, 2100, 2119, 2094, 2106, 2111, 2122,
	2095, 2087, 1909, 1912, 1900, 1901, 1903, 1905, 1910, 1917,
	1923, 1902, 1922, 1921, 0, 1898, 1899, 1904, 1914, 1918,
	1906, 1907, 1908, 1913, 1924, 1964, 1963, 1962, 2007, 1935,
	2006, 0, 0, 0, 0, 0, 1763, 1817, 1818, 2131,
	1330, 1331, 1332, 1333, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 1459, 1460, 45, 1128, 1571, 1410, 1410,
	1410, 1410, 1410, 1410, 1070, 1071, 1072, 1073, 1074, 1098,
	1099, 1105, 1106, 2021, 2022, 2023, 2024, 1855, 2166, 1863,
	1864, 2003, 2004, 1876, 1877, 2197, 2198, -2, -2, -2,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 1816,
	2145, 2146, 229, 0, 0, 297, 298, 294, 295, 296,
	1112, 1113, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 2226, 0, 849, 0, 0, 0,
	0, 0, 1482, 0, 1474, 1473, 64, 0, 876, -2,
	0, 0, 0, 0, 48, 0, 53, 936, 879, 78,
	77, 1522, 0, 0, 0, 60, 1483, 68, 70, 1484,
	0, 881, 882, 0, 912, 916, 0, 0, 0, 1591,
	1590, 1590, 103, 0, 0, 104, 124, 125, 126, 0,
	0, 110, 111, 1577, 1578, 44, 0, 0, 178, 179,
	0, 42, 427, 0, 174, 0, 420, 359, 0, 1500,
	0, 0, 0, 0, 0, 876, 0, 1585, 155, 156,
	163, 164, 165, 400, 400, 400, 574, 0, 0, 166,
	166, 532, 533, 534, 0, 0, -2, 425, 0, 512,
	0, 0, 414, 414, 418, 416, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 401,
	0, 572, 573, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 1594, 0, 549, 550, 0, 0, 0,
	400, 400, 0, 0, 0, 0, 400, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 1513, 0, 0,
	0, -2, 0, 707, 0, 0, 0, 1586, 1586, 0,
	714, 0, 716, 0, 719, 0, 0, 720, 0, 777,
	777, 775, 776, 722, 723, 724, 725, 780, 0, 0,
	409, 410, 411, 777, 780, 0, 780, 780, 780, 780,
	777, 777, 777, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 783, 780, 0, 753, 0, 754,
	755, 756, 759, 760, 762, 2228, 2229, 1603, 1604, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 2227, 2227,
	766, 770, 1576, 792, 798, 800, 801, 0, 0, 811,
	814, 833, 50, 1862, 821, 50, 823, 824, 825, 851,
	852, 857, 0, 0, 0, 0, 863, 864, 865, 0,
	0, 868, 869, 870, 0, 0, 0, 0, 0, 999,
	0, 0, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1019, 1020, 0,
	0, 0, 1044, 1045, 1046, 1047, 1050, 0, 1061, 0,
	1063, 1455, -2, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1447, 0, 0, 1142, 0,
	1143, 1145, 1146, 1147, 0, 1148, 1149, 886, 886, 886,
	886, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 896, 896, 0, 0, 221, 222, 223, 224,
	225, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 299, 247, 248, 249, 1128, 0, 0, 0,
	47, 841, 842, 0, 962, 1596, 0, 0, 892, 0,
	58, 67, 69, 1482, 62, 1482, 0, 898, 0, 0,
	-2, -2, 899, 905, 906, 907, 908, 909, 55, 2225,
	56, 0, 75, 0, 49, 0, 0, 0, 0, 373,
	1525, 0, 0, 1475, 1476, 1479, 0, 913, 1956, 917,
	0, 919, 920, 0, 0, 101, 0, 978, 0, 0,
	0, 112, 0, 114, 115, 0, 0, 0, 384, 1579,
	1580, 1581, -2, 407, 0, 384, 368, 307, 308, 309,
	359, 311, 359, 359, 359, 359, 373, 373, 373, 373,
	342, 343, 344, 345, 346, 0, 0, 328, 359, 359,
	359, 359, 349, 350, 351, 352, 353, 354, 355, 356,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 361,
	361, 361, 361, 361, 365, 365, 0, 43, 0, 388,
	0, 1479, 0, 0, 1513, 1588, 1598, 0, 0, 0,
	1588, 133, 0, 0, 0, 575, 613, 526, 563, 576,
	0, 529, 530, -2, 0, 0, 511, 0, 513, 0,
	408, 0, -2, 0, 418, 0, 414, 418, 415, 418,
	406, 419, 553, 554, 555, 0, 557, 558, 643, 948,
	0, 0, 0, 0, 0, 649, 650, 651, 0, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 513, 0, 560, 0, 0, 464, 465, 466, 0,
	0, 469, 470, 471, 472, 0, 0, 475, 476, 477,
	965, 966, 478, 479, 504, 505, 506, 480, 481, 482,
	483, 484, 485, 486, 498, 499, 500, 501, 502, 503,
	487, 488, 489, 490, 491, 492, 495, 0, 148, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	895, 980, 1609, 1610, 0, 0, 781, 782, 0, 412,
	413, 780, 780, 726, 767, 0, 780, 730, 768, 731,
	733, 732, 734, 747, 748, 780, 737, 778, 779, 738,
	739, 740, 741, 742, 743, 744, 763, 749, 750, 751,
	784, 0, 788, 789, 764, 765, 0, 0, 804, 805,
	0, 812, 836, 834, 835, 837, 829, 830, 831, 832,
	0, 838, 0, 0, 854, 97, 859, 860, 861, 862,
	874, 867, 1130, 996, 997, 998, 0, 1000, 1004, 0,
	1114, 1116, 1006, 1002, 1008, 1125, 1126, 1127, 0, 0,
	0, 0, 0, 1012, 1016, 1021, 1022, 1023, 1024, 1025,
	0, 1026, 0, 1029, 1030, 1031, 1032, 1033, 1034, 1040,
	1423, 1424, 1425, 1059, 300, 301, 0, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1129, 0, 910, 0,
	0, 1453, 1450, 0, 0, 0, 1409, 1411, 0, 0,
	0, 887, 888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 0, 0,
	1426, 0, 0, 0, 0, 0, 1446, 0, 1065, 1066,
	1067, 0, 0, 0, 0, 0, 0, 1188, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 1335, 1336, 1337, 40, 0,
	0, 0, 0, 0, 0, 0, 897, 1457, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 844, 845, 847, 0, 982, 0,
	963, 0, 0, 850, 0, 891, 0, 894, 61, 63,
	903, 904, 0, 921, 900, 57, 52, 0, 0, 940,
	1523, 373, 1545, 0, 382, 382, 379, 1485, 1486, 0,
	1478, 1480, 1481, 80, 918, 914, 0, 994, 0, 0,
	977, 0, 924, 926, 927, 928, 960, 0, 931, 932,
	0, 0, 0, 0, 0, 99, 979, 105, 0, 113,
	0, 0, 118, 119, 106, 107, 108, 109, 0, 602,
	-2, 459, 180, 182, 183, 184, 175, -2, 371, 369,
	370, 310, 373, 373, 336, 337, 338, 339, 340, 341,
	0, 0, 329, 330, 331, 332, 321, 0, 322, 323,
	324, 363, 0, 325, 326, 0, 327, 426, 0, 1487,
	389, 390, 392, 400, 0, 395, 396, 0, 400, 400,
	0, 421, 422, 0, 1479, 1504, 0, 0, 0, 1599,
	1598, 1598, 1598, 0, 168, 169, 170, 171, 172, 173,
	638, 0, 0, 614, 636, 637, 166, 0, 0, 176,
	515, 514, 0, 670, 0, 424, 0, 0, 418, 418,
	403, 404, 556, 0, 0, 645, 646, 647, 648, 0,
	0, 0, 542, 453, 0, 543, 544, 513, 515, 0,
	0, 384, 467, 468, 473, 474, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 590,
	591, 594, 596, 517, 600, 593, 595, 597, 517, 601,
	1501, 1502, 1503, 0, 0, 708, 0, 0, 450, 95,
	1587, 713, 717, 718, 777, 736, 769, 777, 728, 735,
	757, 802, 803, 808, 816, 817, 818, 819, 820, 858,
	0, 0, 0, 0, 866, 0, 0, 1005, 1115, 1117,
	1009, 0, 1013, 1017, 0, 0, 0, 0, 0, 1064,
	1062, 1457, 0, 0, 0, 1111, 0, 0, 0, 1133,
	1134, 0, 0, 0, 1451, 0, 0, 1140, 0, 1412,
	1150, 0, 0, 0, 0, 0, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1473, 1167, 0, 0,
	0, 0, 0, 1172, 1173, 1174, 1175, 1176, 0, 1178,
	0, 1179, 0, 0, 0, 0, 1186, 1187, 1189, 0,
	0, 1192, 1193, 0, 1195, 0, 1197, 1198, 1199, 1200,
	1201, 1202, 0, 1204, 0, 1206, 1207, 1208, 0, 1210,
	0, 1212, 1213, 0, 1215, 0, 1217, 0, 1220, 0,
	1223, 0, 1226, 0, 1229, 0, 1232, 0, 1235, 0,
	1238, 0, 1241, 0, 1244, 0, 1247, 0, 1250, 0,
	1253, 0, 1256, 0, 1259, 0, 1262, 0, 1265, 1266,
	1267, 0, 1269, 0, 1271, 0, 1274, 1275, 0, 1277,
	0, 1280, 0, 1283, 0, 0, 1284, 0, 0, 0,
	1288, 0, 0, 0, 0, 1297, 1298, 1299, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	1312, 1313, 1314, 1315, 1316, 0, 1318, 0, 1093, 0,
	0, 1093, 0, 0, 0, 0, 0, 1131, 896, 0,
	1413, 1414, 1415, 1416, 1417, 0, 0, 0, 0, 0,
	0, 1357, 1358, 1360, 0, 0, 1363, 0, 1365, 0,
	1570, 843, 846, 848, 934, 983, 984, 0, 0, 0,
	0, 964, 1595, 889, 890, 893, 942, 0, 1461, 0,
	0, 921, 994, 922, 0, 901, 54, 937, 0, 1527,
	1526, 1539, 1552, 382, 382, 376, 377, 383, 378, 380,
	381, 1477, 0, 1482, 0, 1563, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	970, 0, 0, 0, 0, 961, 932, 0, 933, 0,
	-2, 0, 0, 93, 94, 0, 0, 0, 116, 117,
	0, 0, 123, 385, 386, 157, 166, 461, 181, 434,
	0, 0, 306, 372, 333, 334, 335, 0, 357, 0,
	0, 0, 0, 455, 129, 1491, 1490, 400, 400, 391,
	0, 394, 0, 0, 0, 1600, 360, 423, 0, 147,
	0, 0, 0, 0, 0, 153, 608, 0, 0, 615,
	0, 0, 0, 524, 0, 535, 536, 0, 642, -2,
	704, 388, 0, 402, 405, 949, 0, 0, 537, 0,
	540, 541, 454, 515, 546, 547, 561, 548, 496, 497,
	494, 0, 0, 1514, 1515, 1520, 1518, 1519, 134, 582,
	584, 583, 587, 0, 0, 0, 519, 0, 519, 580,
	0, 450, 1487, 0, 712, 451, 452, 780, 780, 853,
	98, 0, 856, 0, 0, 0, 0, 1010, 1014, 1027,
	1028, 1418, 1444, 359, 359, 1431, 359, 365, 1434, 359,
	1436, 359, 1439, 359, 1442, 1443, 0, 0, 1057, 0,
	911, 0, 0, 1139, 1454, 0, 0, 1151, 1152, 1153,
	1154, 1155, 1448, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 146, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1088, 1092, 0,
	1094, 1095, 0, 0, 1320, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 1458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 990, 990, 990,
	0, 0, 0, 1582, 1583, 1462, 1463, 994, 1464, 923,
	902, 941, 1545, 0, 1538, 0, -2, 1547, 0, 0,
	0, 1553, 374, 375, 915, 81, 995, 84, 0, 1563,
	1572, 0, 1554, 1565, 1567, 0, 0, 0, 1559, 0,
	994, 925, 956, 958, 0, 953, 968, 969, 971, 0,
	973, 0, 975, 976, 936, 930, 0, 101, 0, 994,
	994, 100, 0, 981, 120, 121, 122, 460, 185, 190,
	0, 0, 0, 195, 0, 197, 0, 0, 0, 202,
	203, 400, 400, 435, 0, 303, 305, 0, 0, 188,
	373, 0, 373, 0, 364, 366, 0, 436, 456, 1488,
	1489, 0, 0, 393, 397, 398, 399, 0, 1589, 149,
	0, 0, 0, 611, 0, 639, 0, 0, 0, 0,
	0, 0, 177, 516, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 0, 400, 0, 0, 0, 400, 400,
	400, 0, 696, 387, 0, 0, 667, 664, 538, 0,
	227, 228, 230, 0, 0, 0, 0, 0, 545, 936,
	1505, 1506, 1507, 0, 1517, 1521, 137, 0, 0, 0,
	0, 592, 598, 0, 518, 599, 709, 710, 711, 96,
	721, 727, 855, 875, 1003, 1011, 1015, 0, 0, 0,
	0, 1445, 1429, 373, 1432, 1433, 1435, 1437, 1438, 1440,
	1441, 1053, 1054, 1058, 0, 1136, 0, 1138, 1452, 0,
	1482, 0, 0, 0, 1170, 0, 0, 0, 1181, 1180,
	1182, 0, 1184, 1185, 1190, 1191, 1194, 1196, 1203, 1205,
	1209, 1211, 1214, 1216, 1218, 0, 1221, 0, 1224, 0,
	1227, 0, 1230, 0, 1233, 0, 1236, 0, 1239, 0,
	1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254, 0,
	1257, 0, 1260, 0, 1263, 0, 1268, 1270, 0, 1273,
	1276, 1278, 0, 1281, 0, 1285, 0, 1287, 1289, 1290,
	0, 0, 0, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1317, 0, 1086, 1089, 1319, 1096, 1097,
	1102, 1322, 0, 0, 0, 1325, 0, 0, 0, 1329,
	1132, 1340, 0, 1345, 0, 0, 1351, 0, 1355, 0,
	1361, 1362, 1364, 1366, 0, 0, 0, 0, 0, 962,
	943, 65, 1464, 1466, 0, 1532, 1530, 1530, 1540, 1541,
	0, 0, 1548, 0, 0, 0, 0, 85, 0, 0,
	0, 1568, 0, 0, 0, 0, 102, 1473, 950, 957,
	0, 0, 951, 0, 952, 972, 974, 929, 0, 994,
	994, 91, 92, 0, 191, 0, 193, 219, 220, 0,
	196, 198, 199, 200, 206, 207, 208, 201, 0, 0,
	302, 304, 0, 0, 347, 358, 348, 0, 0, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 936, 150, 151,
	152, 603, 0, 613, 0, 938, 0, 606, 0, 527,
	0, 0, 0, 400, 400, 400, 0, 0, 0, 0,
	681, 0, 0, 644, 0, 652, 0, 0, 0, 231,
	232, 0, 1516, 581, 0, 135, 136, 0, 0, 586,
	520, 521, 1051, 0, 0, 0, 1052, 1430, 0, 0,
	0, 0, 1449, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 633, 634, 0, 1369, 1091, 1473,
	0, 1093, 1103, 1104, 0, 1093, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 991, 0,
	0, 0, 0, 982, 1466, 1471, 0, 0, 1535, 0,
	1528, 1531, 1529, 1542, 0, 0, 1549, 0, 1551, 0,
	1573, 1574, 1566, 0, 1558, 1561, 1557, 1560, 1482, 954,
	0, 959, 0, 1473, 90, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 205, 0, 0,
	362, 367, 0, 0, 0, 604, 0, 939, 616, 607,
	0, 694, 0, 698, 0, 0, 0, 701, 702, 703,
	680, 0, 684, 428, 668, 665, 666, 539, 0, 138,
	139, 0, 0, 0, 1419, 0, 1422, 1135, 1137, 0,
	1166, 1168, 1169, 1427, 1428, 1183, 1219, 1222, 1225, 1228,
	1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258,
	1261, 1264, 1272, 1279, 1282, 1286, 1291, 0, 1294, 0,
	0, 1295, 0, 635, 1082, 0, 0, 1100, 1101, 0,
	1324, 1326, 1327, 1328, 1341, 0, 1346, 1347, 0, 1352,
	0, 1356, 1367, 0, 987, 944, 945, 992, 993, 0,
	0, 935, 1471, 83, 1472, 1469, 0, 1467, 1465, 1524,
	0, 1533, 1534, 1543, 1544, 1550, 0, 1556, 0, 88,
	0, 0, 0, 1482, 192, 0, 211, 0, 612, 0,
	615, 605, 692, 693, 0, 705, 697, 699, 700, 682,
	-2, 1508, 0, 0, 0, 588, 1420, 0, 0, 1296,
	0, 631, 632, 1090, 1083, 0, 1068, 1069, 1087, 1321,
	1323, 0, 0, 0, 0, 986, 988, 989, 82, 0,
	1468, 1108, 0, 1536, 1537, 1564, 1562, 955, 962, 0,
	89, 441, 434, 1508, 0, 0, 0, 685, 686, 687,
	688, 689, 690, 691, 578, 1510, 140, 141, 0, 508,
	509, 510, 134, 0, 1141, 1292, 1084, 0, 0, 0,
	0, 0, 1342, 0, 1348, 0, 1353, 0, 946, 947,
	1470, 0, 0, 617, 0, 619, 0, -2, 429, 442,
	0, 186, 212, 213, 0, 0, 216, 217, 218, 209,
	210, 130, 0, 0, 706, 0, 1511, 1512, 0, 137,
	0, 0, 1075, 1076, 1077, 1078, 1080, 0, 0, 0,
	0, 1109, 1088, 618, 0, 0, 384, 0, 628, 430,
	431, 0, 437, 438, 439, 440, 214, 215, 640, 0,
	0, 507, 585, 1421, 0, 0, 1343, 0, 1349, 0,
	1354, 0, 620, 621, 629, 0, 432, 0, 433, 0,
	0, 0, 609, 0, 640, 1509, 1085, 1079, 1081, 0,
	0, 1107, 0, 630, 626, 443, 445, 446, 0, 0,
	444, 641, 610, 1344, 1350, 0, 447, 448, 449, 622,
	623, 624, 625,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 731,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:598
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:611
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:616
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:660
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:671
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:681
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:685
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:691
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:697
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:703
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:707
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:716
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:726
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:732
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:806
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:885
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:891
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:899
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:933
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:937
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:971
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:981
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:991
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1004
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1016
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1026
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1030
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1034
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1038
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1044
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1048
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1052
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1058
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1068
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1078
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1082
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1086
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1110
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1114
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1118
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1124
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1130
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1137
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1150
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1181
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1186
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1192
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1203
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1212
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1218
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1234
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1241
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1248
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1253
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1258
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1270
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1277
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1288
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1299
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1305
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1309
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1313
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1331
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1341
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1345
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1371
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1375
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1381
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1391
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1396
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1429
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1438
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1460
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1530
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1546
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1550
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1554
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1560
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1564
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1569
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1578
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1584
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1590
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1595
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1951
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1955
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1959
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1963
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2099
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2212
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2217
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2221
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2241
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2259
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2263
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2323
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2327
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2346
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2355
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2361
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2371
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2375
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2380
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2384
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2388
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2392
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2406
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2416
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2420
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2424
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2428
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2432
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2499
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2503
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2509
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2513
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2519
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2523
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2529
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2533
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2539
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2545
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2549
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2553
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2557
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2561
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2576
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2582
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2588
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2592
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2596
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2605
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2611
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2617
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2623
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2627
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2631
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2635
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2662
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2680
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2686
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2700
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2710
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2714
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2718
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2738
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2885
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2889
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2898
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2916
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2920
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2929
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2933
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2937
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2945
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2951
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3093
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3360
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3369
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3377
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3386
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3393
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3405
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3414
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3429
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3443
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3447
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3453
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3459
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3465
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3475
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3479
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3485
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3491
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3497
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3503
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3527
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3533
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3539
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3543
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3547
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3553
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3557
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3562
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3566
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3571
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3575
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3581
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3585
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3589
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3593
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3597
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3601
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3605
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3609
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3613
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3617
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3621
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3625
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3629
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3633
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3637
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3641
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3645
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3649
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3653
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3657
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3661
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3665
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3684
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3699
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3703
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3708
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3713
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3718
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3723
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3728
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3734
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3751
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3757
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3767
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3772
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3776
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3786
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3791
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3796
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3802
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3815
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3822
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3829
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3841
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3847
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3853
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3859
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3865
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3871
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3877
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3889
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3911
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3915
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = "extended "
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4213
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4231
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4235
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4245
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4322
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4328
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4338
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4342
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4346
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4373
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4390
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4394
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4398
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4402
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4406
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4410
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4414
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4419
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4423
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4427
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4431
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4514
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4518
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4524
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4530
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4534
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4538
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4542
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4548
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4554
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4560
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4572
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4576
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4580
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4590
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4628
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4645
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4649
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			setAllowComments(yylex, true)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.strs = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4687
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4695
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = SQLCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4713
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4741
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4750
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4756
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4769
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4774
		{
			yyVAL.strs = nil
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4786
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = SQLCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = DistinctStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = StraightJoinHint
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4826
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4836
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4840
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4844
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4848
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4853
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4857
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4873
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4877
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4883
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4889
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4903
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4907
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4911
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4915
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4921
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4925
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4931
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4935
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4944
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4953
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4959
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4969
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4979
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4983
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4997
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5014
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5018
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5022
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5026
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5032
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5034
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5038
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5044
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5046
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5049
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5075
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5079
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5083
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5089
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5095
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5099
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5103
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5107
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5127
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5137
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5141
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5156
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5162
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5172
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5176
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5180
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5184
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5189
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5193
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5197
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5201
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5493
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5497
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5503
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5513
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5517
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5521
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5527
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5531
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5538
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5542
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5546
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5550
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5554
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5560
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5564
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5568
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5572
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5576
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5580
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5584
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5593
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5599
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5603
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5612
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5617
		{
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5626
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5632
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5636
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5648
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5654
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5658
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5664
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5668
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5674
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5678
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5690
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5696
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5700
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5706
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5712
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5716
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = ""
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5732
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5736
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5743
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5747
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5751
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5755
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5761
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5765
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5769
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5773
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5777
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5781
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5785
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5791
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5795
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5799
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5806
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5812
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5816
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6798
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6804
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6808
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6812
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6816
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6820
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6824
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6828
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6832
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6836
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6840
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6844
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6848
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6852
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6856
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6860
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6864
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6868
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6872
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6876
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6880
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6886
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6890
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6894
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6898
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6902
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6906
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6910
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6914
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6918
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6922
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6926
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6930
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6934
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6938
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6942
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6946
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6950
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6954
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6964
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6968
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6972
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6982
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6986
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6990
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6994
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6998
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7004
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7008
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7012
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7016
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7020
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7044
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7048
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7054
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7058
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7062
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7066
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7070
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7076
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7080
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7084
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7088
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7092
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7096
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7100
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7104
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7108
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7112
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7131
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7136
		{
			yyVAL.str = string("")
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7140
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7146
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7150
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7156
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7165
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7171
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7175
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7179
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7183
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7189
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7193
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7199
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7208
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7212
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7221
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7230
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7236
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7242
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7246
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7255
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7264
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7270
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7276
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7280
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7286
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7291
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7295
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7299
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7308
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7314
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7318
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7322
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7331
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7335
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7339
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7343
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7350
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7354
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7358
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7362
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7368
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7372
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7376
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7380
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7385
		{
			yyVAL.str = ""
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7389
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7393
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7397
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7402
		{
			yyVAL.str = ""
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7406
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7412
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7421
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7425
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = "cascaded"
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7434
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7447
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7453
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7459
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7465
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7474
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7478
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7483
		{
			yyVAL.str = ""
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7487
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7493
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7497
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7503
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7507
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7511
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7516
		{
			yyVAL.str = ""
		}
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7520
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7524
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = " header"
		}
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7538
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = " manifest on"
		}
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7546
		{
			yyVAL.str = " manifest off"
		}
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = ""
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7555
		{
			yyVAL.str = " overwrite on"
		}
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7559
		{
			yyVAL.str = " overwrite off"
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7570
		{
			yyVAL.str = ""
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7574
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7590
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7599
		{
			yyVAL.str = ""
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7603
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7609
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7619
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7623
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7632
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7636
		{
			yyVAL.str = " optionally"
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7649
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7653
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7657
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7661
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7665
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7671
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7675
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7679
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7683
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7692
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7698
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7702
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7708
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7712
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7718
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7722
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7727
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7737
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7741
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7747
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7754
		{
			yyVAL.str = "charset"
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7764
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7768
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7772
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7781
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7788
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7791
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7798
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7801
		{
			yyVAL.empty = struct{}{}
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7803
		{
			yyVAL.empty = struct{}{}
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7805
		{
			yyVAL.empty = struct{}{}
		}
	case 1595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7809
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7818
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7825
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7829
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7835
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7839
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7846
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7852
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7856
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7862
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7866
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7873
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8513
		{
		}
	case 2225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8518
		{
		}
	case 2226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8522
		{
			skipToEnd(yylex)
		}
	case 2227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8527
		{
			skipToEnd(yylex)
		}
	case 2228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8531
		{
			skipToEnd(yylex)
		}
	case 2229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8535
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
