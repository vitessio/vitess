// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const COLLATION = 57611
const DATABASES = 57612
const SCHEMAS = 57613
const TABLES = 57614
const VITESS_METADATA = 57615
const VSCHEMA = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const EXTENDED = 57623
const KEYSPACES = 57624
const VITESS_KEYSPACES = 57625
const VITESS_SHARDS = 57626
const VITESS_TABLETS = 57627
const VITESS_MIGRATIONS = 57628
const CODE = 57629
const PRIVILEGES = 57630
const FUNCTION = 57631
const OPEN = 57632
const TRIGGERS = 57633
const EVENT = 57634
const USER = 57635
const NAMES = 57636
const CHARSET = 57637
const GLOBAL = 57638
const SESSION = 57639
const ISOLATION = 57640
const LEVEL = 57641
const READ = 57642
const WRITE = 57643
const ONLY = 57644
const REPEATABLE = 57645
const COMMITTED = 57646
const UNCOMMITTED = 57647
const SERIALIZABLE = 57648
const CURRENT_TIMESTAMP = 57649
const DATABASE = 57650
const CURRENT_DATE = 57651
const CURRENT_TIME = 57652
const LOCALTIME = 57653
const LOCALTIMESTAMP = 57654
const CURRENT_USER = 57655
const UTC_DATE = 57656
const UTC_TIME = 57657
const UTC_TIMESTAMP = 57658
const REPLACE = 57659
const CONVERT = 57660
const CAST = 57661
const SUBSTR = 57662
const SUBSTRING = 57663
const GROUP_CONCAT = 57664
const SEPARATOR = 57665
const TIMESTAMPADD = 57666
const TIMESTAMPDIFF = 57667
const MATCH = 57668
const AGAINST = 57669
const BOOLEAN = 57670
const LANGUAGE = 57671
const WITH = 57672
const QUERY = 57673
const EXPANSION = 57674
const WITHOUT = 57675
const VALIDATION = 57676
const UNUSED = 57677
const ARRAY = 57678
const CUME_DIST = 57679
const DESCRIPTION = 57680
const DENSE_RANK = 57681
const EMPTY = 57682
const EXCEPT = 57683
const FIRST_VALUE = 57684
const GROUPING = 57685
const GROUPS = 57686
const JSON_TABLE = 57687
const LAG = 57688
const LAST_VALUE = 57689
const LATERAL = 57690
const LEAD = 57691
const MEMBER = 57692
const NTH_VALUE = 57693
const NTILE = 57694
const OF = 57695
const OVER = 57696
const PERCENT_RANK = 57697
const RANK = 57698
const RECURSIVE = 57699
const ROW_NUMBER = 57700
const SYSTEM = 57701
const WINDOW = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const FORMAT = 57759
const TREE = 57760
const VITESS = 57761
const TRADITIONAL = 57762
const LOCAL = 57763
const LOW_PRIORITY = 57764
const NO_WRITE_TO_BINLOG = 57765
const LOGS = 57766
const ERROR = 57767
const GENERAL = 57768
const HOSTS = 57769
const OPTIMIZER_COSTS = 57770
const USER_RESOURCES = 57771
const SLOW = 57772
const CHANNEL = 57773
const RELAY = 57774
const EXPORT = 57775
const AVG_ROW_LENGTH = 57776
const CONNECTION = 57777
const CHECKSUM = 57778
const DELAY_KEY_WRITE = 57779
const ENCRYPTION = 57780
const ENGINE = 57781
const INSERT_METHOD = 57782
const MAX_ROWS = 57783
const MIN_ROWS = 57784
const PACK_KEYS = 57785
const PASSWORD = 57786
const FIXED = 57787
const DYNAMIC = 57788
const COMPRESSED = 57789
const REDUNDANT = 57790
const COMPACT = 57791
const ROW_FORMAT = 57792
const STATS_AUTO_RECALC = 57793
const STATS_PERSISTENT = 57794
const STATS_SAMPLE_PAGES = 57795
const STORAGE = 57796
const MEMORY = 57797
const DISK = 57798

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 938,
	-2, 91,
	-1, 45,
	1, 112,
	474, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	312, 118,
	-2, 326,
	-1, 53,
	34, 472,
	165, 472,
	177, 472,
	210, 486,
	211, 486,
	-2, 474,
	-1, 58,
	167, 496,
	-2, 494,
	-1, 84,
	56, 564,
	-2, 572,
	-1, 109,
	1, 113,
	474, 113,
	-2, 118,
	-1, 119,
	170, 231,
	171, 231,
	-2, 320,
	-1, 138,
	143, 118,
	259, 118,
	312, 118,
	-2, 335,
	-1, 579,
	150, 959,
	-2, 955,
	-1, 580,
	150, 960,
	-2, 956,
	-1, 599,
	56, 565,
	-2, 577,
	-1, 600,
	56, 566,
	-2, 578,
	-1, 621,
	118, 1303,
	-2, 84,
	-1, 622,
	118, 1185,
	-2, 85,
	-1, 628,
	118, 1235,
	-2, 932,
	-1, 766,
	118, 1122,
	-2, 929,
	-1, 799,
	176, 38,
	181, 38,
	-2, 242,
	-1, 880,
	1, 373,
	474, 373,
	-2, 118,
	-1, 1120,
	1, 269,
	474, 269,
	-2, 118,
	-1, 1198,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1207,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1420,
	150, 964,
	-2, 958,
	-1, 1512,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1533,
	1, 270,
	474, 270,
	-2, 118,
	-1, 1945,
	5, 825,
	18, 825,
	20, 825,
	32, 825,
	83, 825,
	-2, 604,
	-1, 2160,
	46, 900,
	-2, 894,
}

const yyPrivate = 57344

const yyLast = 28950

var yyAct = [...]int{
	579, 2247, 2236, 1997, 2191, 1858, 2213, 2173, 1746, 1827,
	2161, 2110, 2086, 551, 1925, 1713, 1548, 2102, 1021, 939,
	1530, 1926, 1994, 537, 1457, 1597, 1922, 1733, 1068, 1747,
	592, 1831, 83, 3, 520, 892, 1563, 1812, 769, 1568,
	829, 147, 522, 1811, 517, 1183, 1937, 1810, 1320, 180,
	1673, 1647, 180, 1884, 485, 180, 1595, 1075, 626, 1205,
	501, 1509, 180, 1414, 1570, 133, 1112, 1804, 1105, 1406,
	180, 794, 1491, 1078, 1498, 919, 1098, 601, 1095, 1073,
	1459, 1060, 1440, 33, 513, 586, 1096, 524, 1383, 957,
	1102, 81, 501, 1182, 807, 501, 180, 501, 776, 1212,
	781, 800, 773, 797, 795, 796, 1295, 1111, 1559, 1474,
	1514, 623, 777, 1085, 79, 1325, 886, 110, 1223, 150,
	1172, 1549, 1109, 1197, 116, 937, 111, 1180, 871, 1034,
	78, 8, 508, 7, 6, 1177, 1037, 1850, 1849, 1626,
	117, 2112, 1872, 1873, 84, 1372, 182, 183, 184, 1454,
	1455, 1371, 1370, 1369, 1368, 1367, 511, 1282, 512, 1360,
	608, 612, 2205, 587, 1711, 112, 770, 2157, 1971, 2065,
	118, 2134, 2133, 180, 2081, 460, 831, 2082, 2253, 833,
	834, 86, 87, 88, 89, 90, 91, 832, 2210, 845,
	846, 2246, 849, 850, 851, 852, 509, 2184, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 627, 620, 811, 958, 1184, 80, 2239,
	1998, 1614, 2209, 2183, 810, 1663, 1901, 788, 2029, 112,
	786, 1633, 1712, 177, 789, 1632, 787, 1951, 1573, 1952,
	1953, 842, 958, 835, 836, 837, 1525, 1526, 785, 1871,
	2146, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 1661, 107, 994, 453, 454, 1113, 848,
	1114, 1456, 847, 1524, 171, 926, 564, 928, 570, 571,
	568, 569, 968, 567, 566, 565, 912, 1515, 489, 790,
	899, 900, 35, 572, 573, 72, 39, 40, 112, 113,
	1777, 905, 911, 1776, 583, 582, 1778, 1794, 968, 935,
	155, 1542, 171, 1860, 925, 927, 2188, 2020, 1572, 107,
	172, 105, 2018, 1826, 1361, 1362, 1363, 499, 1359, 503,
	104, 182, 183, 184, 877, 497, 585, 113, 897, 135,
	1443, 488, 898, 899, 900, 1306, 1304, 1305, 155, 1832,
	1854, 1781, 1596, 1629, 1301, 1308, 1272, 1309, 1855, 1310,
	1296, 956, 918, 2238, 152, 872, 153, 71, 916, 917,
	914, 915, 932, 881, 1863, 170, 1641, 964, 854, 145,
	913, 1300, 853, 176, 134, 489, 107, 2206, 99, 1861,
	1862, 1298, 934, 102, 2130, 906, 101, 100, 1273, 2076,
	1274, 818, 152, 964, 153, 489, 1598, 1492, 1302, 1199,
	1200, 144, 143, 170, 816, 827, 1417, 924, 826, 825,
	923, 929, 1299, 824, 595, 823, 106, 822, 821, 820,
	815, 791, 1191, 828, 156, 1515, 922, 2077, 488, 109,
	774, 2254, 1970, 105, 161, 803, 774, 175, 2225, 1646,
	772, 909, 180, 774, 885, 1211, 1210, 180, 488, 802,
	180, 139, 1201, 146, 614, 1198, 887, 140, 141, 2147,
	1714, 1716, 156, 1181, 878, 1910, 1864, 1631, 930, 1620,
	1313, 106, 161, 944, 838, 1820, 501, 501, 501, 1885,
	1574, 809, 1628, 1909, 819, 809, 1908, 895, 2182, 901,
	902, 903, 904, 931, 501, 501, 489, 817, 784, 783,
	1773, 782, 1842, 963, 960, 961, 962, 967, 969, 966,
	936, 965, 809, 884, 780, 459, 451, 2251, 959, 2168,
	2189, 1640, 1649, 1887, 1639, 2049, 1616, 1648, 950, 963,
	960, 961, 962, 967, 969, 966, 1649, 965, 106, 844,
	148, 1648, 1662, 1950, 959, 809, 1738, 933, 1681, 488,
	2174, 1006, 1007, 1606, 1520, 1089, 1019, 1715, 876, 890,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1531, 984, 908, 180, 994, 994, 1470, 1355, 148, 1284,
	1283, 1285, 1286, 1287, 910, 1889, 920, 1893, 974, 1888,
	888, 1886, 1791, 1786, 896, 809, 1891, 1004, 2138, 830,
	1935, 501, 941, 942, 180, 1890, 180, 180, 880, 501,
	73, 1066, 182, 183, 184, 501, 1408, 808, 1892, 1894,
	1326, 808, 1692, 812, 802, 1297, 1022, 953, 623, 951,
	952, 894, 142, 813, 1065, 809, 1787, 1115, 873, 954,
	874, 1689, 879, 875, 136, 973, 971, 137, 808, 1061,
	1615, 814, 94, 1903, 1441, 802, 805, 806, 1789, 774,
	1580, 1784, 974, 799, 803, 2249, 1613, 1094, 2250, 1079,
	2248, 1611, 1409, 1785, 818, 182, 183, 184, 971, 1799,
	1472, 808, 798, 843, 1036, 1039, 1041, 1043, 1044, 1046,
	1048, 1049, 1040, 1042, 974, 1045, 1047, 95, 1050, 816,
	1475, 1476, 921, 1441, 1058, 1699, 1082, 1390, 1608, 2240,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 1388, 1389, 1387, 1067, 1955, 166, 167, 168, 169,
	627, 808, 1612, 1792, 1790, 1800, 1327, 2241, 802, 805,
	806, 2255, 774, 1471, 893, 2234, 799, 803, 149, 154,
	151, 157, 158, 159, 160, 162, 163, 164, 165, 180,
	174, 1006, 1007, 1173, 166, 167, 168, 169, 972, 973,
	971, 808, 2064, 1185, 1186, 1187, 2230, 812, 802, 1608,
	1006, 1007, 972, 973, 971, 71, 974, 813, 501, 2063,
	1207, 987, 988, 989, 990, 991, 984, 1386, 1216, 994,
	974, 1110, 1220, 1610, 2231, 501, 501, 1976, 501, 2256,
	501, 501, 1912, 501, 501, 501, 501, 501, 501, 1687,
	1189, 1190, 1378, 1380, 1381, 1808, 1203, 1686, 501, 1666,
	1667, 1668, 180, 1256, 1379, 985, 986, 987, 988, 989,
	990, 991, 984, 1217, 1788, 994, 1291, 1809, 1269, 1196,
	1289, 1807, 972, 973, 971, 1577, 2026, 1215, 779, 501,
	1913, 613, 972, 973, 971, 1292, 1253, 180, 1251, 1252,
	974, 972, 973, 971, 972, 973, 971, 180, 1259, 1260,
	974, 180, 1905, 1277, 1265, 1266, 1276, 1279, 610, 974,
	1213, 1213, 974, 618, 1275, 1267, 1214, 180, 1179, 1261,
	1258, 1257, 1232, 1188, 180, 1290, 1193, 1194, 1857, 1288,
	1206, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	501, 501, 501, 1192, 1225, 2233, 1226, 2232, 1228, 1230,
	2221, 1330, 1234, 1236, 1238, 1240, 1242, 2219, 1334, 1322,
	1336, 1337, 1338, 1339, 2099, 1341, 1278, 180, 2061, 1688,
	1254, 615, 616, 2037, 514, 1958, 182, 183, 184, 1356,
	1780, 1914, 1817, 1328, 1329, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 1333, 1805, 994,
	1657, 1384, 1624, 1623, 1340, 1407, 1323, 1280, 788, 1268,
	112, 1314, 1264, 1263, 1410, 1319, 1262, 787, 540, 539,
	542, 543, 544, 545, 1064, 1077, 596, 541, 501, 546,
	2128, 1382, 2127, 1332, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1418,
	35, 1411, 1412, 972, 973, 971, 1996, 1366, 182, 183,
	184, 1834, 501, 501, 1819, 1351, 1352, 1353, 182, 183,
	184, 974, 1590, 180, 80, 1385, 1983, 2224, 1419, 1539,
	1429, 1432, 1983, 2180, 1983, 2169, 1442, 501, 1420, 1934,
	1424, 82, 1464, 1444, 180, 2151, 596, 501, 2117, 1022,
	1734, 180, 1734, 180, 1983, 2136, 1465, 2079, 596, 1608,
	596, 180, 180, 182, 183, 184, 1477, 1588, 501, 1418,
	1484, 501, 182, 183, 184, 71, 1270, 1516, 1448, 1449,
	2047, 596, 501, 1983, 1988, 1968, 1967, 623, 1964, 1965,
	623, 1964, 1963, 1510, 1516, 1421, 1483, 596, 1489, 1515,
	1851, 2172, 596, 1176, 1836, 1829, 1830, 1483, 1420, 1495,
	596, 1494, 1550, 1551, 1552, 970, 596, 1485, 35, 1495,
	1535, 1934, 1534, 1609, 983, 982, 992, 993, 985, 986,
	987, 988, 989, 990, 991, 984, 1767, 501, 994, 1517,
	1483, 180, 2044, 1741, 1515, 501, 2066, 1519, 35, 180,
	1587, 1589, 1513, 1538, 1176, 1175, 1517, 1121, 1120, 970,
	1487, 1923, 1495, 501, 1515, 2137, 1742, 1983, 1565, 501,
	1934, 1966, 1495, 1216, 1518, 1216, 1522, 1523, 1608, 1704,
	1703, 1571, 589, 1607, 1674, 1483, 1537, 1536, 1608, 627,
	1521, 1591, 627, 71, 2067, 2068, 2069, 1473, 1814, 1452,
	1364, 1594, 992, 993, 985, 986, 987, 988, 989, 990,
	991, 984, 1312, 501, 994, 1407, 1107, 793, 792, 71,
	1407, 1407, 2088, 71, 1543, 1995, 1544, 1545, 1546, 1547,
	2055, 1178, 1604, 1247, 1605, 1566, 580, 1561, 1562, 1583,
	1584, 1585, 1555, 1556, 1557, 1558, 1578, 1576, 1564, 1575,
	1856, 1617, 1601, 1560, 1554, 180, 811, 71, 2070, 180,
	180, 180, 180, 180, 1553, 810, 1213, 1600, 1599, 1566,
	1618, 1603, 1294, 180, 180, 180, 180, 1208, 1204, 1174,
	180, 1248, 1249, 1250, 1619, 181, 180, 96, 181, 1621,
	1622, 181, 1813, 180, 1244, 177, 502, 1859, 181, 2089,
	596, 1184, 2243, 2071, 2072, 2237, 181, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 180, 501,
	994, 1422, 1423, 1941, 1652, 1653, 1938, 1939, 502, 1655,
	2032, 502, 181, 502, 1923, 1825, 1656, 1814, 1824, 1245,
	1246, 1823, 1581, 1357, 1315, 1627, 983, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 1758, 1756,
	994, 1384, 1944, 1759, 1757, 1644, 1760, 1466, 1504, 1505,
	1943, 1755, 1754, 2227, 2208, 975, 1915, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 1723,
	1076, 994, 2048, 1670, 1671, 1672, 1986, 1732, 2162, 2164,
	1425, 1426, 1731, 2229, 1431, 1434, 1435, 2165, 2193, 181,
	98, 514, 2212, 180, 1660, 1683, 2192, 2214, 2196, 1721,
	1032, 180, 1500, 1503, 1504, 1505, 1501, 1722, 1502, 1506,
	1447, 2159, 1311, 1450, 1451, 1385, 1669, 1500, 1503, 1504,
	1505, 1501, 103, 1502, 1506, 180, 581, 1938, 1939, 1818,
	840, 839, 1071, 1074, 1720, 1437, 180, 180, 180, 180,
	180, 452, 1069, 2007, 1813, 587, 1727, 1682, 180, 1870,
	1438, 943, 180, 1844, 1070, 180, 180, 1843, 1739, 180,
	180, 180, 1698, 113, 1743, 2115, 1960, 606, 602, 1061,
	173, 1959, 1779, 455, 1710, 1468, 1602, 1748, 1222, 1221,
	1209, 1718, 2042, 603, 1765, 1821, 1736, 1475, 1476, 1318,
	1798, 2129, 2083, 1726, 1508, 590, 591, 1735, 1307, 1665,
	593, 1795, 1796, 1737, 2220, 2218, 1080, 1081, 605, 1797,
	604, 1801, 1802, 1803, 1749, 1782, 1768, 1752, 2217, 1322,
	1770, 1761, 180, 1750, 1751, 1766, 1753, 1730, 1771, 2197,
	1774, 2195, 82, 501, 2041, 1729, 1982, 1592, 594, 501,
	2040, 1918, 501, 1734, 1216, 2245, 2244, 1783, 1693, 501,
	80, 1837, 1690, 1816, 1090, 1571, 1083, 2245, 2166, 606,
	602, 1848, 1806, 1957, 1469, 589, 1839, 85, 77, 180,
	1, 472, 1453, 1059, 1815, 603, 484, 2235, 1281, 1833,
	1847, 1271, 1999, 2085, 1989, 1569, 801, 180, 138, 1532,
	1846, 1533, 2176, 93, 767, 1419, 92, 1196, 599, 600,
	605, 804, 604, 1838, 907, 1420, 1593, 2080, 1793, 1541,
	1127, 1125, 1126, 1124, 1845, 1129, 1128, 1123, 1358, 498,
	1507, 178, 501, 1116, 1084, 841, 462, 1969, 1407, 1354,
	1625, 468, 1002, 1866, 1728, 1775, 1865, 624, 617, 1929,
	2190, 1881, 2158, 2160, 2111, 2163, 2156, 2228, 2211, 1540,
	1467, 1072, 1883, 2039, 1917, 1697, 1031, 1439, 501, 1876,
	1877, 1874, 1099, 523, 1463, 1377, 538, 1868, 181, 180,
	1869, 535, 536, 181, 1897, 1898, 181, 1899, 1900, 501,
	1882, 1478, 1896, 1740, 1880, 501, 501, 976, 1906, 1907,
	1924, 1676, 521, 515, 1902, 1677, 1927, 1895, 1881, 1091,
	1499, 1497, 502, 502, 502, 1496, 1684, 1685, 180, 1316,
	1921, 1103, 1691, 1940, 1933, 1694, 1695, 1936, 1097, 1482,
	502, 502, 1630, 1701, 1748, 1702, 1853, 955, 1705, 1706,
	1707, 1708, 1709, 1324, 1946, 598, 1948, 510, 1949, 1942,
	97, 1436, 2145, 1664, 1719, 2028, 597, 61, 38, 505,
	2204, 946, 607, 32, 31, 30, 1961, 1962, 29, 1977,
	28, 180, 23, 1954, 180, 180, 180, 22, 21, 1947,
	501, 1956, 1678, 1679, 20, 19, 1911, 25, 18, 17,
	16, 108, 48, 180, 45, 43, 115, 114, 46, 1972,
	1763, 1764, 42, 1696, 1974, 1975, 1973, 882, 27, 181,
	2000, 501, 501, 501, 1932, 180, 26, 1990, 1984, 1373,
	1374, 1375, 1376, 15, 2008, 1985, 1987, 1993, 14, 1992,
	13, 12, 1571, 11, 10, 9, 5, 502, 4, 949,
	181, 550, 181, 181, 24, 502, 1020, 2, 0, 0,
	0, 502, 0, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	2009, 0, 0, 0, 1427, 1428, 2016, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 458, 0, 0, 496, 0, 0, 0,
	0, 2043, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 458, 514, 0, 2052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 1748, 611, 611,
	2060, 2059, 2062, 501, 501, 0, 0, 458, 0, 0,
	0, 2051, 2074, 0, 0, 0, 501, 0, 0, 501,
	0, 2073, 0, 0, 2057, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 2092, 0, 0, 2087, 1878,
	1879, 2013, 2014, 0, 2015, 0, 0, 2017, 0, 2019,
	0, 2091, 0, 0, 501, 501, 501, 180, 0, 0,
	2090, 0, 0, 0, 0, 181, 0, 0, 501, 0,
	501, 0, 2106, 2107, 2109, 0, 501, 0, 1927, 2098,
	2114, 2108, 1927, 2120, 458, 2123, 2116, 0, 2093, 2094,
	2095, 2096, 2097, 1567, 502, 0, 2100, 2101, 180, 2118,
	0, 2125, 2122, 2126, 0, 1930, 0, 0, 2124, 501,
	180, 502, 502, 0, 502, 0, 502, 502, 2139, 502,
	502, 502, 502, 502, 502, 2132, 1945, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 2135, 0, 181, 0,
	0, 0, 0, 0, 2155, 0, 0, 0, 0, 0,
	0, 1927, 2167, 0, 0, 0, 0, 0, 501, 501,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	2175, 0, 501, 181, 0, 0, 0, 2087, 2177, 0,
	0, 0, 2170, 181, 0, 2025, 0, 181, 2187, 501,
	0, 2194, 0, 501, 0, 2198, 0, 0, 2200, 0,
	0, 0, 2203, 181, 0, 0, 2207, 0, 0, 0,
	181, 0, 0, 0, 0, 2216, 2215, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 502, 502, 502, 1748,
	2031, 2226, 0, 0, 0, 171, 2201, 0, 0, 0,
	0, 2010, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 2021, 2022, 2242, 0,
	113, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 155, 2036, 0, 0, 0, 0, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 2045,
	2046, 994, 0, 2050, 983, 982, 992, 993, 985, 986,
	987, 988, 989, 990, 991, 984, 0, 0, 994, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 502, 502,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	1700, 0, 0, 458, 0, 0, 0, 0, 458, 0,
	0, 458, 0, 502, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 502, 0, 0, 0, 181, 0, 181,
	1724, 1725, 1074, 0, 2103, 156, 0, 181, 181, 0,
	0, 0, 0, 0, 502, 161, 0, 502, 0, 0,
	0, 978, 0, 981, 0, 0, 0, 0, 502, 995,
	996, 997, 998, 999, 1000, 1001, 0, 979, 980, 977,
	983, 982, 992, 993, 985, 986, 987, 988, 989, 990,
	991, 984, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2141, 2142, 2143, 2144, 2024, 2148,
	0, 2149, 2150, 2152, 0, 0, 0, 2153, 2154, 0,
	0, 0, 0, 502, 0, 0, 0, 181, 0, 0,
	0, 502, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 502, 2181, 0, 0, 1875,
	611, 148, 552, 34, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 458, 0, 458, 1106, 983,
	982, 992, 993, 985, 986, 987, 988, 989, 990, 991,
	984, 0, 0, 994, 0, 0, 0, 34, 0, 502,
	983, 982, 992, 993, 985, 986, 987, 988, 989, 990,
	991, 984, 2222, 2223, 994, 0, 0, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 588, 0, 0, 181, 181, 181, 181, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	181, 181, 181, 0, 0, 0, 181, 0, 1904, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 181,
	983, 982, 992, 993, 985, 986, 987, 988, 989, 990,
	991, 984, 0, 0, 994, 1675, 0, 0, 0, 0,
	0, 0, 0, 1919, 181, 502, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 0, 0, 994,
	458, 149, 154, 151, 157, 158, 159, 160, 162, 163,
	164, 165, 0, 0, 0, 0, 0, 166, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1219, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 1219, 181,
	0, 0, 0, 458, 0, 625, 0, 181, 771, 0,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 181, 181, 181, 181, 181, 0, 458, 0,
	0, 0, 1321, 0, 181, 0, 0, 0, 181, 0,
	0, 181, 181, 0, 0, 181, 181, 181, 458, 0,
	0, 0, 0, 0, 2030, 458, 0, 0, 0, 0,
	0, 0, 1342, 1343, 458, 458, 458, 458, 458, 458,
	458, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 2054, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 502, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	611, 1321, 0, 0, 0, 611, 611, 0, 0, 611,
	611, 611, 0, 181, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2113,
	514, 0, 0, 0, 0, 611, 611, 611, 611, 611,
	0, 0, 0, 0, 1461, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 938, 938,
	938, 1321, 458, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 458, 458, 502, 0, 0, 0, 34, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 1003, 1005, 0, 0, 502, 0, 0, 0, 0,
	0, 502, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 181, 0, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 0, 1033, 1035, 1038, 1038, 1038,
	1035, 1038, 1038, 1035, 1038, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 458, 0, 0, 0, 0, 1063, 0, 0,
	1586, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	181, 181, 181, 0, 0, 0, 502, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 625,
	625, 625, 0, 0, 0, 0, 0, 502, 502, 502,
	0, 181, 0, 0, 0, 0, 0, 945, 947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1062, 458, 0, 0, 0,
	458, 458, 458, 458, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 458, 458, 458, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 458,
	0, 0, 0, 0, 1087, 584, 0, 0, 0, 502,
	502, 0, 625, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 502, 0, 0, 502, 0, 0, 0, 0,
	0, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 611, 0,
	502, 502, 502, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 502, 0, 611, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 1461, 0, 181, 0, 0, 0, 870, 0,
	0, 0, 0, 0, 0, 502, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 458, 458, 458,
	458, 458, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 0, 0, 458, 0, 0, 458, 458, 0, 0,
	458, 1772, 1321, 0, 502, 502, 0, 0, 0, 0,
	0, 0, 938, 938, 938, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 502, 0, 0, 0, 502,
	0, 0, 0, 0, 1218, 0, 0, 0, 1224, 1224,
	0, 1224, 0, 1224, 1224, 0, 1233, 1224, 1224, 1224,
	1224, 1224, 0, 458, 0, 0, 0, 0, 0, 1218,
	1218, 771, 0, 0, 0, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 625, 625, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 135, 0, 0, 0, 0,
	458, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 883, 0, 0,
	0, 0, 889, 0, 0, 891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 458,
	134, 1413, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1218, 152, 0,
	153, 0, 0, 0, 0, 122, 123, 144, 143, 170,
	0, 0, 0, 0, 0, 1445, 1446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 0, 458, 458, 458, 0, 0,
	1479, 0, 0, 0, 1219, 0, 0, 0, 0, 0,
	1087, 0, 0, 625, 458, 0, 0, 139, 120, 146,
	127, 119, 0, 140, 141, 0, 0, 0, 156, 0,
	0, 625, 0, 0, 625, 0, 458, 0, 161, 128,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 131, 129, 124, 125, 126, 130, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 0, 0, 1219, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 771, 0, 0, 0,
	0, 0, 778, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	113, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 145, 0, 588, 0, 0, 134, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1461, 0,
	136, 0, 0, 137, 0, 152, 0, 153, 0, 0,
	0, 0, 1199, 1200, 144, 143, 170, 0, 182, 183,
	184, 1717, 0, 0, 1122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 458, 0, 0, 1744, 1745, 0, 0, 1100, 1100,
	1100, 1100, 1100, 0, 139, 1201, 146, 0, 1198, 0,
	140, 141, 1659, 0, 1511, 156, 0, 1100, 477, 0,
	0, 1100, 0, 0, 0, 161, 0, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1255, 474, 0,
	0, 0, 0, 0, 149, 154, 151, 157, 158, 159,
	160, 162, 163, 164, 165, 0, 0, 0, 0, 0,
	166, 167, 168, 169, 0, 0, 0, 0, 1219, 0,
	0, 0, 1303, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 1317, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 1841, 0, 0, 0, 0, 0, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 0, 0, 0, 0, 0,
	0, 148, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	461, 463, 464, 0, 480, 482, 490, 0, 0, 0,
	478, 479, 491, 465, 466, 495, 494, 481, 0, 470,
	467, 469, 475, 0, 0, 142, 488, 473, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 1144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 1828, 34, 0, 0,
	1218, 0, 1835, 0, 0, 1828, 0, 0, 0, 0,
	625, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 1490, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 149, 154, 151, 157, 158, 159, 160, 162, 163,
	164, 165, 493, 0, 0, 0, 0, 166, 167, 168,
	169, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1145, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 0, 0, 1218, 0, 0, 1931, 1224,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 2033, 2034, 2035, 0, 0, 1158, 1161, 1162, 1163,
	1164, 1165, 1166, 0, 1167, 1168, 1169, 1170, 1171, 1146,
	1147, 1148, 1149, 1130, 1131, 1159, 0, 1133, 0, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 0, 1218, 0, 0, 0,
	1104, 0, 0, 0, 1634, 1635, 1636, 1637, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1104, 1645, 0, 0, 2001, 2002, 2003, 0, 0, 0,
	0, 1651, 1160, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 34,
	0, 1928, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 35,
	36, 37, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 34, 0, 1218, 76,
	0, 0, 0, 0, 41, 67, 68, 0, 65, 69,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 34, 2171, 54, 0, 1828, 2075, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 1828,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 2104, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 2121, 0, 0, 0, 0, 0, 1828,
	0, 1769, 0, 0, 0, 0, 44, 47, 50, 49,
	52, 0, 64, 0, 0, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 53, 75,
	74, 0, 0, 62, 63, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 625, 0, 55, 56, 0, 57, 58, 59,
	60, 0, 0, 0, 0, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 2199, 0, 1852, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 1979,
	1980, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 737,
	0, 0, 686, 753, 657, 675, 762, 677, 680, 720,
	636, 699, 327, 672, 0, 661, 632, 668, 633, 659,
	688, 237, 692, 656, 739, 702, 752, 285, 0, 638,
	662, 341, 722, 379, 223, 294, 292, 407, 247, 240,
	236, 222, 269, 300, 339, 397, 333, 759, 289, 709,
	0, 388, 312, 0, 0, 0, 690, 742, 697, 733,
	685, 721, 646, 708, 754, 673, 717, 755, 275, 221,
	190, 324, 389, 251, 0, 0, 0, 182, 183, 184,
	0, 2178, 2179, 0, 0, 0, 0, 0, 212, 0,
	219, 714, 749, 670, 716, 233, 273, 239, 232, 404,
	719, 765, 631, 711, 0, 634, 637, 761, 745, 665,
	666, 0, 0, 0, 0, 0, 0, 0, 689, 698,
	730, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	663, 0, 707, 0, 0, 0, 642, 635, 0, 0,
	0, 0, 687, 2131, 0, 0, 645, 0, 664, 731,
	0, 629, 259, 639, 313, 2140, 735, 744, 684, 435,
	748, 682, 681, 751, 726, 643, 741, 676, 284, 641,
	281, 186, 201, 0, 674, 323, 362, 368, 740, 660,
	669, 224, 667, 366, 337, 421, 208, 249, 359, 342,
	364, 706, 724, 365, 290, 409, 354, 419, 436, 437,
	231, 317, 427, 401, 433, 447, 202, 228, 331, 394,
	424, 385, 310, 405, 406, 280, 384, 257, 189, 288,
	444, 200, 374, 216, 193, 396, 417, 213, 377, 0,
	0, 0, 195, 415, 393, 307, 277, 278, 194, 0,
	358, 235, 255, 226, 326, 412, 413, 225, 449, 204,
	432, 197, 940, 431, 319, 408, 416, 308, 299, 196,
	414, 306, 298, 283, 245, 265, 352, 293, 353, 266,
	315, 314, 316, 0, 191, 0, 390, 425, 450, 210,
	655, 736, 403, 441, 446, 0, 355, 211, 256, 244,
	351, 254, 286, 440, 442, 443, 445, 209, 349, 262,
	330, 420, 248, 428, 318, 205, 268, 386, 282, 291,
	728, 764, 336, 367, 214, 423, 387, 650, 654, 648,
	649, 700, 701, 651, 756, 757, 758, 732, 644, 0,
	652, 653, 0, 738, 746, 747, 705, 185, 198, 287,
	760, 356, 252, 448, 430, 426, 630, 647, 230, 658,
	0, 0, 671, 678, 679, 691, 693, 694, 695, 696,
	704, 712, 713, 715, 723, 725, 727, 729, 734, 743,
	763, 187, 188, 199, 207, 217, 229, 242, 250, 260,
	264, 267, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 410, 411, 422, 434, 438, 261, 418, 439,
	0, 295, 703, 710, 297, 246, 263, 272, 718, 429,
	392, 203, 363, 253, 192, 220, 206, 227, 241, 243,
	276, 305, 311, 340, 343, 258, 238, 218, 360, 215,
	378, 398, 399, 400, 402, 309, 234, 750, 737, 0,
	0, 686, 753, 657, 675, 762, 677, 680, 720, 636,
	699, 327, 672, 0, 661, 632, 668, 633, 659, 688,
	237, 692, 656, 739, 702, 752, 285, 0, 638, 662,
	341, 722, 379, 223, 294, 292, 407, 247, 240, 236,
	222, 269, 300, 339, 397, 333, 759, 289, 709, 0,
	388, 312, 0, 0, 0, 690, 742, 697, 733, 685,
	721, 646, 708, 754, 673, 717, 755, 275, 221, 190,
	324, 389, 251, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 219,
	714, 749, 670, 716, 233, 273, 239, 232, 404, 719,
	765, 631, 711, 0, 634, 637, 761, 745, 665, 666,
	0, 0, 0, 0, 0, 0, 0, 689, 698, 730,
	683, 0, 0, 0, 0, 0, 0, 1920, 0, 663,
	0, 707, 0, 0, 0, 642, 635, 0, 0, 0,
	0, 687, 0, 0, 0, 645, 0, 664, 731, 0,
	629, 259, 639, 313, 0, 735, 744, 684, 435, 748,
	682, 681, 751, 726, 643, 741, 676, 284, 641, 281,
	186, 201, 0, 674, 323, 362, 368, 740, 660, 669,
	224, 667, 366, 337, 421, 208, 249, 359, 342, 364,
	706, 724, 365, 290, 409, 354, 419, 436, 437, 231,
	317, 427, 401, 433, 447, 202, 228, 331, 394, 424,
	385, 310, 405, 406, 280, 384, 257, 189, 288, 444,
	200, 374, 216, 193, 396, 417, 213, 377, 0, 0,
	0, 195, 415, 393, 307, 277, 278, 194, 0, 358,
	235, 255, 226, 326, 412, 413, 225, 449, 204, 432,
	197, 940, 431, 319, 408, 416, 308, 299, 196, 414,
	306, 298, 283, 245, 265, 352, 293, 353, 266, 315,
	314, 316, 0, 191, 0, 390, 425, 450, 210, 655,
	736, 403, 441, 446, 0, 355, 211, 256, 244, 351,
	254, 286, 440, 442, 443, 445, 209, 349, 262, 330,
	420, 248, 428, 318, 205, 268, 386, 282, 291, 728,
	764, 336, 367, 214, 423, 387, 650, 654, 648, 649,
	700, 701, 651, 756, 757, 758, 732, 644, 0, 652,
	653, 0, 738, 746, 747, 705, 185, 198, 287, 760,
	356, 252, 448, 430, 426, 630, 647, 230, 658, 0,
	0, 671, 678, 679, 691, 693, 694, 695, 696, 704,
	712, 713, 715, 723, 725, 727, 729, 734, 743, 763,
	187, 188, 199, 207, 217, 229, 242, 250, 260, 264,
	267, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 410, 411, 422, 434, 438, 261, 418, 439, 0,
	295, 703, 710, 297, 246, 263, 272, 718, 429, 392,
	203, 363, 253, 192, 220, 206, 227, 241, 243, 276,
	305, 311, 340, 343, 258, 238, 218, 360, 215, 378,
	398, 399, 400, 402, 309, 234, 750, 737, 0, 0,
	686, 753, 657, 675, 762, 677, 680, 720, 636, 699,
	327, 672, 0, 661, 632, 668, 633, 659, 688, 237,
	692, 656, 739, 702, 752, 285, 0, 638, 662, 341,
	722, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 759, 289, 709, 0, 388,
	312, 0, 0, 0, 690, 742, 697, 733, 685, 721,
	646, 708, 754, 673, 717, 755, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 714,
	749, 670, 716, 233, 273, 239, 232, 404, 719, 765,
	631, 711, 0, 634, 637, 761, 745, 665, 666, 0,
	0, 0, 0, 0, 0, 0, 689, 698, 730, 683,
	0, 0, 0, 0, 0, 0, 1773, 0, 663, 0,
	707, 0, 0, 0, 642, 635, 0, 0, 0, 0,
	687, 0, 0, 0, 645, 0, 664, 731, 0, 629,
	259, 639, 313, 0, 735, 744, 684, 435, 748, 682,
	681, 751, 726, 643, 741, 676, 284, 641, 281, 186,
	201, 0, 674, 323, 362, 368, 740, 660, 669, 224,
	667, 366, 337, 421, 208, 249, 359, 342, 364, 706,
	724, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	940, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 655, 736,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 728, 764,
	336, 367, 214, 423, 387, 650, 654, 648, 649, 700,
	701, 651, 756, 757, 758, 732, 644, 0, 652, 653,
	0, 738, 746, 747, 705, 185, 198, 287, 760, 356,
	252, 448, 430, 426, 630, 647, 230, 658, 0, 0,
	671, 678, 679, 691, 693, 694, 695, 696, 704, 712,
	713, 715, 723, 725, 727, 729, 734, 743, 763, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	703, 710, 297, 246, 263, 272, 718, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 750, 737, 0, 0, 686,
	753, 657, 675, 762, 677, 680, 720, 636, 699, 327,
	672, 0, 661, 632, 668, 633, 659, 688, 237, 692,
	656, 739, 702, 752, 285, 0, 638, 662, 341, 722,
	379, 223, 294, 292, 407, 247, 240, 236, 222, 269,
	300, 339, 397, 333, 759, 289, 709, 0, 388, 312,
	0, 0, 0, 690, 742, 697, 733, 685, 721, 646,
	708, 754, 673, 717, 755, 275, 221, 190, 324, 389,
	251, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 219, 714, 749,
	670, 716, 233, 273, 239, 232, 404, 719, 765, 631,
	711, 0, 634, 637, 761, 745, 665, 666, 0, 0,
	0, 0, 0, 0, 0, 689, 698, 730, 683, 0,
	0, 0, 0, 0, 0, 1488, 0, 663, 0, 707,
	0, 0, 0, 642, 635, 0, 0, 0, 0, 687,
	0, 0, 0, 645, 0, 664, 731, 0, 629, 259,
	639, 313, 0, 735, 744, 684, 435, 748, 682, 681,
	751, 726, 643, 741, 676, 284, 641, 281, 186, 201,
	0, 674, 323, 362, 368, 740, 660, 669, 224, 667,
	366, 337, 421, 208, 249, 359, 342, 364, 706, 724,
	365, 290, 409, 354, 419, 436, 437, 231, 317, 427,
	401, 433, 447, 202, 228, 331, 394, 424, 385, 310,
	405, 406, 280, 384, 257, 189, 288, 444, 200, 374,
	216, 193, 396, 417, 213, 377, 0, 0, 0, 195,
	415, 393, 307, 277, 278, 194, 0, 358, 235, 255,
	226, 326, 412, 413, 225, 449, 204, 432, 197, 940,
	431, 319, 408, 416, 308, 299, 196, 414, 306, 298,
	283, 245, 265, 352, 293, 353, 266, 315, 314, 316,
	0, 191, 0, 390, 425, 450, 210, 655, 736, 403,
	441, 446, 0, 355, 211, 256, 244, 351, 254, 286,
	440, 442, 443, 445, 209, 349, 262, 330, 420, 248,
	428, 318, 205, 268, 386, 282, 291, 728, 764, 336,
	367, 214, 423, 387, 650, 654, 648, 649, 700, 701,
	651, 756, 757, 758, 732, 644, 0, 652, 653, 0,
	738, 746, 747, 705, 185, 198, 287, 760, 356, 252,
	448, 430, 426, 630, 647, 230, 658, 0, 0, 671,
	678, 679, 691, 693, 694, 695, 696, 704, 712, 713,
	715, 723, 725, 727, 729, 734, 743, 763, 187, 188,
	199, 207, 217, 229, 242, 250, 260, 264, 267, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 410,
	411, 422, 434, 438, 261, 418, 439, 0, 295, 703,
	710, 297, 246, 263, 272, 718, 429, 392, 203, 363,
	253, 192, 220, 206, 227, 241, 243, 276, 305, 311,
	340, 343, 258, 238, 218, 360, 215, 378, 398, 399,
	400, 402, 309, 234, 750, 737, 0, 0, 686, 753,
	657, 675, 762, 677, 680, 720, 636, 699, 327, 672,
	0, 661, 632, 668, 633, 659, 688, 237, 692, 656,
	739, 702, 752, 285, 0, 638, 662, 341, 722, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 759, 289, 709, 0, 388, 312, 0,
	0, 0, 690, 742, 697, 733, 685, 721, 646, 708,
	754, 673, 717, 755, 275, 221, 190, 324, 389, 251,
	71, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 714, 749, 670,
	716, 233, 273, 239, 232, 404, 719, 765, 631, 711,
	0, 634, 637, 761, 745, 665, 666, 0, 0, 0,
	0, 0, 0, 0, 689, 698, 730, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 707, 0,
	0, 0, 642, 635, 0, 0, 0, 0, 687, 0,
	0, 0, 645, 0, 664, 731, 0, 629, 259, 639,
	313, 0, 735, 744, 684, 435, 748, 682, 681, 751,
	726, 643, 741, 676, 284, 641, 281, 186, 201, 0,
	674, 323, 362, 368, 740, 660, 669, 224, 667, 366,
	337, 421, 208, 249, 359, 342, 364, 706, 724, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 940, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 655, 736, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 728, 764, 336, 367,
	214, 423, 387, 650, 654, 648, 649, 700, 701, 651,
	756, 757, 758, 732, 644, 0, 652, 653, 0, 738,
	746, 747, 705, 185, 198, 287, 760, 356, 252, 448,
	430, 426, 630, 647, 230, 658, 0, 0, 671, 678,
	679, 691, 693, 694, 695, 696, 704, 712, 713, 715,
	723, 725, 727, 729, 734, 743, 763, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 703, 710,
	297, 246, 263, 272, 718, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 750, 737, 0, 0, 686, 753, 657,
	675, 762, 677, 680, 720, 636, 699, 327, 672, 0,
	661, 632, 668, 633, 659, 688, 237, 692, 656, 739,
	702, 752, 285, 0, 638, 662, 341, 722, 379, 223,
	294, 292, 407, 247, 240, 236, 222, 269, 300, 339,
	397, 333, 759, 289, 709, 0, 388, 312, 0, 0,
	0, 690, 742, 697, 733, 685, 721, 646, 708, 754,
	673, 717, 755, 275, 221, 190, 324, 389, 251, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 219, 714, 749, 670, 716,
	233, 273, 239, 232, 404, 719, 765, 631, 711, 0,
	634, 637, 761, 745, 665, 666, 0, 0, 0, 0,
	0, 0, 0, 689, 698, 730, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 707, 0, 0,
	0, 642, 635, 0, 0, 0, 0, 687, 0, 0,
	0, 645, 0, 664, 731, 0, 629, 259, 639, 313,
	0, 735, 744, 684, 435, 748, 682, 681, 751, 726,
	643, 741, 676, 284, 641, 281, 186, 201, 0, 674,
	323, 362, 368, 740, 660, 669, 224, 667, 366, 337,
	421, 208, 249, 359, 342, 364, 706, 724, 365, 290,
	409, 354, 419, 436, 437, 231, 317, 427, 401, 433,
	447, 202, 228, 331, 394, 424, 385, 310, 405, 406,
	280, 384, 257, 189, 288, 444, 200, 374, 216, 193,
	396, 417, 213, 377, 0, 0, 0, 195, 415, 393,
	307, 277, 278, 194, 0, 358, 235, 255, 226, 326,
	412, 413, 225, 449, 204, 432, 197, 940, 431, 319,
	408, 416, 308, 299, 196, 414, 306, 298, 283, 245,
	265, 352, 293, 353, 266, 315, 314, 316, 0, 191,
	0, 390, 425, 450, 210, 655, 736, 403, 441, 446,
	0, 355, 211, 256, 244, 351, 254, 286, 440, 442,
	443, 445, 209, 349, 262, 330, 420, 248, 428, 318,
	205, 268, 386, 282, 291, 728, 764, 336, 367, 214,
	423, 387, 650, 654, 648, 649, 700, 701, 651, 756,
	757, 758, 732, 644, 0, 652, 653, 0, 738, 746,
	747, 705, 185, 198, 287, 760, 356, 252, 448, 430,
	426, 630, 647, 230, 658, 0, 0, 671, 678, 679,
	691, 693, 694, 695, 696, 704, 712, 713, 715, 723,
	725, 727, 729, 734, 743, 763, 187, 188, 199, 207,
	217, 229, 242, 250, 260, 264, 267, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 410, 411, 422,
	434, 438, 261, 418, 439, 0, 295, 703, 710, 297,
	246, 263, 272, 718, 429, 392, 203, 363, 253, 192,
	220, 206, 227, 241, 243, 276, 305, 311, 340, 343,
	258, 238, 218, 360, 215, 378, 398, 399, 400, 402,
	309, 234, 750, 737, 0, 0, 686, 753, 657, 675,
	762, 677, 680, 720, 636, 699, 327, 672, 0, 661,
	632, 668, 633, 659, 688, 237, 692, 656, 739, 702,
	752, 285, 0, 638, 662, 341, 722, 379, 223, 294,
	292, 407, 247, 240, 236, 222, 269, 300, 339, 397,
	333, 759, 289, 709, 0, 388, 312, 0, 0, 0,
	690, 742, 697, 733, 685, 721, 646, 708, 754, 673,
	717, 755, 275, 221, 190, 324, 389, 251, 0, 0,
	0, 182, 183, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 219, 714, 749, 670, 716, 233,
	273, 239, 232, 404, 719, 765, 631, 711, 0, 634,
	637, 761, 745, 665, 666, 0, 0, 0, 0, 0,
	0, 0, 689, 698, 730, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 663, 0, 707, 0, 0, 0,
	642, 635, 0, 0, 0, 0, 687, 0, 0, 0,
	645, 0, 664, 731, 0, 629, 259, 639, 313, 0,
	735, 744, 684, 435, 748, 682, 681, 751, 726, 643,
	741, 676, 284, 641, 281, 186, 201, 0, 674, 323,
	362, 368, 740, 660, 669, 224, 667, 366, 337, 421,
	208, 249, 359, 342, 364, 706, 724, 365, 290, 409,
	354, 419, 436, 437, 231, 317, 427, 401, 433, 447,
	202, 228, 331, 394, 424, 385, 310, 405, 406, 280,
	384, 257, 189, 288, 444, 200, 374, 216, 193, 396,
	417, 213, 377, 0, 0, 0, 195, 415, 393, 307,
	277, 278, 194, 0, 358, 235, 255, 226, 326, 412,
	413, 225, 449, 204, 432, 197, 640, 431, 319, 408,
	416, 308, 299, 196, 414, 306, 298, 283, 245, 265,
	352, 293, 353, 266, 315, 314, 316, 0, 191, 0,
	390, 425, 450, 210, 655, 736, 403, 441, 446, 0,
	355, 211, 256, 244, 351, 254, 286, 440, 442, 443,
	445, 209, 349, 262, 330, 420, 248, 428, 628, 766,
	622, 621, 282, 291, 728, 764, 336, 367, 214, 423,
	387, 650, 654, 648, 649, 700, 701, 651, 756, 757,
	758, 732, 644, 0, 652, 653, 0, 738, 746, 747,
	705, 185, 198, 287, 760, 356, 252, 448, 430, 426,
	630, 647, 230, 658, 0, 0, 671, 678, 679, 691,
	693, 694, 695, 696, 704, 712, 713, 715, 723, 725,
	727, 729, 734, 743, 763, 187, 188, 199, 207, 217,
	229, 242, 250, 260, 264, 267, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 369, 370, 371, 372, 373, 375, 376,
	380, 381, 382, 383, 391, 395, 410, 411, 422, 434,
	438, 261, 418, 439, 0, 295, 703, 710, 297, 246,
	263, 272, 718, 429, 392, 203, 363, 253, 192, 220,
	206, 227, 241, 243, 276, 305, 311, 340, 343, 258,
	238, 218, 360, 215, 378, 398, 399, 400, 402, 309,
	234, 750, 737, 0, 0, 686, 753, 657, 675, 762,
	677, 680, 720, 636, 699, 327, 672, 0, 661, 632,
	668, 633, 659, 688, 237, 692, 656, 739, 702, 752,
	285, 0, 638, 662, 341, 722, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	759, 289, 709, 0, 388, 312, 0, 0, 0, 690,
	742, 697, 733, 685, 721, 646, 708, 754, 673, 717,
	755, 275, 221, 190, 324, 389, 251, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 714, 749, 670, 716, 233, 273,
	239, 232, 404, 719, 765, 631, 711, 0, 634, 637,
	761, 745, 665, 666, 0, 0, 0, 0, 0, 0,
	0, 689, 698, 730, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 707, 0, 0, 0, 642,
	635, 0, 0, 0, 0, 687, 0, 0, 0, 645,
	0, 664, 731, 0, 629, 259, 639, 313, 0, 735,
	744, 684, 435, 748, 682, 681, 751, 726, 643, 741,
	676, 284, 641, 281, 186, 201, 0, 674, 323, 362,
	368, 740, 660, 669, 224, 667, 366, 337, 421, 208,
	249, 359, 342, 364, 706, 724, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 1108,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 640, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 655, 736, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 628, 766, 622,
	621, 282, 291, 728, 764, 336, 367, 214, 423, 387,
	650, 654, 648, 649, 700, 701, 651, 756, 757, 758,
	732, 644, 0, 652, 653, 0, 738, 746, 747, 705,
	185, 198, 287, 760, 356, 252, 448, 430, 426, 630,
	647, 230, 658, 0, 0, 671, 678, 679, 691, 693,
	694, 695, 696, 704, 712, 713, 715, 723, 725, 727,
	729, 734, 743, 763, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 703, 710, 297, 246, 263,
	272, 718, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	750, 737, 0, 0, 686, 753, 657, 675, 762, 677,
	680, 720, 636, 699, 327, 672, 0, 661, 632, 668,
	633, 659, 688, 237, 692, 656, 739, 702, 752, 285,
	0, 638, 662, 341, 722, 379, 223, 294, 292, 407,
	247, 240, 236, 222, 269, 300, 339, 397, 333, 759,
	289, 709, 0, 388, 312, 0, 0, 0, 690, 742,
	697, 733, 685, 721, 646, 708, 754, 673, 717, 755,
	275, 221, 190, 324, 389, 251, 0, 0, 0, 182,
	183, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 219, 714, 749, 670, 716, 233, 273, 239,
	232, 404, 719, 765, 631, 711, 0, 634, 637, 761,
	745, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	689, 698, 730, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 663, 0, 707, 0, 0, 0, 642, 635,
	0, 0, 0, 0, 687, 0, 0, 0, 645, 0,
	664, 731, 0, 629, 259, 639, 313, 0, 735, 744,
	684, 435, 748, 682, 681, 751, 726, 643, 741, 676,
	284, 641, 281, 186, 201, 0, 674, 323, 362, 368,
	740, 660, 669, 224, 667, 366, 337, 421, 208, 249,
	359, 342, 364, 706, 724, 365, 290, 409, 354, 419,
	436, 437, 231, 317, 427, 401, 433, 447, 202, 228,
	331, 394, 424, 385, 310, 405, 406, 280, 384, 257,
	189, 288, 444, 200, 374, 216, 193, 396, 619, 213,
	377, 0, 0, 0, 195, 415, 393, 307, 277, 278,
	194, 0, 358, 235, 255, 226, 326, 412, 413, 225,
	449, 204, 432, 197, 640, 431, 319, 408, 416, 308,
	299, 196, 414, 306, 298, 283, 245, 265, 352, 293,
	353, 266, 315, 314, 316, 0, 191, 0, 390, 425,
	450, 210, 655, 736, 403, 441, 446, 0, 355, 211,
	256, 244, 351, 254, 286, 440, 442, 443, 445, 209,
	349, 262, 330, 420, 248, 428, 628, 766, 622, 621,
	282, 291, 728, 764, 336, 367, 214, 423, 387, 650,
	654, 648, 649, 700, 701, 651, 756, 757, 758, 732,
	644, 0, 652, 653, 0, 738, 746, 747, 705, 185,
	198, 287, 760, 356, 252, 448, 430, 426, 630, 647,
	230, 658, 0, 0, 671, 678, 679, 691, 693, 694,
	695, 696, 704, 712, 713, 715, 723, 725, 727, 729,
	734, 743, 763, 187, 188, 199, 207, 217, 229, 242,
	250, 260, 264, 267, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 410, 411, 422, 434, 438, 261,
	418, 439, 0, 295, 703, 710, 297, 246, 263, 272,
	718, 429, 392, 203, 363, 253, 192, 220, 206, 227,
	241, 243, 276, 305, 311, 340, 343, 258, 238, 218,
	360, 215, 378, 398, 399, 400, 402, 309, 234, 327,
	0, 0, 1415, 0, 519, 0, 0, 0, 237, 0,
	518, 0, 0, 0, 285, 0, 0, 1416, 341, 0,
	379, 223, 294, 292, 407, 247, 240, 236, 222, 269,
	300, 339, 397, 333, 562, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 553, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 221, 190, 324, 389,
	251, 71, 0, 0, 182, 183, 184, 540, 539, 542,
	543, 544, 545, 0, 0, 212, 541, 219, 546, 547,
	548, 0, 233, 273, 239, 232, 404, 0, 0, 0,
	516, 533, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 609, 0, 0, 0, 577,
	0, 532, 0, 0, 525, 526, 528, 527, 529, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 313, 0, 576, 0, 0, 435, 0, 0, 574,
	0, 0, 0, 0, 0, 284, 0, 281, 186, 201,
	0, 0, 323, 362, 368, 0, 0, 0, 224, 0,
	366, 337, 421, 208, 249, 359, 342, 364, 0, 0,
	365, 290, 409, 354, 419, 436, 437, 231, 317, 427,
	401, 433, 447, 202, 228, 331, 394, 424, 385, 310,
	405, 406, 280, 384, 257, 189, 288, 444, 200, 374,
	216, 193, 396, 417, 213, 377, 0, 0, 0, 195,
	415, 393, 307, 277, 278, 194, 0, 358, 235, 255,
	226, 326, 412, 413, 225, 449, 204, 432, 197, 0,
	431, 319, 408, 416, 308, 299, 196, 414, 306, 298,
	283, 245, 265, 352, 293, 353, 266, 315, 314, 316,
	0, 191, 0, 390, 425, 450, 210, 0, 0, 403,
	441, 446, 0, 355, 211, 256, 244, 351, 254, 286,
	440, 442, 443, 445, 209, 349, 262, 330, 420, 248,
	428, 318, 205, 268, 386, 282, 291, 0, 0, 336,
	367, 214, 423, 387, 564, 575, 570, 571, 568, 569,
	563, 567, 566, 565, 578, 555, 556, 557, 558, 560,
	0, 572, 573, 559, 185, 198, 287, 0, 356, 252,
	448, 430, 426, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	199, 207, 217, 229, 242, 250, 260, 264, 267, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 410,
	411, 422, 434, 438, 261, 418, 439, 0, 295, 0,
	0, 297, 246, 263, 272, 0, 429, 392, 203, 363,
	253, 192, 220, 206, 227, 241, 243, 276, 305, 311,
	340, 343, 258, 238, 218, 360, 215, 378, 398, 399,
	400, 402, 309, 234, 327, 0, 0, 0, 0, 519,
	0, 0, 0, 237, 0, 518, 0, 0, 0, 285,
	0, 0, 0, 341, 0, 379, 223, 294, 292, 407,
	247, 240, 236, 222, 269, 300, 339, 397, 333, 562,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	553, 554, 0, 0, 0, 0, 0, 0, 1527, 0,
	275, 221, 190, 324, 389, 251, 71, 0, 0, 182,
	183, 184, 540, 539, 542, 543, 544, 545, 0, 0,
	212, 541, 219, 546, 547, 548, 1528, 233, 273, 239,
	232, 404, 0, 0, 0, 516, 533, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	0, 0, 0, 0, 577, 0, 532, 0, 0, 525,
	526, 528, 527, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 313, 0, 576, 0,
	0, 435, 0, 0, 574, 0, 0, 0, 0, 0,
	284, 0, 281, 186, 201, 0, 0, 323, 362, 368,
	0, 0, 0, 224, 0, 366, 337, 421, 208, 249,
	359, 342, 364, 0, 0, 365, 290, 409, 354, 419,
	436, 437, 231, 317, 427, 401, 433, 447, 202, 228,
	331, 394, 424, 385, 310, 405, 406, 280, 384, 257,
	189, 288, 444, 200, 374, 216, 193, 396, 417, 213,
	377, 0, 0, 0, 195, 415, 393, 307, 277, 278,
	194, 0, 358, 235, 255, 226, 326, 412, 413, 225,
	449, 204, 432, 197, 0, 431, 319, 408, 416, 308,
	299, 196, 414, 306, 298, 283, 245, 265, 352, 293,
	353, 266, 315, 314, 316, 0, 191, 0, 390, 425,
	450, 210, 0, 0, 403, 441, 446, 0, 355, 211,
	256, 244, 351, 254, 286, 440, 442, 443, 445, 209,
	349, 262, 330, 420, 248, 428, 318, 205, 268, 386,
	282, 291, 0, 0, 336, 367, 214, 423, 387, 564,
	575, 570, 571, 568, 569, 563, 567, 566, 565, 578,
	555, 556, 557, 558, 560, 0, 572, 573, 559, 185,
	198, 287, 0, 356, 252, 448, 430, 426, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 199, 207, 217, 229, 242,
	250, 260, 264, 267, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 410, 411, 422, 434, 438, 261,
	418, 439, 0, 295, 0, 0, 297, 246, 263, 272,
	0, 429, 392, 203, 363, 253, 192, 220, 206, 227,
	241, 243, 276, 305, 311, 340, 343, 258, 238, 218,
	360, 215, 378, 398, 399, 400, 402, 309, 234, 327,
	0, 0, 0, 0, 519, 0, 0, 0, 237, 0,
	518, 0, 0, 0, 285, 0, 0, 0, 341, 0,
	379, 223, 294, 292, 407, 247, 240, 236, 222, 269,
	300, 339, 397, 333, 562, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 553, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 221, 190, 324, 389,
	251, 71, 0, 596, 182, 183, 184, 540, 539, 542,
	543, 544, 545, 0, 0, 212, 541, 219, 546, 547,
	548, 0, 233, 273, 239, 232, 404, 0, 0, 0,
	516, 533, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 0, 0, 0, 0, 577,
	0, 532, 0, 0, 525, 526, 528, 527, 529, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 313, 0, 576, 0, 0, 435, 0, 0, 574,
	0, 0, 0, 0, 0, 284, 0, 281, 186, 201,
	0, 0, 323, 362, 368, 0, 0, 0, 224, 0,
	366, 337, 421, 208, 249, 359, 342, 364, 0, 0,
	365, 290, 409, 354, 419, 436, 437, 231, 317, 427,
	401, 433, 447, 202, 228, 331, 394, 424, 385, 310,
	405, 406, 280, 384, 257, 189, 288, 444, 200, 374,
	216, 193, 396, 417, 213, 377, 0, 0, 0, 195,
	415, 393, 307, 277, 278, 194, 0, 358, 235, 255,
	226, 326, 412, 413, 225, 449, 204, 432, 197, 0,
	431, 319, 408, 416, 308, 299, 196, 414, 306, 298,
	283, 245, 265, 352, 293, 353, 266, 315, 314, 316,
	0, 191, 0, 390, 425, 450, 210, 0, 0, 403,
	441, 446, 0, 355, 211, 256, 244, 351, 254, 286,
	440, 442, 443, 445, 209, 349, 262, 330, 420, 248,
	428, 318, 205, 268, 386, 282, 291, 0, 0, 336,
	367, 214, 423, 387, 564, 575, 570, 571, 568, 569,
	563, 567, 566, 565, 578, 555, 556, 557, 558, 560,
	0, 572, 573, 559, 185, 198, 287, 0, 356, 252,
	448, 430, 426, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	199, 207, 217, 229, 242, 250, 260, 264, 267, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 410,
	411, 422, 434, 438, 261, 418, 439, 0, 295, 0,
	0, 297, 246, 263, 272, 0, 429, 392, 203, 363,
	253, 192, 220, 206, 227, 241, 243, 276, 305, 311,
	340, 343, 258, 238, 218, 360, 215, 378, 398, 399,
	400, 402, 309, 234, 327, 0, 0, 0, 0, 519,
	0, 0, 0, 237, 0, 518, 0, 0, 0, 285,
	0, 0, 0, 341, 0, 379, 223, 294, 292, 407,
	247, 240, 236, 222, 269, 300, 339, 397, 333, 562,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 221, 190, 324, 389, 251, 71, 0, 0, 182,
	183, 184, 540, 539, 542, 543, 544, 545, 0, 0,
	212, 541, 219, 546, 547, 548, 0, 233, 273, 239,
	232, 404, 0, 0, 0, 516, 533, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	609, 0, 0, 0, 577, 0, 532, 0, 0, 525,
	526, 528, 527, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 313, 0, 576, 0,
	0, 435, 0, 0, 574, 0, 0, 0, 0, 0,
	284, 0, 281, 186, 201, 0, 0, 323, 362, 368,
	0, 0, 0, 224, 0, 366, 337, 421, 208, 249,
	359, 342, 364, 0, 0, 365, 290, 409, 354, 419,
	436, 437, 231, 317, 427, 401, 433, 447, 202, 228,
	331, 394, 424, 385, 310, 405, 406, 280, 384, 257,
	189, 288, 444, 200, 374, 216, 193, 396, 417, 213,
	377, 0, 0, 0, 195, 415, 393, 307, 277, 278,
	194, 0, 358, 235, 255, 226, 326, 412, 413, 225,
	449, 204, 432, 197, 0, 431, 319, 408, 416, 308,
	299, 196, 414, 306, 298, 283, 245, 265, 352, 293,
	353, 266, 315, 314, 316, 0, 191, 0, 390, 425,
	450, 210, 0, 0, 403, 441, 446, 0, 355, 211,
	256, 244, 351, 254, 286, 440, 442, 443, 445, 209,
	349, 262, 330, 420, 248, 428, 318, 205, 268, 386,
	282, 291, 0, 0, 336, 367, 214, 423, 387, 564,
	575, 570, 571, 568, 569, 563, 567, 566, 565, 578,
	555, 556, 557, 558, 560, 0, 572, 573, 559, 185,
	198, 287, 0, 356, 252, 448, 430, 426, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 199, 207, 217, 229, 242,
	250, 260, 264, 267, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 410, 411, 422, 434, 438, 261,
	418, 439, 0, 295, 0, 0, 297, 246, 263, 272,
	0, 429, 392, 203, 363, 253, 192, 220, 206, 227,
	241, 243, 276, 305, 311, 340, 343, 258, 238, 218,
	360, 215, 378, 398, 399, 400, 402, 309, 234, 327,
	0, 0, 0, 0, 519, 0, 0, 0, 237, 0,
	518, 0, 0, 0, 285, 0, 0, 0, 341, 0,
	379, 223, 294, 292, 407, 247, 240, 236, 222, 269,
	300, 339, 397, 333, 562, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 553, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 221, 190, 324, 389,
	251, 71, 0, 0, 182, 183, 184, 540, 1433, 542,
	543, 544, 545, 0, 0, 212, 541, 219, 546, 547,
	548, 0, 233, 273, 239, 232, 404, 0, 0, 0,
	516, 533, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 609, 0, 0, 0, 577,
	0, 532, 0, 0, 525, 526, 528, 527, 529, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 313, 0, 576, 0, 0, 435, 0, 0, 574,
	0, 0, 0, 0, 0, 284, 0, 281, 186, 201,
	0, 0, 323, 362, 368, 0, 0, 0, 224, 0,
	366, 337, 421, 208, 249, 359, 342, 364, 0, 0,
	365, 290, 409, 354, 419, 436, 437, 231, 317, 427,
	401, 433, 447, 202, 228, 331, 394, 424, 385, 310,
	405, 406, 280, 384, 257, 189, 288, 444, 200, 374,
	216, 193, 396, 417, 213, 377, 0, 0, 0, 195,
	415, 393, 307, 277, 278, 194, 0, 358, 235, 255,
	226, 326, 412, 413, 225, 449, 204, 432, 197, 0,
	431, 319, 408, 416, 308, 299, 196, 414, 306, 298,
	283, 245, 265, 352, 293, 353, 266, 315, 314, 316,
	0, 191, 0, 390, 425, 450, 210, 0, 0, 403,
	441, 446, 0, 355, 211, 256, 244, 351, 254, 286,
	440, 442, 443, 445, 209, 349, 262, 330, 420, 248,
	428, 318, 205, 268, 386, 282, 291, 0, 0, 336,
	367, 214, 423, 387, 564, 575, 570, 571, 568, 569,
	563, 567, 566, 565, 578, 555, 556, 557, 558, 560,
	0, 572, 573, 559, 185, 198, 287, 0, 356, 252,
	448, 430, 426, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	199, 207, 217, 229, 242, 250, 260, 264, 267, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 410,
	411, 422, 434, 438, 261, 418, 439, 0, 295, 0,
	0, 297, 246, 263, 272, 0, 429, 392, 203, 363,
	253, 192, 220, 206, 227, 241, 243, 276, 305, 311,
	340, 343, 258, 238, 218, 360, 215, 378, 398, 399,
	400, 402, 309, 234, 327, 0, 0, 0, 0, 519,
	0, 0, 0, 237, 0, 518, 0, 0, 0, 285,
	0, 0, 0, 341, 0, 379, 223, 294, 292, 407,
	247, 240, 236, 222, 269, 300, 339, 397, 333, 562,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 221, 190, 324, 389, 251, 71, 0, 0, 182,
	183, 184, 540, 1430, 542, 543, 544, 545, 0, 0,
	212, 541, 219, 546, 547, 548, 0, 233, 273, 239,
	232, 404, 0, 0, 0, 516, 533, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	609, 0, 0, 0, 577, 0, 532, 0, 0, 525,
	526, 528, 527, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 313, 0, 576, 0,
	0, 435, 0, 0, 574, 0, 0, 0, 0, 0,
	284, 0, 281, 186, 201, 0, 0, 323, 362, 368,
	0, 0, 0, 224, 0, 366, 337, 421, 208, 249,
	359, 342, 364, 0, 0, 365, 290, 409, 354, 419,
	436, 437, 231, 317, 427, 401, 433, 447, 202, 228,
	331, 394, 424, 385, 310, 405, 406, 280, 384, 257,
	189, 288, 444, 200, 374, 216, 193, 396, 417, 213,
	377, 0, 0, 0, 195, 415, 393, 307, 277, 278,
	194, 0, 358, 235, 255, 226, 326, 412, 413, 225,
	449, 204, 432, 197, 0, 431, 319, 408, 416, 308,
	299, 196, 414, 306, 298, 283, 245, 265, 352, 293,
	353, 266, 315, 314, 316, 0, 191, 0, 390, 425,
	450, 210, 0, 0, 403, 441, 446, 0, 355, 211,
	256, 244, 351, 254, 286, 440, 442, 443, 445, 209,
	349, 262, 330, 420, 248, 428, 318, 205, 268, 386,
	282, 291, 0, 0, 336, 367, 214, 423, 387, 564,
	575, 570, 571, 568, 569, 563, 567, 566, 565, 578,
	555, 556, 557, 558, 560, 0, 572, 573, 559, 185,
	198, 287, 0, 356, 252, 448, 430, 426, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 199, 207, 217, 229, 242,
	250, 260, 264, 267, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 410, 411, 422, 434, 438, 261,
	418, 439, 0, 295, 0, 0, 297, 246, 263, 272,
	0, 429, 392, 203, 363, 253, 192, 220, 206, 227,
	241, 243, 276, 305, 311, 340, 343, 258, 238, 218,
	360, 215, 378, 398, 399, 400, 402, 309, 234, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 519, 0, 0,
	0, 237, 0, 518, 0, 0, 0, 285, 0, 0,
	0, 341, 0, 379, 223, 294, 292, 407, 247, 240,
	236, 222, 269, 300, 339, 397, 333, 562, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 221,
	190, 324, 389, 251, 71, 0, 0, 182, 183, 184,
	540, 539, 542, 543, 544, 545, 0, 0, 212, 541,
	219, 546, 547, 548, 0, 233, 273, 239, 232, 404,
	0, 0, 0, 516, 533, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 577, 0, 532, 0, 0, 525, 526, 528,
	527, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 313, 0, 576, 0, 0, 435,
	0, 0, 574, 0, 0, 0, 0, 0, 284, 0,
	281, 186, 201, 0, 0, 323, 362, 368, 0, 0,
	0, 224, 0, 366, 337, 421, 208, 249, 359, 342,
	364, 0, 0, 365, 290, 409, 354, 419, 436, 437,
	231, 317, 427, 401, 433, 447, 202, 228, 331, 394,
	424, 385, 310, 405, 406, 280, 384, 257, 189, 288,
	444, 200, 374, 216, 193, 396, 417, 213, 377, 0,
	0, 0, 195, 415, 393, 307, 277, 278, 194, 0,
	358, 235, 255, 226, 326, 412, 413, 225, 449, 204,
	432, 197, 0, 431, 319, 408, 416, 308, 299, 196,
	414, 306, 298, 283, 245, 265, 352, 293, 353, 266,
	315, 314, 316, 0, 191, 0, 390, 425, 450, 210,
	0, 0, 403, 441, 446, 0, 355, 211, 256, 244,
	351, 254, 286, 440, 442, 443, 445, 209, 349, 262,
	330, 420, 248, 428, 318, 205, 268, 386, 282, 291,
	0, 0, 336, 367, 214, 423, 387, 564, 575, 570,
	571, 568, 569, 563, 567, 566, 565, 578, 555, 556,
	557, 558, 560, 0, 572, 573, 559, 185, 198, 287,
	0, 356, 252, 448, 430, 426, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 199, 207, 217, 229, 242, 250, 260,
	264, 267, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 410, 411, 422, 434, 438, 261, 418, 439,
	0, 295, 0, 0, 297, 246, 263, 272, 0, 429,
	392, 203, 363, 253, 192, 220, 206, 227, 241, 243,
	276, 305, 311, 340, 343, 258, 238, 218, 360, 215,
	378, 398, 399, 400, 402, 309, 234, 327, 0, 0,
	0, 0, 519, 0, 0, 0, 237, 0, 518, 0,
	0, 0, 285, 0, 0, 0, 341, 0, 379, 223,
	294, 292, 407, 247, 240, 236, 222, 269, 300, 339,
	397, 333, 562, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 553, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 221, 190, 324, 389, 251, 71,
	0, 0, 182, 183, 184, 540, 539, 542, 543, 544,
	545, 0, 0, 212, 541, 219, 546, 547, 548, 0,
	233, 273, 239, 232, 404, 0, 0, 0, 516, 533,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 0, 0, 0, 0, 577, 0, 532,
	0, 0, 525, 526, 528, 527, 529, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 313,
	0, 576, 0, 0, 435, 0, 0, 574, 0, 0,
	0, 0, 0, 284, 0, 281, 186, 201, 0, 0,
	323, 362, 368, 0, 0, 0, 224, 0, 366, 337,
	421, 208, 249, 359, 342, 364, 0, 0, 365, 290,
	409, 354, 419, 436, 437, 231, 317, 427, 401, 433,
	447, 202, 228, 331, 394, 424, 385, 310, 405, 406,
	280, 384, 257, 189, 288, 444, 200, 374, 216, 193,
	396, 417, 213, 377, 0, 0, 0, 195, 415, 393,
	307, 277, 278, 194, 0, 358, 235, 255, 226, 326,
	412, 413, 225, 449, 204, 432, 197, 0, 431, 319,
	408, 416, 308, 299, 196, 414, 306, 298, 283, 245,
	265, 352, 293, 353, 266, 315, 314, 316, 0, 191,
	0, 390, 425, 450, 210, 0, 0, 403, 441, 446,
	0, 355, 211, 256, 244, 351, 254, 286, 440, 442,
	443, 445, 209, 349, 262, 330, 420, 248, 428, 318,
	205, 268, 386, 282, 291, 0, 0, 336, 367, 214,
	423, 387, 564, 575, 570, 571, 568, 569, 563, 567,
	566, 565, 578, 555, 556, 557, 558, 560, 0, 572,
	573, 559, 185, 198, 287, 0, 356, 252, 448, 430,
	426, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 199, 207,
	217, 229, 242, 250, 260, 264, 267, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 410, 411, 422,
	434, 438, 261, 418, 439, 0, 295, 0, 0, 297,
	246, 263, 272, 0, 429, 392, 203, 363, 253, 192,
	220, 206, 227, 241, 243, 276, 305, 311, 340, 343,
	258, 238, 218, 360, 215, 378, 398, 399, 400, 402,
	309, 234, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 341, 0, 379, 223, 294, 292, 407, 247, 240,
	236, 222, 269, 300, 339, 397, 333, 562, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 221,
	190, 324, 389, 251, 71, 0, 0, 182, 183, 184,
	540, 539, 542, 543, 544, 545, 0, 0, 212, 541,
	219, 546, 547, 548, 0, 233, 273, 239, 232, 404,
	0, 0, 0, 0, 533, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 577, 0, 532, 0, 0, 525, 526, 528,
	527, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 313, 0, 576, 0, 0, 435,
	0, 0, 574, 0, 0, 0, 0, 0, 284, 0,
	281, 186, 201, 0, 0, 323, 362, 368, 0, 0,
	0, 224, 0, 366, 337, 421, 208, 249, 359, 342,
	364, 2202, 0, 365, 290, 409, 354, 419, 436, 437,
	231, 317, 427, 401, 433, 447, 202, 228, 331, 394,
	424, 385, 310, 405, 406, 280, 384, 257, 189, 288,
	444, 200, 374, 216, 193, 396, 417, 213, 377, 0,
	0, 0, 195, 415, 393, 307, 277, 278, 194, 0,
	358, 235, 255, 226, 326, 412, 413, 225, 449, 204,
	432, 197, 0, 431, 319, 408, 416, 308, 299, 196,
	414, 306, 298, 283, 245, 265, 352, 293, 353, 266,
	315, 314, 316, 0, 191, 0, 390, 425, 450, 210,
	0, 0, 403, 441, 446, 0, 355, 211, 256, 244,
	351, 254, 286, 440, 442, 443, 445, 209, 349, 262,
	330, 420, 248, 428, 318, 205, 268, 386, 282, 291,
	0, 0, 336, 367, 214, 423, 387, 564, 575, 570,
	571, 568, 569, 563, 567, 566, 565, 578, 555, 556,
	557, 558, 560, 0, 572, 573, 559, 185, 198, 287,
	0, 356, 252, 448, 430, 426, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 199, 207, 217, 229, 242, 250, 260,
	264, 267, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 410, 411, 422, 434, 438, 261, 418, 439,
	0, 295, 0, 0, 297, 246, 263, 272, 0, 429,
	392, 203, 363, 253, 192, 220, 206, 227, 241, 243,
	276, 305, 311, 340, 343, 258, 238, 218, 360, 215,
	378, 398, 399, 400, 402, 309, 234, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 341, 0, 379, 223,
	294, 292, 407, 247, 240, 236, 222, 269, 300, 339,
	397, 333, 562, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 553, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 221, 190, 324, 389, 251, 71,
	0, 596, 182, 183, 184, 540, 539, 542, 543, 544,
	545, 0, 0, 212, 541, 219, 546, 547, 548, 0,
	233, 273, 239, 232, 404, 0, 0, 0, 0, 533,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 0, 0, 0, 0, 577, 0, 532,
	0, 0, 525, 526, 528, 527, 529, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 313,
	0, 576, 0, 0, 435, 0, 0, 574, 0, 0,
	0, 0, 0, 284, 0, 281, 186, 201, 0, 0,
	323, 362, 368, 0, 0, 0, 224, 0, 366, 337,
	421, 208, 249, 359, 342, 364, 0, 0, 365, 290,
	409, 354, 419, 436, 437, 231, 317, 427, 401, 433,
	447, 202, 228, 331, 394, 424, 385, 310, 405, 406,
	280, 384, 257, 189, 288, 444, 200, 374, 216, 193,
	396, 417, 213, 377, 0, 0, 0, 195, 415, 393,
	307, 277, 278, 194, 0, 358, 235, 255, 226, 326,
	412, 413, 225, 449, 204, 432, 197, 0, 431, 319,
	408, 416, 308, 299, 196, 414, 306, 298, 283, 245,
	265, 352, 293, 353, 266, 315, 314, 316, 0, 191,
	0, 390, 425, 450, 210, 0, 0, 403, 441, 446,
	0, 355, 211, 256, 244, 351, 254, 286, 440, 442,
	443, 445, 209, 349, 262, 330, 420, 248, 428, 318,
	205, 268, 386, 282, 291, 0, 0, 336, 367, 214,
	423, 387, 564, 575, 570, 571, 568, 569, 563, 567,
	566, 565, 578, 555, 556, 557, 558, 560, 0, 572,
	573, 559, 185, 198, 287, 0, 356, 252, 448, 430,
	426, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 199, 207,
	217, 229, 242, 250, 260, 264, 267, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 410, 411, 422,
	434, 438, 261, 418, 439, 0, 295, 0, 0, 297,
	246, 263, 272, 0, 429, 392, 203, 363, 253, 192,
	220, 206, 227, 241, 243, 276, 305, 311, 340, 343,
	258, 238, 218, 360, 215, 378, 398, 399, 400, 402,
	309, 234, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 341, 0, 379, 223, 294, 292, 407, 247, 240,
	236, 222, 269, 300, 339, 397, 333, 562, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 221,
	190, 324, 389, 251, 71, 0, 0, 182, 183, 184,
	540, 539, 542, 543, 544, 545, 0, 0, 212, 541,
	219, 546, 547, 548, 0, 233, 273, 239, 232, 404,
	0, 0, 0, 0, 533, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 577, 0, 532, 0, 0, 525, 526, 528,
	527, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 313, 0, 576, 0, 0, 435,
	0, 0, 574, 0, 0, 0, 0, 0, 284, 0,
	281, 186, 201, 0, 0, 323, 362, 368, 0, 0,
	0, 224, 0, 366, 337, 421, 208, 249, 359, 342,
	364, 0, 0, 365, 290, 409, 354, 419, 436, 437,
	231, 317, 427, 401, 433, 447, 202, 228, 331, 394,
	424, 385, 310, 405, 406, 280, 384, 257, 189, 288,
	444, 200, 374, 216, 193, 396, 417, 213, 377, 0,
	0, 0, 195, 415, 393, 307, 277, 278, 194, 0,
	358, 235, 255, 226, 326, 412, 413, 225, 449, 204,
	432, 197, 0, 431, 319, 408, 416, 308, 299, 196,
	414, 306, 298, 283, 245, 265, 352, 293, 353, 266,
	315, 314, 316, 0, 191, 0, 390, 425, 450, 210,
	0, 0, 403, 441, 446, 0, 355, 211, 256, 244,
	351, 254, 286, 440, 442, 443, 445, 209, 349, 262,
	330, 420, 248, 428, 318, 205, 268, 386, 282, 291,
	0, 0, 336, 367, 214, 423, 387, 564, 575, 570,
	571, 568, 569, 563, 567, 566, 565, 578, 555, 556,
	557, 558, 560, 0, 572, 573, 559, 185, 198, 287,
	0, 356, 252, 448, 430, 426, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 199, 207, 217, 229, 242, 250, 260,
	264, 267, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 410, 411, 422, 434, 438, 261, 418, 439,
	0, 295, 0, 0, 297, 246, 263, 272, 0, 429,
	392, 203, 363, 253, 192, 220, 206, 227, 241, 243,
	276, 305, 311, 340, 343, 258, 238, 218, 360, 215,
	378, 398, 399, 400, 402, 309, 234, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 341, 0, 379, 223,
	294, 292, 407, 247, 240, 236, 222, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 221, 190, 324, 389, 251, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 219, 0, 0, 0, 0,
	233, 273, 239, 232, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 313,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 186, 201, 0, 0,
	323, 362, 368, 0, 0, 0, 224, 0, 366, 337,
	421, 208, 249, 359, 342, 364, 0, 0, 365, 290,
	409, 354, 419, 436, 437, 231, 317, 427, 401, 433,
	447, 202, 228, 331, 394, 424, 385, 310, 405, 406,
	280, 384, 257, 189, 288, 444, 200, 374, 216, 193,
	396, 417, 213, 377, 0, 0, 0, 195, 415, 393,
	307, 277, 278, 194, 0, 358, 235, 255, 226, 326,
	412, 413, 225, 449, 204, 432, 197, 0, 431, 319,
	408, 416, 308, 299, 196, 414, 306, 298, 283, 245,
	265, 352, 293, 353, 266, 315, 314, 316, 0, 191,
	0, 390, 425, 450, 210, 0, 0, 403, 441, 446,
	0, 355, 211, 256, 244, 351, 254, 286, 440, 442,
	443, 445, 209, 349, 262, 330, 420, 248, 428, 318,
	205, 268, 386, 282, 291, 0, 0, 336, 367, 214,
	423, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 198, 287, 0, 356, 252, 448, 430,
	426, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 199, 207,
	217, 229, 242, 250, 260, 264, 267, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 410, 411, 422,
	434, 438, 261, 418, 439, 0, 295, 0, 0, 297,
	246, 263, 272, 0, 429, 392, 203, 363, 253, 192,
	220, 206, 227, 241, 243, 276, 305, 311, 340, 343,
	258, 238, 218, 360, 215, 378, 398, 399, 400, 402,
	309, 234, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 809, 0, 0, 0, 0, 285, 0, 0,
	0, 341, 0, 379, 223, 294, 292, 407, 247, 240,
	236, 222, 269, 300, 339, 397, 333, 0, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 221,
	190, 324, 389, 251, 0, 0, 0, 182, 183, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	219, 0, 0, 0, 0, 233, 273, 239, 232, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 313, 0, 0, 0, 808, 435,
	0, 0, 0, 0, 0, 0, 805, 806, 284, 774,
	281, 186, 201, 799, 803, 323, 362, 368, 0, 0,
	0, 224, 0, 366, 337, 421, 208, 249, 359, 342,
	364, 0, 0, 365, 290, 409, 354, 419, 436, 437,
	231, 317, 427, 401, 433, 447, 202, 228, 331, 394,
	424, 385, 310, 405, 406, 280, 384, 257, 189, 288,
	444, 200, 374, 216, 193, 396, 417, 213, 377, 0,
	0, 0, 195, 415, 393, 307, 277, 278, 194, 0,
	358, 235, 255, 226, 326, 412, 413, 225, 449, 204,
	432, 197, 0, 431, 319, 408, 416, 308, 299, 196,
	414, 306, 298, 283, 245, 265, 352, 293, 353, 266,
	315, 314, 316, 0, 191, 0, 390, 425, 450, 210,
	0, 0, 403, 441, 446, 0, 355, 211, 256, 244,
	351, 254, 286, 440, 442, 443, 445, 209, 349, 262,
	330, 420, 248, 428, 318, 205, 268, 386, 282, 291,
	0, 0, 336, 367, 214, 423, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 198, 287,
	0, 356, 252, 448, 430, 426, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 199, 207, 217, 229, 242, 250, 260,
	264, 267, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 410, 411, 422, 434, 438, 261, 418, 439,
	0, 295, 0, 0, 297, 246, 263, 272, 0, 429,
	392, 203, 363, 253, 192, 220, 206, 227, 241, 243,
	276, 305, 311, 340, 343, 258, 238, 218, 360, 215,
	378, 398, 399, 400, 402, 309, 234, 327, 0, 0,
	0, 1086, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 341, 0, 379, 223,
	294, 292, 407, 247, 240, 236, 222, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 221, 190, 324, 389, 251, 0,
	0, 0, 182, 183, 184, 0, 1088, 0, 0, 0,
	0, 0, 0, 212, 0, 219, 0, 0, 0, 0,
	233, 273, 239, 232, 404, 972, 973, 971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 313,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 186, 201, 0, 0,
	323, 362, 368, 0, 0, 0, 224, 0, 366, 337,
	421, 208, 249, 359, 342, 364, 0, 0, 365, 290,
	409, 354, 419, 436, 437, 231, 317, 427, 401, 433,
	447, 202, 228, 331, 394, 424, 385, 310, 405, 406,
	280, 384, 257, 189, 288, 444, 200, 374, 216, 193,
	396, 417, 213, 377, 0, 0, 0, 195, 415, 393,
	307, 277, 278, 194, 0, 358, 235, 255, 226, 326,
	412, 413, 225, 449, 204, 432, 197, 0, 431, 319,
	408, 416, 308, 299, 196, 414, 306, 298, 283, 245,
	265, 352, 293, 353, 266, 315, 314, 316, 0, 191,
	0, 390, 425, 450, 210, 0, 0, 403, 441, 446,
	0, 355, 211, 256, 244, 351, 254, 286, 440, 442,
	443, 445, 209, 349, 262, 330, 420, 248, 428, 318,
	205, 268, 386, 282, 291, 0, 0, 336, 367, 214,
	423, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 198, 287, 0, 356, 252, 448, 430,
	426, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 199, 207,
	217, 229, 242, 250, 260, 264, 267, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 410, 411, 422,
	434, 438, 261, 418, 439, 0, 295, 0, 0, 297,
	246, 263, 272, 0, 429, 392, 203, 363, 253, 192,
	220, 206, 227, 241, 243, 276, 305, 311, 340, 343,
	258, 238, 218, 360, 215, 378, 398, 399, 400, 402,
	309, 234, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 71, 0, 596,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 186, 201, 0, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	327, 0, 0, 0, 1460, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 341,
	0, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 1462,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 0,
	0, 0, 0, 233, 273, 239, 232, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 313, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 186,
	201, 0, 0, 323, 362, 368, 0, 0, 0, 224,
	0, 366, 337, 421, 208, 249, 359, 342, 364, 0,
	1458, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	0, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 0, 0,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 0, 0,
	336, 367, 214, 423, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 198, 287, 0, 356,
	252, 448, 430, 426, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	0, 0, 297, 246, 263, 272, 0, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 774, 281, 186, 201, 772, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	327, 0, 0, 0, 1460, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 341,
	0, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 1462,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 0,
	0, 0, 0, 233, 273, 239, 232, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 313, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 186,
	201, 0, 0, 323, 362, 368, 0, 0, 0, 224,
	0, 366, 337, 421, 208, 249, 359, 342, 364, 0,
	0, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	0, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 0, 0,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 0, 0,
	336, 367, 214, 423, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 198, 287, 0, 356,
	252, 448, 430, 426, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	0, 0, 297, 246, 263, 272, 0, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 0, 0, 596,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 2105, 0, 0,
	0, 284, 0, 281, 186, 201, 0, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 71, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 1480, 0,
	0, 1481, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 1119, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 1118, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	2186, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 2105, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	71, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 1462, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 1088, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 1365, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	1243, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 1241, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	1239, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 1237, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	1235, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 1231, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	1229, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 327, 0, 1227, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 341, 0, 379, 223, 294, 292, 407, 247,
	240, 236, 222, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	221, 190, 324, 389, 251, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 219, 0, 0, 0, 0, 233, 273, 239, 232,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 313, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 186, 201, 0, 0, 323, 362, 368, 0,
	0, 0, 224, 0, 366, 337, 421, 208, 249, 359,
	342, 364, 0, 0, 365, 290, 409, 354, 419, 436,
	437, 231, 317, 427, 401, 433, 447, 202, 228, 331,
	394, 424, 385, 310, 405, 406, 280, 384, 257, 189,
	288, 444, 200, 374, 216, 193, 396, 417, 213, 377,
	0, 0, 0, 195, 415, 393, 307, 277, 278, 194,
	0, 358, 235, 255, 226, 326, 412, 413, 225, 449,
	204, 432, 197, 0, 431, 319, 408, 416, 308, 299,
	196, 414, 306, 298, 283, 245, 265, 352, 293, 353,
	266, 315, 314, 316, 0, 191, 0, 390, 425, 450,
	210, 0, 0, 403, 441, 446, 0, 355, 211, 256,
	244, 351, 254, 286, 440, 442, 443, 445, 209, 349,
	262, 330, 420, 248, 428, 318, 205, 268, 386, 282,
	291, 0, 0, 336, 367, 214, 423, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 198,
	287, 0, 356, 252, 448, 430, 426, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 199, 207, 217, 229, 242, 250,
	260, 264, 267, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 410, 411, 422, 434, 438, 261, 418,
	439, 0, 295, 0, 0, 297, 246, 263, 272, 0,
	429, 392, 203, 363, 253, 192, 220, 206, 227, 241,
	243, 276, 305, 311, 340, 343, 258, 238, 218, 360,
	215, 378, 398, 399, 400, 402, 309, 234, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 341, 0, 379,
	223, 294, 292, 407, 247, 240, 236, 222, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 221, 190, 324, 389, 251,
	1202, 0, 0, 182, 183, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 219, 0, 0, 0,
	0, 233, 273, 239, 232, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	313, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 186, 201, 0,
	0, 323, 362, 368, 0, 0, 0, 224, 0, 366,
	337, 421, 208, 249, 359, 342, 364, 0, 0, 365,
	290, 409, 354, 419, 436, 437, 231, 317, 427, 401,
	433, 447, 202, 228, 331, 394, 424, 385, 310, 405,
	406, 280, 384, 257, 189, 288, 444, 200, 374, 216,
	193, 396, 417, 213, 377, 0, 0, 0, 195, 415,
	393, 307, 277, 278, 194, 0, 358, 235, 255, 226,
	326, 412, 413, 225, 449, 204, 432, 197, 0, 431,
	319, 408, 416, 308, 299, 196, 414, 306, 298, 283,
	245, 265, 352, 293, 353, 266, 315, 314, 316, 0,
	191, 0, 390, 425, 450, 210, 0, 0, 403, 441,
	446, 0, 355, 211, 256, 244, 351, 254, 286, 440,
	442, 443, 445, 209, 349, 262, 330, 420, 248, 428,
	318, 205, 268, 386, 282, 291, 0, 0, 336, 367,
	214, 423, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 198, 287, 0, 356, 252, 448,
	430, 426, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 199,
	207, 217, 229, 242, 250, 260, 264, 267, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 410, 411,
	422, 434, 438, 261, 418, 439, 0, 295, 0, 0,
	297, 246, 263, 272, 0, 429, 392, 203, 363, 253,
	192, 220, 206, 227, 241, 243, 276, 305, 311, 340,
	343, 258, 238, 218, 360, 215, 378, 398, 399, 400,
	402, 309, 234, 1101, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 341,
	0, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 0,
	0, 0, 0, 233, 273, 239, 232, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 313, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 186,
	201, 0, 0, 323, 362, 368, 0, 0, 0, 224,
	0, 366, 337, 421, 208, 249, 359, 342, 364, 0,
	0, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	0, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 0, 0,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 0, 0,
	336, 367, 214, 423, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 198, 287, 0, 356,
	252, 448, 430, 426, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	0, 0, 297, 246, 263, 272, 0, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 327, 0, 0, 0, 0,
	0, 0, 0, 1092, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 186, 201, 0, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 341,
	0, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 948,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 0,
	0, 0, 0, 233, 273, 239, 232, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 313, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 186,
	201, 0, 0, 323, 362, 368, 0, 0, 0, 224,
	0, 366, 337, 421, 208, 249, 359, 342, 364, 0,
	0, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	0, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 0, 0,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 0, 0,
	336, 367, 214, 423, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 198, 287, 0, 356,
	252, 448, 430, 426, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	0, 0, 297, 246, 263, 272, 0, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 186, 201, 0, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	506, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 341,
	0, 379, 223, 294, 292, 407, 247, 240, 236, 222,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 221, 190, 324,
	389, 251, 0, 0, 0, 182, 183, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 219, 0,
	0, 0, 0, 233, 273, 239, 232, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 313, 0, 0, 456, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 186,
	201, 0, 0, 323, 362, 368, 0, 0, 0, 224,
	0, 366, 337, 421, 208, 249, 359, 342, 364, 0,
	0, 365, 290, 409, 354, 419, 436, 437, 231, 317,
	427, 401, 433, 447, 202, 228, 331, 394, 424, 385,
	310, 405, 406, 280, 384, 257, 189, 288, 444, 200,
	374, 216, 193, 396, 417, 213, 377, 0, 0, 0,
	195, 415, 393, 307, 277, 278, 194, 0, 358, 235,
	255, 226, 326, 412, 413, 225, 449, 204, 432, 197,
	0, 431, 319, 408, 416, 308, 299, 196, 414, 306,
	298, 283, 245, 265, 352, 293, 353, 266, 315, 314,
	316, 0, 191, 0, 390, 425, 450, 210, 0, 0,
	403, 441, 446, 0, 355, 211, 256, 244, 351, 254,
	286, 440, 442, 443, 445, 209, 349, 262, 330, 420,
	248, 428, 318, 205, 268, 386, 282, 291, 0, 0,
	336, 367, 214, 423, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 198, 287, 0, 356,
	252, 448, 430, 426, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 199, 207, 217, 229, 242, 250, 260, 264, 267,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	410, 411, 422, 434, 438, 261, 418, 439, 0, 295,
	0, 0, 297, 246, 263, 272, 0, 429, 392, 203,
	363, 253, 192, 220, 206, 227, 241, 243, 276, 305,
	311, 340, 343, 258, 238, 218, 360, 215, 378, 398,
	399, 400, 402, 309, 234, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 341, 0, 379, 223, 294, 292,
	407, 247, 240, 236, 222, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 221, 190, 324, 389, 251, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 219, 0, 0, 0, 0, 233, 273,
	239, 232, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 313, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 186, 201, 0, 0, 323, 362,
	368, 0, 0, 0, 224, 0, 366, 337, 421, 208,
	249, 359, 342, 364, 0, 0, 365, 290, 409, 354,
	419, 436, 437, 231, 317, 427, 401, 433, 447, 202,
	228, 331, 394, 424, 385, 310, 405, 406, 280, 384,
	257, 189, 288, 444, 200, 374, 216, 193, 396, 417,
	213, 377, 0, 0, 0, 195, 415, 393, 307, 277,
	278, 194, 0, 358, 235, 255, 226, 326, 412, 413,
	225, 449, 204, 432, 197, 0, 431, 319, 408, 416,
	308, 299, 196, 414, 306, 298, 283, 245, 265, 352,
	293, 353, 266, 315, 314, 316, 0, 191, 0, 390,
	425, 450, 210, 0, 0, 403, 441, 446, 0, 355,
	211, 256, 244, 351, 254, 286, 440, 442, 443, 445,
	209, 349, 262, 330, 420, 248, 428, 318, 205, 268,
	386, 282, 291, 0, 0, 336, 367, 214, 423, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 198, 287, 0, 356, 252, 448, 430, 426, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 199, 207, 217, 229,
	242, 250, 260, 264, 267, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 410, 411, 422, 434, 438,
	261, 418, 439, 0, 295, 0, 0, 297, 246, 263,
	272, 0, 429, 392, 203, 363, 253, 192, 220, 206,
	227, 241, 243, 276, 305, 311, 340, 343, 258, 238,
	218, 360, 215, 378, 398, 399, 400, 402, 309, 234,
}

var yyPact = [...]int{
	4553, -1000, -344, 1605, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1576, 1182, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 581, 1246, 223, 1493, 3583, 156, 28476, 362,
	101, 28021, 361, 3864, 28476, -1000, 102, -1000, 89, 28476,
	93, 27566, -1000, -1000, -282, 12518, 1445, 16, 15, 28476,
	109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1216,
	1534, 1542, 1581, 1059, 1598, -1000, 10685, 10685, 296, 296,
	296, 8865, -1000, -1000, 16626, 28476, 28476, 1258, 360, 964,
	346, 344, 343, -1000, -104, -1000, -1000, -1000, -1000, 1493,
	-1000, -1000, 146, -1000, 234, 1176, -1000, 1175, -1000, 493,
	462, 231, 308, 295, 230, 229, 228, 226, 224, 220,
	219, 216, 237, -1000, 491, 491, -164, -172, 2210, 287,
	287, 287, 317, 1457, 1456, -1000, 526, -1000, 491, 491,
	126, 491, 491, 491, 491, 175, 171, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 28476, -1000, 151, 495, 246, 534, 1493, 164,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 28476, 359, 964, 297, -1000, 28476, -1000, 419, 28476,
	628, 628, 49, 628, 628, 628, 628, 91, 417, 13,
	-1000, 76, 160, 158, 152, 584, 111, 62, -1000, -1000,
	161, 584, 103, -1000, 628, 6989, 6989, 6989, -1000, 1480,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 316, -1000,
	-1000, -1000, -1000, 28476, 27111, 286, 531, -1000, -1000, -1000,
	72, -1000, -1000, 1117, 765, -1000, 12518, 2281, 1178, 1178,
	-1000, -1000, 410, -1000, -1000, 13883, 13883, 13883, 13883, 13883,
	13883, 13883, 13883, 13883, 13883, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1178,
	416, -1000, 12063, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
	1178, 12518, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
	1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, -1000,
	-1000, -1000, 28476, -1000, 1178, 926, 1576, -1000, 1182, -1000,
	-1000, -1000, 1482, 12518, 12518, 1576, -1000, 1374, 10685, -1000,
	-1000, 1506, -1000, -1000, -1000, -1000, -1000, 622, 1604, -1000,
	15248, 415, 1602, 26656, -1000, 20279, 26201, 1174, 8396, -47,
	-1000, -1000, -1000, 529, 18914, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1480, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1115, 28476, -1000,
	-1000, 4167, 964, -1000, 1238, -1000, 1112, -1000, 1190, 151,
	304, 1267, 964, 964, 964, 304, -1000, -1000, -1000, 491,
	491, 236, 3583, 3840, -1000, -1000, -1000, 25739, 1237, 964,
	-1000, 1236, -1000, 1511, 285, 466, 466, 964, -1000, -1000,
	28476, 964, 1510, 1509, 28476, 28476, -1000, 25284, -1000, 24829,
	24374, 823, 28476, 23919, 23464, 23009, 22554, 22099, -1000, 1304,
	-1000, 1243, -1000, -1000, -1000, 28476, 28476, 28476, 29, -1000,
	-1000, 28476, 964, -1000, -1000, 822, 821, 491, 491, 820,
	918, 915, 914, 491, 491, 816, 911, 1028, 174, 815,
	807, 804, 867, 909, 127, 830, 826, 786, 28476, 1231,
	-1000, 144, 517, 186, 217, 190, 28476, 117, 1537, 138,
	1493, 1431, 1170, 313, 297, 1311, 28476, 1525, 297, -1000,
	7458, -1000, -1000, 908, 12518, -1000, 618, 584, 584, -1000,
	-1000, -1000, -1000, -1000, -1000, 628, 28476, 618, -1000, -1000,
	-1000, 584, 628, 28476, 628, 628, 628, 628, 584, 628,
	28476, 28476, 28476, 28476, 28476, 28476, 28476, 28476, 28476, 6989,
	6989, 6989, 461, 628, -1000, 1310, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 92, -1000, -1000, -1000, -1000, -1000,
	1605, -1000, -1000, -1000, -111, 1158, 21644, -1000, -286, -287,
	-288, -289, -1000, -1000, -1000, -290, -296, -1000, -1000, -1000,
	12518, 12518, 12518, 12518, 734, 473, 13883, 714, 605, 13883,
	13883, 13883, 13883, 13883, 13883, 13883, 13883, 13883, 13883, 13883,
	13883, 13883, 13883, 13883, 538, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 964, -1000, 1619, 921, 921, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 14338, 9320, 7458,
	1059, 1073, 1576, 10685, 10685, 12518, 12518, 11595, 11140, 10685,
	1473, 550, 765, 28476, -1000, 933, -1000, -1000, 13428, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 28476, 28476, 10685, 10685, 10685, 10685, 10685, -1000, 1157,
	-1000, -168, 16171, 12518, -1000, 1542, 1059, 1506, 1508, 1614,
	458, 671, 1155, -1000, 685, 1542, 18459, 1098, -1000, 1506,
	-1000, -1000, -1000, 28476, -1000, -1000, 21189, -1000, -1000, 6520,
	28476, 208, 28476, -1000, 1120, 1399, -1000, -1000, -1000, 1531,
	18004, 28476, 1122, 1105, -1000, -1000, 414, 7927, -47, -1000,
	7927, 1135, -1000, -43, -72, 9775, 437, -1000, -1000, -1000,
	2210, 14793, 986, -1000, 27, -1000, -1000, -1000, 1190, -1000,
	1190, 1190, 1190, 1190, 29, 29, 29, 29, -1000, -1000,
	-1000, -1000, -1000, 1223, 1213, -1000, 1190, 1190, 1190, 1190,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1212, 1212, 1212,
	1207, 1207, 277, -1000, 12518, 143, 28476, 1522, 776, 144,
	28476, 560, 1309, -1000, 28476, 1267, 1267, 1267, 28476, 1019,
	974, -1000, 1149, -1000, -1000, 1580, -1000, -1000, 576, 603,
	578, 616, 28476, 128, 207, -1000, 264, -1000, 28476, 1211,
	1507, 466, 964, -1000, 964, -1000, -1000, -1000, -1000, 413,
	-1000, -1000, 964, 1146, -1000, 1136, 707, 575, 636, 570,
	1146, -1000, -1000, -126, 1146, -1000, 1146, -1000, 1146, -1000,
	1146, -1000, 1146, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 505, 28476, 128, 538, -1000, 312, -1000, -1000, 538,
	538, -1000, -1000, -1000, -1000, 905, 904, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -332, 28476, 326, 130, 147, 28476, 28476,
	28476, 28476, 28476, 376, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 169, 28476, 28476, 28476, 28476, 367, -1000, -1000, 28476,
	-1000, -1000, -1000, -1000, 765, 28476, -1000, -1000, 628, 628,
	-1000, -1000, 28476, 628, -1000, -1000, -1000, -1000, -1000, -1000,
	628, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 902, -1000, 28476, 28476, -1000,
	-1000, -1000, -1000, -1000, 98, -54, 205, -1000, -1000, -1000,
	-1000, 1539, -1000, 765, 473, 547, 579, -1000, -1000, 741,
	-1000, -1000, 2401, -1000, -1000, -1000, -1000, 714, 13883, 13883,
	13883, 1035, 2401, 2516, 1111, 1217, 442, 666, 666, 441,
	441, 441, 441, 441, 712, 712, -1000, -1000, -1000, -1000,
	933, -1000, -1000, -1000, 933, 10685, 10685, 1143, 1178, 408,
	-1000, 1216, -1000, -1000, 1542, 1054, 1054, 755, 936, 639,
	1600, 1054, 620, 1596, 1054, 1054, 10685, -1000, -1000, 599,
	-1000, 12518, 933, -1000, 1257, 1138, 1137, 1054, 933, 933,
	1054, 1054, 28476, -1000, -274, -1000, -86, 399, 1178, -1000,
	20734, -1000, -1000, 933, 1117, 1482, -1000, -1000, 1420, -1000,
	1371, 12518, 12518, 12518, -1000, -1000, -1000, 1482, 1575, -1000,
	1388, 1383, 1590, 10685, 20279, 1506, -1000, -1000, -1000, 406,
	1590, 1152, 1178, -1000, 28476, 20279, 20279, 20279, 20279, 20279,
	-1000, 1349, 1348, -1000, 1336, 1335, 1343, 28476, -1000, 1067,
	1059, 18004, 208, 1102, 20279, 28476, -1000, -1000, 20279, 28476,
	6051, -1000, 1135, -47, -17, -1000, -1000, -1000, -1000, 765,
	-1000, 882, -1000, 269, -1000, 270, -1000, -1000, -1000, -1000,
	573, 22, -1000, -1000, 29, 29, -1000, -1000, 437, 601,
	437, 437, 437, 900, 900, -1000, -1000, -1000, -1000, -1000,
	772, -1000, -1000, -1000, 746, -1000, -1000, 774, 1300, 143,
	-1000, -1000, 491, 884, 1451, -1000, -1000, 971, 319, -1000,
	1521, 28476, -1000, 1308, 1305, 1302, -1000, -1000, -1000, -1000,
	-1000, 307, 28476, 1063, -1000, 124, 28476, 968, 28476, -1000,
	1061, 28476, -1000, 964, -1000, -1000, 7458, -1000, 28476, 1178,
	-1000, -1000, -1000, -1000, 348, 1487, 1483, 128, 124, 437,
	964, -1000, -1000, -1000, -1000, -1000, -335, 1057, 28476, 136,
	-1000, 1209, 833, -1000, 1263, -1000, -1000, -1000, -1000, 108,
	185, 166, 309, -1000, 353, 1300, 28476, -1000, -1000, -1000,
	-1000, 584, -1000, -1000, 584, -1000, -1000, -1000, -1000, -1000,
	-1000, 1477, -68, -308, -1000, -305, -1000, -1000, -1000, -1000,
	1035, 2401, 2380, -1000, 13883, 13883, -1000, -1000, 1054, 1054,
	10685, 7458, 1576, 1482, -1000, -1000, 345, 538, 345, 13883,
	13883, -1000, 13883, 13883, -1000, -118, 1065, 546, -1000, 12518,
	777, -1000, -1000, 13883, 13883, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 331, 328, 310, 28476, -1000, -1000,
	-1000, 782, 883, 1357, 765, 765, -1000, -1000, 28476, -1000,
	-1000, -1000, -1000, 1587, 12518, -1000, 1130, -1000, 5582, 1542,
	1301, 28476, 1178, 1605, 15716, 28476, 1079, -1000, 492, 1399,
	1293, 1290, 1414, -1000, -1000, -1000, -1000, 1347, -1000, 1339,
	-1000, -1000, -1000, -1000, -1000, 1059, 1590, 20279, 1077, -1000,
	1077, -1000, 403, -1000, -1000, -1000, -80, -82, -1000, -1000,
	-1000, 2210, -1000, -1000, -1000, 637, 13883, 1613, -1000, 877,
	1502, -1000, 1497, -1000, -1000, 437, 437, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1049, -1000, 1046, 1129, 1043, 58,
	-1000, 1161, 1472, 491, 491, -1000, 728, -1000, 964, -1000,
	28476, -1000, -1000, 28476, 28476, 28476, 1579, 1125, -1000, 28476,
	-1000, -1000, 28476, -1000, -1000, 1382, 143, 1041, -1000, -1000,
	-1000, 207, 28476, -1000, 921, 124, -1000, -1000, -1000, -1000,
	-1000, -1000, 1184, -1000, -1000, -1000, 963, -1000, -127, 964,
	28476, 28476, 28476, -1000, 28476, -1000, -1000, -1000, 628, 628,
	-1000, 1471, -1000, 964, -1000, 13883, 2401, 2401, -1000, -1000,
	933, -1000, 1542, -1000, 933, 1190, 1190, -1000, 1190, 1207,
	-1000, 1190, 78, 1190, 73, 933, 933, 2481, 2418, 2145,
	846, 1178, -112, -1000, 765, 12518, 2128, 1288, 1178, 1178,
	1178, 1017, 875, 29, -1000, -1000, -1000, 1585, 1577, 765,
	-1000, -1000, -1000, 1514, 1128, 1100, -1000, -1000, 10230, 1038,
	1378, 385, 1017, 1576, 28476, 12518, -1000, -1000, 12518, 1189,
	-1000, 12518, -1000, -1000, -1000, 1576, 1576, 1077, -1000, -1000,
	375, -1000, -1000, -1000, -1000, -1000, 2401, -48, -1000, -1000,
	-1000, -1000, -1000, 29, 870, 29, 710, -1000, 693, -1000,
	-1000, -215, -1000, -1000, 1156, 1268, -1000, -1000, 1184, -1000,
	-1000, -1000, 28476, 28476, -1000, -1000, 198, -1000, 254, 1015,
	-1000, -173, -1000, -1000, 1529, 28476, -1000, -1000, 7458, -1000,
	-1000, 1181, 1265, -1000, -1000, -1000, -1000, -1000, -1000, 2401,
	-1000, 1482, -1000, -1000, 247, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13883, 13883, 13883, 13883, 13883, 1542, 866,
	765, 13883, 13883, 17536, 19824, 19824, 17081, 29, -4, -1000,
	12518, 12518, 1496, -1000, 1178, -1000, 1034, 28476, 1178, 28476,
	-1000, 1542, -1000, 765, 765, 28476, 765, 1542, -1000, -1000,
	437, -1000, 437, 939, 937, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1528, 1125, -1000, 192, 28476, -1000, 207,
	-1000, -179, -180, 1182, 1012, 1123, -1000, 490, 28476, 28476,
	-1000, -1000, -1000, 1257, 1257, 1257, 1257, 122, 933, -1000,
	1257, 1257, 1003, -1000, -1000, -1000, 1003, 1003, 399, -267,
	-1000, 1428, 1394, 765, 1117, 1608, -1000, 1178, 1605, 379,
	1100, -1000, -1000, 992, -1000, -1000, -1000, -1000, -1000, 1182,
	1178, 1060, -1000, -1000, -1000, 213, -1000, 7458, 5113, 990,
	-1000, -1000, -1000, -1000, -1000, 933, 153, -151, -1000, -1000,
	-1000, 19369, -1000, -1000, -1000, -1000, -4, 268, -1000, 1404,
	1394, -1000, 1574, 1412, 1572, -1000, 28476, 1100, 28476, -1000,
	213, 12973, 28476, -1000, -51, -1000, -1000, -1000, -1000, -1000,
	1263, -1000, 1355, -124, -161, -1000, -1000, 1402, 1408, 1408,
	1404, -1000, 1561, 1548, -1000, 859, 1547, 852, 997, -1000,
	-1000, 1257, 933, 984, 272, -1000, -1000, -127, -1000, 1354,
	-1000, 1392, 713, -1000, -1000, -1000, -1000, 849, 847, -1000,
	667, -1000, -1000, -1000, 1272, 148, -1000, -128, -1000, 646,
	-1000, -1000, -1000, -1000, -1000, 1269, -1000, 1595, -1000, -157,
	-1000, -1000, -1000, 1607, 496, 496, -171, -1000, -1000, -1000,
	263, 721, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1897, 1896, 32, 83, 85, 1894, 1889, 1888, 1886,
	134, 133, 131, 1885, 1884, 1883, 1881, 1880, 1878, 1873,
	1866, 1858, 1857, 1852, 1848, 65, 123, 43, 37, 140,
	1847, 1846, 47, 1845, 1844, 1842, 126, 117, 439, 1841,
	119, 1840, 1839, 1838, 1837, 1835, 1834, 1828, 1827, 1822,
	1820, 1818, 1815, 1814, 1813, 144, 1812, 1811, 7, 1810,
	51, 1809, 1808, 1807, 1806, 1805, 89, 1803, 1802, 1801,
	114, 1800, 1797, 50, 416, 63, 73, 1795, 1787, 77,
	770, 1786, 106, 128, 1782, 898, 1779, 61, 78, 86,
	1778, 46, 1777, 1773, 90, 1771, 1769, 1765, 74, 1761,
	1760, 3185, 1759, 68, 76, 15, 27, 1753, 1752, 1747,
	1743, 34, 44, 1741, 1732, 23, 1731, 1726, 136, 1725,
	88, 18, 1724, 14, 13, 21, 1723, 87, 1722, 42,
	56, 31, 1717, 82, 1716, 1715, 1714, 1713, 57, 1711,
	79, 109, 30, 1710, 1709, 6, 11, 1708, 1707, 1706,
	1705, 1704, 1703, 10, 1702, 4, 1700, 28, 1699, 9,
	22, 17, 72, 118, 26, 8, 1698, 121, 1697, 29,
	122, 66, 107, 1695, 1694, 1692, 871, 141, 1691, 1690,
	35, 1689, 116, 127, 1687, 1450, 1686, 1685, 58, 1276,
	2643, 19, 113, 1684, 1683, 1891, 48, 80, 24, 1681,
	75, 1680, 1679, 1678, 132, 125, 69, 811, 53, 1677,
	1676, 1675, 1673, 1672, 1671, 1670, 135, 16, 20, 108,
	36, 1669, 1668, 1667, 67, 38, 1666, 105, 104, 71,
	94, 1664, 115, 99, 59, 1661, 40, 1656, 1654, 1653,
	1652, 41, 1651, 1649, 1648, 1646, 112, 98, 64, 45,
	1645, 39, 93, 101, 102, 1644, 25, 124, 12, 1643,
	3, 0, 1642, 5, 120, 1482, 103, 1641, 1638, 1,
	1637, 2, 1636, 1633, 81, 1632, 1631, 1630, 1628, 2492,
	340, 110, 1627, 129,
}

//line sql.y:5218
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 277, 278, 278, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 261, 261, 261, 264, 264,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 281, 281, 96, 96, 94, 94, 95, 95,
	162, 162, 13, 14, 14, 172, 172, 171, 171, 171,
	173, 173, 173, 173, 207, 207, 15, 15, 15, 15,
	15, 71, 71, 263, 263, 262, 260, 260, 259, 259,
	258, 23, 24, 33, 33, 33, 33, 34, 35, 265,
	265, 237, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 239, 239, 226, 226, 238, 238,
	238, 238, 238, 238, 238, 225, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 209, 209, 209,
	209, 212, 212, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 211, 211, 211, 211, 211, 213, 213, 213,
	213, 213, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 215, 215, 215,
	215, 215, 215, 215, 215, 224, 224, 216, 216, 219,
	219, 220, 220, 220, 221, 221, 222, 222, 217, 217,
	217, 217, 218, 218, 218, 227, 251, 251, 250, 250,
	248, 248, 248, 248, 236, 236, 245, 245, 245, 245,
	245, 235, 235, 231, 231, 231, 232, 232, 233, 233,
	230, 230, 234, 234, 247, 247, 246, 228, 228, 229,
	229, 253, 253, 253, 253, 254, 270, 271, 269, 269,
	269, 269, 269, 60, 60, 60, 184, 184, 184, 243,
	243, 242, 242, 242, 244, 244, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 179, 179, 179, 268, 268,
	268, 268, 268, 268, 267, 267, 267, 240, 240, 240,
	266, 266, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 223,
	223, 223, 255, 255, 256, 256, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 41, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	272, 272, 178, 178, 186, 186, 177, 177, 200, 200,
	200, 180, 180, 180, 181, 181, 276, 276, 276, 43,
	43, 45, 45, 46, 47, 47, 202, 202, 203, 203,
	48, 49, 61, 61, 61, 61, 61, 61, 63, 63,
	63, 7, 7, 7, 7, 57, 57, 57, 6, 6,
	44, 44, 51, 273, 273, 274, 275, 275, 275, 275,
	52, 54, 20, 20, 20, 20, 20, 20, 78, 78,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 72, 72, 72, 67, 67, 282, 55, 56,
	56, 70, 70, 70, 64, 64, 64, 69, 69, 69,
	75, 75, 77, 77, 77, 77, 77, 79, 79, 79,
	79, 79, 79, 79, 74, 74, 76, 76, 76, 76,
	193, 193, 193, 192, 192, 86, 86, 87, 87, 88,
	88, 89, 89, 89, 128, 104, 104, 160, 160, 159,
	159, 161, 161, 161, 161, 163, 163, 90, 90, 90,
	90, 91, 91, 92, 92, 93, 93, 201, 201, 198,
	198, 198, 197, 197, 97, 97, 97, 99, 98, 98,
	98, 98, 100, 100, 102, 102, 101, 101, 103, 105,
	105, 105, 105, 105, 106, 106, 85, 85, 85, 85,
	85, 85, 85, 85, 175, 175, 108, 108, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 119, 119,
	119, 119, 119, 119, 109, 109, 109, 109, 109, 109,
	109, 73, 73, 120, 120, 120, 127, 121, 121, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 116, 116, 116, 116, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 283, 283, 118,
	117, 117, 117, 117, 117, 117, 117, 68, 68, 68,
	68, 68, 206, 206, 206, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 134, 134,
	65, 65, 132, 132, 133, 135, 135, 129, 129, 129,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 136, 136, 137, 137, 138, 138, 139, 139, 140,
	141, 141, 141, 142, 142, 142, 142, 32, 32, 32,
	32, 32, 27, 27, 27, 27, 28, 28, 28, 80,
	80, 80, 80, 82, 82, 81, 81, 58, 58, 59,
	59, 59, 83, 83, 84, 84, 84, 84, 157, 157,
	157, 143, 143, 143, 143, 149, 149, 149, 145, 145,
	147, 147, 147, 148, 148, 148, 146, 154, 154, 156,
	156, 155, 155, 151, 151, 152, 152, 153, 153, 153,
	150, 150, 110, 110, 110, 110, 110, 158, 158, 158,
	158, 164, 164, 123, 123, 125, 125, 124, 126, 165,
	165, 169, 166, 166, 170, 170, 170, 170, 170, 167,
	167, 168, 168, 194, 194, 194, 174, 174, 185, 185,
	182, 182, 183, 183, 176, 176, 187, 187, 187, 53,
	122, 122, 252, 252, 249, 190, 190, 191, 191, 195,
	195, 199, 199, 196, 196, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 279, 280,
	204, 205, 205, 205,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 5, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 10, 3, 6, 7, 5, 5, 5, 12,
	7, 5, 9, 4, 4, 4, 4, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 6,
	6, 5, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -277, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -279, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 334, 187, 186, 26, -278, 474, -70,
	5, -138, 16, -3, -55, -282, -55, -55, -55, -55,
	-55, -55, -237, -239, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -265, 107, 220, 325, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -257, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 347, 350, -244, 154,
	160, 161, 335, 105, 104, 72, 156, -241, 281, 451,
	-40, 453, 95, 97, 452, 41, 165, 454, 455, 456,
	457, 175, 458, 459, 460, 461, 467, 468, 469, 470,
	106, 5, 164, -265, -80, 291, 227, 77, -199, -195,
	-261, -189, 84, 85, 86, 344, 178, 378, 379, 225,
	77, 281, 451, 231, 245, 239, 266, 258, 345, 380,
	228, 179, 213, 448, 256, 312, 453, 381, 193, 304,
	286, 294, 95, 234, 321, 466, 230, 382, 464, 97,
	452, 76, 48, 41, 188, 254, 250, 454, 214, 383,
	355, 207, 105, 102, 473, 248, 47, 28, 463, 104,
	46, 455, 384, 456, 296, 271, 442, 45, 309, 194,
	385, 80, 349, 450, 298, 249, 295, 224, 462, 159,
	386, 434, 306, 443, 387, 272, 276, 388, 313, 49,
	389, 390, 444, 103, 391, 75, 457, 243, 244, 392,
	222, 177, 315, 270, 175, 34, 299, 346, 226, 55,
	201, 316, 43, 274, 42, 438, 393, 441, 269, 265,
	50, 394, 395, 396, 397, 458, 268, 242, 264, 472,
	219, 459, 59, 161, 278, 277, 279, 208, 311, 261,
	398, 399, 400, 182, 78, 401, 251, 19, 402, 403,
	307, 215, 404, 53, 405, 406, 319, 191, 407, 51,
	460, 38, 196, 461, 408, 409, 410, 411, 412, 305,
	413, 297, 273, 275, 203, 293, 348, 414, 247, 195,
	465, 415, 183, 449, 197, 200, 190, 320, 184, 416,
	417, 418, 419, 420, 229, 421, 422, 235, 467, 40,
	423, 424, 425, 426, 223, 218, 314, 323, 58, 79,
	283, 427, 447, 241, 216, 428, 232, 52, 468, 469,
	470, 210, 471, 289, 106, 220, 221, 44, 262, 202,
	429, 430, 252, 253, 267, 240, 263, 233, 435, 204,
	308, 192, 431, 322, 217, 284, 352, 209, 310, 446,
	351, 260, 257, 211, 432, 166, 205, 206, 433, 436,
	300, 290, 301, 302, 227, 303, 291, 212, 350, 255,
	285, 164, -185, 165, 166, -265, 164, -101, -195, 164,
	-167, 286, -186, 287, 288, 299, 300, 306, -178, 307,
	305, 203, -276, 313, 164, 308, 153, 144, 296, 297,
	290, 303, 291, 212, -272, -261, 456, 471, 312, 259,
	292, 298, 314, 438, 302, 301, -195, 233, -202, 238,
	-190, -261, -189, 236, -101, -61, 434, 157, -204, -204,
	-72, 438, 440, -121, -85, -107, 110, -112, 30, 24,
	-111, -108, -129, -126, -127, 144, 145, 147, 146, 148,
	133, 134, 141, 111, 149, -116, -114, -115, -117, 88,
	87, 96, 89, 90, 91, 92, 98, 99, 100, -190,
	-195, -124, -279, 65, 66, 335, 336, 337, 338, 343,
	339, 113, 54, 330, 324, 333, 332, 331, 328, 329,
	326, 327, 341, 342, 169, 325, 163, 139, 334, -261,
	-189, 41, 289, 289, -101, 227, -5, -4, -279, 6,
	21, 22, -142, 18, 17, -280, 83, -64, -77, 60,
	61, -79, 22, 37, 64, 62, 21, -56, -76, 135,
	-85, -195, -76, -176, 168, -176, -176, -166, -207, 233,
	-170, 314, 313, -191, -168, -190, -188, -167, 311, 158,
	353, 109, 23, 25, 112, 144, 17, 113, 36, 160,
	259, 176, 143, 172, 335, 153, 69, 354, 326, 327,
	324, 330, 337, 338, 325, 287, 30, 11, 356, 26,
	186, 22, 37, 137, 155, 116, 117, 189, 24, 187,
	100, 359, 20, 72, 181, 12, 174, 14, 360, 361,
	15, 169, 168, 128, 165, 67, 9, 149, 27, 125,
	63, 362, 29, 363, 364, 365, 366, 65, 126, 18,
	328, 329, 32, 439, 367, 343, 198, 139, 70, 56,
	440, 110, 368, 369, 98, 370, 101, 73, 445, 107,
	16, 68, 39, 371, 199, 372, 171, 373, 317, 374,
	127, 156, 334, 66, 375, 163, 288, 6, 340, 31,
	185, 173, 64, 376, 164, 115, 341, 342, 167, 99,
	5, 170, 33, 10, 71, 74, 331, 332, 333, 54,
	347, 114, 13, 377, 318, 108, 312, -238, 126, -225,
	-229, -190, 180, -254, 176, -101, -247, -246, -190, -80,
	164, -261, 165, 165, 165, -55, 334, -36, -37, -167,
	143, 197, 82, 82, -229, -228, -227, -266, 199, 180,
	-253, -245, 172, 181, -235, 173, 174, -230, 165, 29,
	-266, -230, 171, 181, 199, 199, 106, 199, 106, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 196, -236,
	118, -236, 351, 351, -241, -266, -266, -266, 167, 34,
	34, -187, -230, 167, 23, -236, -236, -167, 143, -236,
	-236, -236, -236, 207, 207, -236, -236, -236, -236, -236,
	-236, -236, -236, -236, -236, -236, -236, -236, -236, -236,
	-101, -83, 214, 153, 155, 158, 73, 88, 228, 118,
	-38, 209, -22, -101, 164, -261, -182, 169, -55, -101,
	150, -101, -180, 126, 13, -180, -177, 289, 293, 294,
	295, -180, -180, -180, -180, 210, 304, -231, 165, 34,
	177, 289, 210, 304, 210, 211, 210, 211, 210, -200,
	12, 128, 325, 309, 306, 203, 164, 204, 166, 310,
	-261, 441, 211, -200, 289, 206, -180, -205, -279, -191,
	259, -205, -205, 31, 167, -190, -57, -190, 88, -7,
	-3, -11, -10, -12, 118, -78, 289, -66, 144, 456,
	442, 443, 444, 441, 305, 449, 447, 445, 210, 446,
	82, 109, 107, 108, 125, -85, -109, 128, 110, 126,
	127, 112, 130, 129, 140, 133, 134, 135, 136, 137,
	138, 139, 131, 132, 143, 118, 119, 120, 121, 122,
	123, 124, -175, -279, -127, -279, 151, 152, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -279, 150,
	-2, -121, -4, -279, -279, -279, -279, -279, -279, -279,
	-279, -134, -85, -279, -283, -279, -283, -118, -279, -283,
	-118, -283, -118, -283, -283, -118, -283, -118, -283, -283,
	-118, -279, -279, -279, -279, -279, -279, -279, -204, -273,
	-274, -104, -101, -279, 88, -138, -3, -55, -157, 20,
	32, -85, -139, -140, -85, -138, 56, -74, -76, -79,
	60, 61, 94, 12, -193, -192, 23, -190, 88, 150,
	12, -102, 27, -101, -87, -88, -89, -90, -104, -128,
	-279, 12, -94, -95, -101, -103, -195, 82, 233, -170,
	-207, -172, -171, 315, 317, 118, -194, -190, 88, 30,
	83, 82, -101, -209, -212, -214, -213, -215, -210, -211,
	256, 257, 144, 260, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 31, 188, 252, 253, 254, 255,
	272, 273, 274, 275, 276, 277, 278, 279, 239, 258,
	345, 240, 241, 242, 243, 244, 245, 247, 248, 249,
	250, 251, -264, -261, 81, 83, 82, -216, 81, -83,
	-183, 169, -252, -249, 74, -261, -261, -261, -183, -236,
	-236, 196, -29, -26, -257, 16, -25, -26, 158, 102,
	103, 155, 81, -225, 81, -234, -264, -261, 81, 29,
	171, 170, -233, -230, -233, -234, -261, -129, -190, -195,
	-261, 29, 29, -163, -190, -163, -163, 21, -163, 21,
	-163, 21, 89, -190, -163, 21, -163, 21, -163, 21,
	-163, 21, -163, 21, 30, 75, 76, 30, 78, 79,
	80, -129, -129, -225, -167, -101, -261, 89, 89, -236,
	-236, 89, 88, 88, 88, -236, -236, 89, 88, -261,
	88, -267, 182, 224, 226, 89, 89, 89, 89, 30,
	88, -268, 30, 463, 462, 464, 465, 466, 89, 30,
	89, 30, 89, -190, 81, -82, 216, 118, 205, 205,
	164, 164, 218, -101, 229, 230, 228, 21, 217, 219,
	221, 41, 82, 167, -182, 73, -96, -101, 24, -182,
	-196, -195, -188, 88, -85, -232, 12, 128, -200, -200,
	-180, -101, -232, -200, -180, -101, -180, -180, -180, -180,
	-200, -180, -195, -195, -101, -101, -101, -101, -101, -101,
	-101, -205, -205, -205, -181, 126, -180, 73, -203, 236,
	270, 435, 436, 437, 82, 347, -94, 441, 441, 441,
	441, 441, 441, -85, -85, -85, -85, -119, 98, 110,
	99, 100, -112, -120, -124, -127, 93, 128, 126, 127,
	112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -206, -261, 88, 144,
	-261, -111, -111, -190, -75, 22, 37, -74, -191, -196,
	-188, -70, -280, -280, -138, -74, -74, -85, -85, -129,
	88, -74, -129, 88, -74, -74, -69, 22, 37, -132,
	-133, 114, -129, -280, -112, -190, -190, -74, -75, -75,
	-74, -74, 82, -275, 317, 318, 439, -198, 199, -197,
	23, -195, 88, -122, -121, -142, -280, -143, 27, 10,
	128, 82, 19, 82, -141, 25, 26, -142, -113, -190,
	89, 92, -86, 82, 12, -79, -101, -192, 135, -196,
	-101, -162, 199, -101, 31, 82, -97, -99, -98, -100,
	63, 67, 69, 64, 65, 66, 70, -201, 23, -87,
	-3, -279, -101, -94, -281, 82, 12, 74, -281, 82,
	150, -170, -172, 82, 316, 318, 319, 73, 101, -85,
	-218, 143, -243, -242, -241, -225, -227, -228, -229, 83,
	-144, -221, 284, -216, -216, -216, -216, -216, -217, -167,
	-217, -217, -217, 81, 81, -216, -216, -216, -216, -219,
	81, -219, -219, -220, 81, -220, -254, -85, -251, -250,
	-248, -249, 175, 95, 347, -246, -141, 89, -82, -101,
	110, 73, -190, -252, -252, -252, -195, -261, 88, -261,
	88, 82, 17, -226, -225, -130, 224, -256, 199, -253,
	-247, 81, 29, -233, -234, -234, 150, -261, 82, 27,
	106, 106, 106, 106, 347, 155, 31, -225, -130, -206,
	167, -206, -206, 88, 88, -179, 471, -94, 166, 223,
	-84, 330, 88, 84, -101, -101, -101, -101, -101, 158,
	155, 207, -101, -101, -94, -101, 82, -60, 184, 179,
	-195, -101, -180, -180, -101, -180, -180, 88, -101, -190,
	-66, 317, 347, 20, -67, 20, 98, 99, 100, -120,
	-112, -112, -112, -73, 189, 109, -280, -280, -74, -74,
	-279, 150, -5, -142, -280, -280, 82, 74, 23, 12,
	12, -280, 12, 12, -280, -280, -74, -135, -133, 116,
	-85, -280, -280, 82, 82, -280, -280, -280, -280, -280,
	-274, 438, 318, -105, 71, 168, 72, -279, -197, -280,
	-157, 39, 47, 58, -85, -85, -140, -157, -174, 20,
	12, 54, 54, -106, 13, -76, -87, -79, 150, -106,
	-110, 31, 54, -3, -279, -279, -165, -169, -129, -88,
	-89, -89, -88, -89, 63, 63, 63, 68, 63, 68,
	63, -98, -195, -280, -280, -3, -162, 74, -87, -101,
	-87, -103, -195, 135, -171, -173, 320, 317, 323, -261,
	88, 82, -241, -229, 98, 110, 30, 73, 281, 95,
	171, 29, 170, -222, 285, -217, -217, -218, -261, 88,
	144, -218, -218, -218, -224, 88, -224, 89, 89, 83,
	-32, -27, -28, 32, 77, -248, -236, 88, 38, 83,
	166, 24, -101, 73, 73, 73, 16, -159, -190, 82,
	83, -131, 225, -129, 83, -190, 83, -159, -234, -191,
	-190, -279, 164, 30, 30, -130, -131, -218, -261, 473,
	472, 83, -101, -81, 214, 222, 81, 85, -263, 74,
	205, 281, 205, 208, 167, -60, -32, -101, -200, -200,
	32, 317, 450, 448, -73, 109, -112, -112, -280, -280,
	-75, -191, -138, -157, -208, 144, 256, 188, 254, 250,
	270, 261, 283, 252, 284, -206, -208, -112, -112, -112,
	-112, 344, -138, 117, -85, 115, -112, -112, 165, 165,
	165, -163, 40, 88, 88, 59, -101, -136, 14, -85,
	135, -142, -164, 73, -165, -123, -125, -124, -279, -158,
	-280, -190, -163, -106, 82, 118, -92, -91, 73, 74,
	-93, 73, -91, 63, 63, -280, -106, -87, -106, -106,
	150, 317, 321, 322, -241, 98, -112, 10, 88, 29,
	29, -218, -218, 83, 82, 83, 82, 83, 82, -184,
	384, 110, -28, -27, -236, -236, 89, -261, -101, -101,
	-101, -101, 17, 82, -225, -129, 54, -251, 83, -255,
	-256, -101, -111, -131, -160, 81, 83, -260, 347, -262,
	-261, -190, -190, -190, -101, -180, -180, 32, -261, -112,
	-280, -142, -280, -216, -216, -216, -220, -216, 244, -216,
	244, -280, -280, 20, 20, 20, 20, -279, -65, 340,
	-85, 82, 82, -279, -279, -279, -280, 88, -217, -137,
	15, 17, 28, -164, 82, -280, -280, 82, 54, 150,
	-280, -138, -169, -85, -85, 81, -85, -138, -106, -115,
	-217, 88, -217, 89, 89, 384, 30, 78, 79, 80,
	30, 75, 76, -160, -159, -190, 201, 183, -280, 82,
	-223, 347, 350, 23, -159, -259, -258, -191, 81, 74,
	-157, -217, -261, -112, -112, -112, -112, -112, -142, 88,
	-112, -112, -161, -280, -190, 171, -161, -161, -198, -217,
	-146, -151, -177, -85, -121, 29, -125, 54, -3, -190,
	-123, -190, -142, -159, -142, -218, -218, 83, 83, 23,
	202, -101, -256, 351, 351, -3, 83, 82, 118, -159,
	-101, -280, -280, -280, -280, -68, 128, 347, -280, -280,
	-280, 82, -280, -280, -280, -105, -149, 434, -154, 43,
	-152, -153, 44, -150, 45, 53, 10, -123, 150, 83,
	-3, -279, 81, -58, 347, -258, -240, -191, 88, 89,
	83, -280, 345, 70, 348, -190, 171, -146, 48, 262,
	-156, -155, 52, 44, -153, 17, 46, 17, -165, -190,
	-58, -112, 198, -159, -59, 213, 438, -263, 59, 346,
	349, -147, 50, -145, 49, -145, -155, 17, 17, 88,
	17, 88, -280, -280, 83, 176, -260, 59, -148, 51,
	73, 101, 88, 88, 88, -270, -271, 73, 215, 347,
	73, 101, -271, 73, 11, 10, 348, -269, 184, 179,
	182, 31, -269, 349, 178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 825, 0, 557, 557, 557, 557, 557,
	557, 557, 0, 0, -2, -2, -2, 849, 961, 0,
	938, 0, 0, -2, 490, 491, 0, 493, -2, 0,
	0, 502, 1370, 1370, 552, 0, 0, 0, 0, 0,
	0, 1368, 55, 56, 508, 509, 510, 1, 3, 0,
	561, 833, 0, 0, -2, 559, 0, 0, 944, 944,
	944, 0, 86, 87, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 557, 0, 939, 109, 110, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 946, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 0, 108, 862, 0, 0, 0, 118, 962,
	959, 960, 35, 36, 37, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 0, 0, 0, 940, 557, 0, 424, 646, 0,
	481, 481, 0, 481, 481, 481, 481, 0, 0, 0,
	436, 0, 0, 0, 0, 478, 0, 0, 455, 457,
	0, 478, 0, 465, 481, 1371, 1371, 1371, 929, 0,
	475, 473, 487, 488, 470, 471, 489, 492, 0, 497,
	500, 955, 956, 0, 515, 0, 1178, 507, 520, 521,
	0, 553, 554, 40, 697, 656, 0, 662, 664, 0,
	699, 700, 701, 702, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 730, 731, 732, 810,
	811, 812, 813, 814, 815, 816, 817, 666, 667, 807,
	0, 918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 767, 767, 767, 767, 767, 767, 767,
	767, 767, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1370, 0, 530, 0, 0, 825, 51, 0, 557,
	562, 563, 868, 0, 0, 825, 1369, 0, 0, -2,
	-2, 573, 579, 580, 581, 582, 583, 558, 0, 586,
	590, 0, 0, 0, 945, 0, 0, 72, 0, 1334,
	922, -2, -2, 0, 0, 957, 958, 931, -2, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, -2, 0, 0, 128,
	129, 0, 38, 250, 0, 124, 0, 244, 197, 862,
	942, 952, 0, 0, 0, 942, 92, 116, 117, 224,
	224, 0, 118, 118, 336, 337, 338, 0, 0, -2,
	248, 0, 321, 0, 0, 238, 238, 242, 240, 241,
	0, 0, 0, 0, 0, 0, 348, 0, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	225, 0, 366, 367, 275, 0, 0, 0, 0, 346,
	347, 0, 0, 947, 948, 0, 0, 224, 224, 0,
	0, 0, 0, 224, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 853, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 416, 0, 940, 0, 0, 0, 940, 423,
	0, 425, 426, 0, 0, 427, 0, 478, 478, 476,
	477, 429, 430, 431, 432, 481, 0, 0, 233, 234,
	235, 478, 481, 0, 481, 481, 481, 481, 478, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1371,
	1371, 1371, 484, 481, 462, 463, 466, 467, 1372, 1373,
	976, 468, 469, 930, 498, 501, 518, 516, 517, 519,
	511, 512, 513, 514, 0, 532, 533, 538, 0, 0,
	0, 0, 544, 545, 546, 0, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 684, 685, 686, 687, 688,
	689, 690, 663, 0, 677, 0, 0, 0, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 0, 570, 0,
	0, 0, 825, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 799, 0, 750, 0, 751, 759, 0, 752,
	760, 753, 761, 754, 755, 762, 756, 763, 757, 758,
	764, 0, 0, 0, 570, 570, 0, 0, 41, 522,
	523, 0, 629, 950, 531, 833, 0, 572, 871, 0,
	0, 834, 826, 827, 830, 833, 0, 595, 584, 574,
	577, 578, 560, 0, 587, 591, 0, 593, 594, 0,
	0, 70, 0, 645, 0, 597, 599, 600, 601, 627,
	0, 0, 0, 0, 66, 68, 646, 0, 1334, 928,
	0, 74, 75, 0, 0, 0, 212, 933, 934, 935,
	-2, 231, 0, 136, 204, 148, 149, 150, 197, 152,
	197, 197, 197, 197, 208, 208, 208, 208, 180, 181,
	182, 183, 184, 0, 0, 167, 197, 197, 197, 197,
	187, 188, 189, 190, 191, 192, 193, 194, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 199, 199, 199,
	201, 201, 0, 39, 0, 216, 0, 830, 0, 853,
	0, 0, 0, 953, 0, 952, 952, 952, 0, 0,
	0, 369, 330, 358, 370, 0, 333, 334, -2, 0,
	0, 320, 0, 322, 0, 232, 0, -2, 0, 0,
	0, 238, 242, 239, 242, 230, 243, 350, 807, 0,
	351, 352, 0, 388, 615, 0, 0, 0, 0, 0,
	394, 395, 396, 0, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 322, 0, 355, 0, 276, 277, 0,
	0, 280, 281, 282, 283, 0, 0, 286, 287, 288,
	289, 290, 314, 315, 316, 291, 292, 293, 294, 295,
	296, 297, 308, 309, 310, 311, 312, 313, 298, 299,
	300, 301, 302, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 850, 851,
	852, 0, 0, 0, 0, 0, 263, 64, 941, 0,
	647, 963, 964, 482, 483, 0, 236, 237, 481, 481,
	433, 456, 0, 481, 437, 458, 438, 440, 439, 441,
	481, 444, 479, 480, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 460, 0, 461, 0, 0, 499,
	503, 504, 505, 506, 0, 0, 535, 540, 541, 542,
	543, 555, 548, 698, 657, 658, 659, 661, 678, 0,
	680, 682, 668, 669, 693, 694, 695, 0, 0, 0,
	0, 691, 673, 0, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 718, 782, 783, 784,
	0, 716, 717, 728, 0, 0, 0, 571, 808, 0,
	-2, 0, 696, 917, 833, 0, 0, 0, 0, 701,
	810, 0, 701, 810, 0, 0, 0, 568, 569, 805,
	802, 0, 0, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 528, 0, 649, 0, 630,
	0, 632, 633, 0, 951, 868, 52, 42, 0, 869,
	0, 0, 0, 0, 829, 831, 832, 868, 0, 818,
	0, 0, 654, 0, 0, 575, 48, 592, 588, 0,
	654, 0, 0, 644, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 637, 0, 0, 0, 0, 628, 0,
	0, 0, -2, 0, 0, 0, 62, 63, 0, 0,
	0, 923, 73, 0, 0, 78, 79, 924, 925, 926,
	927, 0, 111, -2, 271, 130, 132, 133, 134, 125,
	135, 206, 205, 151, 208, 208, 174, 175, 212, 0,
	212, 212, 212, 0, 0, 168, 169, 170, 171, 162,
	0, 163, 164, 165, 0, 166, 249, 0, 837, 217,
	218, 220, 224, 0, 0, 245, 246, 0, 0, 101,
	0, 0, 954, 0, 0, 0, 107, 120, 121, 122,
	123, 118, 0, 0, 126, 324, 0, 0, 0, 247,
	0, 0, 226, 242, 227, 228, 0, 353, 0, 0,
	390, 391, 392, 393, 0, 0, 0, 322, 324, 212,
	0, 278, 279, 284, 285, 303, 0, 0, 0, 0,
	863, 864, 0, 867, 93, 376, 378, 377, 381, 0,
	0, 0, 0, 417, 263, 837, 0, 421, 264, 265,
	422, 478, 443, 459, 478, 435, 442, 485, 464, 495,
	539, 0, 0, 0, 547, 0, 679, 681, 683, 670,
	691, 674, 0, 671, 0, 0, 665, 733, 0, 0,
	570, 0, 825, 868, 737, 738, 0, 0, 0, 0,
	0, 775, 0, 0, 776, 0, 825, 0, 803, 0,
	0, 749, 769, 0, 0, 770, 771, 772, 773, 774,
	524, 527, 529, 605, 0, 0, 0, 0, 631, 949,
	44, 0, 0, 0, 835, 836, 828, 43, 0, 936,
	937, 819, 820, 821, 0, 585, 596, 576, 0, 833,
	911, 0, 0, 903, 0, 0, 654, 919, 0, 598,
	623, 625, 0, 620, 635, 636, 638, 0, 640, 0,
	642, 643, 602, 603, 604, 0, 654, 0, 654, 67,
	654, 69, 0, 648, 76, 77, 0, 0, 83, 213,
	214, 118, 273, 131, 137, 0, 0, 0, 141, 0,
	0, 144, 146, 147, 207, 212, 212, 176, 209, 210,
	211, 177, 178, 179, 0, 195, 0, 0, 0, 266,
	88, 841, 840, 224, 224, 219, 0, 222, 0, 198,
	0, 943, 103, 0, 0, 0, 0, 328, 609, 0,
	339, 340, 0, 323, 387, 0, 216, 0, 229, 808,
	616, 0, 0, 341, 0, 324, 344, 345, 356, 306,
	307, 304, 607, 854, 855, 856, 0, 866, 96, 0,
	0, 0, 0, 374, 0, 419, 420, 65, 481, 481,
	534, 0, 537, 0, 672, 0, 692, 675, 734, 735,
	0, 809, 833, 46, 0, 197, 197, 788, 197, 201,
	791, 197, 793, 197, 796, 0, 0, 0, 0, 0,
	0, 0, 800, 748, 806, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 873, 870, 45, 823, 0, 655,
	589, 49, 53, 0, 911, 902, 913, 915, 0, 0,
	0, 907, 0, 825, 0, 0, 617, 624, 0, 0,
	618, 0, 619, 639, 641, -2, 825, 654, 60, 61,
	0, 80, 81, 82, 272, 138, 139, 0, 142, 143,
	145, 172, 173, 208, 0, 208, 0, 202, 0, 255,
	267, 0, 838, 839, 0, 0, 221, 223, 607, 104,
	105, 106, 0, 0, 127, 325, 0, 215, 0, 0,
	412, 409, 342, 343, 0, 0, 865, 375, 0, 94,
	95, 0, 0, 380, 418, 428, 434, 536, 556, 676,
	736, 868, 739, 785, 208, 789, 790, 792, 794, 795,
	797, 741, 740, 0, 0, 0, 0, 0, 833, 0,
	804, 0, 0, 0, 0, 0, 629, 208, 893, 50,
	0, 0, 0, 54, 0, 916, 0, 0, 0, 0,
	71, 833, 920, 921, 621, 0, 626, 833, 59, 140,
	212, 196, 212, 0, 0, 268, 842, 843, 844, 845,
	846, 847, 848, 0, 331, 610, 0, 0, 389, 0,
	397, 0, 0, 0, 0, 97, 98, 0, 0, 0,
	47, 786, 787, 0, 0, 0, 0, 777, 0, 801,
	0, 0, 0, 651, 611, 612, 0, 0, 649, 875,
	874, 887, 900, 824, 822, 0, 914, 0, 906, 909,
	905, 908, 57, 0, 58, 185, 186, 200, 203, 0,
	0, 0, 413, 410, 411, 857, 608, 0, 0, 0,
	382, 742, 744, 743, 745, 0, 0, 0, 747, 765,
	766, 0, 650, 652, 653, 606, 893, 0, 886, 0,
	-2, 895, 0, 0, 0, 901, 0, 904, 0, 622,
	857, 0, 0, 372, 859, 99, 100, 317, 318, 319,
	93, 746, 0, 0, 0, 613, 614, 880, 878, 878,
	888, 889, 0, 0, 896, 0, 0, 0, 912, 910,
	89, 0, 0, 0, 0, 860, 861, 96, 778, 0,
	781, 883, 0, 876, 879, 877, 890, 0, 0, 897,
	0, 899, 414, 415, 251, 0, 379, 779, 872, 0,
	881, 882, 891, 892, 898, 252, 253, 0, 858, 0,
	884, 885, 254, 0, 0, 0, 0, 256, 258, 259,
	0, 0, 257, 780, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 474,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:424
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:429
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:434
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:473
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:477
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:486
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:496
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:502
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:508
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:517
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:521
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:525
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:548
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:556
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:562
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:568
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:576
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:582
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:586
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:593
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:617
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:621
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:633
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:637
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:641
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:655
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:665
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:675
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:688
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:704
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:710
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:720
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:724
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:728
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:734
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:738
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:742
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:746
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:752
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:756
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:762
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].booleanUnion(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:795
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:799
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:819
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:824
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:830
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:847
		{
			yyLOCAL = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:854
		{
			yyLOCAL = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:861
		{
			yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:866
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:871
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:876
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:883
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: yyDollar[5].tableIdent, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:890
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:901
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:911
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:917
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:921
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:948
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:954
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:958
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:965
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:969
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:975
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:985
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:990
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:999
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1018
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1028
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1032
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1038
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1044
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1049
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1054
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1059
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1064
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1069
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1074
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1079
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1236
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1311
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1338
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1381
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1396
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1405
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1411
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1421
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1425
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1450
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1458
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1462
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1466
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1534
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1544
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1560
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1570
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1574
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1578
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1582
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1588
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1594
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1600
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1606
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1610
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1614
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1618
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1622
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1657
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1663
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1677
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1695
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1719
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1854
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1863
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1872
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1880
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1888
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1894
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1908
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1912
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1916
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1920
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1924
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1928
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1932
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1936
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1940
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1944
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1948
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1952
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1956
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1960
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1964
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1968
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1972
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1976
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1980
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1984
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1988
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1992
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1998
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2008
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2012
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2016
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2020
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2024
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2028
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2032
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2036
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2040
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2046
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2052
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2059
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2066
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2072
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columnsUnion(), Select: yyDollar[9].selStmtUnion(), CheckOption: yyDollar[10].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2076
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2083
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2090
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2102
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2112
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2116
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2120
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParamsUnion(),
				},
				VindexCols: yyDollar[9].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2133
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2143
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2147
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2158
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2165
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2172
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2179
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2187
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2191
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2195
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2199
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2203
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2207
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2211
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2215
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2219
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2223
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2227
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2231
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2235
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2239
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2243
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2247
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2251
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2255
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2259
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2263
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2267
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2271
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2291
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2301
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2305
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2311
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2317
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2321
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2327
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2331
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}}, yyDollar[6].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2340
		{
			yyLOCAL = &DropView{FromTables: yyDollar[4].tableNamesUnion(), IfExists: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2344
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2350
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2354
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2365
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2373
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2377
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2381
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2385
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2389
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2393
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2397
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2401
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2405
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2409
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2413
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2417
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2421
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2429
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2433
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2437
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2441
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2445
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2449
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2453
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2457
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2461
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2473
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2477
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2481
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2485
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2489
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2493
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2497
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2501
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2510
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2514
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2518
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2522
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2541
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2545
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = "extended "
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2575
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2579
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2613
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2617
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2627
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2633
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.empty = struct{}{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2705
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2709
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2713
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2717
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2721
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2725
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = yyDollar[1].str
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = yyDollar[1].str
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2786
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2790
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2802
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2812
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2818
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2822
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2826
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2830
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &RevertMigration{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2933
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2937
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			setAllowComments(yylex, true)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
			yyVAL.strs = nil
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = SQLCacheStr
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3018
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3023
		{
			yyVAL.strs = nil
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3039
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = SQLCacheStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = DistinctStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = DistinctStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = StraightJoinHint
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3075
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3085
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3089
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3093
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3097
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3102
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3122
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3126
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3132
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3146
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3150
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3154
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3160
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3166
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3170
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3179
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3185
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3195
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3199
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3213
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3230
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3234
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3238
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3242
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3254
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3260
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3270
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3291
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3295
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3299
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3305
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3311
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3315
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3319
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3323
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3329
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3333
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3357
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3372
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3376
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3380
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3384
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3393
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3403
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3407
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3411
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3415
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3419
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3423
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3427
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3433
		{
			yyVAL.str = ""
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3443
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3447
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3457
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3461
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3465
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3469
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3473
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3477
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3481
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3485
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3489
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3495
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3499
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3503
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3507
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3511
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3515
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3521
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3525
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3529
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3533
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3537
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3541
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3545
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3554
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3560
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3564
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3568
		{
			yyLOCAL = ListArg(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3575
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3581
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3595
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3599
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3607
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3611
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3615
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3619
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3623
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3627
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3631
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3635
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3639
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3643
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3647
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3651
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3655
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3659
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3663
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3667
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3671
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3675
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3679
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3683
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3687
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3691
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3695
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3699
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3703
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3707
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3725
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3729
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3733
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3737
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3747
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3751
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3755
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3759
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3763
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3767
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3771
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3775
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3779
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3783
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3787
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3813
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3817
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3822
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3832
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3889
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3899
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3903
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3907
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3915
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3919
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3923
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3929
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3933
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3937
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3941
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3945
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3965
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3969
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3973
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3977
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3981
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3985
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3991
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3995
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3999
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4003
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4007
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4011
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4015
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = string("")
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4039
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4049
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4058
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4064
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4068
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4072
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4078
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4082
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4086
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4090
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4094
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4098
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4102
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4107
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4122
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4126
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4136
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4145
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4154
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4160
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4170
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4175
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4179
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4183
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4192
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4196
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4200
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4209
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4213
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4217
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4221
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4228
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4232
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4236
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4240
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4246
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4250
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4254
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = yyDollar[3].str
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = yyDollar[2].str
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = "cascaded"
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = yyDollar[3].str
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4344
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4348
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4352
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4361
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4365
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4369
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = " header"
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = " manifest on"
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = " manifest off"
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = " overwrite on"
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = " overwrite off"
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4432
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = ""
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = " optionally"
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4507
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4511
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4515
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4519
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4523
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4529
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4533
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4541
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4550
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4556
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4566
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4570
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4576
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4592
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4602
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4608
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4618
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4622
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4626
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4630
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4634
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = "charset"
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4669
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4671
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4689
		{
			yyVAL.empty = struct{}{}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.empty = struct{}{}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.empty = struct{}{}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4697
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4706
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4713
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4717
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4744
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			decNesting(yylex)
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5202
		{
			skipToEnd(yylex)
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5207
		{
			skipToEnd(yylex)
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			skipToEnd(yylex)
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5215
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
