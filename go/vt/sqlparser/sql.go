// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const DO = 57375
const CALL = 57376
const DISTINCTROW = 57377
const PARSER = 57378
const GENERATED = 57379
const ALWAYS = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const SUBQUERY_AS_EXPR = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const NCHAR_STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const EXTRACT = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const EXPRESSION_PREC_SETTER = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_ARMSCII8 = 57482
const UNDERSCORE_ASCII = 57483
const UNDERSCORE_BIG5 = 57484
const UNDERSCORE_BINARY = 57485
const UNDERSCORE_CP1250 = 57486
const UNDERSCORE_CP1251 = 57487
const UNDERSCORE_CP1256 = 57488
const UNDERSCORE_CP1257 = 57489
const UNDERSCORE_CP850 = 57490
const UNDERSCORE_CP852 = 57491
const UNDERSCORE_CP866 = 57492
const UNDERSCORE_CP932 = 57493
const UNDERSCORE_DEC8 = 57494
const UNDERSCORE_EUCJPMS = 57495
const UNDERSCORE_EUCKR = 57496
const UNDERSCORE_GB18030 = 57497
const UNDERSCORE_GB2312 = 57498
const UNDERSCORE_GBK = 57499
const UNDERSCORE_GEOSTD8 = 57500
const UNDERSCORE_GREEK = 57501
const UNDERSCORE_HEBREW = 57502
const UNDERSCORE_HP8 = 57503
const UNDERSCORE_KEYBCS2 = 57504
const UNDERSCORE_KOI8R = 57505
const UNDERSCORE_KOI8U = 57506
const UNDERSCORE_LATIN1 = 57507
const UNDERSCORE_LATIN2 = 57508
const UNDERSCORE_LATIN5 = 57509
const UNDERSCORE_LATIN7 = 57510
const UNDERSCORE_MACCE = 57511
const UNDERSCORE_MACROMAN = 57512
const UNDERSCORE_SJIS = 57513
const UNDERSCORE_SWE7 = 57514
const UNDERSCORE_TIS620 = 57515
const UNDERSCORE_UCS2 = 57516
const UNDERSCORE_UJIS = 57517
const UNDERSCORE_UTF16 = 57518
const UNDERSCORE_UTF16LE = 57519
const UNDERSCORE_UTF32 = 57520
const UNDERSCORE_UTF8 = 57521
const UNDERSCORE_UTF8MB4 = 57522
const INTERVAL = 57523
const JSON_EXTRACT_OP = 57524
const JSON_UNQUOTE_EXTRACT_OP = 57525
const CREATE = 57526
const ALTER = 57527
const DROP = 57528
const RENAME = 57529
const ANALYZE = 57530
const ADD = 57531
const FLUSH = 57532
const CHANGE = 57533
const MODIFY = 57534
const REVERT = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const KEY_BLOCK_SIZE = 57547
const CHECK = 57548
const INDEXES = 57549
const ACTION = 57550
const CASCADE = 57551
const CONSTRAINT = 57552
const FOREIGN = 57553
const NO = 57554
const REFERENCES = 57555
const RESTRICT = 57556
const SHOW = 57557
const DESCRIBE = 57558
const EXPLAIN = 57559
const DATE = 57560
const ESCAPE = 57561
const REPAIR = 57562
const OPTIMIZE = 57563
const TRUNCATE = 57564
const COALESCE = 57565
const EXCHANGE = 57566
const REBUILD = 57567
const PARTITIONING = 57568
const REMOVE = 57569
const MAXVALUE = 57570
const PARTITION = 57571
const REORGANIZE = 57572
const LESS = 57573
const THAN = 57574
const PROCEDURE = 57575
const TRIGGER = 57576
const VINDEX = 57577
const VINDEXES = 57578
const DIRECTORY = 57579
const NAME = 57580
const UPGRADE = 57581
const STATUS = 57582
const VARIABLES = 57583
const WARNINGS = 57584
const CASCADED = 57585
const DEFINER = 57586
const OPTION = 57587
const SQL = 57588
const UNDEFINED = 57589
const SEQUENCE = 57590
const MERGE = 57591
const TEMPORARY = 57592
const TEMPTABLE = 57593
const INVOKER = 57594
const SECURITY = 57595
const FIRST = 57596
const AFTER = 57597
const LAST = 57598
const VITESS_MIGRATION = 57599
const CANCEL = 57600
const RETRY = 57601
const COMPLETE = 57602
const CLEANUP = 57603
const BEGIN = 57604
const START = 57605
const TRANSACTION = 57606
const COMMIT = 57607
const ROLLBACK = 57608
const SAVEPOINT = 57609
const RELEASE = 57610
const WORK = 57611
const BIT = 57612
const TINYINT = 57613
const SMALLINT = 57614
const MEDIUMINT = 57615
const INT = 57616
const INTEGER = 57617
const BIGINT = 57618
const INTNUM = 57619
const REAL = 57620
const DOUBLE = 57621
const FLOAT_TYPE = 57622
const DECIMAL = 57623
const NUMERIC = 57624
const TIME = 57625
const TIMESTAMP = 57626
const DATETIME = 57627
const YEAR = 57628
const CHAR = 57629
const VARCHAR = 57630
const BOOL = 57631
const CHARACTER = 57632
const VARBINARY = 57633
const NCHAR = 57634
const TEXT = 57635
const TINYTEXT = 57636
const MEDIUMTEXT = 57637
const LONGTEXT = 57638
const BLOB = 57639
const TINYBLOB = 57640
const MEDIUMBLOB = 57641
const LONGBLOB = 57642
const JSON = 57643
const ENUM = 57644
const GEOMETRY = 57645
const POINT = 57646
const LINESTRING = 57647
const POLYGON = 57648
const GEOMETRYCOLLECTION = 57649
const MULTIPOINT = 57650
const MULTILINESTRING = 57651
const MULTIPOLYGON = 57652
const NULLX = 57653
const AUTO_INCREMENT = 57654
const APPROXNUM = 57655
const SIGNED = 57656
const UNSIGNED = 57657
const ZEROFILL = 57658
const CODE = 57659
const COLLATION = 57660
const COLUMNS = 57661
const DATABASES = 57662
const ENGINES = 57663
const EVENT = 57664
const EXTENDED = 57665
const FIELDS = 57666
const FULL = 57667
const FUNCTION = 57668
const GTID_EXECUTED = 57669
const KEYSPACES = 57670
const OPEN = 57671
const PLUGINS = 57672
const PRIVILEGES = 57673
const PROCESSLIST = 57674
const SCHEMAS = 57675
const TABLES = 57676
const TRIGGERS = 57677
const USER = 57678
const VGTID_EXECUTED = 57679
const VITESS_KEYSPACES = 57680
const VITESS_METADATA = 57681
const VITESS_MIGRATIONS = 57682
const VITESS_REPLICATION_STATUS = 57683
const VITESS_SHARDS = 57684
const VITESS_TABLETS = 57685
const VSCHEMA = 57686
const NAMES = 57687
const GLOBAL = 57688
const SESSION = 57689
const ISOLATION = 57690
const LEVEL = 57691
const READ = 57692
const WRITE = 57693
const ONLY = 57694
const REPEATABLE = 57695
const COMMITTED = 57696
const UNCOMMITTED = 57697
const SERIALIZABLE = 57698
const CURRENT_TIMESTAMP = 57699
const DATABASE = 57700
const CURRENT_DATE = 57701
const CURRENT_TIME = 57702
const LOCALTIME = 57703
const LOCALTIMESTAMP = 57704
const CURRENT_USER = 57705
const UTC_DATE = 57706
const UTC_TIME = 57707
const UTC_TIMESTAMP = 57708
const DAY = 57709
const DAY_HOUR = 57710
const DAY_MICROSECOND = 57711
const DAY_MINUTE = 57712
const DAY_SECOND = 57713
const HOUR = 57714
const HOUR_MICROSECOND = 57715
const HOUR_MINUTE = 57716
const HOUR_SECOND = 57717
const MICROSECOND = 57718
const MINUTE = 57719
const MINUTE_MICROSECOND = 57720
const MINUTE_SECOND = 57721
const MONTH = 57722
const QUARTER = 57723
const SECOND = 57724
const SECOND_MICROSECOND = 57725
const YEAR_MONTH = 57726
const WEEK = 57727
const REPLACE = 57728
const CONVERT = 57729
const CAST = 57730
const SUBSTR = 57731
const SUBSTRING = 57732
const GROUP_CONCAT = 57733
const SEPARATOR = 57734
const TIMESTAMPADD = 57735
const TIMESTAMPDIFF = 57736
const MATCH = 57737
const AGAINST = 57738
const BOOLEAN = 57739
const LANGUAGE = 57740
const WITH = 57741
const QUERY = 57742
const EXPANSION = 57743
const WITHOUT = 57744
const VALIDATION = 57745
const UNUSED = 57746
const ARRAY = 57747
const CUME_DIST = 57748
const DESCRIPTION = 57749
const DENSE_RANK = 57750
const EMPTY = 57751
const EXCEPT = 57752
const FIRST_VALUE = 57753
const GROUPING = 57754
const GROUPS = 57755
const JSON_TABLE = 57756
const LAG = 57757
const LAST_VALUE = 57758
const LATERAL = 57759
const LEAD = 57760
const MEMBER = 57761
const NTH_VALUE = 57762
const NTILE = 57763
const OF = 57764
const OVER = 57765
const PERCENT_RANK = 57766
const RANK = 57767
const RECURSIVE = 57768
const ROW_NUMBER = 57769
const SYSTEM = 57770
const WINDOW = 57771
const ACTIVE = 57772
const ADMIN = 57773
const BUCKETS = 57774
const CLONE = 57775
const COMPONENT = 57776
const DEFINITION = 57777
const ENFORCED = 57778
const EXCLUDE = 57779
const FOLLOWING = 57780
const GEOMCOLLECTION = 57781
const GET_MASTER_PUBLIC_KEY = 57782
const HISTOGRAM = 57783
const HISTORY = 57784
const INACTIVE = 57785
const INVISIBLE = 57786
const LOCKED = 57787
const MASTER_COMPRESSION_ALGORITHMS = 57788
const MASTER_PUBLIC_KEY_PATH = 57789
const MASTER_TLS_CIPHERSUITES = 57790
const MASTER_ZSTD_COMPRESSION_LEVEL = 57791
const NESTED = 57792
const NETWORK_NAMESPACE = 57793
const NOWAIT = 57794
const NULLS = 57795
const OJ = 57796
const OLD = 57797
const OPTIONAL = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRECEDING = 57805
const PRIVILEGE_CHECKS_USER = 57806
const PROCESS = 57807
const RANDOM = 57808
const REFERENCE = 57809
const REQUIRE_ROW_FORMAT = 57810
const RESOURCE = 57811
const RESPECT = 57812
const RESTART = 57813
const RETAIN = 57814
const REUSE = 57815
const ROLE = 57816
const SECONDARY = 57817
const SECONDARY_ENGINE = 57818
const SECONDARY_LOAD = 57819
const SECONDARY_UNLOAD = 57820
const SKIP = 57821
const SRID = 57822
const THREAD_PRIORITY = 57823
const TIES = 57824
const UNBOUNDED = 57825
const VCPU = 57826
const VISIBLE = 57827
const FORMAT = 57828
const TREE = 57829
const VITESS = 57830
const TRADITIONAL = 57831
const LOCAL = 57832
const LOW_PRIORITY = 57833
const NO_WRITE_TO_BINLOG = 57834
const LOGS = 57835
const ERROR = 57836
const GENERAL = 57837
const HOSTS = 57838
const OPTIMIZER_COSTS = 57839
const USER_RESOURCES = 57840
const SLOW = 57841
const CHANNEL = 57842
const RELAY = 57843
const EXPORT = 57844
const AVG_ROW_LENGTH = 57845
const CONNECTION = 57846
const CHECKSUM = 57847
const DELAY_KEY_WRITE = 57848
const ENCRYPTION = 57849
const ENGINE = 57850
const INSERT_METHOD = 57851
const MAX_ROWS = 57852
const MIN_ROWS = 57853
const PACK_KEYS = 57854
const PASSWORD = 57855
const FIXED = 57856
const DYNAMIC = 57857
const COMPRESSED = 57858
const REDUNDANT = 57859
const COMPACT = 57860
const ROW_FORMAT = 57861
const STATS_AUTO_RECALC = 57862
const STATS_PERSISTENT = 57863
const STATS_SAMPLE_PAGES = 57864
const STORAGE = 57865
const MEMORY = 57866
const DISK = 57867
const PARTITIONS = 57868
const LINEAR = 57869
const RANGE = 57870
const LIST = 57871
const SUBPARTITION = 57872
const SUBPARTITIONS = 57873
const HASH = 57874

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	9, 43,
	10, 43,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	1, 135,
	550, 135,
	-2, 141,
	-1, 43,
	114, 141,
	154, 141,
	307, 141,
	-2, 439,
	-1, 50,
	32, 612,
	213, 612,
	224, 612,
	257, 626,
	258, 626,
	-2, 614,
	-1, 55,
	215, 636,
	-2, 634,
	-1, 105,
	212, 1081,
	-2, 114,
	-1, 107,
	1, 136,
	550, 136,
	-2, 141,
	-1, 117,
	115, 342,
	218, 342,
	-2, 433,
	-1, 136,
	114, 141,
	154, 141,
	307, 141,
	-2, 448,
	-1, 595,
	198, 1102,
	-2, 1098,
	-1, 596,
	198, 1103,
	-2, 1099,
	-1, 666,
	56, 704,
	-2, 712,
	-1, 702,
	130, 1460,
	-2, 107,
	-1, 703,
	130, 1337,
	-2, 108,
	-1, 709,
	130, 1391,
	-2, 1075,
	-1, 851,
	130, 1270,
	-2, 1072,
	-1, 887,
	223, 37,
	228, 37,
	-2, 353,
	-1, 964,
	1, 487,
	550, 487,
	-2, 141,
	-1, 1160,
	56, 705,
	-2, 717,
	-1, 1161,
	56, 706,
	-2, 718,
	-1, 1212,
	114, 141,
	154, 141,
	307, 141,
	-2, 383,
	-1, 1215,
	22, 160,
	-2, 162,
	-1, 1288,
	115, 342,
	218, 342,
	-2, 433,
	-1, 1297,
	223, 38,
	228, 38,
	-2, 354,
	-1, 1547,
	198, 1107,
	-2, 1101,
	-1, 1621,
	114, 141,
	154, 141,
	307, 141,
	-2, 384,
	-1, 1855,
	74, 89,
	83, 89,
	-2, 770,
	-1, 2023,
	46, 1043,
	-2, 1037,
	-1, 2210,
	5, 49,
	15, 49,
	17, 49,
	84, 49,
	-2, 745,
}

const yyPrivate = 57344

const yyLast = 33015

var yyAct = [...]int{
	595, 2391, 2475, 2361, 1578, 2363, 2255, 2446, 2216, 2410,
	2130, 2118, 2397, 3, 2327, 1027, 2424, 1875, 590, 88,
	2032, 1142, 1882, 2035, 1802, 2279, 1884, 2119, 1175, 2036,
	2033, 2181, 2174, 2284, 2271, 1561, 1582, 2014, 681, 547,
	551, 1594, 598, 1851, 2201, 2030, 173, 544, 1822, 173,
	2024, 511, 173, 589, 33, 1653, 1901, 527, 659, 173,
	1924, 975, 1962, 587, 588, 2077, 1903, 173, 1673, 854,
	1658, 1902, 573, 1598, 707, 682, 1607, 32, 545, 173,
	543, 145, 1840, 34, 539, 1599, 1814, 1162, 661, 1618,
	917, 1492, 1451, 1686, 1541, 1978, 131, 1499, 1718, 1672,
	527, 1660, 1895, 527, 173, 527, 882, 1204, 556, 87,
	1857, 1184, 1563, 1601, 1402, 704, 1511, 83, 1145, 1469,
	1045, 1399, 861, 663, 1302, 667, 888, 858, 1295, 1670,
	862, 1587, 1649, 883, 1201, 1188, 884, 1385, 1203, 673,
	1025, 1264, 1287, 684, 895, 885, 1020, 114, 1407, 668,
	115, 90, 694, 960, 671, 669, 89, 68, 148, 534,
	1554, 1583, 1111, 1115, 1269, 2459, 175, 176, 177, 1311,
	2309, 81, 108, 2476, 2218, 2219, 2220, 2364, 77, 109,
	2392, 2218, 1942, 1941, 1716, 7, 116, 670, 69, 1970,
	6, 5, 689, 82, 1971, 514, 1558, 1559, 1371, 1046,
	675, 110, 175, 176, 177, 1458, 1457, 1004, 1456, 855,
	1455, 1454, 484, 1453, 1440, 537, 1445, 538, 922, 1046,
	535, 2438, 1800, 2020, 919, 660, 2232, 662, 94, 1824,
	870, 865, 2099, 2323, 701, 2322, 501, 933, 934, 921,
	937, 938, 939, 940, 676, 920, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 708, 2469, 899, 898, 96, 110, 99, 683, 1665,
	105, 2250, 877, 170, 2251, 169, 479, 2420, 2464, 2379,
	876, 70, 500, 923, 924, 925, 2454, 875, 2256, 930,
	1756, 2411, 1663, 498, 1704, 2419, 658, 70, 111, 666,
	2378, 1056, 1977, 2162, 1831, 1278, 2069, 2070, 1801, 1949,
	935, 153, 1205, 1948, 1206, 70, 2068, 72, 70, 1969,
	1077, 1056, 874, 1753, 969, 970, 696, 697, 1612, 1832,
	110, 495, 963, 1866, 994, 656, 1865, 1560, 655, 1867,
	509, 2332, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086,
	1085, 1087, 1088, 1872, 1754, 506, 2311, 79, 1011, 982,
	1013, 1613, 1614, 1544, 983, 1540, 2297, 150, 1892, 151,
	982, 1023, 981, 79, 980, 983, 1633, 1632, 872, 168,
	514, 2154, 869, 2152, 2178, 871, 525, 1444, 515, 529,
	514, 79, 1052, 514, 79, 1044, 1010, 1012, 995, 988,
	2132, 959, 1446, 1447, 1448, 523, 999, 1000, 1730, 1727,
	1729, 1728, 1052, 1149, 1391, 1925, 485, 1662, 487, 502,
	936, 517, 1687, 516, 491, 1945, 489, 493, 503, 494,
	878, 488, 1719, 499, 2463, 2126, 490, 504, 505, 507,
	521, 520, 508, 2127, 497, 518, 1532, 1521, 1522, 1523,
	1524, 1534, 1525, 1526, 1527, 1539, 1535, 1528, 1529, 1536,
	1537, 1538, 1530, 1531, 1533, 1361, 874, 958, 2439, 1022,
	579, 1724, 175, 176, 177, 996, 989, 2133, 874, 173,
	866, 173, 1386, 154, 173, 1008, 873, 868, 867, 1009,
	997, 998, 159, 1001, 965, 1017, 1732, 1003, 1733, 1014,
	1734, 514, 1015, 1002, 1957, 1735, 942, 1362, 941, 1363,
	2134, 2319, 527, 527, 527, 1721, 2245, 1301, 906, 1689,
	904, 1007, 879, 1595, 1725, 1723, 1871, 915, 914, 962,
	527, 527, 913, 912, 872, 911, 910, 1089, 909, 908,
	903, 1281, 916, 1089, 1888, 1038, 992, 978, 2460, 984,
	985, 986, 987, 2452, 1051, 1048, 1049, 1050, 1055, 1057,
	1054, 859, 1053, 2098, 2450, 1722, 891, 897, 859, 1047,
	890, 1400, 1024, 515, 1051, 1048, 1049, 1050, 1055, 1057,
	1054, 695, 1053, 515, 1671, 33, 515, 859, 519, 1047,
	1958, 857, 1710, 1754, 1396, 932, 1032, 926, 2458, 146,
	1392, 2006, 1961, 2308, 1947, 2106, 512, 1944, 2005, 2004,
	2312, 1664, 897, 1276, 1803, 1805, 961, 2333, 1275, 1973,
	1300, 513, 1089, 1274, 1934, 1767, 1397, 1016, 1272, 596,
	873, 1092, 1093, 1094, 1095, 483, 478, 1390, 2356, 1706,
	2215, 1100, 873, 1103, 2377, 1135, 2179, 1956, 1090, 1091,
	1955, 2197, 1862, 1029, 1030, 907, 173, 905, 1829, 1792,
	1140, 1553, 1192, 1122, 896, 973, 1619, 1096, 1088, 900,
	890, 897, 107, 173, 2067, 174, 678, 1021, 174, 901,
	2390, 174, 661, 1155, 1141, 977, 528, 1755, 174, 897,
	2373, 78, 527, 1979, 515, 173, 174, 902, 1150, 2191,
	527, 1373, 1372, 1374, 1375, 1376, 527, 78, 174, 896,
	971, 968, 73, 1018, 1152, 704, 979, 1041, 1156, 69,
	897, 1153, 1039, 1040, 663, 78, 918, 991, 78, 528,
	1005, 1408, 528, 174, 528, 1113, 1964, 1114, 993, 1154,
	1117, 1963, 1141, 87, 591, 1964, 574, 576, 592, 593,
	1963, 572, 575, 594, 102, 1128, 1129, 1130, 1131, 1804,
	1720, 2448, 1393, 1207, 2449, 1387, 2447, 1388, 896, 1146,
	1389, 897, 1042, 1981, 890, 893, 894, 1994, 859, 1512,
	577, 578, 887, 891, 1914, 90, 896, 1061, 931, 1474,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 886, 2293, 1475, 1476, 1473, 164, 165, 166, 167,
	103, 976, 2403, 1705, 1143, 2088, 2401, 896, 1512, 660,
	1781, 2087, 900, 890, 1693, 2405, 2406, 1174, 662, 1171,
	1886, 1887, 901, 1777, 1060, 1061, 1983, 2402, 1987, 1151,
	1982, 2432, 1980, 1059, 964, 1060, 1061, 1985, 1310, 1197,
	1198, 175, 176, 177, 173, 1494, 1984, 1309, 1265, 1006,
	1409, 708, 175, 176, 177, 2473, 1826, 1273, 896, 1986,
	1988, 1299, 1703, 1701, 890, 893, 894, 906, 859, 1588,
	1589, 1772, 887, 891, 1698, 904, 527, 691, 1297, 1059,
	1771, 1060, 1061, 2073, 1157, 1193, 1306, 2478, 1996, 1059,
	1308, 1060, 1061, 527, 527, 1776, 527, 2433, 527, 527,
	1702, 527, 527, 527, 527, 527, 527, 1464, 1466, 1467,
	2382, 1495, 1698, 2157, 1169, 1059, 527, 1060, 1061, 1380,
	173, 1344, 1827, 1885, 1169, 2349, 1202, 2423, 1465, 1307,
	1059, 1516, 1060, 1061, 1770, 1888, 173, 2461, 1700, 79,
	540, 2383, 1759, 1760, 1761, 1293, 2165, 527, 1059, 173,
	1060, 1061, 1472, 2393, 1339, 1340, 2350, 1378, 1279, 1280,
	1398, 609, 610, 1059, 173, 1060, 1061, 2231, 1286, 685,
	1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085, 1087, 1088,
	173, 1059, 1379, 1060, 1061, 1341, 2353, 173, 1081, 1082,
	1083, 1084, 1086, 1085, 1087, 1088, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 527, 527, 527, 1271, 1304,
	2462, 2230, 2104, 1283, 1305, 1899, 1347, 1348, 1284, 1296,
	1377, 1282, 1353, 1354, 1169, 1898, 699, 1668, 1303, 1303,
	1059, 2352, 1060, 1061, 1381, 173, 1366, 1182, 1404, 1365,
	1412, 1083, 1084, 1086, 1085, 1087, 1088, 1416, 1357, 1418,
	1419, 1420, 1421, 1364, 2421, 1355, 1425, 1349, 1059, 1346,
	1060, 1061, 1345, 1313, 1320, 1314, 2351, 1316, 1318, 2164,
	1439, 1322, 1324, 1326, 1328, 1330, 2292, 2290, 1342, 1368,
	1493, 1470, 2268, 1401, 2228, 175, 176, 177, 1059, 1277,
	1060, 1061, 2084, 1502, 527, 175, 176, 177, 174, 2085,
	174, 1908, 1181, 174, 1059, 1896, 1060, 1061, 1169, 527,
	527, 1714, 1477, 110, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 876, 1545, 1414,
	1713, 528, 528, 528, 875, 1468, 2394, 1059, 173, 1060,
	1061, 1513, 1367, 1581, 1478, 1435, 1436, 1437, 1178, 528,
	528, 1878, 1567, 1497, 1438, 175, 176, 177, 1496, 1869,
	1566, 2159, 1441, 1405, 173, 1369, 1356, 527, 1352, 1351,
	1059, 1471, 1060, 1061, 1350, 1180, 1019, 173, 1410, 1411,
	527, 2129, 1568, 84, 1569, 2317, 173, 1547, 173, 173,
	527, 2316, 1415, 527, 85, 2254, 1879, 1179, 1545, 1422,
	1423, 1424, 1820, 2477, 527, 704, 87, 2015, 704, 1549,
	1550, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1063, 1858,
	1881, 1926, 87, 1911, 1876, 2015, 1169, 1546, 175, 176,
	177, 1597, 1681, 175, 176, 177, 86, 1679, 1886, 1887,
	1574, 2248, 2457, 1820, 2443, 1877, 1820, 2427, 1169, 1820,
	2417, 2315, 2062, 1639, 1640, 1641, 1642, 1547, 1627, 527,
	1059, 1754, 1060, 1061, 93, 1674, 1675, 1676, 1900, 2190,
	1678, 1680, 2192, 1623, 92, 174, 91, 1883, 1837, 675,
	1058, 1605, 1859, 527, 1622, 1059, 2372, 1060, 1061, 527,
	1306, 1861, 174, 1306, 1169, 1306, 2190, 1593, 1699, 1820,
	2386, 1697, 1059, 1576, 1060, 1061, 93, 1820, 2367, 1655,
	1626, 528, 1688, 1820, 174, 1591, 92, 1837, 91, 528,
	2339, 1169, 2248, 1169, 1609, 528, 1661, 86, 2094, 1610,
	1611, 527, 1768, 1493, 1077, 1786, 1972, 1625, 1493, 1493,
	1624, 1885, 2472, 1169, 1820, 2246, 1698, 1169, 2195, 1169,
	1785, 708, 1685, 1888, 708, 1698, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1086, 1085, 1087, 1088, 2096, 2095, 2092,
	2093, 2092, 2091, 1816, 173, 1634, 1698, 1635, 1636, 1637,
	1638, 173, 1656, 1651, 1652, 1169, 173, 173, 86, 1666,
	173, 1667, 173, 1645, 1646, 1647, 1648, 1677, 173, 1669,
	1707, 1837, 1169, 1768, 1169, 173, 1754, 1943, 1268, 1928,
	2031, 1691, 1682, 1690, 1656, 1858, 1694, 92, 1692, 1062,
	2190, 1695, 1586, 1696, 1709, 1708, 899, 898, 1173, 1711,
	1712, 1922, 1923, 173, 527, 1556, 1303, 84, 1820, 1819,
	1058, 1169, 1268, 1267, 86, 1768, 1449, 1109, 85, 1213,
	1212, 1498, 1880, 1836, 1395, 1199, 881, 880, 1504, 1505,
	665, 2425, 1745, 1746, 2467, 2233, 1717, 1748, 1335, 1077,
	2389, 79, 1073, 174, 1074, 2366, 1749, 1548, 1859, 2360,
	1551, 1552, 1470, 2329, 540, 1768, 2362, 1754, 1075, 1076,
	1072, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085,
	1087, 1088, 1169, 1176, 2304, 528, 2237, 1837, 2225, 1738,
	1270, 1654, 1763, 1573, 1765, 2234, 2235, 2236, 1336, 1337,
	1338, 2128, 528, 528, 2090, 528, 1929, 528, 528, 1650,
	528, 528, 528, 528, 528, 528, 79, 1644, 1643, 1383,
	1298, 1294, 1266, 104, 1764, 528, 1905, 173, 963, 174,
	1904, 2131, 1332, 2238, 2239, 173, 2202, 2203, 2330, 1798,
	1752, 1665, 2429, 527, 1185, 174, 2398, 2205, 2111, 2110,
	2109, 2031, 1471, 1915, 1825, 1739, 528, 1442, 174, 2055,
	2208, 1846, 1847, 1762, 1842, 1845, 1846, 1847, 1843, 2207,
	1844, 1848, 2050, 174, 173, 173, 2053, 1905, 1833, 1333,
	1334, 2054, 2051, 2049, 2441, 2418, 1580, 2052, 1821, 174,
	1868, 1177, 1572, 2025, 2027, 2196, 174, 1780, 1547, 2115,
	2012, 2011, 2028, 2348, 2283, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 528, 528, 528, 2285, 33, 1842,
	1845, 1846, 1847, 1843, 2186, 1844, 1848, 1853, 2022, 2202,
	2203, 2183, 1817, 1394, 1167, 1163, 527, 654, 1546, 2182,
	1146, 173, 1893, 1894, 174, 1799, 1890, 1807, 173, 1164,
	1630, 1852, 1508, 1909, 527, 679, 1818, 928, 1921, 927,
	527, 1813, 2141, 680, 1306, 1306, 1509, 1856, 1828, 527,
	1904, 1167, 1163, 1873, 1570, 1571, 1166, 84, 1165, 84,
	1967, 1940, 1031, 1936, 86, 580, 1164, 1860, 85, 1863,
	85, 1935, 173, 173, 173, 173, 173, 111, 1661, 2188,
	1874, 1588, 1589, 528, 86, 2107, 1742, 2369, 2325, 173,
	173, 1160, 1161, 1166, 93, 1165, 1889, 1897, 528, 528,
	1850, 1577, 1731, 1907, 92, 173, 91, 1758, 1077, 2010,
	1766, 1906, 687, 688, 91, 86, 2426, 2009, 1912, 1938,
	2291, 2289, 526, 1493, 1916, 1917, 1918, 174, 2288, 1286,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085, 1087,
	1088, 2281, 93, 527, 2187, 2185, 2112, 2071, 661, 1939,
	1683, 1937, 92, 174, 91, 686, 528, 527, 2003, 92,
	2280, 2175, 2015, 1816, 93, 706, 174, 173, 856, 528,
	863, 527, 1930, 1931, 92, 174, 1787, 174, 174, 528,
	527, 1959, 528, 2431, 2430, 527, 527, 1993, 173, 173,
	173, 173, 173, 528, 1186, 2003, 1975, 1974, 97, 98,
	173, 2037, 2431, 2354, 2083, 173, 173, 2043, 173, 677,
	2016, 173, 173, 173, 1990, 1406, 1976, 1989, 95, 80,
	1, 1778, 2034, 604, 2400, 496, 1557, 2034, 1144, 510,
	2396, 1370, 1360, 2257, 2086, 2326, 2002, 1659, 667, 173,
	889, 2061, 136, 1620, 1621, 2413, 101, 852, 528, 100,
	2013, 2063, 892, 990, 2064, 2017, 1789, 1790, 1156, 1684,
	2105, 2044, 668, 2249, 2047, 1891, 173, 1631, 669, 1219,
	1217, 1218, 528, 527, 2045, 2046, 1216, 2048, 528, 87,
	527, 2056, 2060, 1221, 2117, 173, 1220, 1404, 2065, 1215,
	1443, 524, 2080, 2079, 1849, 173, 1459, 1460, 1461, 1462,
	171, 2076, 1965, 1208, 2072, 1966, 1187, 929, 486, 173,
	2097, 1715, 173, 492, 1101, 2008, 2114, 1864, 705, 2100,
	528, 698, 2142, 2039, 2180, 2101, 2007, 2021, 2023, 1823,
	2026, 2019, 2347, 2282, 2368, 1628, 1500, 1501, 1168, 1183,
	1779, 1108, 2113, 1510, 1506, 2102, 2103, 1661, 2123, 2116,
	2080, 2079, 2121, 1602, 1565, 2042, 1463, 549, 548, 173,
	546, 1809, 1830, 174, 1064, 599, 1194, 2137, 1841, 1839,
	174, 1838, 2136, 1740, 1606, 174, 174, 2139, 2140, 174,
	2204, 174, 2200, 1600, 1815, 557, 540, 174, 550, 2150,
	542, 597, 2075, 2078, 174, 1629, 1946, 2125, 1043, 1159,
	536, 2173, 2144, 2143, 864, 1507, 2331, 1757, 2161, 1158,
	1519, 1520, 2310, 173, 1870, 58, 36, 531, 2177, 1584,
	1585, 2437, 174, 528, 2184, 1034, 693, 31, 2189, 30,
	29, 2199, 28, 27, 22, 21, 2209, 20, 19, 18,
	24, 17, 2206, 16, 15, 1617, 106, 45, 42, 40,
	113, 2213, 2214, 2211, 112, 43, 2212, 173, 39, 966,
	173, 173, 173, 527, 37, 26, 25, 2244, 14, 13,
	12, 11, 10, 2224, 2222, 2223, 9, 8, 2227, 4,
	2229, 1037, 527, 527, 527, 527, 1077, 23, 2, 2217,
	0, 0, 0, 0, 2147, 2148, 0, 2149, 0, 2264,
	2151, 0, 2153, 2253, 1657, 0, 0, 0, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1086, 1085, 1087, 1088, 527,
	527, 527, 173, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1086, 1085, 1087, 1088, 0, 2263, 174, 0, 0, 0,
	0, 0, 0, 2262, 174, 0, 527, 0, 527, 0,
	2267, 0, 528, 0, 2275, 2276, 2278, 2277, 2298, 0,
	0, 2037, 2287, 2286, 0, 2037, 0, 0, 0, 661,
	2300, 2294, 2296, 0, 0, 0, 527, 706, 706, 706,
	2314, 2034, 0, 174, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1033, 1035, 0, 33, 2306,
	2307, 0, 0, 0, 0, 0, 0, 527, 2302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2318,
	0, 0, 2328, 2320, 0, 0, 2321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 0,
	174, 0, 2343, 2346, 2344, 527, 0, 174, 0, 2358,
	0, 0, 0, 528, 0, 0, 2037, 0, 0, 528,
	1138, 2355, 0, 0, 0, 0, 661, 0, 528, 0,
	527, 173, 0, 0, 2374, 0, 0, 0, 0, 2371,
	527, 2357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 174, 174, 174, 174, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 2359, 0, 527, 174, 174,
	0, 2395, 0, 527, 527, 2384, 0, 0, 0, 33,
	0, 0, 0, 2407, 174, 0, 2399, 2412, 2328, 2414,
	527, 2404, 0, 0, 2422, 2034, 0, 0, 2387, 0,
	1782, 0, 0, 0, 0, 0, 0, 1190, 0, 2428,
	0, 0, 0, 0, 0, 706, 0, 2434, 0, 0,
	0, 1209, 528, 33, 0, 0, 0, 2442, 2440, 0,
	0, 0, 0, 0, 0, 2445, 528, 2444, 0, 2451,
	0, 0, 0, 0, 2455, 0, 174, 2453, 0, 2456,
	528, 0, 0, 0, 0, 0, 0, 0, 2466, 528,
	0, 581, 0, 2468, 528, 528, 0, 174, 174, 174,
	174, 174, 2465, 527, 1185, 0, 0, 2474, 0, 174,
	2479, 0, 0, 2470, 174, 174, 0, 174, 0, 0,
	174, 174, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 172, 0, 0,
	482, 0, 0, 522, 0, 0, 0, 0, 174, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 482, 111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 153, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 692, 0, 0, 528,
	0, 0, 0, 0, 174, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	70, 35, 72, 0, 0, 0, 0, 0, 174, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 150, 76,
	151, 856, 0, 38, 64, 65, 0, 62, 66, 0,
	168, 0, 0, 0, 1138, 0, 63, 0, 1312, 1312,
	0, 1312, 0, 1312, 1312, 0, 1321, 1312, 1312, 1312,
	1312, 1312, 0, 0, 0, 0, 0, 0, 174, 1138,
	1138, 856, 0, 0, 0, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 1170, 1172, 0,
	0, 0, 0, 0, 1991, 1992, 0, 0, 0, 1995,
	0, 0, 1382, 1997, 1998, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	706, 706, 706, 0, 0, 0, 174, 1147, 0, 174,
	174, 174, 528, 0, 0, 0, 0, 0, 0, 0,
	606, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 528, 528, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 44, 47, 46, 49,
	0, 61, 0, 0, 67, 0, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 528, 528,
	528, 174, 0, 0, 657, 0, 50, 75, 74, 0,
	0, 59, 60, 48, 0, 0, 0, 0, 0, 1503,
	664, 0, 71, 0, 0, 528, 1138, 528, 0, 0,
	146, 0, 0, 0, 1517, 1518, 0, 0, 706, 0,
	664, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 53, 528, 54, 55, 56, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2163, 0, 528, 0, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2176, 0, 1190, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 856,
	0, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	482, 0, 482, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	174, 0, 2221, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 73, 2226, 0,
	0, 0, 0, 0, 863, 0, 528, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 528, 528, 0, 0, 0, 0, 856, 0,
	2252, 0, 0, 0, 863, 0, 0, 0, 0, 528,
	0, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 0, 0, 0, 0, 0, 164, 165, 166,
	167, 0, 0, 0, 0, 2265, 0, 2266, 0, 0,
	0, 0, 2269, 2270, 0, 0, 856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2303, 0, 0, 2305, 0, 0, 0, 0, 0, 0,
	0, 1514, 528, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 1555, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 1751,
	1575, 0, 0, 0, 0, 0, 0, 0, 2345, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 967, 0, 972, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2408, 0,
	0, 0, 1026, 1026, 1026, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	1097, 1098, 1099, 0, 1102, 482, 1104, 1105, 1106, 1107,
	0, 1110, 1112, 1112, 0, 1112, 1116, 1116, 1118, 1119,
	1120, 1121, 0, 1123, 1124, 1125, 1126, 1127, 0, 0,
	0, 0, 1116, 1116, 1116, 1116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2471, 0, 0, 0, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 0, 0, 0, 1139, 1139, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 1927, 0, 1358, 1148, 0,
	0, 664, 0, 0, 1932, 664, 1236, 0, 0, 0,
	482, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1196, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 1427, 482,
	482, 482, 482, 482, 482, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 1773, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 1784, 482, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 2018, 1793, 1794, 1795,
	1796, 1797, 1224, 1575, 0, 706, 0, 1138, 0, 0,
	2041, 1312, 1138, 0, 1808, 0, 0, 0, 0, 692,
	0, 0, 0, 0, 0, 0, 692, 692, 0, 0,
	0, 0, 1139, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 692, 1403, 692, 692, 692, 692, 692,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 692, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 856, 0,
	0, 1138, 0, 0, 0, 1579, 0, 0, 482, 0,
	0, 0, 0, 0, 1403, 0, 0, 482, 0, 482,
	1608, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 1250, 1253, 1254, 1255, 1256, 1257,
	1258, 0, 1259, 1260, 1261, 1262, 1263, 1238, 1239, 1240,
	1241, 1222, 1223, 1251, 0, 1225, 1384, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1026, 1026, 1026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 2001,
	0, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 2059, 0, 0, 0, 482, 0, 2258, 2259, 2260,
	2261, 0, 482, 0, 0, 0, 0, 482, 482, 0,
	0, 482, 0, 1743, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 2273, 2273, 2273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 1138, 0, 0, 0,
	0, 2299, 0, 2301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 1596, 0, 0, 1452, 0, 0, 0,
	0, 1579, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2146, 0, 692,
	0, 0, 706, 0, 0, 0, 0, 0, 2155, 2156,
	2158, 2160, 0, 0, 0, 0, 0, 0, 2166, 0,
	0, 2167, 0, 0, 0, 0, 2171, 0, 0, 0,
	0, 0, 0, 0, 692, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 482, 0,
	1579, 0, 0, 0, 0, 0, 1358, 2193, 2194, 0,
	0, 2198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 0, 0, 0, 2210,
	0, 0, 0, 0, 0, 2380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 482, 0, 0, 0,
	1138, 0, 2385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 0, 706, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 0, 2247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1452, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 482, 1736, 1737, 0, 0, 1741, 0, 1919,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 2272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 482, 482, 482, 482, 482, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	2313, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 692, 2334, 2335, 2336, 0, 2337, 2338,
	2340, 0, 0, 0, 2341, 2342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1139, 0, 0, 1791, 0, 1139, 482,
	482, 482, 482, 482, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 1806, 0, 0, 482, 1358, 0, 482,
	2376, 0, 482, 2066, 1403, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 1834, 1835, 0, 0, 0,
	482, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 2435, 2436, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 1913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	1951, 1952, 1953, 1954, 0, 111, 0, 133, 0, 0,
	482, 0, 0, 0, 0, 0, 1452, 1960, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 151, 0, 0, 0,
	0, 0, 120, 121, 142, 141, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 482, 0,
	0, 482, 482, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 71, 0, 0, 1603, 1603,
	1603, 1603, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 1603, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 2074,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 137,
	118, 144, 125, 117, 0, 138, 139, 0, 0, 0,
	154, 0, 1139, 2108, 0, 0, 0, 0, 0, 159,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 129, 127, 122, 123, 124, 128,
	0, 0, 2124, 0, 119, 0, 0, 2122, 0, 0,
	0, 0, 0, 130, 0, 0, 2135, 0, 0, 2138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 2169, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 482, 0, 600, 607, 608, 609, 610, 601,
	603, 0, 0, 0, 602, 0, 0, 605, 611, 612,
	0, 0, 0, 1603, 0, 0, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 2240, 0, 0, 2241, 2242, 2243,
	2081, 2082, 0, 134, 0, 0, 135, 0, 0, 0,
	0, 0, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 71, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 0, 0,
	0, 0, 0, 164, 165, 166, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 2038, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 2375, 0,
	2370, 175, 176, 177, 0, 2415, 71, 2416, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	71, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 2067, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 2029, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 1592, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	851, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 721, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 709, 703,
	702, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 851, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 1200, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 721, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 709, 703, 702, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	851, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 700, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 721, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 709, 703,
	702, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	1542, 0, 558, 0, 0, 0, 233, 563, 0, 0,
	0, 285, 230, 0, 1543, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 570, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 600, 607, 608,
	609, 610, 601, 603, 0, 0, 207, 602, 214, 579,
	605, 611, 612, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 541, 555, 0, 569, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 553, 690, 0, 0, 0, 585,
	0, 554, 0, 0, 562, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	584, 0, 0, 442, 0, 0, 582, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 591, 583, 574, 576, 592, 593, 571,
	572, 575, 594, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 586, 561, 560, 0, 567, 568, 0, 577,
	578, 559, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 558,
	0, 0, 0, 233, 563, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	570, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 0, 0, 1615,
	0, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	0, 175, 176, 177, 600, 607, 608, 609, 610, 601,
	603, 0, 0, 207, 602, 214, 579, 605, 611, 612,
	1616, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 541, 555,
	0, 569, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 553, 0, 0, 0, 0, 585, 0, 554, 0,
	0, 562, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 584, 0, 0,
	442, 0, 0, 582, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	591, 583, 574, 576, 592, 593, 571, 572, 575, 594,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 586,
	561, 560, 0, 567, 568, 0, 577, 578, 559, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	70, 406, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 558, 0, 0,
	0, 233, 563, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 570, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 79, 0, 0, 175,
	176, 177, 600, 607, 608, 609, 610, 601, 603, 0,
	0, 207, 602, 214, 579, 605, 611, 612, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 541, 555, 0, 569,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 585, 0, 554, 0, 0, 562,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 584, 0, 0, 442, 0,
	0, 582, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 591, 583,
	574, 576, 592, 593, 571, 572, 575, 594, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 586, 561, 560,
	0, 567, 568, 0, 577, 578, 559, 178, 192, 287,
	78, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 558, 0, 0, 0, 233, 563,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 570, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 565, 566, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 0, 175, 176, 177, 600,
	607, 608, 609, 610, 601, 603, 0, 0, 207, 602,
	214, 579, 605, 611, 612, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 541, 555, 0, 569, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 553, 0, 0, 0,
	0, 585, 0, 554, 0, 0, 562, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 2409, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 1169, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 584,
	0, 0, 442, 0, 0, 582, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 591, 583, 574, 576, 592, 593, 571, 572,
	575, 594, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 586, 561, 560, 0, 567, 568, 0, 577, 578,
	559, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 558, 0,
	0, 0, 233, 563, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 570,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	565, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 79, 0, 0,
	175, 176, 177, 600, 607, 608, 609, 610, 601, 603,
	0, 0, 207, 602, 214, 579, 605, 611, 612, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 541, 555, 0,
	569, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	553, 690, 0, 0, 0, 585, 0, 554, 0, 0,
	562, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 584, 0, 0, 442,
	0, 0, 582, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 591,
	583, 574, 576, 592, 593, 571, 572, 575, 594, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 586, 561,
	560, 0, 567, 568, 0, 577, 578, 559, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 558, 0, 0, 0, 233,
	563, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 570, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 79, 0, 0, 175, 176, 177,
	600, 607, 608, 609, 610, 601, 603, 0, 0, 207,
	602, 214, 579, 605, 611, 612, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 541, 555, 0, 569, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 585, 0, 554, 0, 0, 562, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 584, 0, 0, 442, 0, 0, 582,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 591, 583, 574, 576,
	592, 593, 571, 572, 575, 594, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 586, 561, 560, 0, 567,
	568, 0, 577, 578, 559, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 558, 0, 0, 0, 233, 563, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 570, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 600, 607, 608,
	609, 610, 601, 603, 0, 0, 207, 602, 214, 579,
	605, 611, 612, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 569, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 553, 0, 0, 0, 0, 585,
	0, 554, 0, 0, 562, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	584, 0, 0, 442, 0, 0, 582, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 591, 583, 574, 576, 592, 593, 571,
	572, 575, 594, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 586, 561, 560, 0, 567, 568, 0, 577,
	578, 559, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 896,
	442, 0, 0, 0, 0, 0, 893, 894, 284, 859,
	281, 179, 195, 887, 891, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1189, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1191, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 1059, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 1134, 1137,
	0, 0, 0, 1133, 1136, 0, 0, 207, 1132, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 70, 406, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 1169, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 78, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 70, 406, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 78, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1564, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 1562,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 859, 281, 179, 195, 857, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 1564,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 1169, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 2274, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 1811, 0, 0, 1812, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 1211, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 2381, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 0, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	2274, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	0, 0, 294, 407, 408, 268, 406, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1191, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 1450, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 1331, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 1329, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 1327, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 1325, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 1323, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 1319, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 0, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 1317,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1315, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 1292, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 1195, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 532, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	480, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 169,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 1920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 111, 0, 133, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 153, 0, 0, 600,
	607, 608, 609, 610, 601, 603, 143, 0, 0, 602,
	0, 132, 605, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 150, 132, 151, 0, 0, 0, 0, 0, 1289,
	1290, 142, 141, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 151, 2081, 2082, 0, 0, 0,
	1289, 1290, 142, 141, 168, 0, 0, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 1291, 144, 0,
	1288, 0, 138, 139, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 137, 1291, 144,
	0, 1288, 0, 138, 139, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 591, 0, 0, 0, 592,
	593, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 135, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 152, 149, 155, 156, 157,
	158, 160, 161, 162, 163, 0, 0, 0, 0, 0,
	164, 165, 166, 167, 0, 147, 152, 149, 155, 156,
	157, 158, 160, 161, 162, 163, 0, 0, 0, 0,
	0, 164, 165, 166, 167,
}

var yyPact = [...]int{
	2574, -1000, -379, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1688, 1739, -1000, -1000, -1000, 1839, -1000, 672,
	1471, -1000, 1699, 4437, -1000, 31915, 424, -1000, 31378, 423,
	81, 31915, -1000, 124, -1000, 100, 31915, 105, 30841, -1000,
	-1000, -292, 13112, 1626, -13, -16, 31915, -1000, 1809, 1464,
	-1000, 291, -1000, -1000, -1000, -1000, -1000, -1000, 30304, -1000,
	-1000, -1000, 1708, 1690, 1850, 536, 1646, -1000, 1747, 1464,
	-1000, 13112, 1789, 1742, 12575, -1000, 365, -1000, -1000, 9346,
	-1000, -1000, 17410, 31915, 31915, 267, -1000, 1699, -1000, -1000,
	276, -1000, 278, 1384, -1000, 1383, -1000, 555, 451, 294,
	411, 409, 293, 292, 290, 289, 287, 286, 282, 281,
	299, -1000, 596, 596, -175, -181, 2501, 351, 351, 351,
	382, 1657, 1655, -1000, 573, -1000, 596, 596, 266, 596,
	596, 596, 596, 254, 252, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	255, 1699, 238, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31915, 111,
	31915, -1000, 467, 31915, 673, 673, 23, 673, 673, 673,
	673, 142, 514, -17, -1000, 141, 233, 149, 240, 719,
	146, 117, -1000, -1000, 237, 719, 1097, 539, 118, -1000,
	673, 7166, 7166, 7166, -1000, 1683, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 381, -1000, -1000, -1000, -1000, 31915,
	29767, 309, 642, -1000, -1000, -1000, 44, -1000, -1000, 1207,
	725, 13112, 1091, -1000, 1360, 468, -1000, -1000, -1000, -1000,
	-1000, 449, 13649, 13649, 13649, 13649, -1000, -1000, 1399, 1399,
	1399, 1399, 13649, 1399, 13649, 1399, 1399, 1399, 1399, 13112,
	1399, 1399, 1399, -1000, 1399, 1399, 1399, 1399, 1399, 1399,
	1399, 465, 1399, 1399, 1399, 1399, 1399, -1000, -1000, -1000,
	-1000, 1399, 1399, 1399, 1399, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15260, -1000, 10964, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31915, -1000, 1399, 139, 1747,
	1464, -1000, 1809, 1787, 291, -1000, 1681, 1311, 1428, 1034,
	1464, 1355, 31915, -1000, 1431, -1000, -1000, -1000, 1563, 1118,
	1096, -1000, -1000, -1000, -1000, 1029, 13112, -1000, -1000, 1833,
	-1000, 14723, 464, 799, 29230, -1000, 365, 365, 1382, 8801,
	-53, -1000, -1000, -1000, 633, 19558, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1683, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1376, 31915, -1000, -1000, 3387, 1010, -1000, 1470,
	-1000, 1369, -1000, 1438, 1481, 416, 1010, 410, 405, 400,
	-1000, -98, -1000, -1000, -1000, -1000, -1000, 596, 596, 298,
	4437, 32475, -1000, -1000, -1000, 28693, 1469, 1010, -1000, 1468,
	-1000, 755, 402, 496, 496, 1010, -1000, -1000, 31915, 1010,
	741, 732, 31915, 31915, -1000, 28156, -1000, 27619, 27082, 983,
	31915, 26545, 26008, 25471, 24934, 24397, -1000, 1534, -1000, 1450,
	-1000, -1000, -1000, 31915, 31915, 31915, 279, -1000, -1000, 31915,
	1010, -1000, -1000, 981, 978, 596, 596, 976, 1095, 1090,
	1089, 596, 596, 974, 1087, 21706, 236, 972, 958, 955,
	1061, 1086, 170, 939, 901, 953, 31915, 1467, 31915, -1000,
	221, 564, 325, 632, 1699, 1622, 1381, 379, 414, 1010,
	354, 354, -1000, 7711, -1000, -1000, 1084, 13112, -1000, 720,
	719, 719, -1000, -1000, -1000, -1000, -1000, -1000, 673, 31915,
	720, -1000, -1000, -1000, 719, 673, 31915, 673, 673, 673,
	673, 719, 719, 719, 673, 31915, 31915, 31915, 31915, 31915,
	31915, 31915, 31915, 31915, 7166, 7166, 7166, 539, 673, -296,
	-1000, 1083, -1000, 1514, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 103, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -102, 1373, 23860, -1000, -297, -299, -300, -302,
	-1000, -1000, -1000, -304, -305, -1000, -1000, -1000, 13112, 13112,
	13112, 13112, -1000, 816, 13649, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 867, 665, 13649, 13649, 13649, 13649, 13649, 13649,
	13649, 13649, 13649, 13649, 13649, 13649, 13649, 13649, 13649, 766,
	1079, 1074, 468, 468, 468, 468, -1000, 12575, 13112, 13112,
	468, -1000, 1010, 23323, 12575, 12575, 13112, 1661, 653, 725,
	31915, -1000, 1034, -1000, -1000, -1000, 850, -1000, 31915, 31915,
	62, 9889, 7711, 12575, 12575, 12575, 12575, 12575, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 463,
	1269, 1174, 1367, -1000, 1362, -1000, -171, 16873, 13112, 1073,
	-1000, -1000, -1000, 1747, -1000, 1747, 1269, 1644, 1566, 12575,
	-1000, -1000, 1644, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1220, -1000, 31915, 1355, 1729, 31915, 1557, 1064, 279,
	-1000, 13112, 13112, 1349, -1000, 855, 31915, -1000, -1000, 22786,
	-1000, -1000, 6621, -1000, 277, 31915, -1000, 21169, 22249, 8256,
	-53, -1000, 8256, 1257, -1000, -38, -7, 10426, 512, -1000,
	-1000, -1000, 2501, 14186, 1184, 1643, 45, -1000, -1000, -1000,
	1438, -1000, 1438, 1438, 1438, 1438, 279, 279, 279, 279,
	-1000, -1000, -1000, -1000, -1000, 1466, 1465, -1000, 1438, 1438,
	1438, 1438, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1457,
	1457, 1457, 1439, 1439, 345, -1000, 13112, 195, 31915, 1707,
	946, 221, 367, 1497, 1010, 1010, 1010, 367, -1000, 1158,
	1153, -1000, 1339, -1000, -1000, 1784, -1000, -1000, 655, 776,
	768, 604, 31915, 151, 273, -1000, 338, -1000, 31915, 1010,
	708, 496, 1010, -1000, 1010, -1000, -1000, -1000, -1000, -1000,
	1010, 1303, -1000, 1282, 839, 764, 801, 763, 1303, -1000,
	-1000, -122, 1303, -1000, 1303, -1000, 1303, -1000, 1303, -1000,
	1303, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 610,
	31915, 151, 766, -1000, 377, -1000, -1000, 766, 766, -1000,
	-1000, -1000, -1000, 1051, 1032, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -356, 31915, -1000, 169, 630, 263, 313, 259,
	31915, 133, 1732, 232, 251, 31915, 31915, 354, 1512, 31915,
	1713, 31915, -1000, -1000, -1000, -1000, 725, 31915, -1000, -1000,
	673, 673, -1000, -1000, 31915, 673, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 673, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 31915, 31915, -1000, -1000, -1000, -1000, -1000, 64,
	-44, 271, -1000, -1000, -1000, -1000, -1000, 1738, -1000, 725,
	714, 666, -1000, -1000, -1000, 851, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 867, 13649, 13649, 13649, 1639, 389, 2017,
	2032, 838, 854, 854, 905, 905, 517, 517, 517, 517,
	517, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1330, -1000,
	922, 807, 1034, -1000, 1330, 1330, 822, 12575, -1000, -1000,
	692, -1000, 13112, 1034, -1000, -1000, 1034, 1277, 1262, 1815,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1034, 12575, 12575, 1259, 1399, 461, -1000, 1330, 1034,
	1034, 1330, 1330, 7711, 1034, -1000, 31915, -1000, -285, -1000,
	-60, 543, 1399, -1000, 21706, 1034, 1207, -1000, -1000, -1000,
	-1000, -1000, 19021, 1372, 1644, -1000, -1000, 1399, 1365, -1000,
	-1000, 279, 34, 777, 725, 725, 13112, -1000, -1000, -1000,
	-1000, -1000, -1000, 460, 275, 1399, -1000, 1434, 1531, -1000,
	-1000, -1000, 1728, 16336, 31915, 1414, 1218, -1000, 454, -1000,
	1257, -53, -34, -1000, -1000, -1000, -1000, 725, -1000, 1080,
	280, 270, -1000, 364, -1000, -1000, -1000, -1000, 1133, 1724,
	1638, 35, -1000, -1000, -1000, 279, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 1026, 1026, -1000, -1000, -1000, -1000, -1000,
	944, -1000, -1000, -1000, 934, -1000, -1000, 1194, 1530, 195,
	-1000, -1000, 596, 1022, 1647, 31915, -1000, -1000, 1149, 169,
	31915, 662, 1510, -1000, 1497, 1497, 1497, 31915, -1000, -1000,
	-1000, -1000, 32454, 31915, 1358, -1000, 143, -1000, 1147, 31915,
	-1000, 1335, 1454, 1010, 1010, -1000, -1000, -1000, 31915, 1399,
	-1000, -1000, -1000, -1000, 412, 1693, 1685, 151, 143, 512,
	1010, -1000, -1000, -1000, -1000, -1000, -359, 1333, 393, 155,
	224, 31915, 31915, 31915, 31915, 31915, 444, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 249, 375, -1000, 31915, 31915,
	519, -1000, -1000, -1000, 719, -1000, -1000, 719, -1000, -1000,
	-1000, -1000, -1000, 1680, 31915, -48, -330, -1000, -323, -1000,
	-1000, -1000, -1000, 1225, 383, 2017, 13649, 13649, 12575, -111,
	538, 538, 766, -1000, -1000, -1000, 13112, 13112, 1412, 648,
	-1000, 13112, 771, -1000, -1000, 13112, 13112, 13112, -1000, 1330,
	1330, 12575, 7711, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 396, 395, 388, 31915, -1000, -1000, 1748,
	-1000, 1577, 1576, 1802, 1800, -1000, 21169, 1644, -1000, -1000,
	31915, -280, -1000, 1615, 1579, -1000, -1000, -1000, -1000, 6076,
	1508, 31915, 1399, -1000, 15798, 31915, 31915, 21169, 21169, 21169,
	21169, 21169, -1000, 1550, 1539, -1000, 1549, 1543, 1526, 31915,
	-1000, 1328, 1034, 1787, 16336, 17947, 1188, 21169, -1000, -1000,
	21169, 31915, 5531, -1000, -1000, -51, -65, -1000, -1000, -1000,
	-1000, 1781, 2501, -1000, -1000, -1000, -1000, 792, 32431, 1845,
	-1000, 1013, -1000, 1020, -1000, 705, 699, -1000, 31915, 1452,
	-1000, -1000, -1000, -1000, -1000, 1298, -1000, 1296, 1255, 1294,
	110, -1000, 1479, 1670, 596, 596, -1000, 931, -1000, 1010,
	-1000, -1000, 391, -1000, 1712, 31915, 1507, 1506, 1505, -1000,
	1780, 1240, 31915, -1000, -1000, 31915, -1000, 1575, 195, 31915,
	-1000, -1000, -1000, 273, 31915, -1000, 4706, 143, -1000, -1000,
	-1000, -1000, -1000, -1000, 31915, 174, -1000, 1449, 1105, -1000,
	1487, -1000, -1000, -1000, -1000, 148, 258, -1000, 31915, 510,
	1530, 31915, -1000, -1000, -1000, 673, 673, -1000, -1000, 1662,
	-1000, 1010, 13649, 13649, -1000, 468, -1000, 1399, 1034, 1438,
	1438, -1000, 1438, 1439, -1000, 1438, 91, 1438, 89, 1034,
	1034, 840, 1152, -106, -1000, 725, 13112, 996, 873, 950,
	-1000, -1000, 1034, -1000, 1399, 1399, 1399, 1273, 31915, -1000,
	-1000, -1000, -1000, 1800, 1798, 13112, 1244, -1000, -1000, 34,
	336, -1000, 1617, 1579, -1000, 1779, 1608, 1778, -1000, -1000,
	-1000, 1702, 1347, -1000, 569, 1199, -1000, -1000, 12038, 1275,
	1571, 453, 1273, 1223, 1531, 1493, 1504, 1586, -1000, -1000,
	-1000, -1000, 1536, -1000, 1527, -1000, -1000, 1431, -1000, -1000,
	1174, 277, 21169, 1205, 1205, -1000, 442, -1000, -1000, -1000,
	-1000, -370, -1000, -1000, 13112, -1000, -1000, -1000, -1000, -1000,
	-1000, 880, 880, 370, -1000, -1000, -1000, -1000, -1000, 1436,
	13112, 279, 1005, 279, 930, -1000, 886, -1000, -1000, -227,
	-1000, -1000, 1447, 1488, -1000, -1000, 31915, -1000, -1000, 31915,
	31915, 31915, 31915, -1000, -1000, 268, -1000, 1271, 1249, -1000,
	-145, -1000, 13112, -1000, 1431, -1000, -1000, -1000, 1121, -1000,
	-128, 31915, 31915, 31915, 31915, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 468, 13649, -1000, -1000, 387, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13112, -1000, 13112,
	-1000, 1747, 1003, 725, 13112, 13112, -1000, -1000, 18484, 20632,
	20632, 17947, -1000, 1798, 1796, 1775, 725, 1584, 1598, 1598,
	1617, -1000, 1762, 1755, -1000, 998, 1754, 997, 686, -1000,
	31915, 13112, 1399, -1000, 312, 31915, 1399, 31915, -1000, 1794,
	-1000, -1000, 13112, 1432, -1000, 13112, -1000, -1000, -1000, -1000,
	-1000, 1800, 1205, -1000, -1000, 528, 54, 274, -1000, -1000,
	-1000, 950, -1000, -1000, -1000, 31915, 1177, -1000, -1000, -1000,
	1117, 1111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1431, -1000, -1000, -1000, 1240, 262, 314, -1000, 273, -1000,
	-185, -187, 950, 1716, -1000, -1000, 7711, -1000, -1000, 1411,
	1494, -1000, 201, -1000, -1000, 950, 950, 1034, -1000, 950,
	950, 1247, -1000, -1000, -1000, 1247, 1247, 543, 1796, -1000,
	13112, 13112, 1582, 862, -1000, -1000, -1000, -1000, 987, 952,
	-1000, 907, -1000, 1844, -1000, 725, -1000, 1399, -1000, 440,
	1199, -1000, 1747, 725, 31915, 725, 1794, -1000, 1407, 1419,
	-366, 13112, 1403, -1000, 1234, -1000, -1000, -1000, 1715, 1399,
	-1000, -1000, -1000, -1000, -1000, 291, 1213, -1000, 560, 31915,
	31915, 1034, 230, -138, -1000, -1000, -1000, -1000, -1000, 20095,
	-1000, -1000, -1000, -1000, -1000, 725, 1207, -1000, 847, -1000,
	-1000, -1000, -1000, -1000, 31915, 1199, 31915, -1000, 1226, 1747,
	13112, 1398, 550, -367, 872, 1062, 31915, 1503, 715, 291,
	11501, -125, 7711, 4986, 1176, -1000, -1000, 1556, -120, -141,
	-1000, -1000, -1000, -1000, 1196, -1000, -1000, -1000, 980, 31915,
	846, 1389, 1750, -1000, -1000, 1173, 1499, -1000, 1824, -1000,
	-1000, -1000, 740, 818, -1000, -1000, -1000, -125, 950, 1034,
	-1000, -39, -1000, -1000, -1000, -1000, -1000, 1487, -1000, 1555,
	-1000, -366, 1170, -1000, -1000, 273, -363, -1000, -1000, 1843,
	535, 535, -1000, -1000, -1000, -1000, -1000, 330, -1000, -1000,
	-128, -130, -367, -366, 1168, 49, -1000, -1000, -1000, 323,
	919, -1000, 172, -1000, -139, 1389, -367, -1000, 1392, 1419,
	-1000, -1000, -1000, -1000, -156, -1000, 1389, 13112, 1270, -1000,
	-1000, 781, 31915, -375, 1129, -1000, 806, -375, -1000, -1000,
}

var yyPgo = [...]int{
	0, 8, 2139, 5, 2, 3, 2138, 53, 77, 157,
	13, 178, 83, 2137, 2131, 2129, 191, 190, 185, 2127,
	2126, 2122, 2121, 2120, 2119, 2118, 2116, 2115, 2114, 187,
	139, 154, 2109, 2108, 2105, 96, 142, 71, 66, 150,
	2104, 2100, 56, 2099, 2098, 2097, 179, 172, 672, 2096,
	158, 93, 2094, 2093, 2091, 2090, 2089, 2088, 2087, 2085,
	2084, 2083, 2082, 2080, 2079, 2077, 228, 2076, 2075, 9,
	2071, 62, 2067, 2066, 2065, 2064, 2062, 1, 2061, 2060,
	2059, 2058, 120, 2057, 2056, 2055, 156, 2054, 2050, 363,
	94, 97, 2049, 2048, 87, 153, 2047, 98, 137, 2046,
	2045, 887, 2043, 65, 64, 2042, 47, 78, 63, 42,
	2041, 2040, 2038, 72, 80, 2035, 86, 43, 2034, 73,
	85, 2033, 44, 2032, 2030, 92, 2024, 2023, 2021, 82,
	2019, 2018, 2737, 2016, 76, 113, 24, 37, 2015, 2014,
	2012, 2011, 2010, 39, 2008, 2007, 2006, 119, 21, 2004,
	23, 18, 29, 108, 2003, 40, 60, 1993, 116, 1991,
	1990, 32, 25, 58, 1989, 19, 111, 131, 38, 75,
	117, 1985, 1984, 33, 48, 1983, 1982, 1981, 1980, 1979,
	1978, 50, 1977, 31, 1974, 160, 1973, 4, 28, 34,
	41, 169, 45, 20, 1971, 161, 1968, 30, 134, 107,
	138, 1967, 1965, 1964, 152, 229, 1963, 1961, 61, 146,
	121, 129, 1960, 231, 1958, 1957, 74, 629, 1715, 15,
	135, 1956, 1953, 2461, 114, 112, 35, 1950, 207, 1944,
	1941, 1940, 159, 140, 91, 936, 95, 1939, 1936, 1933,
	1926, 1921, 1920, 1919, 164, 163, 36, 89, 132, 55,
	1917, 1915, 1913, 102, 69, 1909, 136, 133, 106, 144,
	1903, 148, 124, 128, 1902, 90, 1899, 1897, 1896, 1895,
	81, 1894, 1893, 1892, 1890, 130, 122, 101, 68, 1887,
	70, 99, 126, 127, 11, 16, 27, 147, 14, 1885,
	6, 0, 1883, 10, 141, 230, 145, 1882, 1881, 7,
	1880, 12, 1879, 1878, 118, 1876, 1875, 1874, 22, 26,
	17, 1873, 1870, 1869, 2750, 1988, 110, 1868, 162,
}

//line sql.y:5987
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 312, 313, 313, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 291, 291, 291, 294, 294, 27,
	61, 29, 29, 28, 28, 31, 31, 30, 7, 7,
	7, 8, 8, 8, 8, 8, 8, 8, 8, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 12, 12,
	12, 12, 12, 15, 11, 11, 16, 16, 73, 73,
	17, 18, 18, 18, 18, 316, 316, 127, 127, 125,
	125, 126, 126, 190, 190, 19, 20, 20, 200, 200,
	199, 199, 199, 201, 201, 201, 201, 235, 235, 21,
	21, 21, 21, 21, 87, 87, 293, 293, 292, 290,
	290, 289, 289, 288, 33, 34, 43, 43, 43, 43,
	44, 45, 295, 295, 266, 49, 49, 48, 48, 48,
	48, 50, 50, 47, 47, 46, 46, 268, 268, 255,
	255, 267, 267, 267, 267, 267, 267, 267, 254, 254,
	100, 100, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 307, 307, 172, 172, 172, 172, 172,
	172, 105, 105, 113, 113, 113, 113, 103, 103, 104,
	102, 102, 102, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 112, 112, 109, 109,
	110, 110, 110, 308, 308, 308, 308, 237, 237, 237,
	237, 240, 240, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 239, 239, 239, 239, 239, 241, 241, 241,
	241, 241, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 243, 243, 243,
	243, 243, 243, 243, 243, 253, 253, 244, 244, 248,
	248, 249, 249, 249, 250, 250, 250, 251, 251, 246,
	246, 246, 246, 247, 247, 247, 256, 280, 280, 279,
	279, 277, 277, 277, 277, 265, 265, 274, 274, 274,
	274, 274, 264, 264, 260, 260, 260, 261, 261, 262,
	262, 259, 259, 263, 263, 276, 276, 275, 257, 257,
	258, 258, 282, 309, 309, 309, 309, 310, 310, 283,
	300, 301, 299, 299, 299, 299, 299, 71, 71, 71,
	212, 212, 212, 272, 272, 271, 271, 271, 273, 273,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 207, 207,
	207, 298, 298, 298, 298, 298, 298, 297, 297, 297,
	269, 269, 269, 296, 296, 51, 51, 156, 156, 40,
	40, 40, 40, 40, 40, 39, 39, 39, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 41, 41, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 75, 75, 75, 75, 77, 77, 77, 285,
	285, 1, 1, 5, 5, 2, 2, 76, 76, 3,
	3, 4, 4, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 252, 252, 252, 284, 284,
	286, 286, 23, 32, 32, 24, 24, 24, 24, 25,
	25, 52, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	302, 302, 206, 206, 214, 214, 205, 205, 228, 228,
	228, 208, 208, 208, 209, 209, 306, 306, 306, 54,
	54, 56, 56, 57, 58, 58, 230, 230, 231, 231,
	59, 60, 72, 72, 72, 72, 72, 72, 74, 74,
	74, 14, 14, 14, 14, 68, 68, 68, 13, 13,
	55, 55, 62, 303, 303, 304, 305, 305, 305, 305,
	63, 65, 26, 26, 26, 26, 26, 26, 93, 93,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 88, 88, 88, 83, 83, 317, 66, 67,
	67, 86, 86, 86, 80, 80, 80, 85, 85, 85,
	90, 90, 92, 92, 92, 92, 92, 94, 94, 94,
	94, 94, 94, 94, 89, 89, 91, 91, 91, 91,
	221, 221, 221, 220, 220, 116, 116, 118, 117, 117,
	119, 119, 120, 120, 120, 154, 135, 135, 188, 188,
	187, 187, 189, 189, 189, 189, 191, 191, 121, 121,
	121, 121, 122, 122, 123, 123, 124, 124, 229, 229,
	226, 226, 226, 225, 225, 128, 128, 128, 130, 129,
	129, 129, 129, 131, 131, 133, 133, 132, 132, 134,
	136, 136, 136, 136, 136, 137, 137, 101, 101, 101,
	101, 101, 101, 111, 111, 111, 111, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 203, 203, 138, 138, 146, 146,
	146, 146, 139, 139, 139, 139, 139, 139, 139, 147,
	147, 147, 153, 148, 148, 144, 144, 144, 144, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 143,
	143, 143, 143, 143, 143, 143, 143, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 318, 318,
	245, 245, 245, 145, 145, 145, 145, 145, 84, 84,
	84, 84, 84, 234, 234, 234, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 159,
	159, 81, 81, 157, 157, 158, 160, 160, 155, 155,
	155, 141, 141, 141, 161, 161, 162, 162, 163, 163,
	165, 164, 164, 166, 167, 167, 167, 168, 168, 169,
	169, 169, 42, 42, 42, 42, 42, 37, 37, 37,
	37, 38, 38, 38, 95, 95, 95, 95, 97, 97,
	96, 96, 69, 69, 70, 70, 70, 98, 98, 99,
	99, 99, 99, 185, 185, 170, 170, 170, 177, 177,
	177, 173, 173, 175, 175, 175, 176, 176, 176, 174,
	182, 182, 184, 184, 183, 183, 179, 179, 180, 180,
	181, 181, 181, 178, 178, 140, 140, 140, 140, 140,
	186, 186, 186, 186, 192, 192, 150, 150, 152, 152,
	151, 115, 193, 193, 197, 194, 194, 198, 198, 198,
	198, 198, 195, 195, 196, 196, 222, 222, 222, 202,
	202, 213, 213, 210, 210, 211, 211, 204, 204, 215,
	215, 215, 64, 149, 149, 281, 281, 278, 218, 218,
	219, 219, 223, 223, 227, 227, 224, 224, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 314,
	315, 232, 233, 233, 233,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 9, 8, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 4, 9,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 1,
	3, 1, 7, 5, 6, 6, 7, 0, 1, 5,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	0, 1, 2, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 8, 6, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 0, 10, 11, 7, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 3, 4, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	8, 8, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -312, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -52, -53, -54, -56, -57,
	-58, -59, -60, -13, -55, -26, -27, -61, -62, -63,
	-64, -65, -8, -7, -12, 7, -73, -28, 29, -33,
	-43, 201, -44, -34, 202, -45, 204, 203, 239, 205,
	232, 71, 279, 280, 282, 283, 284, 285, -74, 237,
	238, 207, 33, 42, 30, 31, 34, 210, -9, -29,
	6, -314, 8, 403, 234, 233, 25, -11, 416, 82,
	-313, 550, -185, -170, 19, 30, 26, -169, -165, -86,
	-170, 17, 15, 5, -66, -317, -66, 9, 10, -66,
	-266, -268, 82, 138, 82, -66, -49, -48, -47, -46,
	-50, 28, -40, -41, -287, -39, -36, 206, 203, 247,
	105, 106, 239, 240, 241, 205, 223, 238, 242, 237,
	256, -35, 77, 30, 416, 419, -273, 202, 208, 209,
	404, 108, 107, 72, 204, -270, 329, 520, -50, 522,
	97, 99, 521, 41, 213, 523, 524, 525, 526, 222,
	527, 528, 529, 530, 536, 537, 538, 539, 109, 5,
	-66, -227, -223, -291, -217, 85, 86, 87, 413, 225,
	447, 448, 272, 77, 38, 329, 520, 279, 293, 287,
	314, 306, 414, 449, 275, 226, 260, 517, 304, 114,
	522, 278, 450, 240, 334, 335, 336, 97, 282, 371,
	535, 277, 451, 533, 99, 521, 76, 48, 41, 235,
	302, 298, 523, 261, 452, 424, 254, 108, 105, 542,
	33, 296, 47, 27, 532, 107, 46, 524, 129, 453,
	525, 338, 319, 511, 45, 339, 241, 454, 80, 418,
	519, 340, 297, 341, 271, 531, 207, 455, 503, 342,
	343, 512, 456, 320, 324, 457, 363, 344, 549, 49,
	458, 459, 513, 106, 460, 75, 526, 291, 292, 461,
	269, 224, 365, 318, 222, 32, 345, 415, 273, 55,
	248, 366, 43, 322, 546, 42, 507, 462, 510, 317,
	313, 50, 463, 464, 465, 466, 527, 316, 290, 312,
	541, 436, 266, 528, 59, 209, 326, 325, 327, 255,
	362, 309, 467, 468, 469, 229, 78, 470, 299, 18,
	471, 472, 346, 262, 473, 53, 474, 475, 369, 238,
	476, 51, 529, 36, 243, 543, 530, 477, 478, 479,
	480, 481, 348, 482, 347, 321, 323, 250, 349, 417,
	483, 295, 242, 534, 484, 230, 518, 244, 247, 237,
	370, 231, 485, 486, 487, 488, 489, 276, 490, 491,
	283, 536, 40, 492, 493, 494, 495, 270, 265, 364,
	373, 58, 79, 331, 496, 516, 289, 263, 497, 280,
	52, 537, 538, 539, 257, 540, 7, 547, 548, 351,
	109, 267, 268, 44, 310, 249, 498, 499, 300, 301,
	315, 288, 311, 281, 504, 251, 352, 239, 500, 372,
	264, 332, 421, 256, 353, 515, 420, 308, 305, 258,
	501, 354, 214, 252, 253, 502, 505, 355, 356, 274,
	357, 358, 359, 360, 361, 259, 419, 286, 303, 333,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	394, 395, 396, 397, 398, 399, 400, 401, 212, -66,
	212, -132, -223, 212, -195, 335, -214, 337, 350, 345,
	355, 343, -206, 346, 348, 250, -306, 363, 212, 352,
	201, 155, 338, 347, 356, 357, 274, 358, 361, 259,
	-302, -291, 525, 540, 114, 307, 342, 340, 364, 507,
	360, 359, -223, 281, -230, 286, -218, -291, -217, 284,
	-132, -72, 503, 205, -232, -232, -88, 507, 509, -148,
	-101, 122, -111, -114, -106, -107, -142, -143, -144, -145,
	-112, -155, 144, 145, 152, 123, -153, -115, 23, 412,
	405, 404, 155, 28, 197, 65, 66, 407, 408, 125,
	54, 380, 381, -113, 376, 382, 377, 410, 411, 100,
	-218, -223, 217, 375, 211, 150, 403, -108, -104, -7,
	-151, 374, 378, 379, 383, -291, -217, -110, -109, -138,
	88, 93, 98, 94, -311, 101, -314, 89, 90, 91,
	92, 102, 103, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 41, 351, 351, -132, -66, -163,
	-86, -165, -9, -7, -314, 6, -66, -7, -8, -12,
	-29, -31, 443, -30, -223, -170, -185, 9, 140, 39,
	47, -168, -169, -11, -7, -101, 16, 20, 21, -91,
	146, -101, -223, -67, -204, 216, -66, -66, -194, -235,
	281, -198, 364, 363, -219, -196, -218, -216, -195, 362,
	206, 422, 121, 22, 24, 124, 155, 16, 125, 34,
	208, 307, 223, 154, 219, 404, 201, 69, 423, 376,
	377, 374, 380, 406, 407, 375, 337, 28, 10, 425,
	25, 233, 21, 35, 148, 203, 128, 236, 23, 234,
	100, 103, 428, 19, 72, 228, 11, 221, 37, 13,
	429, 430, 14, 217, 216, 140, 213, 67, 8, 197,
	26, 137, 63, 431, 116, 432, 433, 434, 435, 65,
	138, 17, 544, 378, 379, 30, 508, 412, 245, 150,
	70, 56, 509, 122, 437, 438, 101, 439, 104, 73,
	514, 118, 15, 68, 39, 440, 246, 441, 218, 545,
	442, 367, 443, 139, 204, 403, 66, 444, 211, 350,
	6, 409, 29, 232, 220, 111, 64, 445, 212, 127,
	410, 411, 215, 102, 5, 115, 31, 9, 71, 74,
	381, 382, 383, 54, 110, 416, 126, 12, 446, 368,
	120, 114, -267, 138, -254, -258, -218, 227, -283, 223,
	-132, -276, -275, -218, -87, -213, 213, 221, 220, 115,
	-295, 118, 267, 375, 211, -46, -47, -195, 154, 244,
	83, 83, -258, -257, -256, -296, 246, 227, -282, -274,
	219, 228, -264, 220, 221, -259, 213, 116, -296, -259,
	218, 228, 246, 246, 109, 246, 109, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 243, -265, 130, -265,
	420, 420, -270, -296, -296, -296, 215, 32, 32, -215,
	-259, 215, 22, -265, -265, -195, 154, -265, -265, -265,
	-265, 254, 254, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, 212, -295,
	-95, 361, 274, 77, -48, 256, -32, -132, -213, 213,
	214, -295, -132, 198, -132, -208, 138, 12, -208, -205,
	351, 349, 336, 341, -208, -208, -208, -208, 257, 334,
	-260, 213, 32, 224, 351, 257, 334, 257, 258, 257,
	258, 344, 354, 257, -228, 11, 140, 375, 339, 343,
	250, 212, 251, 214, 353, -291, 510, 258, -228, 89,
	-209, 138, 351, 253, -208, -233, -314, -219, 307, -233,
	-233, 29, 215, -218, -68, -218, 89, -14, -10, -17,
	-16, -18, 130, -93, 351, -82, 155, 525, 511, 512,
	513, 510, 348, 518, 516, 514, 257, 515, 83, 118,
	120, 121, -101, 137, -139, 130, 131, 132, 133, 134,
	135, 136, 140, 122, 124, 138, 139, 119, 141, 142,
	143, 144, 145, 146, 147, 149, 148, 150, 151, 154,
	199, 200, -107, -107, -107, -107, -153, -314, -314, -314,
	-107, -203, -314, -107, -314, -314, -314, -314, -159, -101,
	-314, -318, -314, -318, -318, -245, -314, -245, -314, -314,
	-314, -314, 198, -314, -314, -314, -314, -314, -245, -245,
	-245, -245, 98, 93, 88, -155, 94, 89, -218, -223,
	-7, -8, -148, -232, -303, -304, -135, -132, -314, 274,
	-168, -11, -7, -163, -169, -165, -7, -66, -80, -92,
	60, 61, -94, 21, 35, 64, 62, 20, -315, 84,
	-315, -185, -315, 83, -31, -188, 82, 58, 40, 89,
	89, 83, 18, -164, -166, -101, 11, -221, -220, 22,
	-218, 89, 198, 96, -133, 26, -132, -204, -204, 83,
	281, -198, -235, -200, -199, 365, 367, 130, -222, -218,
	89, 28, 84, 83, -132, -237, -240, -242, -241, -243,
	-238, -239, 304, 305, 155, 308, 310, 311, 312, 313,
	314, 315, 316, 317, 318, 319, 29, 235, 300, 301,
	302, 303, 320, 321, 322, 323, 324, 325, 326, 327,
	287, 306, 414, 288, 289, 290, 291, 292, 293, 295,
	296, 297, 298, 299, -294, -291, 82, 84, 83, -244,
	82, -95, 212, -291, 213, 213, 213, -66, 403, -265,
	-265, 243, -39, -36, -287, 15, -35, -36, 206, 105,
	106, 203, 82, -254, 82, -263, -294, -291, 82, 116,
	218, 115, -262, -259, -262, -263, -291, -155, -291, 116,
	116, -191, -218, -191, -191, 20, -191, 20, -191, 20,
	91, -218, -191, 20, -191, 20, -191, 20, -191, 20,
	-191, 20, 28, 75, 76, 28, 78, 79, 80, -155,
	-155, -254, -195, -132, -291, 91, 91, -265, -265, 91,
	89, 89, 89, -265, -265, 91, 89, -225, -223, 89,
	-297, 229, 271, 273, 91, 91, 91, 91, 28, 89,
	-298, 28, 532, 531, 533, 534, 535, 91, 28, 91,
	28, 91, -218, 82, -132, -98, 261, 201, 203, 206,
	73, 89, 275, 130, 41, 83, 215, 212, -291, -210,
	217, -210, -224, -223, -216, 89, -101, -261, 11, 140,
	-228, -228, -208, -132, -261, -228, -208, -132, -208, -208,
	-208, -208, -228, -228, -228, -208, -223, -223, -132, -132,
	-132, -132, -132, -132, -132, -233, -233, -233, -209, -208,
	510, 89, 73, -231, 284, 318, 504, 505, 506, 83,
	416, -125, -132, 510, 510, 510, 510, 510, 510, -101,
	-101, -101, -101, -146, 101, 122, 102, 103, -114, -147,
	-151, -153, 95, 140, 124, 138, 139, -106, -107, -106,
	-106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
	-106, -106, -234, -291, 89, 155, 89, 89, -89, -91,
	-101, -101, -291, -218, -89, -89, -101, -85, 21, 35,
	-157, -158, 126, -155, -315, -315, 91, -218, -218, -79,
	-78, 385, 386, 387, 388, 390, 391, 392, 395, 396,
	400, 401, 384, 402, 389, 394, 397, 398, 399, 393,
	303, -90, 21, 35, -89, -219, -224, -216, -89, -90,
	-90, -89, -89, 198, -185, -315, 83, -305, 367, 368,
	508, -226, 246, -225, 22, -149, -148, 89, -168, -168,
	60, 61, 56, -89, -94, -315, -30, 22, -187, -218,
	59, 89, -246, -195, -101, -101, 83, -167, 24, 25,
	-132, -220, 146, -224, -190, 246, -132, -117, -119, -120,
	-121, -135, -154, -314, 11, -125, -126, -134, -223, -198,
	-200, 83, 366, 368, 369, 73, 104, -101, -247, 154,
	-272, -271, -270, -254, -256, -257, -258, 84, -171, -100,
	37, -250, 332, 331, -244, -244, -244, -244, -244, -246,
	-246, -246, -246, 82, 82, -244, -244, -244, -244, -248,
	82, -248, -248, -249, 82, -249, -283, -101, -280, -279,
	-277, -278, 222, 97, 416, 74, -275, -167, 91, -98,
	-211, 217, -281, -278, -291, -291, -291, -211, -291, 89,
	-291, 89, 83, 16, -255, -254, -51, 271, -286, 246,
	-282, -276, -263, 116, -262, -263, -263, -291, 83, 26,
	109, 109, 109, 109, 416, 203, 29, -254, -51, -234,
	215, -234, -234, 89, 89, -207, 540, -125, -97, 263,
	130, 252, 252, 212, 212, 265, -132, 276, 278, 277,
	275, 20, 264, 266, 268, 254, -132, -132, -210, 73,
	-127, -132, 23, -223, -132, -208, -208, -132, -208, -208,
	-132, -218, -82, 367, 83, 416, 19, -83, 19, 101,
	102, 103, -147, -106, -107, -106, 121, 236, 83, -315,
	22, 83, 74, -315, -315, -315, 83, 11, -89, -160,
	-158, 128, -101, -315, -315, 83, 83, 11, -315, -89,
	-89, -314, 198, -315, -315, -315, -315, -315, -219, -304,
	507, 368, -136, 71, 216, 72, -314, -225, -315, -141,
	-218, 91, 94, -170, -116, -118, 11, -94, -153, 84,
	83, -246, -174, -179, -205, -291, 89, 155, -166, 198,
	-140, 29, 54, -10, -314, -314, 29, 83, -128, -130,
	-129, -131, 63, 67, 69, 64, 65, 66, 70, -229,
	22, -117, -8, -7, -314, -132, -125, -316, 11, 74,
	-316, 83, 198, -199, -201, 370, 367, 373, -291, 89,
	-75, 246, 83, -270, -258, -310, 101, 122, 28, 73,
	329, 97, -308, 154, -309, 218, 115, 116, 230, 22,
	38, -251, 333, -246, -246, -253, 89, -253, 91, 91,
	84, -42, -37, -38, 30, 77, -277, -265, 89, 36,
	-218, 84, -97, -132, 122, 73, -281, -281, -281, -223,
	15, -187, 83, 84, -156, 272, 84, -218, 84, 82,
	-263, -263, -218, -314, 212, 28, 28, -51, -156, -247,
	-291, 542, 541, 84, 214, 270, -99, 380, 89, 85,
	-132, -132, -132, -132, -132, 206, 203, 255, 215, -125,
	-132, 83, -71, 231, 226, -228, -228, 30, -132, 367,
	519, 517, 121, 236, -114, -107, -91, 413, -236, 155,
	304, 235, 302, 298, 318, 309, 331, 300, 332, -236,
	-234, -101, -101, -163, 129, -101, 127, -101, -101, -101,
	-315, -315, -90, -219, 213, 213, 213, -191, -202, 19,
	11, 54, 54, -116, -137, 12, -117, -94, -218, -177,
	503, -182, 43, -180, -181, 44, -178, 45, 53, 146,
	-192, 73, -193, -197, -155, -150, -152, -151, -314, -186,
	-315, -218, -191, -193, -119, -120, -120, -119, -120, 63,
	63, 63, 68, 63, 68, 63, -129, -223, -315, -315,
	-8, -226, 74, -117, -117, -134, -223, 146, 367, 371,
	372, 16, -270, 101, -314, -105, -113, -103, -102, -104,
	-108, 144, 145, 9, 89, 89, -291, 116, 116, -132,
	82, 84, 83, 84, 83, 84, 83, -212, 453, 122,
	-38, -37, -265, -265, 91, -291, 214, 23, -132, 73,
	73, 73, 16, -254, -155, 54, -280, -187, -284, -286,
	-132, -103, -314, -156, -132, -96, 261, 269, 82, 86,
	-293, 74, 252, 329, 252, -132, -71, -42, -132, -208,
	-208, 30, -291, -114, -107, -314, -315, -244, -244, -244,
	-249, -244, 292, -244, 292, -315, -315, 83, -315, 19,
	-315, -81, 409, -101, 83, 83, -315, -315, -314, -314,
	-314, -315, -132, -137, -161, 13, -101, -174, 48, 310,
	-184, -183, 52, 44, -181, 16, 46, 16, 27, -192,
	83, 130, 83, -315, -315, 83, 54, 198, -315, -137,
	-123, -122, 73, 74, -124, 73, -122, 63, 63, -188,
	-315, -190, -117, -137, -137, 198, -1, -2, 544, 545,
	546, -101, -109, -109, -143, 82, -101, -246, 89, -246,
	91, 91, 453, 28, 78, 79, 80, 28, 75, 76,
	-132, -132, -132, -132, -187, 248, 84, -315, 83, -252,
	416, 419, -101, -188, 84, -290, 416, -292, -218, -218,
	-218, -218, -106, -246, -291, -101, -101, -168, 89, -101,
	-101, -189, -315, -218, 218, -189, -189, -226, -161, -162,
	14, 16, -175, 50, -173, 49, -173, -183, 16, 16,
	89, 16, 89, 116, -197, -101, -152, 54, -10, -218,
	-150, -218, -163, -101, 82, -101, -137, -137, 549, 116,
	-76, 82, 336, -315, -187, 84, 84, 84, -188, 249,
	-309, -286, 420, 420, -315, 22, -289, -288, -219, 82,
	74, -84, 140, 416, -315, -315, -315, -315, -315, 83,
	-315, -315, -315, -136, -162, -101, -148, -176, 51, 73,
	104, 89, 89, 89, 9, -150, 198, -168, -187, -163,
	82, -5, 77, -3, 543, -101, 82, 84, -172, 22,
	-314, -10, 83, 130, -187, -132, -315, 414, 70, 417,
	-218, 218, 73, 104, -193, -218, 84, -168, -101, 82,
	130, -77, 547, 91, 84, -187, -300, -301, 73, -310,
	-307, 101, 122, 97, -308, 110, 111, -10, -101, 245,
	-69, 416, -288, -269, -219, 89, 91, 84, 59, 415,
	418, 84, -187, 91, -285, 82, 16, 84, -301, 73,
	10, 9, 101, 89, -69, -315, -315, -70, 260, 507,
	-293, 59, -3, 84, -284, -1, -299, 231, 226, 229,
	29, -299, 223, -290, 416, -77, -3, 84, 549, 116,
	225, 28, 101, 262, 417, -285, -77, 82, -5, 418,
	-285, -101, 82, 84, -187, -4, 548, 84, 91, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 64, 66, 67, 697, 697, 0, 697, 0,
	0, 697, -2, -2, 697, 1104, 0, 697, 0, 0,
	-2, 630, 631, 0, 633, -2, 0, 0, 642, 1551,
	1551, 692, 0, 0, 0, 0, 0, 697, 968, 44,
	697, 0, 78, 79, 648, 649, 650, 59, 0, 1549,
	1, 3, 65, 69, 0, 0, 0, 52, 977, 0,
	72, 0, 0, 701, 0, 699, 1087, 697, 697, 0,
	109, 110, 0, 0, 0, -2, 113, -2, 137, 138,
	0, 142, 482, 442, 485, 440, 471, -2, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 335, 335, 0, 0, -2, 433, 433, 433,
	0, 0, 0, 468, 1089, 388, 335, 335, 0, 335,
	335, 335, 335, 0, 0, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	994, 141, 1105, 1102, 1103, 34, 35, 36, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 0, 1081,
	0, 560, 787, 0, 621, 621, 0, 621, 621, 621,
	621, 0, 0, 0, 572, 0, 0, 0, 0, 618,
	0, 0, 591, 593, 0, 618, 0, 624, 0, 605,
	621, 1552, 1552, 1552, 1072, 0, 615, 613, 627, 628,
	610, 611, 629, 632, 0, 637, 640, 1098, 1099, 0,
	655, 43, 1329, 647, 660, 661, 0, 693, 694, 39,
	873, 0, 802, 806, 817, 830, 831, 832, 833, 834,
	836, 837, 0, 0, 0, 0, 842, 843, 0, 0,
	0, 0, 0, 854, 0, 0, 0, 0, 0, 949,
	0, 918, 918, 890, 918, 920, 920, 0, 0, 0,
	958, 0, 0, 0, 0, 0, 0, 246, 247, 872,
	1061, 920, 920, 920, 920, -2, -2, 193, 194, 195,
	196, 197, 198, 199, 0, 189, 0, 250, 251, 248,
	249, 856, 857, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 1551, 0, 670, 0, 0, 977,
	0, 969, 968, 57, 0, 697, -2, 0, 0, 0,
	0, 41, 0, 46, 748, 71, 70, 1013, 0, 0,
	0, 53, 978, 61, 63, 979, 0, 702, 703, 0,
	726, 730, 0, 698, 0, 1088, 1087, 1087, 95, 0,
	1494, 1065, -2, -2, 0, 0, 1100, 1101, 1074, -2,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, -2, 0, 0, 151, 152, 0, 37, 361, 0,
	147, 0, 355, 307, 994, 0, 0, 0, 0, 0,
	697, 0, 1082, 132, 133, 139, 140, 335, 335, 0,
	141, 141, 449, 450, 451, 0, 0, -2, 359, 0,
	434, 0, 0, 349, 349, 353, 351, 352, 0, 0,
	0, 0, 0, 0, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 0, 336, 0,
	480, 481, 389, 0, 0, 0, 0, 460, 461, 0,
	0, 1090, 1091, 0, 0, 335, 335, 0, 0, 0,
	0, 335, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	1007, 0, 0, 0, -2, 0, 552, 0, 0, 0,
	1083, 1083, 559, 0, 561, 562, 0, 0, 563, 0,
	618, 618, 616, 617, 565, 566, 567, 568, 621, 0,
	0, 344, 345, 346, 618, 621, 0, 621, 621, 621,
	621, 618, 618, 618, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 1552, 1552, 624, 621, 0,
	601, 0, 602, 603, 606, 607, 1553, 1554, 1119, 608,
	609, 1073, 638, 641, 658, 656, 657, 659, 651, 652,
	653, 654, 0, 672, 673, 678, 0, 0, 0, 0,
	684, 685, 686, 0, 0, 689, 690, 691, 0, 0,
	0, 0, 800, 0, 0, 862, 863, 864, 865, 866,
	867, 868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 839, 840, 841, 844, 0, 0, 0,
	849, 850, 0, 0, 0, 0, 0, 707, 0, 950,
	0, 888, 0, 889, 891, 892, 0, 893, 0, 0,
	0, 710, 0, 0, 710, 710, 0, 0, 183, 184,
	185, 186, 200, 201, 202, 203, 204, 252, 958, 0,
	872, 0, 0, 40, 662, 663, 0, 770, 1093, 0,
	51, 60, 62, 977, 55, 977, 0, 712, 0, 0,
	-2, -2, 713, 719, 720, 721, 722, 723, 48, 1550,
	49, 0, 68, 0, 42, 0, 0, 0, 0, 319,
	1016, 0, 0, 970, 971, 974, 0, 727, 731, 0,
	733, 734, 0, 700, 93, 0, 786, 0, 0, 0,
	1494, 1071, 0, 97, 98, 0, 0, 0, 323, 1076,
	1077, 1078, -2, 342, 0, -2, 314, 258, 259, 260,
	307, 262, 307, 307, 307, 307, 319, 319, 319, 319,
	290, 291, 292, 293, 294, 0, 0, 277, 307, 307,
	307, 307, 297, 298, 299, 300, 301, 302, 303, 304,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 309,
	309, 309, 311, 311, 0, 38, 0, 327, 0, 974,
	0, 1007, 1085, 1095, 0, 0, 0, 1085, 115, 0,
	0, 483, 443, 472, 484, 0, 446, 447, -2, 0,
	0, 433, 0, 435, 0, 343, 0, -2, 0, 353,
	0, 349, 353, 350, 353, 341, 354, 464, 465, 466,
	0, 524, 756, 0, 0, 0, 0, 0, 530, 531,
	532, 0, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 473, 474, 475, 476, 477, 478, 479, 0,
	0, 435, 0, 469, 0, 390, 391, 0, 0, 394,
	395, 396, 397, 0, 0, 400, 401, 402, 773, 774,
	403, 427, 428, 429, 404, 405, 406, 407, 408, 409,
	410, 421, 422, 423, 424, 425, 426, 411, 412, 413,
	414, 415, 418, 0, 125, 998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	0, 0, 788, 1106, 1107, 622, 623, 0, 347, 348,
	621, 621, 569, 592, 0, 621, 573, 594, 574, 576,
	575, 577, 596, 597, 621, 580, 619, 620, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 598, 599,
	600, 625, 0, 0, 639, 643, 644, 645, 646, 0,
	0, 675, 89, 680, 681, 682, 683, 695, 688, 874,
	797, 798, 799, 801, 803, 0, 858, 860, 805, 807,
	869, 870, 871, 0, 0, 0, 0, 0, 811, 815,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 835, 933, 934, 935, 852, 853, 0, 724,
	0, 0, 0, 851, 0, 0, 0, 0, 708, 709,
	956, 953, 0, 0, 919, 921, 0, 0, 0, 0,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 0, 0, 0, 711, 959, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 665, 666, 668,
	0, 790, 0, 771, 0, 0, 1094, 671, 54, 56,
	717, 718, 0, 735, 714, 50, 45, 0, 0, 750,
	1014, 319, 1036, 0, 980, 981, 0, 973, 975, 976,
	73, 732, 728, 0, 0, 0, 785, 0, 738, 740,
	741, 742, 768, 0, 0, 0, 0, 91, 787, 1066,
	96, 0, 0, 101, 102, 1067, 1068, 1069, 1070, 0,
	502, -2, 385, 153, 155, 156, 157, 148, 367, 0,
	0, 317, 315, 316, 261, 319, 319, 284, 285, 286,
	287, 288, 289, 0, 0, 278, 279, 280, 281, 272,
	0, 273, 274, 275, 0, 276, 360, 0, 982, 328,
	329, 331, 335, 0, 0, 0, 356, 357, 0, 998,
	0, 0, 0, 1096, 1095, 1095, 1095, 0, 143, 144,
	145, 146, 141, 0, 0, 149, 437, 436, 0, 0,
	358, 0, 0, 353, 353, 338, 339, 467, 0, 0,
	526, 527, 528, 529, 0, 0, 0, 435, 437, 323,
	0, 392, 393, 398, 399, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 498, 499,
	500, 501, 995, 996, 997, 0, 0, 553, 0, 0,
	377, 87, 1084, 558, 618, 579, 595, 618, 571, 578,
	604, 635, 679, 0, 0, 0, 0, 687, 0, 804,
	859, 861, 808, 0, 812, 816, 0, 0, 0, 0,
	0, 0, 0, 855, 879, 880, 0, 0, 968, 0,
	954, 0, 0, 887, 922, 0, 0, 0, 875, 0,
	0, 710, 0, 923, 924, 925, 926, 927, 959, 664,
	667, 669, 746, 0, 0, 0, 0, 772, 1092, 0,
	961, 0, 0, 735, 795, 736, 0, 715, 47, 749,
	0, 1018, 1017, 1030, 1043, 320, 321, 322, 972, 0,
	1054, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	0, 0, 775, 0, 0, 778, 0, 0, 0, 0,
	769, 0, 0, 0, 0, -2, 0, 0, 85, 86,
	0, 0, 0, 99, 100, 0, 0, 106, 324, 325,
	134, 0, 141, 387, 154, 158, 163, 0, 0, 0,
	168, 0, 170, 0, 368, 0, 254, 256, 0, 0,
	161, 257, 318, 282, 283, 0, 305, 0, 0, 0,
	380, 111, 986, 985, 335, 335, 330, 0, 333, 0,
	1097, 308, 0, 124, 0, 0, 0, 0, 0, 130,
	0, 441, 0, 452, 453, 0, 523, 0, 327, 0,
	337, 340, 757, 0, 0, 454, 0, 437, 458, 459,
	470, 419, 420, 417, 0, 0, 1008, 1009, 0, 1012,
	116, 490, 492, 491, 495, 0, 0, 488, 0, 377,
	982, 0, 557, 378, 379, 621, 621, 674, 90, 0,
	677, 0, 0, 0, 809, 813, 725, 0, 0, 307,
	307, 939, 307, 311, 942, 307, 944, 307, 947, 0,
	0, 0, 0, 951, 886, 957, 0, 0, 0, 0,
	876, 877, 0, 960, 0, 0, 0, 0, 0, 1079,
	1080, 962, 963, 795, 964, 0, 737, 716, 751, 1036,
	0, 1029, 0, -2, 1038, 0, 0, 0, 1044, 729,
	76, 0, 1054, 1062, 0, 1045, 1056, 1058, 0, 0,
	0, 1050, 0, 795, 739, 764, 766, 0, 761, 776,
	777, 779, 0, 781, 0, 783, 784, 748, 744, 745,
	0, 93, 0, 795, 795, 92, 0, 789, 103, 104,
	105, 511, 386, 164, 0, 166, 181, 182, 187, 188,
	190, 0, 0, 0, 169, 171, 172, 253, 255, 0,
	0, 319, 0, 319, 0, 312, 0, 369, 381, 0,
	983, 984, 0, 0, 332, 334, 0, 1086, 126, 0,
	0, 0, 0, 150, 438, 0, 326, 0, 0, 548,
	545, 455, 0, 457, 748, 999, 1000, 1001, 0, 1011,
	119, 0, 0, 0, 0, 554, 555, 556, 88, 564,
	570, 676, 696, 810, 814, 0, 846, 936, 319, 940,
	941, 943, 945, 946, 948, 847, 848, 0, 882, 0,
	884, 977, 0, 955, 0, 0, 896, 878, 0, 0,
	0, 770, 58, 964, 966, 0, 796, 1023, 1021, 1021,
	1031, 1032, 0, 0, 1039, 0, 0, 0, 0, 77,
	0, 0, 0, 1059, 0, 0, 0, 0, 94, 968,
	758, 765, 0, 0, 759, 0, 760, 780, 782, 743,
	-2, 795, 795, 83, 84, 0, 0, 0, 512, 515,
	516, 0, 191, 192, 167, 0, 0, 295, 306, 296,
	0, 0, 382, 987, 988, 989, 990, 991, 992, 993,
	748, 127, 128, 129, 444, 0, 0, 525, 0, 533,
	0, 0, 0, 0, 1010, 489, 0, 117, 118, 0,
	0, 494, 928, 937, 938, 0, 0, 0, 952, 0,
	0, 0, 792, 752, 753, 0, 0, 790, 966, 75,
	0, 0, 1026, 0, 1019, 1022, 1020, 1033, 0, 0,
	1040, 0, 1042, 0, 1063, 1064, 1057, 0, 1049, 1052,
	1048, 1051, 977, 762, 0, 767, 968, 82, 0, 513,
	519, 0, 0, 165, 0, 175, 310, 313, 0, 0,
	362, 549, 546, 547, 456, 0, 120, 121, 0, 0,
	0, 0, 0, 0, 881, 883, 885, 894, 895, 0,
	791, 793, 794, 747, 74, 967, 965, 1015, 0, 1024,
	1025, 1034, 1035, 1041, 0, 1047, 0, 80, 0, 977,
	0, 0, 0, 506, 0, 0, 0, 363, 367, 0,
	0, 1002, 0, 0, 0, 496, 845, 0, 0, 0,
	754, 755, 1027, 1028, 1055, 1053, 763, 81, 0, 0,
	0, 509, 0, 520, 517, 0, 364, 365, 0, 159,
	176, 177, 0, 0, 180, 173, 174, 1002, 0, 0,
	486, 1004, 122, 123, 430, 431, 432, 116, 929, 0,
	932, 519, 0, 514, 505, 0, 511, 518, 366, 0,
	0, 0, 178, 179, 112, 550, 551, 0, 1005, 1006,
	119, 930, 506, 519, 0, 0, 370, 372, 373, 0,
	0, 371, 0, 493, 0, 509, 506, 510, 0, 513,
	374, 375, 376, 1003, 0, 503, 509, 0, 0, 931,
	504, 0, 0, 521, 0, 507, 0, 521, 522, 508,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 123, 3, 3, 3, 149, 141, 3,
	82, 84, 146, 144, 83, 145, 198, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 550,
	131, 130, 132, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 120, 121, 122, 124, 125, 126,
	127, 128, 129, 133, 134, 135, 136, 137, 138, 139,
	140, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:462
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:472
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:504
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:518
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:523
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:533
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:539
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:545
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:549
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:554
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:558
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:564
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:568
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:574
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:580
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:584
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:588
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:611
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:617
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:622
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:648
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:727
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:747
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:759
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:771
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:775
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:809
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:819
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:829
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:842
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:864
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:868
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:874
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:878
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:882
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:888
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:892
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:896
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:900
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:906
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:910
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:958
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:973
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:978
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:984
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1001
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1008
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1015
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1020
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1025
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1030
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1037
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1044
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1055
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1072
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1076
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1104
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1110
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1121
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1125
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1131
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1141
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1146
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1155
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1174
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1180
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1188
		{
			yyVAL.str = ""
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.str = ""
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1201
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1205
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1211
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1217
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1222
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1251
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1258
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1262
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1271
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1276
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1293
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1300
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1307
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1311
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1315
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1319
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1330
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1341
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1347
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1351
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1355
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1359
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1367
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.str = Armscii8Str
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.str = ASCIIStr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = Big5Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.str = UBinaryStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.str = Cp1250Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = Cp1251Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = Cp1256Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = Cp1257Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = Cp850Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = Cp852Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = Cp866Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = Cp932Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = Dec8Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = EucjpmsStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = EuckrStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = Gb18030Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = Gb2312Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = GbkStr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = Geostd8Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = GreekStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = HebrewStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = Hp8Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = Keybcs2Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = Koi8rStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Koi8uStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Latin1Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Latin2Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Latin5Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Latin7Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = MacceStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = MacromanStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = SjisStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Swe7Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Tis620Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Ucs2Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = UjisStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Utf16Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Utf16leStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Utf32Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Utf8Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Utf8mb4Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1594
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1598
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1602
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1606
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1837
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1842
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1846
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1864
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1880
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1885
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1889
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = ""
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = ""
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1926
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1935
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1941
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1951
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1955
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1960
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1964
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1980
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1984
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1988
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1992
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1996
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = yyDollar[2].str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = "key"
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = yyDollar[1].str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2064
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2074
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2080
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2084
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2090
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2094
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2100
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2106
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2110
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2114
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2118
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2127
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2133
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2139
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2145
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2151
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2155
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2159
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2163
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2167
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2189
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2202
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2208
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2222
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2232
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2236
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2240
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2244
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2248
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2252
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2256
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2260
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2264
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2268
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2272
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2276
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2280
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2284
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2288
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2292
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2296
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2300
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2304
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2308
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2312
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2316
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2320
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2324
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2328
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2332
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2404
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2413
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2417
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2421
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2429
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2435
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2443
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2449
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2453
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2457
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2461
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2465
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2469
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2473
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2477
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2481
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2485
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2489
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2493
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2497
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2501
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2505
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2509
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2513
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2517
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2521
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2525
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2529
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2533
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2537
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2543
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2553
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2557
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2561
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2597
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2604
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2617
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2621
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2628
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2665
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2692
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2743
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2755
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2768
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2783
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2792
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2807
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2821
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2841
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2845
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2869
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2873
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2877
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2881
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2885
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2889
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2893
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2897
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2901
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2905
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2962
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2966
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2973
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2983
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2987
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2993
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2999
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3003
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 555:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3009
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3022
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3032
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3036
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3264
		{
			yyVAL.str = ""
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.str = "extended "
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3294
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3302
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3312
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3316
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3326
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3332
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3381
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3386
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3404
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3408
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3412
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3416
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3420
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3424
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.str = yyDollar[1].str
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3485
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3501
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3511
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3517
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3521
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3525
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3529
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3573
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3632
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3636
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3654
		{
			setAllowComments(yylex, true)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3664
		{
			yyVAL.strs = nil
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3668
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = SQLCacheStr
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3717
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3722
		{
			yyVAL.strs = nil
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3730
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = DistinctStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = DistinctStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = StraightJoinHint
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3774
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3784
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3788
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3792
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3796
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3821
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3825
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3831
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3837
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3851
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3855
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3859
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3865
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3871
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3875
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3884
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3890
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3900
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3904
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3912
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3918
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3922
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3935
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3939
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3943
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3947
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3955
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3975
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3996
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4000
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4004
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4010
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4016
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4020
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4024
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4028
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4034
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4038
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4077
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4081
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4085
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4089
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4098
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4117
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4121
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4125
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4136
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4140
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4144
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4154
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4158
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4162
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4166
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4196
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4200
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4322
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4326
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4359
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4363
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4370
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4374
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4378
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4382
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4388
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4392
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4396
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4400
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4404
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4408
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4412
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4422
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4426
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4433
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4439
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4532
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4536
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4561
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4565
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4569
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4573
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4577
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4581
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4585
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4589
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4593
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4597
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4601
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4607
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4611
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4615
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4619
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4623
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4627
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4631
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4635
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4639
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4657
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4689
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4693
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4697
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4701
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4705
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4725
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4729
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4733
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4737
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4741
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4745
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4751
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4755
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4759
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4763
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4767
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4771
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4775
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4784
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = string("")
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4799
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4809
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4824
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4828
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4832
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4861
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4879
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4885
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4891
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4901
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4906
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4910
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4914
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4923
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4929
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4933
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4937
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4946
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4950
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4954
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4958
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4965
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4969
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4973
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4977
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4983
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4987
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4991
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4996
		{
			yyVAL.str = ""
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = ""
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5032
		{
			yyVAL.str = ""
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5041
		{
			yyVAL.str = "cascaded"
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = ""
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5082
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5086
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5092
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5096
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5100
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5105
		{
			yyVAL.str = ""
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.str = ""
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = " header"
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5131
		{
			yyVAL.str = " manifest on"
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5135
		{
			yyVAL.str = " manifest off"
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5140
		{
			yyVAL.str = ""
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5144
		{
			yyVAL.str = " overwrite on"
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5148
		{
			yyVAL.str = " overwrite off"
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5159
		{
			yyVAL.str = ""
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5173
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5188
		{
			yyVAL.str = ""
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5192
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = " optionally"
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5238
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5242
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5246
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5250
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5254
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5260
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5264
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5272
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5281
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5287
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5291
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5297
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5301
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5307
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5322
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5326
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5332
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5338
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5342
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5348
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5352
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5356
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5360
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5364
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = "charset"
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5399
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5404
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5419
		{
			yyVAL.empty = struct{}{}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.empty = struct{}{}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.empty = struct{}{}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5427
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5436
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5443
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5447
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5480
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5484
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5966
		{
			decNesting(yylex)
		}
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5971
		{
			skipToEnd(yylex)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5976
		{
			skipToEnd(yylex)
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5980
		{
			skipToEnd(yylex)
		}
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
