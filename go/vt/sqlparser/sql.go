// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const MATCH = 57770
const AGAINST = 57771
const BOOLEAN = 57772
const LANGUAGE = 57773
const WITH = 57774
const QUERY = 57775
const EXPANSION = 57776
const WITHOUT = 57777
const VALIDATION = 57778
const UNUSED = 57779
const ARRAY = 57780
const CUME_DIST = 57781
const DESCRIPTION = 57782
const DENSE_RANK = 57783
const EMPTY = 57784
const EXCEPT = 57785
const FIRST_VALUE = 57786
const GROUPING = 57787
const GROUPS = 57788
const JSON_TABLE = 57789
const LAG = 57790
const LAST_VALUE = 57791
const LATERAL = 57792
const LEAD = 57793
const NTH_VALUE = 57794
const NTILE = 57795
const OF = 57796
const OVER = 57797
const PERCENT_RANK = 57798
const RANK = 57799
const RECURSIVE = 57800
const ROW_NUMBER = 57801
const SYSTEM = 57802
const WINDOW = 57803
const ACTIVE = 57804
const ADMIN = 57805
const BUCKETS = 57806
const CLONE = 57807
const COMPONENT = 57808
const DEFINITION = 57809
const ENFORCED = 57810
const EXCLUDE = 57811
const FOLLOWING = 57812
const GEOMCOLLECTION = 57813
const GET_MASTER_PUBLIC_KEY = 57814
const HISTOGRAM = 57815
const HISTORY = 57816
const INACTIVE = 57817
const INVISIBLE = 57818
const LOCKED = 57819
const MASTER_COMPRESSION_ALGORITHMS = 57820
const MASTER_PUBLIC_KEY_PATH = 57821
const MASTER_TLS_CIPHERSUITES = 57822
const MASTER_ZSTD_COMPRESSION_LEVEL = 57823
const NESTED = 57824
const NETWORK_NAMESPACE = 57825
const NOWAIT = 57826
const NULLS = 57827
const OJ = 57828
const OLD = 57829
const OPTIONAL = 57830
const ORDINALITY = 57831
const ORGANIZATION = 57832
const OTHERS = 57833
const PATH = 57834
const PERSIST = 57835
const PERSIST_ONLY = 57836
const PRECEDING = 57837
const PRIVILEGE_CHECKS_USER = 57838
const PROCESS = 57839
const RANDOM = 57840
const REFERENCE = 57841
const REQUIRE_ROW_FORMAT = 57842
const RESOURCE = 57843
const RESPECT = 57844
const RESTART = 57845
const RETAIN = 57846
const REUSE = 57847
const ROLE = 57848
const SECONDARY = 57849
const SECONDARY_ENGINE = 57850
const SECONDARY_LOAD = 57851
const SECONDARY_UNLOAD = 57852
const SKIP = 57853
const SRID = 57854
const THREAD_PRIORITY = 57855
const TIES = 57856
const UNBOUNDED = 57857
const VCPU = 57858
const VISIBLE = 57859
const FORMAT = 57860
const TREE = 57861
const VITESS = 57862
const TRADITIONAL = 57863
const LOCAL = 57864
const LOW_PRIORITY = 57865
const NO_WRITE_TO_BINLOG = 57866
const LOGS = 57867
const ERROR = 57868
const GENERAL = 57869
const HOSTS = 57870
const OPTIMIZER_COSTS = 57871
const USER_RESOURCES = 57872
const SLOW = 57873
const CHANNEL = 57874
const RELAY = 57875
const EXPORT = 57876
const AVG_ROW_LENGTH = 57877
const CONNECTION = 57878
const CHECKSUM = 57879
const DELAY_KEY_WRITE = 57880
const ENCRYPTION = 57881
const ENGINE = 57882
const INSERT_METHOD = 57883
const MAX_ROWS = 57884
const MIN_ROWS = 57885
const PACK_KEYS = 57886
const PASSWORD = 57887
const FIXED = 57888
const DYNAMIC = 57889
const COMPRESSED = 57890
const REDUNDANT = 57891
const COMPACT = 57892
const ROW_FORMAT = 57893
const STATS_AUTO_RECALC = 57894
const STATS_PERSISTENT = 57895
const STATS_SAMPLE_PAGES = 57896
const STORAGE = 57897
const MEMORY = 57898
const DISK = 57899
const PARTITIONS = 57900
const LINEAR = 57901
const RANGE = 57902
const LIST = 57903
const SUBPARTITION = 57904
const SUBPARTITIONS = 57905
const HASH = 57906

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	582, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 455,
	-1, 55,
	35, 653,
	231, 653,
	242, 653,
	277, 667,
	278, 667,
	-2, 655,
	-1, 60,
	233, 680,
	-2, 678,
	-1, 114,
	230, 1184,
	-2, 119,
	-1, 116,
	1, 146,
	582, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 449,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 464,
	-1, 649,
	215, 1205,
	-2, 1201,
	-1, 650,
	215, 1206,
	-2, 1202,
	-1, 724,
	59, 748,
	-2, 763,
	-1, 761,
	147, 1590,
	-2, 112,
	-1, 762,
	147, 1449,
	-2, 113,
	-1, 768,
	147, 1519,
	-2, 1178,
	-1, 916,
	147, 1380,
	-2, 1175,
	-1, 954,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1031,
	1, 503,
	582, 503,
	-2, 151,
	-1, 1254,
	59, 749,
	-2, 768,
	-1, 1255,
	59, 750,
	-2, 769,
	-1, 1308,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1385,
	132, 358,
	236, 358,
	-2, 449,
	-1, 1394,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1679,
	215, 1210,
	-2, 1204,
	-1, 1762,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1769,
	25, 170,
	-2, 172,
	-1, 1987,
	86, 39,
	-2, 805,
	-1, 2039,
	77, 94,
	86, 94,
	-2, 825,
	-1, 2227,
	49, 1146,
	-2, 1140,
	-1, 2408,
	86, 39,
	-2, 806,
	-1, 2446,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 797,
	-1, 2709,
	22, 1521,
	32, 1521,
	172, 1521,
	253, 1521,
	307, 1521,
	308, 1521,
	309, 1521,
	310, 1521,
	311, 1521,
	312, 1521,
	313, 1521,
	315, 1521,
	316, 1521,
	317, 1521,
	318, 1521,
	319, 1521,
	320, 1521,
	321, 1521,
	322, 1521,
	323, 1521,
	324, 1521,
	325, 1521,
	326, 1521,
	328, 1521,
	330, 1521,
	331, 1521,
	332, 1521,
	333, 1521,
	334, 1521,
	335, 1521,
	336, 1521,
	337, 1521,
	338, 1521,
	341, 1521,
	342, 1521,
	343, 1521,
	344, 1521,
	345, 1521,
	346, 1521,
	347, 1521,
	348, 1521,
	349, 1521,
	447, 1521,
	-2, 543,
}

const yyPrivate = 57344

const yyLast = 39861

var yyAct = [...]int{
	649, 658, 2757, 2775, 2196, 2774, 2651, 2751, 1759, 2707,
	2507, 2711, 1311, 2350, 2691, 651, 2280, 2287, 1693, 2321,
	1094, 3, 1713, 2610, 2238, 1956, 96, 739, 2537, 1233,
	717, 2289, 2333, 2627, 2241, 1975, 1822, 642, 37, 1269,
	2332, 581, 585, 2239, 2242, 2542, 2010, 2411, 2417, 2194,
	2195, 182, 652, 640, 182, 641, 546, 182, 607, 1717,
	2335, 1732, 561, 2236, 182, 2033, 643, 2437, 2002, 2228,
	2403, 1792, 182, 579, 2100, 1043, 577, 1812, 1797, 2071,
	2072, 1748, 2073, 2141, 1365, 984, 154, 182, 36, 2022,
	1256, 1736, 766, 1994, 1737, 1977, 2158, 573, 1673, 919,
	140, 1663, 38, 719, 740, 1593, 1864, 1831, 1811, 561,
	1603, 962, 561, 182, 561, 721, 2065, 725, 1799, 1551,
	944, 1300, 1278, 1392, 949, 2041, 1739, 1695, 91, 763,
	1408, 1236, 1179, 1615, 590, 742, 1570, 1072, 1115, 1500,
	1496, 923, 95, 1809, 926, 952, 1482, 955, 950, 1724,
	1788, 927, 951, 1299, 1399, 731, 1086, 1297, 1283, 1659,
	1092, 1718, 1505, 157, 1360, 117, 98, 118, 726, 1384,
	123, 753, 124, 729, 1027, 578, 85, 568, 1182, 2660,
	2093, 89, 727, 1686, 2758, 2318, 1186, 1824, 1825, 1826,
	1824, 97, 2091, 76, 1862, 184, 185, 186, 2120, 2119,
	2149, 728, 77, 8, 7, 6, 1468, 2150, 2785, 1690,
	1691, 119, 2784, 747, 2778, 752, 1558, 518, 125, 733,
	90, 184, 185, 186, 1557, 1556, 1555, 1554, 986, 1553,
	1536, 571, 989, 572, 1973, 2725, 920, 1545, 550, 966,
	1116, 1000, 1001, 569, 1004, 1005, 1006, 1007, 2224, 935,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 997, 760, 102, 718, 2004,
	767, 720, 930, 965, 741, 734, 2771, 2735, 1676, 547,
	119, 942, 941, 2748, 940, 2304, 2472, 1563, 2606, 2605,
	988, 987, 990, 991, 992, 2770, 2785, 2500, 2777, 1804,
	2501, 2701, 78, 78, 2761, 78, 2671, 1902, 104, 105,
	178, 108, 1116, 2746, 114, 2508, 2692, 179, 1850, 1002,
	513, 2700, 2670, 1802, 2157, 534, 2013, 2384, 1974, 1374,
	2277, 2278, 78, 2276, 120, 80, 142, 532, 1148, 2148,
	713, 714, 715, 716, 119, 1126, 724, 162, 1301, 2128,
	1302, 2014, 2555, 2127, 1754, 1755, 1899, 1692, 1753, 2615,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1156, 1158,
	1159, 1900, 1062, 1089, 755, 756, 711, 529, 152, 87,
	87, 2050, 87, 141, 2049, 710, 542, 2051, 1030, 1050,
	1050, 2094, 2652, 2062, 1051, 1051, 1772, 1771, 1079, 2414,
	1081, 539, 2184, 1049, 159, 1048, 160, 1067, 1068, 87,
	550, 550, 550, 550, 2375, 2373, 1063, 1126, 1056, 2352,
	559, 1544, 129, 130, 151, 150, 177, 563, 557, 1026,
	1876, 1873, 1875, 1874, 551, 1546, 1547, 1548, 1078, 1080,
	1122, 1488, 1240, 1114, 2101, 1832, 939, 2345, 1036, 1037,
	2123, 1003, 943, 2760, 1878, 2346, 1879, 1458, 1880, 1870,
	1865, 1483, 1801, 1065, 1066, 1083, 519, 1071, 521, 535,
	1032, 553, 2136, 552, 525, 1088, 523, 527, 536, 528,
	1039, 522, 1881, 533, 2354, 1009, 524, 537, 538, 540,
	543, 544, 545, 541, 2726, 531, 554, 1064, 1069, 1057,
	2353, 1459, 1008, 1460, 937, 1867, 2493, 973, 1070, 971,
	2329, 1835, 1122, 182, 1871, 182, 945, 1733, 182, 87,
	946, 946, 146, 127, 153, 134, 126, 1243, 147, 148,
	1869, 1076, 982, 981, 163, 1077, 934, 939, 1025, 936,
	980, 979, 978, 168, 135, 1082, 2293, 561, 1096, 561,
	561, 1160, 977, 976, 2185, 975, 970, 1377, 138, 136,
	131, 132, 133, 137, 561, 561, 983, 1900, 1075, 924,
	128, 1160, 1868, 924, 958, 2744, 2765, 922, 924, 139,
	957, 1060, 1497, 964, 754, 1398, 1810, 1108, 2137, 1856,
	1493, 1102, 993, 2311, 2122, 1046, 1372, 1052, 1053, 1054,
	1055, 1371, 1029, 37, 1370, 2755, 551, 551, 551, 551,
	1121, 1118, 1119, 1120, 1125, 1127, 1124, 938, 1123, 1090,
	1091, 2328, 1978, 1980, 2112, 1117, 1494, 2659, 2092, 1719,
	1720, 2303, 1368, 939, 2153, 931, 517, 512, 2135, 1852,
	2648, 2134, 933, 932, 1489, 2453, 555, 1161, 1162, 1760,
	974, 2616, 972, 2433, 1914, 2159, 155, 2046, 2009, 1965,
	1163, 1164, 1165, 1166, 548, 2140, 2095, 2125, 1160, 1685,
	1171, 1803, 1174, 999, 1287, 1097, 1084, 1212, 2415, 549,
	964, 963, 1121, 1118, 1119, 1120, 1125, 1127, 1124, 1397,
	1123, 937, 1041, 1159, 1028, 2275, 2669, 1117, 1231, 2602,
	178, 1226, 1487, 1045, 111, 1073, 736, 116, 938, 1098,
	1099, 182, 1087, 2665, 2489, 561, 561, 2427, 184, 185,
	186, 985, 1595, 1506, 120, 2143, 2776, 1167, 1866, 1490,
	2142, 182, 1303, 149, 1901, 1112, 2161, 162, 1470, 1469,
	1471, 1472, 1473, 86, 86, 1244, 86, 719, 1249, 1232,
	561, 1247, 143, 81, 182, 144, 1246, 2177, 1616, 561,
	1250, 2084, 1131, 1038, 2551, 561, 721, 77, 2464, 1111,
	1109, 1110, 964, 86, 112, 1130, 1131, 1059, 963, 763,
	2463, 964, 1979, 967, 957, 1184, 1035, 1185, 1061, 1616,
	1047, 1928, 1839, 968, 159, 1407, 160, 1188, 2171, 2170,
	2169, 2163, 1596, 2167, 938, 2162, 1406, 2160, 1396, 1849,
	1847, 1232, 2165, 969, 2740, 973, 177, 2753, 2454, 971,
	2754, 2164, 2752, 2143, 2766, 2677, 1248, 1851, 2142, 1288,
	95, 1218, 1219, 1220, 1221, 1222, 1575, 1237, 2166, 2168,
	2768, 2641, 2597, 1044, 1484, 1298, 1485, 1645, 1074, 1486,
	1576, 1577, 1574, 2523, 98, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 1507, 2678, 2717, 2522,
	963, 173, 174, 175, 176, 2741, 957, 960, 961, 963,
	924, 998, 2715, 2642, 954, 958, 964, 1234, 1031, 1844,
	2471, 2719, 2720, 1844, 2470, 1245, 1906, 1907, 1908, 2291,
	2292, 1565, 1567, 1568, 1268, 953, 2716, 87, 2767, 1477,
	1265, 1475, 718, 1154, 1155, 1157, 1156, 1158, 1159, 182,
	767, 1573, 720, 1361, 163, 1566, 1848, 1293, 1294, 1465,
	1846, 2319, 1369, 168, 1637, 1626, 1627, 1628, 1629, 1639,
	1630, 1631, 1632, 1644, 1640, 1633, 1634, 1641, 1642, 1643,
	1635, 1636, 1638, 561, 758, 1394, 964, 1263, 663, 664,
	665, 2309, 2069, 1403, 1620, 2068, 1807, 1405, 1621, 1478,
	561, 561, 1476, 561, 1474, 561, 561, 1463, 561, 561,
	561, 561, 561, 561, 963, 1462, 1461, 1452, 1446, 967,
	957, 1251, 1464, 561, 1443, 1442, 1417, 182, 1441, 968,
	2645, 1272, 1132, 2290, 2644, 184, 185, 186, 1404, 2461,
	184, 185, 186, 182, 2053, 2293, 1152, 1153, 1154, 1155,
	1157, 1156, 1158, 1159, 561, 1132, 182, 2643, 1375, 1376,
	2550, 2548, 2519, 1436, 1437, 2468, 2460, 1495, 2078, 2066,
	561, 1228, 182, 184, 185, 186, 155, 1820, 1860, 1383,
	1273, 1132, 1390, 1859, 963, 184, 185, 186, 182, 1818,
	957, 960, 961, 1716, 924, 182, 1698, 1537, 954, 958,
	1503, 1132, 1400, 1400, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 561, 2626, 1263, 1402, 1466, 1444, 1445,
	1263, 1453, 1438, 1449, 1450, 1451, 1448, 561, 561, 1148,
	1447, 1410, 1274, 1411, 1367, 1413, 1415, 1085, 2349, 1419,
	1421, 1423, 1425, 1427, 1101, 182, 1401, 1380, 1381, 1393,
	1379, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1156,
	1158, 1159, 1510, 1129, 1502, 1130, 1131, 2000, 2759, 1514,
	1454, 1516, 1517, 1518, 1519, 184, 185, 186, 1523, 1132,
	2623, 92, 2622, 1132, 2742, 1439, 1129, 101, 1130, 1131,
	1535, 1594, 93, 1600, 1600, 2179, 1597, 1601, 100, 2591,
	99, 2381, 94, 1132, 1606, 561, 2590, 1598, 1598, 1498,
	2731, 1263, 1129, 1945, 1130, 1131, 1508, 1509, 2000, 2698,
	561, 561, 2000, 2685, 2506, 119, 2011, 941, 2102, 940,
	1513, 2011, 1129, 1373, 1130, 1131, 1132, 1520, 1521, 1522,
	1571, 1132, 1569, 2000, 2681, 1132, 1263, 2673, 1263, 2081,
	1579, 1512, 2000, 2661, 1617, 1924, 1768, 1132, 2498, 2658,
	1263, 1660, 2656, 1677, 1725, 1726, 1263, 1263, 2426, 182,
	1534, 2398, 1263, 1533, 561, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 1263, 1541, 1542, 2000,
	2598, 173, 174, 175, 176, 2498, 1263, 2019, 182, 1660,
	2270, 561, 2426, 2283, 2428, 1703, 1128, 1704, 1572, 1900,
	1129, 182, 1130, 1131, 1129, 561, 1130, 1131, 2379, 1263,
	182, 92, 182, 2237, 182, 182, 561, 1923, 94, 561,
	1919, 2664, 93, 2426, 1129, 1679, 1130, 1131, 1677, 1918,
	561, 2000, 2496, 1681, 1682, 2000, 763, 2019, 2284, 763,
	1769, 1578, 2398, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 95, 1129, 2299, 1130,
	1131, 1845, 1129, 2286, 1130, 1131, 1129, 1709, 1130, 1131,
	2212, 1132, 1678, 1844, 1263, 95, 1263, 2281, 1129, 1735,
	1130, 1131, 2431, 1263, 1996, 561, 2301, 2300, 1276, 2297,
	2298, 1813, 1814, 1815, 2291, 2292, 1817, 1819, 1132, 94,
	1679, 2282, 1778, 1779, 1780, 1781, 2297, 2296, 2019, 1263,
	561, 1915, 1263, 1132, 733, 1763, 561, 1403, 1844, 1697,
	1403, 1773, 1403, 1774, 1775, 1776, 1777, 1752, 1843, 1764,
	1900, 2121, 100, 2288, 1746, 1364, 2106, 2098, 2099, 1784,
	1785, 1786, 1787, 1711, 1833, 2000, 1999, 1730, 1132, 1128,
	1263, 1794, 2018, 1275, 1767, 1132, 1915, 1915, 561, 1950,
	1594, 1800, 1148, 1728, 2152, 1594, 1594, 1602, 1934, 1937,
	1751, 1364, 1363, 1750, 1608, 1609, 2042, 767, 1766, 1132,
	767, 1263, 1765, 1933, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1157, 1156, 1158, 1159, 1957, 1309, 1308, 2290, 2473,
	1915, 182, 1129, 1844, 1130, 1131, 2019, 1827, 182, 1830,
	2293, 1723, 1680, 182, 182, 1683, 1684, 182, 1267, 182,
	966, 650, 1795, 1688, 1549, 1132, 182, 1790, 1791, 1129,
	1400, 1130, 1131, 182, 1808, 1806, 1805, 1816, 2595, 2043,
	1838, 1492, 1295, 1841, 1129, 1842, 1130, 1131, 2045, 2474,
	2475, 2476, 1708, 948, 965, 1795, 947, 1853, 2723, 182,
	1837, 1836, 2490, 2688, 561, 1855, 1854, 87, 2322, 2612,
	1857, 1858, 183, 1840, 1270, 183, 1432, 2588, 183, 1129,
	723, 1130, 1131, 562, 2562, 183, 1129, 2488, 1130, 1131,
	2485, 2466, 2390, 183, 1150, 1151, 1152, 1153, 1154, 1155,
	1157, 1156, 1158, 1159, 1891, 1892, 2351, 2448, 183, 1894,
	1129, 2389, 1130, 1131, 1132, 2285, 1366, 1793, 1895, 1148,
	1863, 1132, 1144, 2347, 1145, 1132, 1433, 1434, 1435, 2324,
	562, 2320, 2107, 562, 183, 562, 1132, 1789, 1146, 1147,
	1143, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1156,
	1158, 1159, 1148, 1132, 1913, 1884, 1129, 87, 1130, 1131,
	1132, 1571, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1134,
	1911, 2042, 1783, 1782, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1157, 1156, 1158, 1159, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1157, 1156, 1158, 1159, 2400, 1480, 1132, 1395,
	1391, 1362, 2075, 2396, 113, 1030, 2074, 2387, 1898, 182,
	2438, 2439, 2613, 2477, 1804, 1701, 2783, 182, 2386, 2781,
	2737, 1600, 561, 1539, 1984, 2444, 1971, 101, 561, 1572,
	1429, 1909, 2443, 2256, 2043, 1598, 2070, 2712, 100, 561,
	99, 1132, 1960, 1900, 1988, 1129, 2441, 1130, 1131, 94,
	2316, 2315, 1129, 2075, 1130, 1131, 1129, 2314, 1130, 1131,
	2478, 2479, 182, 2237, 1132, 2085, 182, 1129, 1927, 1130,
	1131, 1910, 1885, 1912, 2015, 2728, 2255, 1430, 1431, 1271,
	1959, 2052, 1132, 2259, 1129, 1540, 1130, 1131, 2260, 2699,
	37, 1129, 1132, 1130, 1131, 2257, 2001, 1132, 1679, 2035,
	2258, 2261, 1715, 2028, 2029, 1943, 1707, 1263, 2024, 2027,
	2028, 2029, 2025, 1917, 2026, 2030, 2432, 2640, 2217, 1132,
	1997, 2216, 2104, 1958, 2541, 561, 1132, 2543, 2422, 1129,
	182, 1130, 1131, 2229, 2231, 1237, 1132, 182, 1491, 2419,
	1972, 2226, 2232, 737, 1982, 1678, 1955, 2418, 709, 561,
	2034, 738, 2295, 2060, 2063, 2064, 561, 1993, 2079, 1612,
	1403, 1403, 995, 994, 1954, 561, 2008, 1998, 1100, 2056,
	92, 2097, 1129, 1613, 1130, 1131, 92, 2118, 2361, 1953,
	2074, 93, 2146, 94, 2117, 2040, 2114, 93, 182, 182,
	182, 182, 182, 2044, 2047, 1129, 1800, 1130, 1131, 2113,
	120, 1951, 2054, 2424, 94, 182, 182, 2077, 1947, 2057,
	1925, 101, 2532, 1129, 2531, 1130, 1131, 2763, 1946, 2312,
	2067, 182, 100, 1129, 99, 1130, 1131, 1888, 1129, 1877,
	1130, 1131, 2657, 94, 2608, 2082, 2404, 2076, 1725, 1726,
	1594, 2294, 2086, 2087, 2088, 2032, 1712, 1904, 1383, 2116,
	1129, 2632, 1130, 1131, 745, 746, 99, 1129, 2215, 1130,
	1131, 2631, 2530, 1261, 1257, 2549, 2214, 1129, 2547, 1130,
	1131, 2546, 719, 1962, 1963, 2539, 2176, 1600, 1258, 1600,
	2486, 2115, 1600, 2108, 2109, 2423, 561, 101, 2421, 2325,
	1828, 1598, 1378, 1598, 744, 100, 1598, 2412, 100, 2538,
	99, 101, 561, 1705, 1706, 1260, 2206, 1259, 2155, 1996,
	2154, 2011, 100, 2739, 2738, 2739, 2186, 182, 2197, 1935,
	2197, 561, 1699, 2197, 2138, 1289, 1280, 2199, 106, 107,
	561, 2202, 2646, 2459, 183, 2172, 183, 561, 561, 183,
	182, 182, 182, 182, 182, 2173, 2156, 735, 2144, 103,
	2206, 2145, 182, 88, 1, 2714, 530, 182, 2234, 1689,
	182, 2219, 182, 2249, 1235, 182, 182, 182, 562, 2710,
	562, 562, 2190, 1467, 725, 633, 2240, 1457, 2269, 2509,
	1661, 2240, 2220, 2205, 1662, 562, 562, 2609, 2103, 1834,
	2484, 1798, 2207, 956, 1250, 2035, 145, 1761, 1762, 2694,
	2310, 2243, 110, 917, 109, 959, 182, 2218, 2221, 1058,
	2208, 2209, 2210, 1829, 2499, 2061, 1770, 1315, 1313, 561,
	1314, 1312, 1317, 1316, 1936, 726, 1543, 2271, 561, 558,
	2272, 2250, 2211, 182, 2253, 2251, 2252, 560, 2254, 727,
	2262, 2031, 180, 182, 1304, 2266, 2267, 2273, 1281, 996,
	2331, 520, 2302, 1861, 526, 1172, 1538, 2213, 182, 1502,
	95, 182, 2279, 2048, 2327, 764, 757, 1700, 2248, 1986,
	2245, 2362, 2416, 2225, 2306, 2305, 2227, 2003, 2230, 2223,
	2307, 2308, 2639, 2540, 765, 1261, 1257, 921, 2339, 928,
	2338, 2024, 2027, 2028, 2029, 2025, 2686, 2026, 2030, 2058,
	1258, 2438, 2439, 1277, 1800, 2330, 1926, 1614, 1740, 1564,
	2342, 583, 582, 580, 1989, 2012, 1135, 653, 2326, 1976,
	1290, 2023, 2021, 2020, 1886, 1254, 1255, 1260, 1747, 1259,
	2440, 2436, 183, 561, 182, 2773, 562, 562, 2395, 2357,
	2359, 2360, 2356, 2706, 1742, 1738, 1995, 2365, 591, 2364,
	584, 576, 183, 2456, 2337, 2371, 2124, 2348, 2126, 2059,
	2344, 1113, 1253, 570, 2368, 2369, 929, 2370, 1611, 2614,
	2372, 562, 2374, 2600, 2376, 183, 1903, 2383, 1252, 1624,
	562, 1625, 2317, 1821, 63, 2410, 562, 41, 1652, 565,
	2724, 182, 1104, 751, 32, 31, 30, 29, 28, 23,
	2405, 2406, 22, 178, 21, 20, 19, 25, 18, 2462,
	17, 16, 2413, 2734, 182, 2762, 2435, 2420, 115, 50,
	47, 45, 2425, 2445, 122, 121, 48, 120, 44, 1033,
	42, 27, 182, 26, 15, 182, 182, 182, 2451, 2452,
	162, 2442, 14, 13, 12, 561, 561, 11, 10, 9,
	5, 2449, 4, 35, 34, 33, 2450, 2339, 1107, 2338,
	24, 2, 2457, 2090, 2458, 1823, 0, 2491, 2492, 0,
	0, 0, 561, 561, 561, 561, 2467, 0, 2469, 0,
	0, 0, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 160,
	0, 0, 0, 2505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2503, 2504, 0, 2494, 0, 1600, 177,
	1600, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 2518, 1598, 0, 1598, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 2535, 0, 0, 2515,
	0, 0, 561, 0, 561, 0, 0, 0, 0, 2197,
	0, 2197, 0, 0, 0, 0, 2526, 0, 0, 2527,
	1600, 0, 2556, 2564, 562, 0, 0, 0, 2536, 0,
	0, 2544, 719, 0, 1598, 2545, 2560, 2558, 37, 2240,
	2552, 562, 562, 2554, 562, 0, 562, 562, 0, 562,
	562, 562, 562, 562, 562, 0, 0, 0, 0, 561,
	0, 0, 0, 0, 562, 2243, 2565, 2566, 183, 2243,
	0, 2568, 0, 0, 0, 0, 0, 163, 0, 561,
	0, 2596, 0, 0, 183, 0, 168, 0, 0, 0,
	2592, 0, 0, 2594, 0, 562, 2593, 183, 2603, 2611,
	561, 2604, 0, 0, 561, 561, 0, 0, 0, 0,
	0, 562, 2514, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	2599, 0, 0, 561, 0, 2636, 183, 2633, 2634, 2638,
	0, 2635, 0, 0, 0, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 562, 2650, 0, 0, 2649, 561,
	2647, 0, 719, 0, 0, 0, 2653, 0, 562, 562,
	0, 0, 765, 0, 765, 765, 0, 0, 0, 0,
	0, 2655, 0, 561, 182, 0, 183, 0, 0, 1103,
	1105, 0, 2243, 0, 0, 0, 0, 0, 0, 155,
	2663, 0, 0, 0, 2732, 2666, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 37, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 561, 0, 0, 0,
	0, 2679, 0, 0, 561, 0, 562, 0, 0, 2687,
	2689, 2684, 0, 182, 561, 2611, 2695, 0, 2693, 2240,
	0, 562, 562, 0, 0, 37, 0, 0, 2702, 0,
	0, 2705, 2721, 2713, 2718, 0, 0, 0, 0, 0,
	0, 0, 2727, 0, 1229, 0, 0, 0, 0, 0,
	0, 2733, 2736, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 1600, 0, 2745, 2750,
	183, 2747, 2749, 0, 0, 562, 2743, 2756, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 2764, 0, 0,
	0, 0, 2769, 0, 0, 0, 0, 0, 0, 183,
	1241, 1242, 562, 1600, 0, 0, 2772, 2780, 0, 2779,
	1600, 0, 183, 2782, 1320, 0, 562, 1598, 0, 0,
	0, 183, 0, 183, 1598, 183, 183, 562, 0, 0,
	562, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 562, 0, 0, 765, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2570, 2572,
	2571, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 613, 0,
	0, 562, 0, 0, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	1349, 1350, 1351, 1352, 1353, 1354, 0, 1355, 1356, 1357,
	1358, 1359, 1334, 1335, 1336, 1337, 1318, 1319, 1347, 562,
	1321, 0, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 0, 0, 1331, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 183, 183, 0, 0, 183, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 921, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 1409, 1409, 0, 1409, 0,
	1409, 1409, 0, 1418, 1409, 1409, 1409, 1409, 1409, 0,
	183, 0, 0, 178, 0, 562, 1229, 1229, 921, 0,
	0, 0, 0, 0, 2096, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 120, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 152, 0, 2576, 2577, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 159, 765, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 765, 0, 1386, 1387, 151, 150, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 0, 608, 648, 610, 645, 646,
	0, 606, 609, 647, 0, 0, 181, 0, 0, 516,
	183, 0, 556, 0, 0, 0, 0, 0, 183, 516,
	0, 0, 0, 562, 0, 0, 0, 516, 0, 562,
	611, 612, 2569, 2573, 2574, 2575, 2578, 2579, 2580, 0,
	562, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 1229, 750, 0,
	750, 0, 0, 183, 0, 1622, 1623, 183, 516, 0,
	0, 0, 0, 0, 0, 146, 1388, 153, 0, 1385,
	0, 147, 148, 0, 0, 0, 0, 163, 765, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	562, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	1285, 0, 0, 765, 0, 0, 562, 0, 0, 0,
	0, 765, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 183,
	183, 183, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 921, 0, 0, 0, 0, 183, 0,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 0, 0, 0, 0, 0, 0, 562, 562,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 183, 0,
	0, 183, 0, 183, 0, 0, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 1897,
	562, 0, 0, 0, 173, 174, 175, 176, 0, 562,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 183, 0, 0, 0, 0, 0, 516, 0,
	516, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 183, 0, 0, 120, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 152, 1990, 0, 0, 0, 141, 0, 0,
	0, 0, 183, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	160, 0, 0, 0, 1230, 183, 0, 0, 0, 0,
	0, 1320, 0, 0, 0, 0, 1386, 1387, 151, 150,
	177, 0, 0, 183, 0, 0, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 562, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 562, 562, 562, 562, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 1714, 0, 0, 0, 0, 516,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 660, 79, 0, 0, 0, 146, 1388, 153, 183,
	1385, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 562, 0, 562, 1346, 1349, 1350, 1351,
	1352, 1353, 1354, 0, 1355, 1356, 1357, 1358, 1359, 1334,
	1335, 1336, 1337, 1318, 1319, 1347, 0, 1321, 0, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 0, 0,
	1331, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 722,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 1229, 0, 1229, 0, 0, 1229, 0, 0, 0,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 0, 0, 0, 562, 562, 1409, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 2222, 0, 0, 0,
	0, 0, 0, 0, 562, 765, 0, 0, 0, 1229,
	0, 0, 2247, 1409, 1229, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 183, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 1230, 0, 0,
	0, 0, 516, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 0,
	562, 0, 0, 0, 921, 0, 0, 1229, 0, 0,
	0, 516, 0, 1714, 0, 0, 562, 562, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 1501, 0, 0,
	0, 0, 0, 0, 183, 562, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 1524,
	1525, 516, 516, 516, 516, 516, 516, 516, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	516, 0, 0, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 750, 0, 0, 0, 0, 0,
	0, 750, 750, 0, 0, 0, 0, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 1687, 0, 0, 574, 750, 1501, 750,
	750, 750, 750, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1455, 1710, 0, 0, 743, 0,
	1714, 1714, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 2510, 2511, 2512,
	2513, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 1501, 0, 516, 0, 516, 0, 516,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	1093, 1093, 1229, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 2557, 0, 2559,
	0, 0, 0, 0, 722, 1168, 1169, 1170, 0, 1173,
	0, 1175, 1176, 1177, 1178, 0, 1181, 1183, 1183, 0,
	1183, 1187, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 0, 1213, 1214, 1215,
	1216, 1217, 0, 0, 1714, 0, 1187, 1187, 1187, 1187,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2629, 0, 0, 0, 2629,
	2629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 516, 0, 1714, 0,
	722, 0, 0, 516, 722, 0, 0, 0, 516, 516,
	722, 0, 516, 0, 1889, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 1714, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 2680, 0, 0, 0, 0, 0,
	0, 0, 1916, 0, 0, 0, 1920, 0, 1921, 1922,
	765, 765, 0, 0, 0, 0, 0, 1930, 0, 2703,
	1931, 1932, 0, 0, 0, 0, 0, 0, 0, 2708,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1939, 1940,
	1941, 1942, 1238, 1944, 0, 0, 0, 0, 0, 1948,
	0, 1949, 0, 0, 0, 1952, 0, 0, 0, 1714,
	0, 0, 0, 1961, 0, 0, 0, 2708, 0, 0,
	1966, 1967, 1968, 1969, 1970, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	750, 750, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 1501, 0, 0, 516, 0, 564, 0, 0, 0,
	0, 0, 1455, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 925, 0, 516, 0, 0,
	0, 516, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 39, 40, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 43, 69, 70, 0,
	67, 71, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 56, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 1093,
	0, 0, 0, 516, 516, 516, 516, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 516, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2183, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2198, 0, 0, 0,
	0, 0, 2203, 2204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1230, 0, 1230, 0, 0, 1230, 0, 0, 0,
	750, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2246, 0, 0, 0,
	0, 0, 516, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 2264, 2265, 0, 0, 73, 74, 1230,
	0, 0, 0, 0, 1230, 516, 516, 516, 516, 516,
	0, 0, 0, 0, 0, 0, 0, 2263, 0, 0,
	0, 0, 516, 0, 0, 1455, 0, 516, 0, 0,
	516, 2274, 1501, 57, 58, 0, 59, 60, 61, 62,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 2363, 0, 0, 0, 0, 0, 0, 2367, 0,
	0, 0, 0, 516, 0, 1034, 516, 1040, 0, 0,
	1042, 0, 2377, 2378, 2380, 2382, 0, 0, 0, 0,
	0, 0, 2388, 0, 0, 0, 0, 2392, 2393, 2394,
	0, 0, 0, 0, 2397, 0, 0, 0, 0, 0,
	2399, 0, 2401, 81, 0, 2402, 0, 0, 0, 0,
	0, 2407, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 2429, 2430, 0, 0, 2434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2446, 2447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 1559, 1560, 1561,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2497, 0, 0, 0, 0, 516, 1604, 1605,
	516, 516, 516, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1657, 1658,
	574, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2524, 0, 0, 0, 2525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1230, 0, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 1722, 0, 0, 0, 0,
	0, 0, 1230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 1985, 0,
	0, 661, 662, 0, 0, 0, 0, 1599, 0, 0,
	0, 0, 2607, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2617, 2618, 2619, 0,
	2620, 2621, 0, 0, 2016, 2017, 2624, 0, 2625, 2628,
	0, 1796, 0, 2036, 0, 2037, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2654, 0, 0,
	0, 1310, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 0, 2668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2674, 0, 0,
	0, 0, 0, 2675, 2676, 0, 0, 2111, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1440,
	0, 2682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1230, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2729, 0, 0, 0, 2730, 0, 1455, 0,
	1511, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 654, 661, 662, 663, 664,
	665, 655, 657, 0, 0, 0, 656, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	666, 667, 0, 0, 0, 1929, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2244, 0, 79, 0,
	0, 1741, 1741, 1741, 1741, 1741, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 2340, 2341, 0, 2036, 722,
	0, 0, 0, 1741, 0, 0, 1741, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 87, 0,
	0, 0, 0, 0, 654, 661, 662, 663, 664, 665,
	655, 657, 1279, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2336, 0, 659, 666,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 662, 0, 0,
	0, 0, 1599, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 1734, 0, 0, 1552, 0, 2366,
	0, 0, 0, 0, 2340, 2341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 644, 0, 0, 648, 0, 645, 646,
	0, 0, 0, 647, 2151, 2455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2174, 2175, 0, 0, 0, 2178, 0, 0,
	0, 0, 2180, 2181, 2182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2187, 2188, 2189, 0, 0, 1664,
	2191, 2495, 2192, 2193, 0, 0, 0, 2200, 2201, 0,
	0, 0, 0, 1552, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 1882, 1883, 0, 0, 1887,
	0, 0, 0, 0, 0, 0, 0, 0, 1890, 0,
	0, 0, 0, 0, 0, 1893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 2529, 0, 2533, 2534, 0,
	0, 0, 0, 0, 0, 0, 0, 2268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 79, 0, 2244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2244, 2385, 0,
	0, 0, 0, 0, 0, 2391, 0, 0, 0, 0,
	0, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2039, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2683, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2129, 2130, 2131, 2132, 2133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 2139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2516, 0,
	2517, 0, 0, 2147, 0, 2520, 2521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2561, 0, 0,
	2563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2637, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2334, 0, 0, 0, 0,
	574, 0, 0, 0, 0, 2343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2355, 0, 0, 2358, 0, 2672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2722, 0, 0,
	0, 0, 0, 0, 0, 0, 2409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2480, 0, 0, 2481, 2482, 2483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 899, 884,
	436, 0, 830, 902, 799, 818, 912, 821, 824, 866,
	778, 844, 357, 815, 770, 803, 773, 810, 774, 801,
	832, 244, 798, 886, 848, 901, 312, 241, 780, 804,
	371, 820, 193, 868, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 908, 316,
	854, 0, 421, 342, 0, 0, 0, 834, 890, 842,
	880, 829, 867, 788, 853, 903, 816, 863, 904, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2696, 0, 2697, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 812, 860, 898, 813, 862,
	239, 285, 246, 238, 440, 909, 889, 777, 841, 897,
	0, 0, 209, 900, 836, 0, 865, 0, 915, 772,
	856, 0, 775, 779, 911, 893, 807, 249, 0, 0,
	0, 0, 0, 0, 0, 833, 843, 877, 827, 0,
	0, 0, 0, 0, 0, 0, 805, 0, 852, 0,
	0, 0, 784, 776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 787,
	0, 806, 878, 0, 769, 268, 781, 343, 231, 0,
	882, 892, 828, 474, 896, 826, 825, 872, 785, 888,
	819, 311, 783, 293, 188, 205, 2667, 817, 353, 394,
	400, 887, 802, 811, 229, 809, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 851, 870, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 1095, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 797, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 883, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 875, 914, 366, 399, 219, 460, 420,
	792, 796, 790, 857, 791, 846, 847, 793, 905, 906,
	907, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	879, 786, 0, 794, 795, 0, 885, 894, 895, 511,
	328, 411, 457, 296, 301, 304, 850, 187, 202, 314,
	910, 388, 261, 489, 468, 464, 771, 789, 236, 800,
	808, 0, 814, 822, 823, 835, 837, 838, 839, 840,
	858, 859, 861, 869, 871, 874, 876, 881, 891, 913,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 849, 855, 325, 254, 273, 284, 864, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 845, 873, 321,
	437, 438, 280, 339, 0, 0, 899, 884, 436, 0,
	830, 902, 799, 818, 912, 821, 824, 866, 778, 844,
	357, 815, 770, 803, 773, 810, 774, 801, 832, 244,
	798, 886, 848, 901, 312, 241, 780, 804, 371, 820,
	193, 868, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 908, 316, 854, 0,
	421, 342, 0, 0, 0, 834, 890, 842, 880, 829,
	867, 788, 853, 903, 816, 863, 904, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 812, 860, 898, 813, 862, 239, 285,
	246, 238, 440, 909, 889, 777, 841, 897, 0, 0,
	209, 900, 836, 0, 865, 0, 915, 772, 856, 0,
	775, 779, 911, 893, 807, 249, 0, 0, 0, 0,
	0, 0, 0, 833, 843, 877, 827, 0, 0, 0,
	0, 0, 2275, 0, 805, 0, 852, 0, 0, 0,
	784, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 787, 0, 806,
	878, 0, 769, 268, 781, 343, 231, 0, 882, 892,
	828, 474, 896, 826, 825, 872, 785, 888, 819, 311,
	783, 293, 188, 205, 0, 817, 353, 394, 400, 887,
	802, 811, 229, 809, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 851, 870, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 1095, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	797, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 883, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 875, 914, 366, 399, 219, 460, 420, 792, 796,
	790, 857, 791, 846, 847, 793, 905, 906, 907, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 879, 786,
	0, 794, 795, 0, 885, 894, 895, 511, 328, 411,
	457, 296, 301, 304, 850, 187, 202, 314, 910, 388,
	261, 489, 468, 464, 771, 789, 236, 800, 808, 0,
	814, 822, 823, 835, 837, 838, 839, 840, 858, 859,
	861, 869, 871, 874, 876, 881, 891, 913, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 849,
	855, 325, 254, 273, 284, 864, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 845, 873, 321, 437, 438,
	280, 339, 0, 0, 899, 884, 436, 0, 830, 902,
	799, 818, 912, 821, 824, 866, 778, 844, 357, 815,
	770, 803, 773, 810, 774, 801, 832, 244, 798, 886,
	848, 901, 312, 241, 780, 804, 371, 820, 193, 868,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 908, 316, 854, 0, 421, 342,
	0, 0, 0, 834, 890, 842, 880, 829, 867, 788,
	853, 903, 816, 863, 904, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 812, 860, 898, 813, 862, 239, 285, 246, 238,
	440, 909, 889, 777, 841, 897, 0, 0, 209, 900,
	836, 0, 865, 0, 915, 772, 856, 0, 775, 779,
	911, 893, 807, 249, 0, 0, 0, 0, 0, 0,
	0, 833, 843, 877, 827, 0, 0, 0, 0, 0,
	2233, 0, 805, 0, 852, 0, 0, 0, 784, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 0, 0, 787, 0, 806, 878, 0,
	769, 268, 781, 343, 231, 0, 882, 892, 828, 474,
	896, 826, 825, 872, 785, 888, 819, 311, 783, 293,
	188, 205, 0, 817, 353, 394, 400, 887, 802, 811,
	229, 809, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 851, 870, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 1095, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 797, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 883, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 875,
	914, 366, 399, 219, 460, 420, 792, 796, 790, 857,
	791, 846, 847, 793, 905, 906, 907, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 879, 786, 0, 794,
	795, 0, 885, 894, 895, 511, 328, 411, 457, 296,
	301, 304, 850, 187, 202, 314, 910, 388, 261, 489,
	468, 464, 771, 789, 236, 800, 808, 0, 814, 822,
	823, 835, 837, 838, 839, 840, 858, 859, 861, 869,
	871, 874, 876, 881, 891, 913, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 849, 855, 325,
	254, 273, 284, 864, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 845, 873, 321, 437, 438, 280, 339,
	0, 0, 899, 884, 436, 0, 830, 902, 799, 818,
	912, 821, 824, 866, 778, 844, 357, 815, 770, 803,
	773, 810, 774, 801, 832, 244, 798, 886, 848, 901,
	312, 241, 780, 804, 371, 820, 193, 868, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 908, 316, 854, 0, 421, 342, 0, 0,
	0, 834, 890, 842, 880, 829, 867, 788, 853, 903,
	816, 863, 904, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 812,
	860, 898, 813, 862, 239, 285, 246, 238, 440, 909,
	889, 777, 841, 897, 0, 0, 209, 900, 836, 0,
	865, 0, 915, 772, 856, 0, 775, 779, 911, 893,
	807, 249, 0, 0, 0, 0, 0, 0, 0, 833,
	843, 877, 827, 0, 0, 0, 0, 0, 1729, 0,
	805, 0, 852, 0, 0, 0, 784, 776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 787, 0, 806, 878, 0, 769, 268,
	781, 343, 231, 0, 882, 892, 828, 474, 896, 826,
	825, 872, 785, 888, 819, 311, 783, 293, 188, 205,
	0, 817, 353, 394, 400, 887, 802, 811, 229, 809,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	851, 870, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 1095, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 797, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 883,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 875, 914, 366,
	399, 219, 460, 420, 792, 796, 790, 857, 791, 846,
	847, 793, 905, 906, 907, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 879, 786, 0, 794, 795, 0,
	885, 894, 895, 511, 328, 411, 457, 296, 301, 304,
	850, 187, 202, 314, 910, 388, 261, 489, 468, 464,
	771, 789, 236, 800, 808, 0, 814, 822, 823, 835,
	837, 838, 839, 840, 858, 859, 861, 869, 871, 874,
	876, 881, 891, 913, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 849, 855, 325, 254, 273,
	284, 864, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 845, 873, 321, 437, 438, 280, 339, 0, 0,
	899, 884, 436, 0, 830, 902, 799, 818, 912, 821,
	824, 866, 778, 844, 357, 815, 770, 803, 773, 810,
	774, 801, 832, 244, 798, 886, 848, 901, 312, 241,
	780, 804, 371, 820, 193, 868, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	908, 316, 854, 0, 421, 342, 0, 0, 0, 834,
	890, 842, 880, 829, 867, 788, 853, 903, 816, 863,
	904, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 812, 860, 898,
	813, 862, 239, 285, 246, 238, 440, 909, 889, 777,
	841, 897, 0, 0, 209, 900, 836, 0, 865, 0,
	915, 772, 856, 0, 775, 779, 911, 893, 807, 249,
	0, 0, 0, 0, 0, 0, 0, 833, 843, 877,
	827, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	852, 0, 0, 0, 784, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 0, 0,
	0, 787, 0, 806, 878, 0, 769, 268, 781, 343,
	231, 0, 882, 892, 828, 474, 896, 826, 825, 872,
	785, 888, 819, 311, 783, 293, 188, 205, 0, 817,
	353, 394, 400, 887, 802, 811, 229, 809, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 851, 870,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	1095, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 797, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 883, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 875, 914, 366, 399, 219,
	460, 420, 792, 796, 790, 857, 791, 846, 847, 793,
	905, 906, 907, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 879, 786, 0, 794, 795, 0, 885, 894,
	895, 511, 328, 411, 457, 296, 301, 304, 850, 187,
	202, 314, 910, 388, 261, 489, 468, 464, 771, 789,
	236, 800, 808, 0, 814, 822, 823, 835, 837, 838,
	839, 840, 858, 859, 861, 869, 871, 874, 876, 881,
	891, 913, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 849, 855, 325, 254, 273, 284, 864,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 845,
	873, 321, 437, 438, 280, 339, 0, 0, 899, 884,
	436, 0, 830, 902, 799, 818, 912, 821, 824, 866,
	778, 844, 357, 815, 770, 803, 773, 810, 774, 801,
	832, 244, 798, 886, 848, 901, 312, 241, 780, 804,
	371, 820, 193, 868, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 908, 316,
	854, 0, 421, 342, 0, 0, 0, 834, 890, 842,
	880, 829, 867, 788, 853, 903, 816, 863, 904, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 812, 860, 898, 813, 862,
	239, 285, 246, 238, 440, 909, 889, 777, 841, 897,
	0, 0, 209, 900, 836, 0, 865, 0, 915, 772,
	856, 0, 775, 779, 911, 893, 807, 249, 0, 0,
	0, 0, 0, 0, 0, 833, 843, 877, 827, 0,
	0, 0, 0, 0, 0, 0, 805, 0, 852, 0,
	0, 0, 784, 776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 787,
	0, 806, 878, 0, 769, 268, 781, 343, 231, 0,
	882, 892, 828, 474, 896, 826, 825, 872, 785, 888,
	819, 311, 783, 293, 188, 205, 0, 817, 353, 394,
	400, 887, 802, 811, 229, 809, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 851, 870, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 1095, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 797, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 883, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 875, 914, 366, 399, 219, 460, 420,
	792, 796, 790, 857, 791, 846, 847, 793, 905, 906,
	907, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	879, 786, 0, 794, 795, 0, 885, 894, 895, 511,
	328, 411, 457, 296, 301, 304, 850, 187, 202, 314,
	910, 388, 261, 489, 468, 464, 771, 789, 236, 800,
	808, 0, 814, 822, 823, 835, 837, 838, 839, 840,
	858, 859, 861, 869, 871, 874, 876, 881, 891, 913,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 849, 855, 325, 254, 273, 284, 864, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 845, 873, 321,
	437, 438, 280, 339, 0, 0, 899, 884, 436, 0,
	830, 902, 799, 818, 912, 821, 824, 866, 778, 844,
	357, 815, 770, 803, 773, 810, 774, 801, 832, 244,
	798, 886, 848, 901, 312, 241, 780, 804, 371, 820,
	193, 868, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 908, 316, 854, 0,
	421, 342, 0, 0, 0, 834, 890, 842, 880, 829,
	867, 788, 853, 903, 816, 863, 904, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 812, 860, 898, 813, 862, 239, 285,
	246, 238, 440, 909, 889, 777, 841, 897, 0, 0,
	916, 900, 836, 0, 865, 0, 915, 772, 856, 0,
	775, 779, 911, 893, 807, 249, 0, 0, 0, 0,
	0, 0, 0, 833, 843, 877, 827, 0, 0, 0,
	0, 0, 0, 0, 805, 0, 852, 0, 0, 0,
	784, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 787, 0, 806,
	878, 0, 769, 268, 781, 343, 231, 0, 882, 892,
	828, 474, 896, 826, 825, 872, 785, 888, 819, 311,
	783, 293, 188, 205, 0, 817, 353, 394, 400, 887,
	802, 811, 229, 809, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 851, 870, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 782, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	797, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 883, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 768, 762, 761, 294,
	318, 875, 914, 366, 399, 219, 460, 420, 792, 796,
	790, 857, 791, 846, 847, 793, 905, 906, 907, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 879, 786,
	0, 794, 795, 0, 885, 894, 895, 511, 328, 411,
	457, 296, 301, 304, 850, 187, 202, 314, 910, 388,
	261, 489, 468, 464, 771, 789, 236, 800, 808, 0,
	814, 822, 823, 835, 837, 838, 839, 840, 858, 859,
	861, 869, 871, 874, 876, 881, 891, 913, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 849,
	855, 325, 254, 273, 284, 864, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 845, 873, 321, 437, 438,
	280, 339, 0, 0, 899, 884, 436, 0, 830, 902,
	799, 818, 912, 821, 824, 866, 778, 844, 357, 815,
	770, 803, 773, 810, 774, 801, 832, 244, 798, 886,
	848, 901, 312, 241, 780, 804, 371, 820, 193, 868,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 908, 316, 854, 0, 421, 342,
	0, 0, 0, 834, 890, 842, 880, 829, 867, 788,
	853, 903, 816, 863, 904, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 812, 860, 898, 813, 862, 239, 285, 246, 238,
	440, 909, 889, 777, 841, 897, 0, 0, 916, 900,
	836, 0, 865, 0, 915, 772, 856, 0, 775, 779,
	911, 893, 807, 249, 0, 0, 0, 0, 0, 0,
	0, 833, 843, 877, 827, 0, 0, 0, 0, 0,
	0, 0, 805, 0, 852, 0, 0, 0, 784, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 0, 0, 787, 0, 806, 878, 0,
	769, 268, 781, 343, 231, 0, 882, 892, 828, 474,
	896, 826, 825, 872, 785, 888, 819, 311, 783, 293,
	188, 205, 0, 817, 353, 394, 400, 887, 802, 811,
	229, 809, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 851, 870, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 1296, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 782, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 797, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 883, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 768, 762, 761, 294, 318, 875,
	914, 366, 399, 219, 460, 420, 792, 796, 790, 857,
	791, 846, 847, 793, 905, 906, 907, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 879, 786, 0, 794,
	795, 0, 885, 894, 895, 511, 328, 411, 457, 296,
	301, 304, 850, 187, 202, 314, 910, 388, 261, 489,
	468, 464, 771, 789, 236, 800, 808, 0, 814, 822,
	823, 835, 837, 838, 839, 840, 858, 859, 861, 869,
	871, 874, 876, 881, 891, 913, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 849, 855, 325,
	254, 273, 284, 864, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 845, 873, 321, 437, 438, 280, 339,
	0, 0, 899, 884, 436, 0, 830, 902, 799, 818,
	912, 821, 824, 866, 778, 844, 357, 815, 770, 803,
	773, 810, 774, 801, 832, 244, 798, 886, 848, 901,
	312, 241, 780, 804, 371, 820, 193, 868, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 908, 316, 854, 0, 421, 342, 0, 0,
	0, 834, 890, 842, 880, 829, 867, 788, 853, 903,
	816, 863, 904, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 812,
	860, 898, 813, 862, 239, 285, 246, 238, 440, 909,
	889, 777, 841, 897, 0, 0, 916, 900, 836, 0,
	865, 0, 915, 772, 856, 0, 775, 779, 911, 893,
	807, 249, 0, 0, 0, 0, 0, 0, 0, 833,
	843, 877, 827, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 852, 0, 0, 0, 784, 776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 787, 0, 806, 878, 0, 769, 268,
	781, 343, 231, 0, 882, 892, 828, 474, 896, 826,
	825, 872, 785, 888, 819, 311, 783, 293, 188, 205,
	0, 817, 353, 394, 400, 887, 802, 811, 229, 809,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	851, 870, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 759, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 782, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 797, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 883,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 768, 762, 761, 294, 318, 875, 914, 366,
	399, 219, 460, 420, 792, 796, 790, 857, 791, 846,
	847, 793, 905, 906, 907, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 879, 786, 0, 794, 795, 0,
	885, 894, 895, 511, 328, 411, 457, 296, 301, 304,
	850, 187, 202, 314, 910, 388, 261, 489, 468, 464,
	771, 789, 236, 800, 808, 0, 814, 822, 823, 835,
	837, 838, 839, 840, 858, 859, 861, 869, 871, 874,
	876, 881, 891, 913, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 849, 855, 325, 254, 273,
	284, 864, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 845, 873, 321, 437, 438, 280, 339, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 1674, 0, 592,
	0, 0, 0, 244, 597, 0, 0, 0, 312, 241,
	0, 1675, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	604, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 654, 661, 662, 663, 664, 665,
	655, 657, 0, 0, 217, 656, 224, 615, 617, 616,
	626, 627, 628, 629, 630, 631, 632, 613, 659, 666,
	667, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 575, 589, 0, 603, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 587, 748, 0, 0, 0,
	638, 0, 588, 0, 0, 596, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 637, 0, 0, 474, 0, 0, 635, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 621, 622, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 644, 636, 608, 648, 610, 645, 646, 605,
	606, 609, 647, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 639, 595, 594, 0, 601, 602, 0, 611,
	612, 614, 618, 619, 620, 623, 624, 625, 593, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 592, 0, 0, 0, 244, 597, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 604, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 87, 0, 0, 184, 185, 186, 654, 661, 662,
	663, 664, 665, 655, 657, 0, 0, 217, 656, 224,
	615, 617, 616, 626, 627, 628, 629, 630, 631, 632,
	613, 659, 666, 667, 0, 239, 285, 246, 238, 440,
	0, 0, 1654, 1655, 1656, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 575, 589, 0, 603, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 0,
	0, 0, 0, 638, 0, 588, 0, 0, 596, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 637, 0, 0, 474, 0,
	0, 635, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 621, 622, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 644, 636, 608, 648, 610,
	645, 646, 605, 606, 609, 647, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 639, 595, 594, 0, 601,
	602, 0, 611, 612, 614, 618, 619, 620, 623, 624,
	625, 593, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 592, 0, 0, 0, 244,
	597, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 604, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 599, 600, 0,
	0, 0, 0, 0, 0, 1756, 0, 287, 226, 192,
	354, 422, 259, 0, 87, 0, 0, 184, 185, 186,
	654, 661, 662, 663, 664, 665, 655, 657, 0, 0,
	217, 656, 224, 615, 617, 616, 626, 627, 628, 629,
	630, 631, 632, 613, 659, 666, 667, 1757, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 575, 589,
	0, 603, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 638, 0, 588, 0,
	0, 596, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 637, 0,
	0, 474, 0, 0, 635, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 621, 622,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 644, 636,
	608, 648, 610, 645, 646, 605, 606, 609, 647, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 639, 595,
	594, 0, 601, 602, 0, 611, 612, 614, 618, 619,
	620, 623, 624, 625, 593, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 0, 321, 437, 438,
	280, 339, 0, 0, 0, 78, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 592, 0, 0, 0, 244, 597, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 604, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 87, 0, 0, 184, 185, 186, 654, 661,
	662, 663, 664, 665, 655, 657, 0, 0, 217, 656,
	224, 615, 617, 616, 626, 627, 628, 629, 630, 631,
	632, 613, 659, 666, 667, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 575, 589, 0, 603,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 587,
	0, 0, 0, 0, 638, 0, 588, 0, 0, 596,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 637, 0, 0, 474,
	0, 0, 635, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 621, 622, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 644, 636, 608, 648,
	610, 645, 646, 605, 606, 609, 647, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 639, 595, 594, 0,
	601, 602, 0, 611, 612, 614, 618, 619, 620, 623,
	624, 625, 593, 187, 202, 314, 86, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 0, 339, 321, 437, 438, 280, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 592, 0, 0, 0,
	244, 597, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 604, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 87, 0, 0, 184, 185,
	186, 654, 661, 662, 663, 664, 665, 655, 657, 0,
	0, 217, 656, 224, 615, 617, 616, 626, 627, 628,
	629, 630, 631, 632, 613, 659, 666, 667, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 575,
	589, 0, 603, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 0, 0, 0, 0, 638, 0, 588,
	0, 0, 596, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 637,
	0, 0, 474, 0, 0, 635, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 2662, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 621,
	622, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 644,
	636, 608, 648, 610, 645, 646, 605, 606, 609, 647,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 639,
	595, 594, 0, 601, 602, 0, 611, 612, 614, 618,
	619, 620, 623, 624, 625, 593, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 0, 339, 321, 437,
	438, 280, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 592,
	0, 0, 0, 244, 597, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	604, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	1263, 184, 185, 186, 654, 661, 662, 663, 664, 665,
	655, 657, 0, 0, 217, 656, 224, 615, 617, 616,
	626, 627, 628, 629, 630, 631, 632, 613, 659, 666,
	667, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 575, 589, 0, 603, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 587, 0, 0, 0, 0,
	638, 0, 588, 0, 0, 596, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 637, 0, 0, 474, 0, 0, 635, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 621, 622, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 644, 636, 608, 648, 610, 645, 646, 605,
	606, 609, 647, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 639, 595, 594, 0, 601, 602, 0, 611,
	612, 614, 618, 619, 620, 623, 624, 625, 593, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 592, 0, 0, 0, 244, 597, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 604, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 87, 0, 0, 184, 185, 186, 654, 661, 662,
	663, 664, 665, 655, 657, 0, 0, 217, 656, 224,
	615, 617, 616, 626, 627, 628, 629, 630, 631, 632,
	613, 659, 666, 667, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 575, 589, 0, 603, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 748,
	0, 0, 0, 638, 0, 588, 0, 0, 596, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 637, 0, 0, 474, 0,
	0, 635, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 621, 622, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 644, 636, 608, 648, 610,
	645, 646, 605, 606, 609, 647, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 639, 595, 594, 0, 601,
	602, 0, 611, 612, 614, 618, 619, 620, 623, 624,
	625, 593, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 592, 0, 0, 0, 244,
	597, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 604, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 87, 0, 0, 184, 185, 186,
	654, 661, 662, 663, 664, 665, 655, 657, 0, 0,
	217, 656, 224, 615, 617, 616, 626, 627, 628, 629,
	630, 631, 632, 613, 659, 666, 667, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 575, 589,
	0, 603, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 638, 0, 588, 0,
	0, 596, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 637, 0,
	0, 474, 0, 0, 635, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 621, 622,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 644, 636,
	608, 648, 610, 645, 646, 605, 606, 609, 647, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 639, 595,
	594, 0, 601, 602, 0, 611, 612, 614, 618, 619,
	620, 623, 624, 625, 593, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 339, 321, 437, 438,
	280, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 592, 0,
	0, 0, 244, 597, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 604,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 87, 0, 0,
	184, 185, 186, 654, 661, 662, 663, 664, 665, 655,
	657, 0, 0, 217, 656, 224, 615, 617, 616, 626,
	627, 628, 629, 630, 631, 632, 613, 659, 666, 667,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 603, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 0, 0, 0, 0, 638,
	0, 588, 0, 0, 596, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 637, 0, 0, 474, 0, 0, 635, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 621, 622, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 644, 636, 608, 648, 610, 645, 646, 605, 606,
	609, 647, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 639, 595, 594, 0, 601, 602, 0, 611, 612,
	614, 618, 619, 620, 623, 624, 625, 593, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 339,
	321, 437, 438, 280, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 661, 662, 0,
	0, 0, 0, 1599, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 0, 339, 321, 437, 438, 280, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 963,
	474, 0, 0, 0, 0, 0, 960, 961, 311, 924,
	293, 188, 205, 954, 958, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 0, 0, 321, 437, 438, 280,
	339, 0, 0, 0, 78, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 86, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 1282, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 1284, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 1129, 0, 1130, 1131, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 339, 321, 437, 438,
	280, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 1225, 1228, 0, 0, 0, 0, 1224,
	1227, 0, 0, 217, 1223, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 0,
	321, 437, 438, 280, 339, 0, 0, 0, 78, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 87, 0, 1263, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 86,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 0, 339, 321, 437,
	438, 280, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 1696, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 1694, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	924, 293, 188, 205, 922, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 339, 321, 437, 438,
	280, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 1696, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1456, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 339,
	321, 437, 438, 280, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 1263, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 2630, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 0, 339, 321, 437, 438, 280, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 0, 339, 321, 437, 438, 280,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 1991, 0, 0, 0, 1992,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 0, 339, 321,
	437, 438, 280, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 1307, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	0, 339, 321, 437, 438, 280, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 2704, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 0, 339, 321, 437, 438, 280, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 2630, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 0, 339, 321, 437,
	438, 280, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1456, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 339, 321, 437, 438,
	280, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 339,
	321, 437, 438, 280, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 1550, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 0, 339, 321, 437, 438, 280, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 1428, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 0, 339, 321, 437, 438, 280,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 1426, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 0, 339, 321,
	437, 438, 280, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 1424, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	0, 339, 321, 437, 438, 280, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	1422, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 0, 339, 321, 437, 438, 280, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 1420, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 0, 339, 321, 437,
	438, 280, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 1416, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 1414,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 1412, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 339, 321, 437, 438,
	280, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 1389, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 339,
	321, 437, 438, 280, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 1291, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 0, 339, 321, 437, 438, 280, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 0, 339, 321, 437, 438, 280,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 0, 339, 321,
	437, 438, 280, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 566,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	0, 339, 321, 437, 438, 280, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 514, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 0, 339, 321, 437, 438, 280, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 2709,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 0, 339, 321, 437,
	438, 280, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 0,
	339, 321, 437, 438, 280, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 2408, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 0, 339, 321, 437, 438, 280, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 1987, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 0, 321, 437, 438,
	280,
}

var yyPact = [...]int{
	4884, -1000, -401, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1834, 1884, -1000, -1000,
	-1000, -1000, 1996, -1000, 619, 1599, -1000, 1849, 303, -1000,
	38133, 407, -1000, 36987, 406, 107, 38133, -1000, 127, -1000,
	114, 38133, 123, 36414, -1000, -1000, -308, 16349, 1784, 10,
	1, 38133, -1000, -1000, -1000, -1000, 1974, 1552, -1000, 297,
	-1000, -1000, -1000, -1000, -1000, -1000, 35841, -1000, -1000, -1000,
	1855, 1828, 2015, 549, 1781, -1000, 1916, 1552, -1000, 16349,
	1955, 1911, 15776, -1000, 15776, 350, -1000, -1000, 11755, -1000,
	-1000, 22089, 38133, 38133, 404, -1000, 1849, -1000, -1000, 281,
	-1000, 254, 1450, -1000, 1447, -1000, 639, 547, 290, 386,
	384, 289, 287, 286, 276, 275, 274, 267, 266, 305,
	-1000, 574, 574, -162, -163, 693, 343, 343, 343, 359,
	1808, 1807, -1000, 648, -1000, 574, 574, 280, 574, 574,
	574, 574, 228, 211, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 308,
	1849, 194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38133, 217, 38133, -1000, 477, 38133, 688, 688,
	30, 688, 688, 688, 688, 141, 546, -3, -1000, 139,
	186, 130, 190, 691, 168, -1000, -1000, 187, 691, 1015,
	557, 100, -1000, 688, 688, -1000, 9443, 133, 9443, 9443,
	-1000, 1816, -1000, -1000, -1000, -1000, 1025, -1000, 358, -1000,
	-1000, -1000, -1000, 38133, 35268, 324, 588, -1000, -1000, -1000,
	68, -1000, -1000, 1190, 1047, 16349, 1495, -1000, 1463, 497,
	-1000, -1000, -1000, -1000, -1000, 431, 16922, 16922, 16922, 16922,
	-1000, -1000, 1462, 1462, 1462, 1462, 16922, 1462, 16922, 1462,
	1462, 1462, 1462, 16349, 1462, 1462, 1462, -1000, 1462, 1462,
	1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462,
	1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462,
	1462, 1462, 1462, 1462, 462, 1462, 1462, 1462, 1462, 1462,
	-1000, -1000, -1000, -1000, 1462, 1462, 1462, 1462, 1462, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19792, -1000,
	14057, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38133, -1000, 1462, 148, 38133, 38133, 264, 1916, 1552, -1000,
	1974, 1960, 297, -1000, 2142, 1700, 1269, 1003, 1552, 1412,
	38133, -1000, 1469, -1000, -1000, -1000, 1698, 958, 1010, -1000,
	-1000, -1000, -1000, 1347, 16349, -1000, -1000, 1992, -1000, 19219,
	459, 729, 1991, 34695, -1000, 350, 350, 1436, 11177, -42,
	-1000, -1000, -1000, 585, 24954, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1816, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1390, 38133, -1000,
	-1000, 3629, 1057, -1000, 1596, -1000, 1365, -1000, 1511, 1605,
	402, 1057, 373, 370, 365, -1000, -100, -1000, -1000, -1000,
	-1000, -1000, 574, 574, -1000, 296, 1953, 303, 3687, -1000,
	-1000, -1000, 34122, 1595, 1057, -1000, 1594, -1000, 675, 453,
	450, 450, 1057, -1000, -1000, 38133, 1057, 673, 662, 38133,
	38133, -1000, 33549, -1000, 32976, 32403, 902, 38133, 31830, 31257,
	30684, 30111, 29538, -1000, 1679, -1000, 1525, -1000, -1000, -1000,
	38133, 38133, 38133, 282, -1000, -1000, 38133, 1057, -1000, -1000,
	901, 900, 574, 574, 894, 1008, 1004, 1001, 574, 574,
	893, 999, 26673, 210, 892, 891, 883, 898, 995, 175,
	880, 878, 875, 38133, 1592, 38133, -1000, 180, 626, 349,
	582, 1849, 1774, 1435, 357, 396, 1057, 347, 347, 38133,
	-1000, 10021, -1000, -1000, 978, 16349, -1000, 709, 691, 691,
	-1000, -1000, -1000, -1000, -1000, -1000, 688, 38133, 709, -1000,
	-1000, -1000, 691, 688, 38133, 688, 688, 688, 688, 691,
	691, 691, 688, 38133, 38133, 38133, 38133, 38133, 38133, 38133,
	38133, 38133, 9443, 557, 688, -312, -1000, 975, -1000, 1689,
	-1000, -1000, -1000, -1000, -1000, -1000, 9443, 9443, -1000, -1000,
	-1000, -1000, 117, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -101, 1418, 28965, -1000, -313, -315, -316, -317,
	-1000, -1000, -1000, -318, -326, -1000, -1000, -1000, 16349, 16349,
	16349, 16349, -184, -1000, 786, 16922, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 822, 695, 16922, 16922, 16922, 16922, 16922,
	16922, 16922, 16922, 16922, 16922, 16922, 16922, 16922, 16922, 16922,
	630, 5944, 5944, 497, 497, 497, 497, -1000, 15776, 16349,
	16349, 497, -1000, 1057, 28392, 15776, 15776, 16349, 1815, 615,
	1047, 38133, -1000, 1003, -1000, -1000, -1000, 870, -1000, 38133,
	38133, 524, 16349, 16349, 16349, 16349, 16349, 16349, 12906, 16349,
	16349, 16349, 16349, 16349, 16349, 16349, 16349, 16349, 16349, 16349,
	16349, 12333, 10021, 15776, 15776, 15776, 15776, 15776, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	454, 1150, 1129, 1343, -1000, 1417, -1000, -183, 21516, 16349,
	974, 1988, 1618, 38133, -1000, -1000, -1000, 1916, -1000, 1916,
	1150, 1920, 1727, 15776, -1000, -1000, 1920, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1143, -1000, 38133, 1412, 1901,
	38133, 1720, 971, 279, -1000, 16349, 16349, 1405, -1000, 1207,
	38133, -1000, -184, -1000, 27819, -1000, -1000, 8865, -1000, 38133,
	251, 38133, -1000, 20943, 27246, 10599, -42, -1000, 10599, 1321,
	-1000, -33, -39, 13479, 478, -1000, -1000, -1000, 693, 18068,
	1139, 478, 41, -1000, -1000, -1000, 1511, -1000, 1511, 1511,
	1511, 1511, 279, 279, 279, 279, -1000, -1000, -1000, -1000,
	-1000, 1568, 1567, -1000, 1511, 1511, 1511, 1511, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1532, 1532, 1532, 1512, 1512,
	337, -1000, 16349, 222, 38133, 1891, 872, 180, 351, 1617,
	1057, 1057, 1057, 351, -1000, 967, 955, -1000, -389, 1401,
	-1000, -1000, 1951, -1000, -1000, 823, 696, 692, 753, 38133,
	154, 245, -1000, 328, -1000, 38133, 1057, 659, 450, 1057,
	-1000, 1057, -1000, -1000, -1000, -1000, -1000, 1057, 1397, -1000,
	1312, 807, 687, 803, 686, 1397, -1000, -1000, -131, 1397,
	-1000, 1397, -1000, 1397, -1000, 1397, -1000, 1397, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 607, 38133, 154, 630,
	-1000, 356, -1000, -1000, 630, 630, -1000, -1000, -1000, -1000,
	961, 956, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -378,
	38133, -1000, 177, 581, 233, 300, 229, 38133, 135, 1886,
	170, 208, 38133, 38133, 347, 1676, 38133, 1881, 38133, -1000,
	-1000, -1000, -1000, -1000, 1047, 38133, -1000, -1000, 688, 688,
	-1000, -1000, 38133, 688, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 688, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38133, -1000,
	-1000, -1000, -1000, 38133, -1000, -1000, -1000, -1000, -1000, 140,
	-36, 285, -1000, -1000, -1000, -1000, -1000, 1905, -1000, 1047,
	638, 624, -1000, 1462, -1000, -1000, 781, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 822, 16922, 16922, 16922, 1496, 400,
	963, 1507, 1415, 855, 855, 750, 750, 525, 525, 525,
	525, 525, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	949, -1000, 1305, -1000, 1768, 1223, 1003, -1000, 1305, 1305,
	1211, 15776, -1000, -1000, 646, -1000, 16349, 1003, -1000, -1000,
	1003, 1003, 1377, 1362, 1985, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1424, 1374, 1374, 1374,
	1374, 1374, 16349, 1169, -1000, -1000, -1000, 1812, 1802, 1003,
	1190, 1003, 1353, -1000, 1795, 1374, 1773, 1758, 1740, 1389,
	1717, 1674, 1636, 1003, 15776, 15776, 1351, 1462, 444, -1000,
	1305, 1003, 1003, 1305, 1305, 10021, 1003, -1000, 38133, -1000,
	-305, -1000, -65, 548, 1462, -1000, 26673, 1003, -1000, 5509,
	-1000, 39279, -1000, -1000, -1000, -1000, -1000, 24381, 1350, 1920,
	-1000, -1000, 1462, 1339, -1000, -1000, 279, 29, 23808, -1000,
	-1000, 1047, 1047, 16349, -1000, -1000, -1000, -1000, -1000, -1000,
	443, 1976, 294, 1462, -1000, 1400, 1722, -1000, -1000, -1000,
	1900, 18646, -1000, 1462, 1462, 38133, 1637, 1442, -1000, 442,
	-1000, 1321, -42, -11, -1000, -1000, -1000, -1000, 1047, -1000,
	922, 255, 2276, -1000, 332, -1000, -1000, -1000, -1000, 1793,
	36, -1000, -1000, -1000, 279, 279, -1000, -1000, -1000, -1000,
	-1000, -1000, 947, 947, -1000, -1000, -1000, -1000, -1000, 871,
	-1000, -1000, -1000, 868, -1000, -1000, 1629, 1653, 222, -1000,
	-1000, 574, 946, 1799, 38133, -1000, -1000, 1132, 177, 38133,
	622, 1669, -1000, 1617, 1617, 1617, 38133, -1000, -1000, -1000,
	-1000, -383, 47, 306, -1000, -1000, -1000, 3036, 38133, 1331,
	-1000, 152, -1000, 1111, 1745, 38133, -1000, 1329, 1527, 1057,
	1057, -1000, -1000, -1000, 38133, 1462, -1000, -1000, -1000, -1000,
	394, 1848, 1835, 154, 152, 478, 1057, -1000, -1000, -1000,
	-1000, -1000, -375, 1324, 362, 160, 261, 38133, 38133, 38133,
	38133, 38133, 418, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 197, 355, -1000, 38133, 38133, 579, -1000, -1000, -1000,
	691, -1000, -1000, 691, -1000, -1000, -1000, -1000, -1000, 1829,
	38133, -53, -351, -1000, -342, 16349, -1000, -1000, -1000, -1000,
	1306, 380, 963, 16922, 16922, 15776, -122, 483, 483, 630,
	-1000, -1000, -1000, 16349, 16349, 1394, 611, -1000, 16349, 1021,
	-1000, -1000, -1000, 16349, 16349, 16349, 1003, 230, -1000, -1000,
	-1000, -1000, -1000, 1982, -1000, 16349, 16349, 16349, -1000, -1000,
	16349, 16349, -1000, 16349, 16349, 17495, 1003, 17495, 16349, 16349,
	17495, -1000, 1305, 1305, 15776, 10021, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 548, -1000, 450, 450,
	450, 38133, -1000, -1000, -1000, -1000, -1000, -1000, 1264, 1924,
	-1000, 1744, 1741, 1975, 1976, -1000, 20943, 1920, -1000, -1000,
	38133, -287, -1000, 1775, 1766, -1000, -1000, -1000, -1000, 8287,
	1916, 16349, 1667, 38133, 1462, -1000, 20370, 38133, 38133, 20943,
	20943, 20943, 20943, 20943, -1000, 1690, 1647, -1000, 1709, 1697,
	1715, 38133, -1000, 1302, 1003, 1960, 18646, 297, 16349, 22662,
	1193, 20943, -1000, -1000, 20943, 38133, 7709, -1000, -1000, -59,
	-66, -1000, -1000, -1000, -1000, 693, -1000, -1000, 1242, 1896,
	1791, -1000, -1000, -1000, -1000, 1300, -1000, 1283, 1252, 1280,
	146, -1000, 1602, 1827, 574, 574, -1000, 867, -1000, 1057,
	-1000, -1000, 361, -1000, 1873, 38133, 1661, 1655, 1654, -1000,
	-394, 837, 1526, 1468, 16349, 1524, 1950, 1229, 38133, -1000,
	-1000, 38133, -1000, -1000, 353, -1000, 222, 38133, -1000, -1000,
	-1000, 245, 38133, -1000, 5903, 152, -1000, -1000, -1000, -1000,
	-1000, -1000, 38133, 166, -1000, 1518, 1019, -1000, -1000, 1509,
	-1000, -1000, -1000, -1000, 147, 212, -1000, 38133, 481, 1653,
	38133, -1000, -1000, -1000, 688, 688, -1000, -1000, 1825, -1000,
	1057, 1374, 16922, 16922, -1000, 497, -1000, 1462, 1003, 1511,
	1511, -1000, 1511, 1512, -1000, 1511, 103, 1511, 102, 1511,
	-1000, -1000, 1003, 1003, 1202, 1149, -108, -1000, 1047, 16349,
	1612, 1601, 1374, -1000, 1506, 1487, 16349, 1374, 1374, 1374,
	-1000, 1047, 1389, 1597, 1155, -1000, -1000, -1000, -1000, 1236,
	1374, 1590, 1003, -1000, -1000, 1003, -1000, -1000, 1894, 1894,
	1894, 1267, 38706, 38133, -1000, -1000, -1000, -1000, 1976, 1961,
	1231, -1000, -1000, 29, 348, -1000, 1772, 1766, -1000, 1949,
	1759, 1946, -1000, -1000, -1000, 1047, -1000, 1853, 1217, -1000,
	570, 1188, -1000, -1000, 15203, 1276, 1739, 438, 1267, 1186,
	1722, 1614, 1650, 2105, -1000, -1000, -1000, -1000, 1646, -1000,
	1639, -1000, -1000, 1469, -1000, -1000, 1129, 1003, 1501, 251,
	20943, 1181, 1181, -1000, 430, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 703, 5774, 2001, -1000, 944, -1000, 917, -1000,
	647, 635, -1000, 38133, 1486, -1000, 279, 943, 279, 800,
	-1000, 796, -1000, -1000, -199, -1000, -1000, 1448, 1662, -1000,
	-1000, 38133, -1000, -1000, 38133, 38133, 38133, 1485, 1941, -1000,
	16349, 1482, 567, 1455, 38133, 38133, -1000, -1000, 237, 1462,
	-1000, 1225, 1179, -1000, -152, -1000, 16349, -1000, -1000, -1000,
	864, 864, -1000, 1469, -1000, -1000, -1000, 1107, -1000, -1000,
	-134, 38133, 38133, 38133, 38133, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 497, 16922, -1000, -1000, 279,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16349,
	-1000, 16349, -1000, 1916, 940, 1047, 16349, 16349, -1000, 775,
	759, 1374, -1000, -1000, -1000, 1003, 17495, -1000, 17495, -1000,
	16349, -1000, -1000, 1462, 1876, 1462, 1462, 22662, -1000, -1000,
	1961, 1962, 1936, 1751, 1755, 1755, 1772, -1000, 1932, 1929,
	-1000, 939, 1926, 938, 631, -1000, 38133, 16349, 1462, -1000,
	295, 38133, 1462, 38133, -1000, 1957, -1000, -1000, 16349, 1479,
	-1000, 16349, -1000, -1000, -1000, -1000, -1000, -1000, 5944, 1976,
	1181, -1000, -1000, 532, -1000, 16349, -1000, -1000, -1000, 2774,
	-1000, -1000, -1000, -1000, -1000, 1472, 16349, -1000, -1000, -1000,
	1089, 1082, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1469, -1000, -1000, -1000, -1000, 245, -386, 1431, 38133, 748,
	-1000, 1173, 1229, 434, -1000, 16349, 298, -1000, 245, -1000,
	-164, -165, 1374, -1000, -1000, 1889, -1000, -1000, 10021, -1000,
	-1000, 1464, 1615, -1000, 202, -1000, 1374, 1374, 1003, -1000,
	1374, 1374, 1065, 1063, -1000, -1000, 1155, -1000, 998, 23235,
	-1000, 1922, 1912, 26100, 26100, 548, 1962, -1000, 16349, 16349,
	1743, 765, -1000, -1000, -1000, -1000, 935, 912, -1000, 908,
	-1000, 2000, -1000, 1047, -1000, 1462, -1000, 425, 1188, -1000,
	1916, 1047, 38133, 1047, 32, 1957, -1000, 1374, -1000, 1462,
	1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462,
	1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 38133, 1145,
	-1000, -1000, 1887, 1142, 46, -1000, 1136, -1000, -1000, -1000,
	-1000, 14630, -1000, -1000, -1000, -1000, -1000, -1000, 297, 1215,
	-1000, 566, 38133, 38133, 1003, 249, -144, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16349, 1131, -1000, -1000,
	-1000, -1000, -1000, 1131, 1131, -1000, -1000, 1047, 1190, -1000,
	749, -1000, -1000, -1000, -1000, -1000, 38133, 1188, 38133, -1000,
	1127, 1003, 1462, 1916, -1000, 1106, -1000, 297, -1000, 1458,
	1468, -1000, 1003, -133, 10021, 7131, 1102, -1000, -1000, 1707,
	-127, -150, 1389, 25527, -1000, -1000, -1000, -1000, -1000, 1152,
	-1000, -1000, 22662, 37560, -1000, 1641, 767, -133, 16349, 1453,
	-1000, -1000, -45, -1000, -1000, -1000, -1000, -1000, 1509, -1000,
	1693, -1000, 1003, -1000, -1000, -1000, 1094, -1000, 2612, -232,
	1624, -1000, 1981, -1000, -1000, -1000, 699, 783, -1000, -1000,
	-1000, -1000, 1067, 38133, 334, -1000, -1000, -134, -136, -1000,
	-1000, 37560, -223, 478, 5944, -1000, -1000, 1983, 573, 573,
	-1000, -1000, -396, 1051, 171, -1000, -146, -1000, -1000, 1871,
	32, -1000, -1000, -1000, 333, 793, -1000, -1000, 746, -396,
	-1000, -156, -233, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5944, 183, 183, -1000, 1623, -1000, -1000, 5944, -1000,
	1620, -247, -1000, -335, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2345, 2343, 19, 2, 2341, 37, 88, 193, 21,
	176, 102, 2340, 2338, 2335, 2334, 2333, 2332, 2330, 205,
	204, 203, 2329, 2328, 2327, 2324, 2323, 2322, 2314, 2313,
	2311, 2310, 201, 155, 173, 2309, 2308, 2306, 100, 169,
	80, 82, 172, 2305, 2304, 79, 2301, 2300, 2299, 167,
	165, 707, 2298, 163, 107, 36, 2295, 2293, 2291, 2290,
	2288, 2287, 2286, 2285, 2284, 2282, 2279, 2278, 2277, 2276,
	2275, 2274, 267, 2273, 2272, 14, 2270, 83, 2269, 2268,
	2267, 2264, 120, 2263, 2262, 2261, 2259, 2258, 2257, 138,
	2256, 2253, 2249, 2248, 191, 2246, 2243, 278, 98, 110,
	2242, 2241, 90, 174, 2240, 106, 2239, 2238, 2237, 146,
	2236, 4278, 2234, 60, 55, 2233, 175, 73, 53, 52,
	15, 4, 2231, 2230, 58, 76, 2228, 93, 65, 2226,
	91, 94, 2225, 2224, 9, 6, 2223, 5, 2215, 3,
	67, 2211, 2210, 119, 2208, 2204, 2203, 89, 2202, 2201,
	4762, 2200, 81, 126, 95, 70, 2199, 35, 46, 2197,
	2196, 2195, 2194, 2193, 41, 2192, 2191, 2189, 136, 29,
	159, 34, 66, 44, 134, 2188, 42, 74, 2187, 133,
	132, 2186, 47, 28, 30, 2183, 26, 122, 149, 27,
	104, 128, 2179, 2176, 45, 68, 2163, 2162, 2159, 2158,
	2157, 2156, 69, 2153, 48, 2152, 183, 2150, 22, 2149,
	39, 33, 2147, 61, 130, 63, 24, 2146, 161, 2145,
	43, 157, 121, 153, 2143, 2137, 2136, 2135, 171, 269,
	2134, 2133, 75, 156, 140, 143, 2132, 272, 2131, 2129,
	92, 1501, 2055, 20, 158, 2128, 2124, 3135, 139, 127,
	18, 2122, 137, 2121, 2109, 2106, 177, 160, 105, 845,
	96, 2104, 12, 2103, 2102, 2101, 2100, 2098, 2097, 84,
	186, 59, 8, 150, 71, 2096, 2095, 2094, 116, 99,
	2093, 152, 148, 124, 111, 2089, 162, 154, 123, 2085,
	85, 2084, 2083, 2082, 2079, 86, 2078, 2077, 2076, 2073,
	151, 144, 118, 77, 2071, 78, 108, 147, 141, 40,
	2070, 32, 2069, 2068, 170, 23, 2067, 10, 50, 49,
	25, 101, 2064, 2060, 0, 2059, 13, 164, 249, 145,
	2057, 2053, 7, 2049, 11, 2044, 131, 2039, 2036, 2035,
	17, 31, 16, 1, 2034, 2033, 3901, 3109, 125, 2029,
	178,
}

//line sql.y:6555
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 324, 324,
	324, 327, 327, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 259, 259, 24, 24, 24, 24, 24, 95,
	95, 326, 326, 325, 317, 317, 316, 316, 315, 323,
	323, 322, 322, 321, 36, 37, 46, 46, 46, 46,
	47, 48, 328, 328, 291, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 293, 293, 280,
	280, 292, 292, 292, 292, 292, 292, 292, 279, 279,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 124, 113, 113,
	114, 112, 112, 112, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 123, 123, 119,
	119, 119, 120, 120, 120, 121, 121, 340, 340, 340,
	340, 262, 262, 262, 262, 265, 265, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 264, 264, 264, 264,
	264, 266, 266, 266, 266, 266, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 268, 268, 268, 268, 268, 268, 268, 268, 278,
	278, 269, 269, 273, 273, 274, 274, 274, 275, 275,
	275, 276, 276, 271, 271, 271, 271, 271, 271, 272,
	272, 272, 281, 305, 305, 304, 304, 302, 302, 302,
	302, 290, 290, 299, 299, 299, 299, 299, 289, 289,
	285, 285, 285, 286, 286, 287, 287, 284, 284, 288,
	288, 301, 301, 300, 282, 282, 283, 283, 307, 341,
	341, 341, 341, 342, 342, 308, 333, 334, 332, 332,
	332, 332, 332, 77, 77, 77, 236, 236, 236, 297,
	297, 296, 296, 296, 298, 298, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 231, 231, 231, 331, 331, 331,
	331, 331, 331, 330, 330, 330, 294, 294, 294, 329,
	329, 54, 54, 177, 177, 43, 43, 43, 43, 43,
	43, 42, 42, 42, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 44, 44, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 82, 82,
	83, 83, 83, 83, 84, 84, 84, 310, 310, 55,
	55, 3, 3, 133, 135, 136, 136, 134, 134, 134,
	134, 134, 134, 57, 57, 56, 56, 138, 137, 139,
	139, 139, 1, 1, 2, 2, 4, 4, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	277, 277, 277, 309, 309, 311, 313, 313, 313, 313,
	312, 91, 91, 26, 35, 35, 27, 27, 27, 27,
	28, 28, 58, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 230, 230, 238, 238, 229, 229, 252,
	252, 252, 232, 232, 232, 233, 233, 338, 338, 338,
	226, 226, 60, 60, 60, 62, 62, 63, 64, 64,
	254, 254, 255, 255, 65, 66, 78, 78, 78, 78,
	78, 78, 81, 81, 81, 13, 13, 13, 13, 74,
	74, 74, 12, 12, 61, 61, 68, 335, 335, 336,
	337, 337, 337, 337, 69, 71, 29, 29, 29, 29,
	29, 29, 101, 101, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 96, 96, 96, 90,
	90, 349, 72, 73, 73, 94, 94, 94, 87, 87,
	87, 93, 93, 93, 14, 14, 15, 212, 212, 16,
	16, 98, 98, 100, 100, 100, 100, 100, 102, 102,
	102, 102, 102, 102, 102, 97, 97, 99, 99, 99,
	99, 245, 245, 245, 244, 244, 127, 127, 129, 128,
	128, 130, 130, 131, 131, 131, 131, 175, 175, 153,
	153, 210, 210, 208, 208, 209, 209, 211, 211, 211,
	211, 214, 214, 132, 132, 132, 132, 140, 140, 141,
	141, 142, 142, 253, 253, 250, 250, 250, 249, 249,
	146, 146, 146, 148, 147, 147, 147, 147, 149, 149,
	151, 151, 150, 150, 152, 157, 157, 156, 156, 154,
	154, 154, 154, 155, 155, 155, 155, 158, 158, 111,
	111, 111, 111, 111, 111, 111, 122, 122, 122, 122,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 79, 79, 79,
	227, 227, 159, 159, 167, 167, 167, 167, 160, 160,
	160, 160, 160, 160, 160, 168, 168, 168, 174, 169,
	169, 165, 165, 165, 165, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 320, 320, 319, 319, 318,
	318, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 350, 350, 270, 270, 270, 270, 166, 166,
	166, 166, 166, 92, 92, 92, 92, 92, 258, 258,
	258, 261, 261, 261, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 180,
	180, 88, 88, 178, 178, 179, 181, 181, 176, 176,
	176, 162, 162, 162, 182, 182, 183, 183, 184, 184,
	186, 185, 185, 187, 188, 188, 188, 189, 189, 190,
	190, 190, 45, 45, 45, 45, 45, 40, 40, 40,
	40, 41, 41, 41, 103, 103, 103, 103, 105, 105,
	104, 104, 75, 75, 76, 76, 76, 109, 109, 110,
	110, 110, 107, 107, 108, 108, 206, 206, 191, 191,
	191, 198, 198, 198, 194, 194, 196, 196, 196, 197,
	197, 197, 195, 203, 203, 205, 205, 204, 204, 200,
	200, 201, 201, 202, 202, 202, 199, 199, 161, 161,
	161, 161, 161, 207, 207, 207, 207, 215, 215, 171,
	171, 173, 173, 172, 126, 216, 216, 220, 217, 217,
	221, 221, 221, 221, 221, 218, 218, 219, 219, 246,
	246, 246, 225, 225, 237, 237, 234, 234, 235, 235,
	228, 228, 239, 239, 239, 70, 170, 170, 306, 306,
	303, 242, 242, 243, 243, 247, 247, 251, 251, 248,
	248, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 346, 347, 256, 257, 257, 257,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 4, 4, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 1, 1, 1,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 6, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 9,
	10, -80, -31, 32, -36, -46, 218, -47, -37, 219,
	-48, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -81, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -8, -32, 8, -346,
	11, 429, 252, 251, 28, -10, 449, 85, -345, 582,
	-206, -191, 22, 33, 29, -190, -186, -94, -191, 20,
	18, 7, -72, -349, -72, -72, 12, 13, -72, -291,
	-293, 85, 155, 85, -72, -52, -51, -50, -49, -53,
	31, -43, -44, -314, -42, -39, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-38, 80, 33, 449, 452, -298, 219, 225, 226, 430,
	122, 121, 75, 221, -295, 353, 552, -53, 554, 101,
	103, 553, 44, 231, 555, 556, 557, 558, 240, 559,
	560, 561, 562, 568, 569, 570, 571, 123, 7, -72,
	-251, -247, -324, -241, 88, 89, 90, 446, 243, 479,
	480, 292, 80, 41, 350, 353, 552, 299, 313, 307,
	334, 326, 447, 481, 295, 244, 280, 549, 324, 131,
	554, 298, 482, 258, 358, 359, 360, 101, 302, 396,
	567, 297, 483, 565, 103, 553, 79, 51, 44, 253,
	322, 227, 318, 555, 281, 484, 457, 274, 122, 119,
	574, 36, 316, 50, 30, 564, 121, 49, 556, 146,
	485, 557, 362, 341, 543, 48, 363, 259, 486, 83,
	264, 451, 551, 364, 317, 365, 291, 563, 224, 487,
	535, 366, 367, 544, 488, 342, 346, 489, 388, 368,
	581, 52, 490, 491, 545, 120, 492, 78, 558, 311,
	312, 493, 289, 242, 390, 338, 442, 107, 108, 109,
	110, 443, 111, 104, 444, 112, 106, 105, 113, 339,
	340, 240, 35, 369, 448, 293, 58, 268, 391, 46,
	344, 578, 45, 539, 494, 542, 337, 333, 439, 53,
	495, 496, 497, 498, 559, 336, 310, 332, 573, 4,
	286, 560, 62, 226, 348, 347, 349, 275, 387, 329,
	499, 500, 501, 247, 81, 502, 319, 21, 503, 504,
	370, 282, 505, 56, 506, 507, 394, 256, 508, 54,
	561, 39, 261, 575, 562, 509, 510, 511, 512, 263,
	513, 372, 514, 371, 343, 345, 270, 373, 450, 515,
	315, 260, 566, 516, 248, 550, 262, 267, 255, 395,
	249, 517, 518, 519, 520, 521, 296, 522, 523, 303,
	568, 440, 43, 524, 525, 526, 527, 290, 285, 389,
	398, 61, 82, 355, 528, 548, 309, 283, 529, 300,
	55, 569, 570, 571, 277, 572, 9, 579, 580, 375,
	123, 287, 288, 47, 330, 269, 530, 531, 320, 321,
	335, 308, 331, 301, 536, 271, 376, 441, 257, 532,
	397, 284, 351, 356, 454, 276, 377, 547, 453, 328,
	325, 278, 533, 378, 232, 272, 273, 534, 537, 379,
	380, 294, 381, 382, 383, 384, 385, 386, 279, 452,
	306, 323, 357, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 438, 230, -72, 230, -150, -247, 230, -218, 359,
	-238, 361, 374, 369, 379, 367, -230, 370, 372, 270,
	-338, 388, 230, 376, 218, 362, 371, 380, 381, 294,
	382, 386, 279, 383, 384, 385, -324, 172, 557, 572,
	131, 327, 366, 364, 389, 539, -247, 301, -254, 306,
	-242, -324, -241, 304, -150, -78, 535, 222, -256, -256,
	-96, 539, 541, -169, -111, 139, -122, -125, -116, -117,
	-163, -164, -165, -166, -123, -176, 161, 162, 169, 140,
	-174, -126, 26, 445, 431, 430, 172, 31, 214, 68,
	69, 433, 434, 142, 57, 406, 407, -124, 401, 408,
	403, 436, 437, 114, 438, 104, 106, 105, 439, 440,
	441, 339, 340, 442, 443, 444, 107, 108, 109, 110,
	111, 112, 113, -242, -247, 235, 400, 229, 167, 429,
	-118, -114, -6, -172, 399, 404, 405, 409, 402, -324,
	-241, -120, -119, -159, 91, 97, 102, 98, -343, 115,
	-346, 92, 93, 94, 95, 96, 116, 117, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 44,
	375, 375, -150, -72, -72, -72, -72, -184, -94, -186,
	-8, -6, -346, 8, -72, -6, -7, -11, -32, -34,
	475, -33, -247, -191, -206, 12, 157, 42, 50, -189,
	-190, -10, -6, -111, 19, 23, 24, -99, 163, -111,
	-247, -73, -99, -228, 234, -72, -72, -217, -259, 301,
	-221, 389, 388, -243, -219, -242, -240, -218, 387, 223,
	23, 455, 138, 25, 27, 141, 172, 126, 19, 142,
	37, 225, 327, 241, 171, 237, 430, 218, 72, 456,
	401, 403, 399, 406, 432, 433, 400, 361, 31, 13,
	458, 28, 251, 24, 38, 165, 220, 145, 459, 254,
	26, 252, 114, 117, 461, 22, 75, 246, 14, 239,
	40, 16, 462, 463, 17, 235, 234, 157, 231, 70,
	11, 214, 29, 154, 66, 464, 133, 465, 466, 467,
	468, 127, 68, 155, 20, 576, 404, 405, 33, 540,
	445, 265, 167, 73, 59, 541, 139, 402, 469, 470,
	115, 471, 118, 76, 546, 135, 18, 71, 42, 472,
	266, 473, 236, 577, 474, 392, 475, 156, 221, 429,
	69, 476, 229, 374, 8, 435, 32, 250, 238, 125,
	67, 477, 230, 144, 436, 437, 233, 128, 116, 7,
	132, 34, 12, 74, 77, 407, 408, 409, 57, 124,
	449, 143, 15, 478, 393, 137, 131, -292, 155, -279,
	-283, -242, 245, -308, 241, -150, -301, -300, -242, -95,
	-237, 231, 239, 238, 132, -328, 135, 287, 400, 229,
	-49, -50, -218, 171, -82, 262, 266, 86, 86, -283,
	-282, -281, -329, 266, 245, -307, -299, 237, 246, -289,
	238, 239, -284, 231, 133, -329, -284, 236, 246, 266,
	266, 123, 266, 123, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 261, -290, 147, -290, 453, 453, -295,
	-329, -329, -329, 233, 35, 35, -239, -284, 233, 25,
	-290, -290, -218, 171, -290, -290, -290, -290, 274, 274,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, 230, -328, -103, 386, 294,
	80, -51, 276, -35, -150, -237, 231, 232, -328, 263,
	-150, 215, -150, -232, 155, 15, -232, -229, 375, 373,
	360, 365, -232, -232, -232, -232, 277, 358, -285, 231,
	35, 242, 375, 277, 358, 277, 278, 277, 278, 368,
	378, 277, -252, 14, 157, 400, 363, 367, 270, 230,
	271, 232, 377, 278, -252, 92, -233, 155, 375, 273,
	-232, -232, -257, -346, -243, 327, -324, 542, -257, -257,
	32, 89, 233, -242, -74, -242, 92, -13, -9, -20,
	-19, -21, 147, -101, 375, -89, 172, 557, 543, 544,
	545, 542, 372, 550, 548, 546, 277, 547, 86, 135,
	137, 138, 4, -111, 154, -160, 147, 148, 149, 150,
	151, 152, 153, 157, 139, 141, 155, 156, 136, 158,
	159, 160, 161, 162, 163, 164, 166, 165, 167, 168,
	171, 216, 217, -117, -117, -117, -117, -174, -346, -346,
	-346, -117, -227, -346, -117, -346, -346, -346, -346, -180,
	-111, -346, -350, -346, -350, -350, -270, -346, -270, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, 215, -346, -346, -346, -346, -346, -270, -270,
	-270, -270, -270, 102, 97, 91, -176, 98, 92, -242,
	-247, -6, -7, -169, -256, -335, -336, -153, -150, -346,
	294, -242, -242, 263, -189, -10, -6, -184, -190, -186,
	-6, -72, -87, -100, 63, 64, -102, 24, 38, 67,
	65, 23, -347, 87, -347, -206, -347, 86, -34, -210,
	85, 61, 43, 92, 92, 86, 21, -185, -187, -111,
	14, -245, 4, -244, 25, -242, 92, 215, 100, 14,
	-151, 29, -150, -228, -228, 86, 301, -221, -259, -223,
	-222, 390, 392, 147, -246, -242, 92, 31, 87, 86,
	-150, -262, -265, -267, -266, -268, -263, -264, 324, 325,
	172, 328, 330, 331, 332, 333, 334, 335, 336, 337,
	338, 341, 32, 253, 320, 321, 322, 323, 342, 343,
	344, 345, 346, 347, 348, 349, 307, 326, 447, 308,
	309, 310, 311, 312, 313, 315, 316, 317, 318, 319,
	-327, -324, 85, 87, 86, -269, 85, -103, 230, -324,
	231, 231, 231, -72, 429, -290, -290, 261, 19, -42,
	-39, -314, 18, -38, -39, 223, 119, 120, 220, 85,
	-279, 85, -288, -327, -324, 85, 133, 236, 132, -287,
	-284, -287, -288, -324, -176, -324, 133, 133, -214, -242,
	-214, -214, 23, -214, 23, -214, 23, 94, -242, -214,
	23, -214, 23, -214, 23, -214, 23, -214, 23, 31,
	78, 79, 31, 81, 82, 83, -176, -176, -279, -218,
	-150, -324, 94, 94, -290, -290, 94, 92, 92, 92,
	-290, -290, 94, 92, -249, -247, 92, -330, 247, 291,
	293, 94, 94, 94, 94, 31, 92, -331, 31, 564,
	563, 565, 566, 567, 94, 31, 94, 31, 94, -242,
	85, -150, -109, 281, 218, 220, 223, 76, 92, 295,
	147, 44, 86, 233, 230, -324, -234, 235, -234, -242,
	-248, -247, -240, 92, -111, -286, 14, 157, -252, -252,
	-232, -150, -286, -252, -232, -150, -232, -232, -232, -232,
	-252, -252, -252, -232, -247, -247, -150, -150, -150, -150,
	-150, -150, -150, -257, -233, -232, 542, 92, -226, 14,
	76, -257, -257, -255, 304, 338, 536, 537, 538, 86,
	449, -143, -150, 542, 542, 542, 542, 542, 542, -111,
	-111, -111, -111, 471, -167, 115, 139, 116, 117, -125,
	-168, -172, -174, 99, 157, 141, 155, 156, -116, -117,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -258, -324, 92, 172, -121, -120, 98,
	-343, -121, -97, -99, -111, -111, -324, -242, -97, -97,
	-111, -93, 24, 38, -178, -179, 143, -176, -347, -347,
	94, 98, -242, -242, -86, -85, 411, 412, 413, 414,
	416, 417, 418, 421, 422, 426, 427, 410, 428, 415,
	420, 423, 424, 425, 419, 323, -111, -111, -111, -111,
	-111, -111, -79, -111, 126, 127, 128, -111, -111, -170,
	-169, -323, -322, -321, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -98, 24, 38, -97, -243, -248, -240,
	-97, -98, -98, -97, -97, 215, -206, -347, 86, -337,
	392, 393, 540, -250, 266, -249, 25, -170, 92, 14,
	-212, 77, -242, -189, -189, 63, 64, 59, -97, -102,
	-347, -33, 25, -208, -242, 62, 92, -271, -218, 350,
	351, -111, -111, 86, -188, 27, 28, -150, -244, 163,
	-248, -150, -213, 266, -150, -128, -130, -131, -132, -153,
	-175, -346, -133, 467, 464, 14, -143, -144, -152, -247,
	-221, -223, 86, 391, 393, 394, 76, 118, -111, -272,
	171, -297, -296, -295, -279, -281, -282, -283, 87, -272,
	-275, 356, 355, -269, -269, -269, -269, -269, -271, -271,
	-271, -271, 85, 85, -269, -269, -269, -269, -273, 85,
	-273, -273, -274, 85, -274, -308, -111, -305, -304, -302,
	-303, 240, 101, 449, 77, -300, -188, 94, -109, -235,
	235, -306, -303, -324, -324, -324, -235, -324, 92, -324,
	92, -83, -55, -1, 576, 577, 578, 86, 19, -280,
	-279, -54, 291, -311, -312, 266, -307, -301, -288, 133,
	-287, -288, -288, -324, 86, 29, 123, 123, 123, 123,
	449, 220, 32, -279, -54, -258, 233, -258, -258, 92,
	92, -231, 572, -143, -105, 283, 147, 272, 272, 230,
	230, 285, -150, 296, 298, 297, 295, 23, 284, 286,
	288, 274, -150, -150, -234, 76, -145, -150, 26, -247,
	-150, -232, -232, -150, -232, -232, -150, -242, -89, 392,
	86, 449, 22, -90, 22, -346, 115, 116, 117, -168,
	-116, -117, -116, 138, 254, 86, -347, 25, 86, 77,
	-347, -347, -347, 86, 14, -97, -181, -179, 145, -111,
	-347, -347, -347, 86, 86, 14, -261, 25, -347, -347,
	-347, -347, -347, -180, -347, 14, 86, 86, -347, -347,
	86, 86, -347, 86, 86, 86, -320, 86, 86, 86,
	86, -347, -97, -97, -346, 215, -347, -347, -347, -347,
	-347, -243, -336, 539, 393, -157, -156, -154, 74, 234,
	75, -346, -249, -347, -121, 89, -209, 89, -208, -162,
	-242, 94, 98, -191, -127, -129, 14, -102, -174, 87,
	86, -271, -195, -200, -229, -242, 92, 172, -187, 215,
	-158, 15, -161, 32, 57, -9, -346, -346, 32, 86,
	-146, -148, -147, -149, 66, 70, 72, 67, 68, 69,
	73, -253, 25, -128, -7, -6, -346, -346, -346, -150,
	-143, -348, 14, 77, -348, 86, 215, -222, -224, 395,
	392, 398, -324, 92, -82, 86, -295, -283, -192, -106,
	40, -276, 357, -271, -271, -278, 92, -278, 94, 94,
	87, -45, -40, -41, 33, 80, -302, -290, 92, 39,
	-242, 87, -105, -150, 139, 76, -306, -306, -306, -247,
	-2, 575, 581, 133, 85, 360, 18, -208, 86, 87,
	-177, 292, 87, -313, 57, -242, 87, 85, -288, -288,
	-242, -346, 230, 31, 31, -54, -177, -272, -324, 574,
	573, 87, 232, 290, -110, 406, -107, 92, 88, -150,
	-150, -150, -150, -150, 223, 220, 275, 233, -143, -150,
	86, -77, 249, 244, -252, -252, 33, -150, 392, 551,
	549, -111, 138, 254, -125, -117, -99, 446, -260, 172,
	324, 253, 322, 318, 338, 329, 355, 320, 356, 317,
	316, 315, -260, -258, -111, -111, -184, 146, -111, 144,
	-111, -111, -111, -347, 172, 324, 14, -111, -111, -111,
	-321, -111, -111, -111, -319, -318, -121, -176, -347, -319,
	-111, -111, -318, -347, -347, -98, -243, -154, -284, -284,
	-284, -214, 86, -225, 22, 14, 57, 57, -127, -158,
	-128, -102, -242, -198, 535, -203, 46, -201, -202, 47,
	-199, 48, 56, 163, -189, -111, -215, 76, -216, -220,
	-176, -171, -173, -172, -346, -207, -347, -242, -214, -216,
	-130, -131, -131, -130, -131, 66, 66, 66, 71, 66,
	71, 66, -147, -247, -347, -347, -7, -7, -111, -250,
	77, -128, -128, -152, -247, 163, 392, 396, 397, -295,
	-342, 115, 139, 31, 76, 353, 101, -340, 171, -341,
	236, 132, 133, 248, 25, 41, 87, 86, 87, 86,
	87, 86, -236, 485, 139, -41, -40, -290, -290, 94,
	-324, 232, 26, -150, 76, 76, 76, -84, 579, 94,
	85, -3, 80, -111, 85, 19, -279, -176, 268, 157,
	-305, -208, -309, -311, -150, -113, -346, -112, -114, -118,
	161, 162, -177, -150, -104, 281, 289, 85, -108, 89,
	-326, 77, 272, 353, 272, -150, -77, -45, -150, -232,
	-232, 33, -324, -347, -125, -117, -346, -347, -269, -269,
	-269, -274, -269, 312, -269, 312, -269, -347, -347, 86,
	-347, 22, -347, -88, 435, -111, 86, 86, -347, 85,
	85, -111, -347, -347, -347, -320, 86, -347, 86, -347,
	86, -347, -347, -155, 22, -155, -155, -347, 89, -150,
	-158, -182, 16, -195, 51, 330, -205, -204, 55, 47,
	-202, 19, 49, 19, 30, -215, 86, 147, 86, -347,
	-347, 86, 57, 215, -347, -158, -141, -140, 76, 77,
	-142, 76, -140, 66, 66, -210, -347, -347, 86, -213,
	-128, -158, -158, 215, 115, -346, -115, -124, -113, 12,
	92, 92, -324, 133, 133, -150, 85, -271, 92, -271,
	94, 94, 485, 31, 81, 82, 83, 31, 78, 79,
	-150, -150, -150, -150, -310, 85, 19, -111, 85, 147,
	87, -208, -208, 269, -172, -346, 87, -347, 86, -277,
	449, 452, -111, -119, -119, -210, 87, -317, 449, -325,
	-242, -242, -242, -242, -116, -271, -111, -111, -189, 92,
	-111, -111, 94, 94, -347, -347, -319, -318, -111, -346,
	66, 18, 16, -346, -346, -250, -182, -183, 17, 19,
	-196, 53, -194, 52, -194, -204, 19, 19, 92, 19,
	92, 133, -220, -111, -173, 57, -9, -242, -171, -242,
	-184, -111, 85, -111, -121, -158, -158, -111, -164, 438,
	104, 106, 105, 439, 440, 441, 339, 340, 442, 443,
	444, 107, 108, 109, 110, 111, 112, 113, 85, -111,
	87, 87, -210, -309, -55, 87, -208, 94, 87, -172,
	-91, -346, 265, -341, -311, 453, 453, -347, 25, -316,
	-315, -243, 85, 77, -92, 157, 449, -347, -347, -347,
	-347, -347, 87, 87, -347, -347, 86, -211, -347, -242,
	236, 19, 19, -211, -211, -157, -183, -111, -169, -197,
	54, 76, 118, 92, 92, 92, 12, -171, 215, -189,
	-208, -135, 360, -184, -347, -208, 87, 25, 87, 581,
	133, 87, 265, -9, 86, 147, -208, -150, -347, 447,
	73, 450, -111, 86, -347, -347, -347, 76, 118, -216,
	-242, 87, -347, -346, -189, 87, -193, -9, 85, -3,
	-347, -75, 449, -315, -294, -243, 92, 94, 87, 62,
	448, 451, -320, -242, 236, -250, -136, -134, -242, 499,
	-333, -334, 76, -342, -339, 115, 139, 101, -340, 124,
	125, -75, -111, 85, -76, 280, 539, -326, 62, -347,
	-347, 86, 22, -262, -57, 509, -334, 76, 13, 12,
	115, 92, 87, -208, 241, -317, 449, -134, 506, -272,
	-121, -332, 249, 244, 247, 32, -332, -4, 580, 87,
	282, 450, -56, 26, -135, 243, 31, 115, 94, -4,
	451, 509, -121, -138, -137, -139, 543, 115, 31, -137,
	-139, 76, -121, 76, 459, 543,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 741,
	741, 741, 0, 741, 0, 0, 741, -2, -2, 741,
	1207, 0, 741, 0, 0, -2, 673, 675, 0, 677,
	-2, 0, 0, 686, 1685, 1685, 736, 0, 0, 0,
	0, 0, 741, 741, 741, 741, 1068, 48, 741, 0,
	83, 84, 692, 693, 694, 63, 0, 1683, 1, 3,
	69, 73, 0, 0, 0, 56, 1077, 0, 76, 0,
	0, 745, 0, 743, 0, 1190, 741, 741, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 518, 458, 501, 456, 487, -2, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 351, 351, 0, 0, -2, 449, 449, 449, 0,
	0, 0, 484, 1192, 404, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1094,
	151, 1208, 1205, 1206, 38, 39, 40, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 0, 1184, 0, 601, 842, 0, 662, 662,
	0, 662, 662, 662, 662, 0, 0, 0, 613, 0,
	0, 0, 0, 659, 0, 629, 630, 0, 659, 0,
	665, 0, 640, 662, 662, 643, 1686, 0, 1686, 1686,
	1175, 0, 656, 654, 668, 669, 672, 676, 0, 681,
	684, 1201, 1202, 0, 699, 47, 1441, 691, 704, 705,
	0, 737, 738, 43, 939, 0, 864, 869, 880, 893,
	894, 895, 896, 897, 899, 900, 0, 0, 0, 0,
	905, 906, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 0, 1049, 0, 1012, 1012, 956, 1012, 1014,
	1014, 0, 0, 0, 1682, 1474, 1477, 1478, 1499, 1582,
	1628, 1480, 1481, 1467, 1472, 1475, 1468, 1469, 1470, 1471,
	1473, 1476, 1479, 1058, 0, 0, 0, 0, 0, 0,
	257, 258, 938, 1164, 1014, 1014, 1014, 1014, 1014, -2,
	-2, 204, 205, 206, 207, 208, 209, 210, 0, 200,
	0, 262, 263, 259, 260, 261, 922, 923, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 1685,
	0, 714, 0, 0, 0, 0, 0, 1077, 0, 1069,
	1068, 61, 0, 741, -2, 0, 0, 0, 0, 45,
	0, 50, 801, 75, 74, 1116, 0, 0, 0, 57,
	1078, 65, 67, 1079, 0, 746, 747, 0, 777, 781,
	0, 742, 0, 0, 1191, 1190, 1190, 100, 0, 1624,
	1168, -2, -2, 0, 0, 1203, 1204, 1177, -2, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, -2, 0, 0, 161,
	162, 0, 41, 377, 0, 157, 0, 371, 321, 1094,
	0, 0, 0, 0, 0, 741, 0, 1185, 142, 143,
	149, 150, 351, 351, 498, 0, 0, 151, 151, 465,
	466, 467, 0, 0, -2, 375, 0, 450, 0, 0,
	365, 365, 369, 367, 368, 0, 0, 0, 0, 0,
	0, 478, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 352, 0, 496, 497, 405,
	0, 0, 0, 0, 476, 477, 0, 0, 1193, 1194,
	0, 0, 351, 351, 0, 0, 0, 0, 351, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 1107, 0, 0,
	0, -2, 0, 593, 0, 0, 0, 1186, 1186, 0,
	600, 0, 602, 603, 0, 0, 604, 0, 659, 659,
	657, 658, 606, 607, 608, 609, 662, 0, 0, 360,
	361, 362, 659, 662, 0, 662, 662, 662, 662, 659,
	659, 659, 662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 665, 662, 0, 636, 0, 637, 638,
	641, 642, 644, 1687, 1688, 1224, 1686, 1686, 648, 652,
	1176, 674, 682, 685, 702, 700, 701, 703, 695, 696,
	697, 698, 0, 716, 717, 722, 0, 0, 0, 0,
	728, 729, 730, 0, 0, 733, 734, 735, 0, 0,
	0, 0, 0, 862, 0, 0, 928, 929, 930, 931,
	932, 933, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 901, 902, 903, 904, 907, 0, 0,
	0, 912, 913, 0, 0, 0, 0, 0, 751, 0,
	1050, 0, 954, 0, 955, 957, 958, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 0, 0, 761, 761, 0, 0, 193, 194,
	195, 196, 197, 211, 212, 213, 214, 215, 264, 1058,
	0, 938, 0, 0, 44, 706, 707, 0, 825, 1196,
	0, 0, 757, 0, 55, 64, 66, 1077, 59, 1077,
	0, 763, 0, 0, -2, -2, 764, 770, 771, 772,
	773, 774, 52, 1684, 53, 0, 72, 0, 46, 0,
	0, 0, 0, 333, 1119, 0, 0, 1070, 1071, 1074,
	0, 778, 1510, 782, 0, 784, 785, 0, 744, 0,
	98, 0, 841, 0, 0, 0, 1624, 1174, 0, 102,
	103, 0, 0, 0, 339, 1179, 1180, 1181, -2, 358,
	0, 339, 328, 272, 273, 274, 321, 276, 321, 321,
	321, 321, 333, 333, 333, 333, 304, 305, 306, 307,
	308, 0, 0, 291, 321, 321, 321, 321, 311, 312,
	313, 314, 315, 316, 317, 318, 277, 278, 279, 280,
	281, 282, 283, 284, 285, 323, 323, 323, 325, 325,
	0, 42, 0, 343, 0, 1074, 0, 1107, 1188, 1198,
	0, 0, 0, 1188, 120, 0, 0, 499, 529, 459,
	488, 500, 0, 462, 463, -2, 0, 0, 449, 0,
	451, 0, 359, 0, -2, 0, 369, 0, 365, 369,
	366, 369, 357, 370, 480, 481, 482, 0, 559, 811,
	0, 0, 0, 0, 0, 565, 566, 567, 0, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 489,
	490, 491, 492, 493, 494, 495, 0, 0, 451, 0,
	485, 0, 406, 407, 0, 0, 410, 411, 412, 413,
	0, 0, 416, 417, 418, 828, 829, 419, 443, 444,
	445, 420, 421, 422, 423, 424, 425, 426, 437, 438,
	439, 440, 441, 442, 427, 428, 429, 430, 431, 434,
	0, 135, 1098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 760,
	843, 1209, 1210, 663, 664, 0, 363, 364, 662, 662,
	610, 649, 0, 662, 614, 650, 615, 617, 616, 618,
	631, 632, 662, 621, 660, 661, 622, 623, 624, 625,
	626, 627, 628, 645, 633, 634, 635, 666, 0, 670,
	671, 646, 647, 0, 683, 687, 688, 689, 690, 0,
	0, 719, 94, 724, 725, 726, 727, 739, 732, 940,
	859, 860, 861, 0, 863, 866, 0, 924, 926, 868,
	870, 935, 936, 937, 0, 0, 0, 0, 0, 874,
	878, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 898, 1028, 1029, 1030, 915, 265, 266,
	0, 916, 0, 775, 0, 0, 0, 914, 0, 0,
	0, 0, 752, 753, 1056, 1053, 0, 0, 1013, 1015,
	0, 0, 0, 0, 0, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1031, 0, 0, 0,
	0, 0, 1049, 0, 917, 918, 919, 0, 0, 0,
	1197, 0, 130, 131, 0, 0, 0, 0, 0, 985,
	0, 0, 0, 0, 0, 0, 762, 1059, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 709,
	710, 712, 0, 845, 0, 826, 0, 0, 715, 0,
	756, 0, 759, 58, 60, 768, 769, 0, 786, 765,
	54, 49, 0, 0, 803, 1117, 333, 1139, 0, 337,
	338, 1080, 1081, 0, 1073, 1075, 1076, 77, 783, 779,
	0, 857, 0, 0, 840, 0, 789, 791, 792, 793,
	823, 0, 796, 0, 0, 0, 0, 0, 96, 842,
	1169, 101, 0, 0, 106, 107, 1170, 1171, 1172, 1173,
	0, 518, -2, 401, 163, 165, 166, 167, 158, -2,
	331, 329, 330, 275, 333, 333, 298, 299, 300, 301,
	302, 303, 0, 0, 292, 293, 294, 295, 286, 0,
	287, 288, 289, 0, 290, 376, 0, 1082, 344, 345,
	347, 351, 0, 0, 0, 372, 373, 0, 1098, 0,
	0, 0, 1199, 1198, 1198, 1198, 0, 153, 154, 155,
	156, 554, 0, 0, 530, 552, 553, 151, 0, 0,
	159, 453, 452, 0, 586, 0, 374, 0, 0, 369,
	369, 354, 355, 483, 0, 0, 561, 562, 563, 564,
	0, 0, 0, 451, 453, 339, 0, 408, 409, 414,
	415, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 1095, 1096,
	1097, 0, 0, 594, 0, 0, 393, 92, 1187, 599,
	659, 620, 651, 659, 612, 619, 639, 679, 723, 0,
	0, 0, 0, 731, 0, 0, 867, 925, 927, 871,
	0, 875, 879, 0, 0, 0, 0, 0, 0, 0,
	921, 945, 946, 0, 0, 1068, 0, 1054, 0, 0,
	953, 1016, 1017, 0, 0, 0, 0, 0, 964, 965,
	966, 967, 968, 0, 970, 0, 0, 0, 974, 975,
	0, 0, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 761, 0, 1018, 1019, 1020, 1021,
	1022, 1059, 708, 711, 713, 799, 846, 847, 0, 0,
	0, 0, 827, 1195, 754, 755, 758, -2, 0, 0,
	1061, 0, 0, 786, 857, 787, 0, 766, 51, 802,
	0, 1121, 1120, 1133, 1146, 334, 335, 336, 1072, 0,
	1077, 0, 1157, 0, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 0, 833, 0, 0,
	0, 0, 824, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 90, 91, 0, 0, 0, 104, 105, 0,
	0, 111, 340, 341, 144, 151, 403, 164, 383, 0,
	0, 271, 332, 296, 297, 0, 319, 0, 0, 0,
	396, 116, 1086, 1085, 351, 351, 346, 0, 349, 0,
	1200, 322, 0, 134, 0, 0, 0, 0, 0, 140,
	524, 0, 0, 531, 0, 0, 0, 457, 0, 468,
	469, 0, 558, 585, 0, 590, 343, 0, 353, 356,
	812, 0, 0, 470, 0, 453, 474, 475, 486, 435,
	436, 433, 0, 0, 1108, 1109, 1114, 1112, 1113, 121,
	506, 508, 507, 511, 0, 0, 504, 0, 393, 1082,
	0, 598, 394, 395, 662, 662, 718, 95, 0, 721,
	0, 0, 0, 0, 872, 876, 776, 0, 0, 321,
	321, 1036, 321, 325, 1039, 321, 1041, 321, 1044, 321,
	1047, 1048, 0, 0, 0, 0, 1051, 952, 1057, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	132, 133, 985, 0, 0, 987, 989, 990, 980, 986,
	0, 0, 0, 942, 943, 0, 1060, 848, 853, 853,
	853, 0, 0, 0, 1182, 1183, 1062, 1063, 857, 1064,
	788, 767, 804, 1139, 0, 1132, 0, -2, 1141, 0,
	0, 0, 1147, 780, 78, 858, 81, 0, 1157, 1165,
	0, 1148, 1159, 1161, 0, 0, 0, 1153, 0, 857,
	790, 819, 821, 0, 816, 831, 832, 834, 0, 836,
	0, 838, 839, 801, 795, 797, 0, 0, 0, 98,
	0, 857, 857, 97, 0, 844, 108, 109, 110, 402,
	168, 173, 0, 0, 0, 178, 0, 180, 0, 384,
	0, 268, 270, 0, 0, 171, 333, 0, 333, 0,
	326, 0, 385, 397, 0, 1083, 1084, 0, 0, 348,
	350, 0, 1189, 136, 0, 0, 0, 527, 0, 555,
	0, 0, 0, 0, 0, 0, 160, 454, 0, 0,
	342, 0, 0, 583, 580, 471, 0, 198, 199, 201,
	0, 0, 473, 801, 1099, 1100, 1101, 0, 1111, 1115,
	124, 0, 0, 0, 0, 595, 596, 597, 93, 605,
	611, 720, 740, 865, 873, 877, 0, 909, 1034, 333,
	1037, 1038, 1040, 1042, 1043, 1045, 1046, 910, 911, 0,
	948, 0, 950, 1077, 0, 1055, 0, 0, 962, 0,
	0, 0, 971, 972, 973, 0, 0, 979, 0, 981,
	0, 984, 944, 0, 0, 0, 0, 825, -2, 62,
	1064, 1066, 0, 1126, 1124, 1124, 1134, 1135, 0, 0,
	1142, 0, 0, 0, 0, 82, 0, 0, 0, 1162,
	0, 0, 0, 0, 99, 1068, 813, 820, 0, 0,
	814, 0, 815, 835, 837, 794, -2, 798, 0, 857,
	857, 88, 89, 0, 174, 0, 176, 191, 192, 0,
	179, 181, 182, 267, 269, 0, 0, 309, 320, 310,
	0, 0, 398, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	801, 137, 138, 139, 519, 0, 529, 0, 0, 0,
	522, 0, 460, 0, 589, 0, 0, 560, 0, 568,
	0, 0, 0, 202, 203, 0, 1110, 505, 0, 122,
	123, 0, 0, 510, 1023, 1035, 0, 0, 0, 1052,
	0, 0, 0, 0, 969, 977, 0, 988, 0, 0,
	854, 0, 0, 0, 0, 845, 1066, 80, 0, 0,
	1129, 0, 1122, 1125, 1123, 1136, 0, 0, 1143, 0,
	1145, 0, 1166, 1167, 1160, 0, 1152, 1155, 1151, 1154,
	1077, 817, 0, 822, 0, 1068, 87, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 327, 0, 0, 0, 520, 0, 532, 523, 587,
	588, 0, 591, 378, 584, 581, 582, 472, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 947, 949, 951,
	960, 961, 1032, 1033, 978, 982, 0, 0, 850, 807,
	808, 855, 856, 0, 0, 800, 79, 1067, 1065, 1118,
	0, 1127, 1128, 1137, 1138, 1144, 0, 1150, 0, 85,
	0, 0, 0, 1077, 175, 0, 185, 0, 528, 0,
	531, 521, 0, 1102, 0, 0, 0, 512, 908, 0,
	0, 0, 985, 0, 849, 851, 852, 1130, 1131, 1158,
	1156, 818, 825, 0, 86, 379, 383, 1102, 0, 0,
	592, 502, 1104, 127, 128, 446, 447, 448, 121, 1024,
	0, 1027, 0, 809, 810, 533, 0, 535, 0, -2,
	380, 381, 0, 169, 186, 187, 0, 0, 190, 183,
	184, 117, 0, 0, 0, 1105, 1106, 124, 1025, 983,
	534, 0, 0, 339, 0, 544, 382, 0, 0, 0,
	188, 189, 556, 0, 0, 509, 0, 536, 537, 545,
	0, 386, 388, 389, 0, 0, 387, 525, 0, 556,
	1103, 0, 0, 546, 542, 390, 391, 392, 557, 526,
	1026, 0, 538, 539, 540, 0, 549, 550, 0, 541,
	0, 0, 551, 0, 547, 548,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 582,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:516
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:521
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:576
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:586
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:598
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:602
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:611
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:617
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:621
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:780
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:818
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:830
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:834
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:868
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:878
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:888
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:901
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:923
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:927
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:933
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:937
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:947
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:951
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:965
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:969
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1017
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1032
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1037
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1063
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1085
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1092
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1099
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1104
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1109
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1121
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1128
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1139
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1150
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1156
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1160
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1184
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1188
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1205
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1209
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1215
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1225
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1230
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1239
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1263
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1272
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1294
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1315
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1320
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1335
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1351
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1355
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1386
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1448
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1477
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1705
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1709
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1713
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1717
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1948
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2047
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2056
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2072
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2076
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2081
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2085
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2105
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2109
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2113
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2117
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2185
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2195
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2201
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2205
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2211
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2215
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2221
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2227
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2231
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2235
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2239
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2248
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2254
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2266
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2272
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2280
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2284
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2288
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2323
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2329
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2343
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2525
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2534
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2538
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2542
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2550
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2556
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2664
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2694
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2698
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2702
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2706
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2733
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2787
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2864
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2873
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2881
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2890
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2897
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2909
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2918
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2933
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2938
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2947
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2951
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2957
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2963
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2969
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2979
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2983
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2989
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2995
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3001
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3007
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3031
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3037
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3043
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3047
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3051
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3057
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3061
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3066
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3070
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3075
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3079
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3157
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3161
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3165
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3169
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3189
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3208
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3215
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3222
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3231
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3253
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3257
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3441
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3457
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3476
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3484
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = "extended "
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3536
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3544
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3554
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3558
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3568
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3574
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.empty = struct{}{}
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3637
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.empty = struct{}{}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3660
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3664
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3668
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3672
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3676
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3680
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3704
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3708
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3757
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3767
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3773
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3777
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3781
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3785
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			setAllowComments(yylex, true)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.strs = nil
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3924
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = SQLCacheStr
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3995
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4014
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.strs = nil
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4035
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = SQLCacheStr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = DistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.str = DistinctStr
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = StraightJoinHint
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4071
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4081
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4085
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4089
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4093
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4118
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4122
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4128
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4134
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4148
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4152
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4156
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4160
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4166
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4170
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4176
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4180
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4189
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4195
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4205
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4209
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4215
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4219
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4233
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4250
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4254
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4258
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4262
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4311
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4315
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4319
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4325
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4331
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4335
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4339
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4343
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4349
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4353
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4392
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4398
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4402
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4408
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4412
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4416
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4420
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4425
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4429
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4433
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4437
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4478
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4705
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4709
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4713
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4729
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4733
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4740
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4744
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4748
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4752
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4758
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4762
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4766
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4770
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4774
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4778
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4782
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4788
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4792
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4796
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4803
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4809
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4896
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5020
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5026
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5048
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5052
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5056
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5060
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5064
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5068
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5072
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5076
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5080
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5084
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5088
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5094
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5098
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5102
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5106
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5110
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5114
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5118
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5122
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5126
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5181
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5185
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5189
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5193
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5197
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5231
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5235
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5239
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5243
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5247
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5253
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5257
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5261
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5265
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5269
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5273
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5277
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5281
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5285
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5289
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5304
		{
			yyVAL.str = string("")
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5308
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5314
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5318
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5324
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5339
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5343
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5347
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5376
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5400
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5406
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5416
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5421
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5425
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5429
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5444
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5448
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5452
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5461
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5465
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5469
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5473
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5480
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5484
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5488
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5492
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5498
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5502
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5506
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5528
		{
			yyVAL.str = ""
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5547
		{
			yyVAL.str = ""
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5551
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5556
		{
			yyVAL.str = "cascaded"
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5573
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5579
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5585
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5591
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5609
		{
			yyVAL.str = ""
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5619
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5623
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5629
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5633
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5637
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5655
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5659
		{
			yyVAL.str = " header"
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5664
		{
			yyVAL.str = ""
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5668
		{
			yyVAL.str = " manifest on"
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5672
		{
			yyVAL.str = " manifest off"
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5677
		{
			yyVAL.str = ""
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = " overwrite on"
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = " overwrite off"
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5691
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5696
		{
			yyVAL.str = ""
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5720
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = ""
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = ""
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.str = " optionally"
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5775
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5779
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5783
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5787
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5791
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5797
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5801
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5809
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5818
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5824
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5828
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5834
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5838
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5844
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5859
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5869
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5875
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5885
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5889
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5893
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5897
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5901
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = "charset"
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5948
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5956
		{
			yyVAL.empty = struct{}{}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.empty = struct{}{}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.empty = struct{}{}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5964
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5973
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5980
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5984
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6017
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6028
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6525
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			decNesting(yylex)
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6539
		{
			skipToEnd(yylex)
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6544
		{
			skipToEnd(yylex)
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			skipToEnd(yylex)
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
