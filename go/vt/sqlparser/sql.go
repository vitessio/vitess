// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const OR = 57456
const XOR = 57457
const AND = 57458
const NOT = 57459
const BETWEEN = 57460
const CASE = 57461
const WHEN = 57462
const THEN = 57463
const ELSE = 57464
const END = 57465
const LE = 57466
const GE = 57467
const NE = 57468
const NULL_SAFE_EQUAL = 57469
const IS = 57470
const LIKE = 57471
const REGEXP = 57472
const IN = 57473
const SHIFT_LEFT = 57474
const SHIFT_RIGHT = 57475
const DIV = 57476
const MOD = 57477
const UNARY = 57478
const COLLATE = 57479
const BINARY = 57480
const UNDERSCORE_BINARY = 57481
const UNDERSCORE_UTF8MB4 = 57482
const UNDERSCORE_UTF8 = 57483
const UNDERSCORE_LATIN1 = 57484
const INTERVAL = 57485
const JSON_EXTRACT_OP = 57486
const JSON_UNQUOTE_EXTRACT_OP = 57487
const CREATE = 57488
const ALTER = 57489
const DROP = 57490
const RENAME = 57491
const ANALYZE = 57492
const ADD = 57493
const FLUSH = 57494
const CHANGE = 57495
const MODIFY = 57496
const REVERT = 57497
const SCHEMA = 57498
const TABLE = 57499
const INDEX = 57500
const VIEW = 57501
const TO = 57502
const IGNORE = 57503
const IF = 57504
const PRIMARY = 57505
const COLUMN = 57506
const SPATIAL = 57507
const FULLTEXT = 57508
const KEY_BLOCK_SIZE = 57509
const CHECK = 57510
const INDEXES = 57511
const ACTION = 57512
const CASCADE = 57513
const CONSTRAINT = 57514
const FOREIGN = 57515
const NO = 57516
const REFERENCES = 57517
const RESTRICT = 57518
const SHOW = 57519
const DESCRIBE = 57520
const EXPLAIN = 57521
const DATE = 57522
const ESCAPE = 57523
const REPAIR = 57524
const OPTIMIZE = 57525
const TRUNCATE = 57526
const COALESCE = 57527
const EXCHANGE = 57528
const REBUILD = 57529
const PARTITIONING = 57530
const REMOVE = 57531
const MAXVALUE = 57532
const PARTITION = 57533
const REORGANIZE = 57534
const LESS = 57535
const THAN = 57536
const PROCEDURE = 57537
const TRIGGER = 57538
const VINDEX = 57539
const VINDEXES = 57540
const DIRECTORY = 57541
const NAME = 57542
const UPGRADE = 57543
const STATUS = 57544
const VARIABLES = 57545
const WARNINGS = 57546
const CASCADED = 57547
const DEFINER = 57548
const OPTION = 57549
const SQL = 57550
const UNDEFINED = 57551
const SEQUENCE = 57552
const MERGE = 57553
const TEMPORARY = 57554
const TEMPTABLE = 57555
const INVOKER = 57556
const SECURITY = 57557
const FIRST = 57558
const AFTER = 57559
const LAST = 57560
const VITESS_MIGRATION = 57561
const CANCEL = 57562
const RETRY = 57563
const COMPLETE = 57564
const BEGIN = 57565
const START = 57566
const TRANSACTION = 57567
const COMMIT = 57568
const ROLLBACK = 57569
const SAVEPOINT = 57570
const RELEASE = 57571
const WORK = 57572
const BIT = 57573
const TINYINT = 57574
const SMALLINT = 57575
const MEDIUMINT = 57576
const INT = 57577
const INTEGER = 57578
const BIGINT = 57579
const INTNUM = 57580
const REAL = 57581
const DOUBLE = 57582
const FLOAT_TYPE = 57583
const DECIMAL = 57584
const NUMERIC = 57585
const TIME = 57586
const TIMESTAMP = 57587
const DATETIME = 57588
const YEAR = 57589
const CHAR = 57590
const VARCHAR = 57591
const BOOL = 57592
const CHARACTER = 57593
const VARBINARY = 57594
const NCHAR = 57595
const TEXT = 57596
const TINYTEXT = 57597
const MEDIUMTEXT = 57598
const LONGTEXT = 57599
const BLOB = 57600
const TINYBLOB = 57601
const MEDIUMBLOB = 57602
const LONGBLOB = 57603
const JSON = 57604
const ENUM = 57605
const GEOMETRY = 57606
const POINT = 57607
const LINESTRING = 57608
const POLYGON = 57609
const GEOMETRYCOLLECTION = 57610
const MULTIPOINT = 57611
const MULTILINESTRING = 57612
const MULTIPOLYGON = 57613
const NULLX = 57614
const AUTO_INCREMENT = 57615
const APPROXNUM = 57616
const SIGNED = 57617
const UNSIGNED = 57618
const ZEROFILL = 57619
const CODE = 57620
const COLLATION = 57621
const COLUMNS = 57622
const DATABASES = 57623
const ENGINES = 57624
const EVENT = 57625
const EXTENDED = 57626
const FIELDS = 57627
const FULL = 57628
const FUNCTION = 57629
const GTID_EXECUTED = 57630
const KEYSPACES = 57631
const OPEN = 57632
const PLUGINS = 57633
const PRIVILEGES = 57634
const PROCESSLIST = 57635
const SCHEMAS = 57636
const TABLES = 57637
const TRIGGERS = 57638
const USER = 57639
const VGTID_EXECUTED = 57640
const VITESS_KEYSPACES = 57641
const VITESS_METADATA = 57642
const VITESS_MIGRATIONS = 57643
const VITESS_REPLICATION_STATUS = 57644
const VITESS_SHARDS = 57645
const VITESS_TABLETS = 57646
const VSCHEMA = 57647
const NAMES = 57648
const GLOBAL = 57649
const SESSION = 57650
const ISOLATION = 57651
const LEVEL = 57652
const READ = 57653
const WRITE = 57654
const ONLY = 57655
const REPEATABLE = 57656
const COMMITTED = 57657
const UNCOMMITTED = 57658
const SERIALIZABLE = 57659
const CURRENT_TIMESTAMP = 57660
const DATABASE = 57661
const CURRENT_DATE = 57662
const CURRENT_TIME = 57663
const LOCALTIME = 57664
const LOCALTIMESTAMP = 57665
const CURRENT_USER = 57666
const UTC_DATE = 57667
const UTC_TIME = 57668
const UTC_TIMESTAMP = 57669
const REPLACE = 57670
const CONVERT = 57671
const CAST = 57672
const SUBSTR = 57673
const SUBSTRING = 57674
const GROUP_CONCAT = 57675
const SEPARATOR = 57676
const TIMESTAMPADD = 57677
const TIMESTAMPDIFF = 57678
const MATCH = 57679
const AGAINST = 57680
const BOOLEAN = 57681
const LANGUAGE = 57682
const WITH = 57683
const QUERY = 57684
const EXPANSION = 57685
const WITHOUT = 57686
const VALIDATION = 57687
const UNUSED = 57688
const ARRAY = 57689
const CUME_DIST = 57690
const DESCRIPTION = 57691
const DENSE_RANK = 57692
const EMPTY = 57693
const EXCEPT = 57694
const FIRST_VALUE = 57695
const GROUPING = 57696
const GROUPS = 57697
const JSON_TABLE = 57698
const LAG = 57699
const LAST_VALUE = 57700
const LATERAL = 57701
const LEAD = 57702
const MEMBER = 57703
const NTH_VALUE = 57704
const NTILE = 57705
const OF = 57706
const OVER = 57707
const PERCENT_RANK = 57708
const RANK = 57709
const RECURSIVE = 57710
const ROW_NUMBER = 57711
const SYSTEM = 57712
const WINDOW = 57713
const ACTIVE = 57714
const ADMIN = 57715
const BUCKETS = 57716
const CLONE = 57717
const COMPONENT = 57718
const DEFINITION = 57719
const ENFORCED = 57720
const EXCLUDE = 57721
const FOLLOWING = 57722
const GEOMCOLLECTION = 57723
const GET_MASTER_PUBLIC_KEY = 57724
const HISTOGRAM = 57725
const HISTORY = 57726
const INACTIVE = 57727
const INVISIBLE = 57728
const LOCKED = 57729
const MASTER_COMPRESSION_ALGORITHMS = 57730
const MASTER_PUBLIC_KEY_PATH = 57731
const MASTER_TLS_CIPHERSUITES = 57732
const MASTER_ZSTD_COMPRESSION_LEVEL = 57733
const NESTED = 57734
const NETWORK_NAMESPACE = 57735
const NOWAIT = 57736
const NULLS = 57737
const OJ = 57738
const OLD = 57739
const OPTIONAL = 57740
const ORDINALITY = 57741
const ORGANIZATION = 57742
const OTHERS = 57743
const PATH = 57744
const PERSIST = 57745
const PERSIST_ONLY = 57746
const PRECEDING = 57747
const PRIVILEGE_CHECKS_USER = 57748
const PROCESS = 57749
const RANDOM = 57750
const REFERENCE = 57751
const REQUIRE_ROW_FORMAT = 57752
const RESOURCE = 57753
const RESPECT = 57754
const RESTART = 57755
const RETAIN = 57756
const REUSE = 57757
const ROLE = 57758
const SECONDARY = 57759
const SECONDARY_ENGINE = 57760
const SECONDARY_LOAD = 57761
const SECONDARY_UNLOAD = 57762
const SKIP = 57763
const SRID = 57764
const THREAD_PRIORITY = 57765
const TIES = 57766
const UNBOUNDED = 57767
const VCPU = 57768
const VISIBLE = 57769
const FORMAT = 57770
const TREE = 57771
const VITESS = 57772
const TRADITIONAL = 57773
const LOCAL = 57774
const LOW_PRIORITY = 57775
const NO_WRITE_TO_BINLOG = 57776
const LOGS = 57777
const ERROR = 57778
const GENERAL = 57779
const HOSTS = 57780
const OPTIMIZER_COSTS = 57781
const USER_RESOURCES = 57782
const SLOW = 57783
const CHANNEL = 57784
const RELAY = 57785
const EXPORT = 57786
const AVG_ROW_LENGTH = 57787
const CONNECTION = 57788
const CHECKSUM = 57789
const DELAY_KEY_WRITE = 57790
const ENCRYPTION = 57791
const ENGINE = 57792
const INSERT_METHOD = 57793
const MAX_ROWS = 57794
const MIN_ROWS = 57795
const PACK_KEYS = 57796
const PASSWORD = 57797
const FIXED = 57798
const DYNAMIC = 57799
const COMPRESSED = 57800
const REDUNDANT = 57801
const COMPACT = 57802
const ROW_FORMAT = 57803
const STATS_AUTO_RECALC = 57804
const STATS_PERSISTENT = 57805
const STATS_SAMPLE_PAGES = 57806
const STORAGE = 57807
const MEMORY = 57808
const DISK = 57809

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	485, 137,
	-2, 143,
	-1, 45,
	114, 143,
	153, 143,
	268, 143,
	-2, 366,
	-1, 52,
	33, 516,
	175, 516,
	186, 516,
	219, 530,
	220, 530,
	-2, 518,
	-1, 57,
	177, 540,
	-2, 538,
	-1, 108,
	174, 984,
	-2, 116,
	-1, 110,
	1, 138,
	485, 138,
	-2, 143,
	-1, 120,
	115, 269,
	180, 269,
	-2, 360,
	-1, 139,
	114, 143,
	153, 143,
	268, 143,
	-2, 375,
	-1, 584,
	160, 1005,
	-2, 1001,
	-1, 585,
	160, 1006,
	-2, 1002,
	-1, 599,
	57, 608,
	-2, 616,
	-1, 636,
	128, 1356,
	-2, 109,
	-1, 637,
	128, 1237,
	-2, 110,
	-1, 643,
	128, 1288,
	-2, 978,
	-1, 783,
	128, 1171,
	-2, 975,
	-1, 819,
	185, 38,
	190, 38,
	-2, 280,
	-1, 896,
	1, 413,
	485, 413,
	-2, 143,
	-1, 1094,
	57, 609,
	-2, 621,
	-1, 1095,
	57, 610,
	-2, 622,
	-1, 1147,
	1, 310,
	485, 310,
	-2, 143,
	-1, 1150,
	23, 162,
	-2, 164,
	-1, 1223,
	115, 269,
	180, 269,
	-2, 360,
	-1, 1232,
	185, 39,
	190, 39,
	-2, 281,
	-1, 1444,
	160, 1010,
	-2, 1004,
	-1, 1540,
	1, 311,
	485, 311,
	-2, 143,
	-1, 1779,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1949,
	47, 946,
	-2, 940,
	-1, 2125,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 649,
}

const yyPrivate = 57344

const yyLast = 30566

var yyAct = [...]int{
	584, 2161, 2324, 2048, 2299, 2286, 3, 2230, 1960, 959,
	1797, 556, 1804, 1496, 614, 1607, 1963, 1076, 1109, 1961,
	1805, 2187, 557, 34, 1724, 2096, 1964, 1537, 2090, 2192,
	542, 2116, 592, 1958, 90, 1950, 1744, 1572, 907, 1826,
	1849, 1479, 526, 849, 2179, 1577, 1888, 524, 176, 1592,
	1827, 176, 1828, 489, 176, 1775, 1500, 1764, 641, 505,
	1526, 176, 1518, 1736, 1096, 786, 615, 1517, 33, 176,
	1513, 1429, 35, 1907, 1605, 1685, 1230, 148, 1441, 134,
	814, 176, 517, 1437, 936, 1579, 1820, 1638, 1591, 1139,
	1118, 1781, 1520, 1079, 596, 1481, 600, 1388, 528, 1752,
	1339, 89, 1406, 505, 1460, 594, 505, 176, 505, 977,
	1336, 1322, 638, 793, 617, 817, 85, 790, 820, 1440,
	815, 1505, 816, 1237, 1138, 1589, 794, 1136, 827, 1122,
	952, 606, 1501, 1344, 151, 1568, 111, 112, 1199, 892,
	1248, 957, 601, 1222, 117, 628, 602, 118, 1204, 604,
	1472, 92, 70, 1050, 91, 512, 83, 79, 603, 71,
	1053, 8, 7, 6, 1868, 1867, 1636, 1308, 1896, 1897,
	1746, 178, 179, 180, 1395, 622, 1394, 627, 802, 113,
	851, 797, 1476, 1477, 84, 462, 787, 1393, 1392, 119,
	1391, 1390, 1377, 865, 866, 1382, 869, 870, 871, 872,
	2320, 608, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 854, 513, 515,
	1722, 516, 96, 1946, 595, 593, 2018, 2139, 2227, 2226,
	635, 2157, 853, 852, 2158, 642, 609, 830, 172, 2338,
	2309, 72, 2337, 72, 72, 113, 809, 808, 807, 616,
	831, 978, 624, 2277, 2332, 2162, 855, 856, 857, 2300,
	98, 99, 114, 102, 136, 1755, 108, 1624, 2308, 173,
	1675, 978, 457, 1584, 2276, 156, 862, 1924, 2080, 1213,
	1790, 1875, 1723, 1789, 867, 1874, 1791, 1997, 1998, 895,
	1756, 1996, 591, 2205, 1895, 599, 1582, 806, 1672, 901,
	902, 1140, 72, 1141, 1478, 74, 146, 1531, 955, 113,
	926, 135, 1532, 1533, 589, 588, 988, 518, 81, 927,
	81, 81, 1813, 630, 631, 2071, 931, 932, 1552, 1551,
	914, 153, 914, 154, 1673, 915, 988, 915, 123, 124,
	145, 144, 171, 913, 920, 912, 618, 2050, 2069, 503,
	1102, 501, 891, 804, 2093, 943, 492, 945, 1381, 178,
	179, 180, 1383, 1384, 1385, 2239, 1003, 1002, 1012, 1013,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 1328, 81,
	1014, 507, 1581, 1083, 806, 890, 1850, 492, 1649, 1647,
	1648, 492, 1606, 942, 944, 928, 1298, 140, 121, 147,
	128, 120, 2044, 141, 142, 954, 984, 492, 157, 976,
	2045, 1651, 933, 1652, 1871, 1653, 1639, 162, 129, 1644,
	921, 2336, 934, 2051, 1323, 935, 984, 2321, 949, 801,
	868, 803, 132, 130, 125, 126, 127, 131, 1299, 897,
	1300, 1654, 122, 929, 930, 1883, 810, 894, 874, 2152,
	873, 133, 1608, 1643, 2052, 1641, 829, 176, 2223, 176,
	805, 569, 176, 575, 576, 573, 574, 838, 572, 571,
	570, 1514, 1645, 847, 846, 845, 844, 843, 577, 578,
	947, 940, 836, 842, 841, 941, 840, 806, 835, 798,
	505, 505, 505, 1642, 1216, 946, 800, 799, 811, 848,
	1809, 2017, 910, 2333, 916, 917, 918, 919, 505, 505,
	493, 2330, 791, 791, 1673, 828, 970, 939, 823, 822,
	832, 822, 791, 149, 1337, 1329, 789, 956, 1590, 629,
	833, 1884, 34, 893, 1236, 924, 1873, 948, 1725, 1727,
	1908, 493, 1630, 804, 1887, 493, 1333, 805, 834, 983,
	980, 981, 982, 987, 989, 986, 1583, 985, 2328, 2275,
	964, 493, 858, 2025, 979, 1870, 839, 1933, 950, 983,
	980, 981, 982, 987, 989, 986, 2094, 985, 829, 143,
	1932, 837, 1931, 1910, 979, 2240, 1211, 1210, 1209, 176,
	1860, 137, 1334, 80, 138, 80, 80, 110, 1207, 1235,
	461, 456, 1882, 1626, 2261, 1881, 176, 1084, 1674, 1074,
	1703, 1310, 1309, 1311, 1312, 1313, 1086, 829, 1890, 1700,
	1090, 2130, 1024, 1889, 2112, 505, 596, 1786, 1087, 176,
	594, 1089, 961, 962, 505, 911, 903, 828, 1751, 900,
	505, 75, 1694, 638, 1726, 1912, 1616, 1916, 1890, 1911,
	805, 1909, 1126, 1889, 80, 1075, 1914, 1025, 1026, 1038,
	905, 1004, 1538, 1088, 1014, 1913, 1075, 89, 71, 1014,
	864, 973, 971, 972, 1995, 611, 828, 923, 1915, 1917,
	829, 1080, 822, 825, 826, 937, 791, 1345, 925, 953,
	819, 823, 994, 2271, 909, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 178, 179, 180, 818,
	1431, 167, 168, 169, 170, 1327, 2326, 92, 105, 2327,
	991, 2325, 2106, 1052, 1055, 1057, 1059, 1060, 1062, 1064,
	1065, 1056, 1058, 829, 1061, 1063, 994, 1066, 1625, 828,
	178, 179, 180, 1077, 1748, 822, 825, 826, 1926, 791,
	593, 1085, 1105, 819, 823, 1108, 595, 850, 1640, 1025,
	1026, 1330, 1825, 829, 1142, 1800, 642, 2292, 1025, 1026,
	2290, 106, 896, 995, 1432, 1461, 1132, 1133, 974, 2294,
	2295, 1461, 1839, 1710, 1807, 1808, 176, 1413, 2201, 2291,
	1200, 1623, 828, 2280, 992, 993, 991, 832, 822, 1208,
	2005, 1411, 1412, 1410, 1324, 2004, 1325, 833, 1749, 1326,
	1801, 938, 994, 1346, 1612, 1506, 1507, 908, 505, 1048,
	1232, 1091, 828, 2281, 863, 993, 991, 1247, 1241, 1246,
	1234, 1621, 1245, 838, 1803, 505, 505, 1798, 505, 518,
	505, 505, 994, 505, 505, 505, 505, 505, 505, 1806,
	1618, 1807, 1808, 1214, 1215, 836, 1799, 1618, 505, 1137,
	2254, 1809, 176, 1281, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1004, 1119, 1242, 1014, 1622, 2314, 1698, 176, 992,
	993, 991, 1620, 1228, 2000, 1127, 1697, 1928, 81, 505,
	2255, 176, 2138, 1221, 2315, 2334, 1116, 994, 1276, 1277,
	1317, 1409, 1335, 2137, 1240, 2023, 176, 992, 993, 991,
	1824, 1284, 1285, 992, 993, 991, 1806, 1290, 1291, 992,
	993, 991, 176, 1278, 1823, 994, 1587, 1315, 1809, 176,
	1305, 994, 1401, 1403, 1404, 1318, 1206, 994, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 505, 505, 505,
	1239, 1402, 1104, 1106, 1238, 1238, 1218, 1219, 1231, 1349,
	1217, 1115, 633, 1316, 1341, 1303, 1353, 2335, 1355, 1356,
	1357, 1358, 1302, 1294, 1301, 1362, 1250, 176, 1251, 1292,
	1253, 1255, 1699, 1286, 1259, 1261, 1263, 1265, 1267, 1376,
	1314, 1279, 1283, 1304, 992, 993, 991, 1347, 1348, 1007,
	1008, 1009, 1010, 1011, 1004, 1282, 1257, 1014, 2258, 1407,
	1103, 1352, 994, 2257, 1338, 1430, 2256, 2200, 1359, 1360,
	1361, 1678, 1679, 1680, 1433, 1212, 1802, 2198, 178, 179,
	180, 113, 1793, 808, 807, 1112, 2176, 505, 1012, 1013,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 1442, 2047,
	1014, 178, 179, 180, 2135, 1600, 1351, 1002, 1012, 1013,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 505, 505,
	1014, 585, 2003, 1434, 1435, 1833, 992, 993, 991, 1821,
	1375, 1634, 176, 1633, 1113, 1499, 1449, 1452, 1372, 1373,
	1374, 1485, 1462, 1378, 994, 1342, 1408, 1444, 1306, 1293,
	1484, 1289, 1486, 1288, 1487, 178, 179, 180, 176, 1598,
	1287, 505, 178, 179, 180, 1114, 86, 951, 2221, 177,
	2220, 176, 177, 88, 505, 177, 88, 87, 2160, 176,
	506, 176, 177, 176, 176, 505, 1442, 95, 505, 1443,
	177, 89, 1742, 2306, 638, 1742, 2284, 638, 94, 505,
	93, 1851, 177, 1836, 1468, 1469, 1546, 89, 1738, 1445,
	1446, 1492, 1343, 1451, 1454, 1455, 1742, 2265, 2105, 95,
	2244, 1103, 86, 88, 506, 2155, 1103, 506, 177, 506,
	94, 1103, 93, 87, 1103, 1444, 1742, 2153, 1516, 1467,
	1753, 88, 1470, 1471, 2107, 545, 544, 1753, 547, 548,
	549, 550, 1618, 1103, 505, 546, 990, 551, 2110, 1103,
	1593, 1594, 1595, 1491, 1542, 1597, 1599, 1103, 1558, 1559,
	1560, 1561, 608, 2015, 2014, 1541, 1782, 1511, 505, 1545,
	1692, 1524, 2011, 2012, 505, 1241, 1574, 1103, 1241, 1494,
	1241, 2011, 2010, 1396, 1397, 1398, 1399, 1782, 1617, 1103,
	1761, 1103, 1580, 1509, 1692, 1103, 1673, 1869, 1203, 1853,
	1529, 1761, 1528, 1847, 1848, 1742, 1741, 642, 2105, 1544,
	642, 1543, 990, 1103, 1203, 1202, 1148, 1147, 505, 1990,
	1430, 1959, 1760, 1619, 2270, 1430, 1430, 1742, 1673, 1783,
	94, 2105, 1761, 1604, 1447, 1448, 2013, 1530, 1785, 1715,
	1714, 1692, 1618, 1601, 1553, 1504, 1554, 1555, 1556, 1557,
	1783, 1611, 2140, 1107, 1614, 1474, 1615, 1575, 1588, 1673,
	1386, 176, 1564, 1565, 1566, 1567, 1586, 1332, 176, 1134,
	1585, 1570, 1571, 176, 176, 518, 1761, 176, 1596, 176,
	1618, 813, 830, 1627, 598, 176, 1272, 1610, 812, 1575,
	1609, 1629, 176, 1628, 81, 831, 1631, 1632, 1692, 2232,
	1613, 1110, 2141, 2142, 2143, 1238, 2049, 2212, 1502, 1503,
	2132, 1205, 1829, 1573, 1103, 2046, 2007, 1854, 1569, 1563,
	176, 505, 1562, 1320, 1233, 1229, 1664, 1665, 1201, 107,
	1830, 1667, 895, 2144, 2233, 1536, 1273, 1274, 1275, 1269,
	1668, 1584, 1463, 2117, 2118, 1463, 1003, 1002, 1012, 1013,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 1637, 1830,
	1014, 81, 1407, 2311, 2287, 2120, 1104, 1473, 1003, 1002,
	1012, 1013, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004,
	2145, 2146, 1014, 2030, 2123, 1657, 1270, 1271, 2029, 2028,
	1959, 1840, 1658, 1379, 1576, 2122, 1493, 1766, 1769, 1770,
	1771, 1767, 1978, 1768, 1772, 1686, 1977, 2117, 2118, 2323,
	1766, 1769, 1770, 1771, 1767, 176, 1768, 1772, 1983, 1981,
	1770, 1771, 1979, 176, 1982, 1101, 1097, 1980, 2307, 1498,
	1111, 505, 1490, 2111, 1951, 1953, 1671, 2034, 1939, 1938,
	1098, 2191, 1747, 1954, 2098, 2253, 1101, 1097, 2193, 1408,
	612, 1331, 2097, 1681, 2101, 1948, 587, 1811, 613, 1549,
	1757, 1098, 860, 176, 176, 1488, 1489, 1100, 177, 1099,
	177, 1834, 859, 177, 2059, 1457, 34, 1829, 1893, 1792,
	963, 86, 88, 1862, 86, 1777, 1094, 1095, 1100, 1458,
	1099, 88, 87, 2026, 1861, 87, 1743, 1739, 1690, 1691,
	95, 506, 506, 506, 1709, 114, 2103, 1080, 1721, 1506,
	1507, 94, 1661, 93, 2267, 2228, 1707, 1810, 1729, 506,
	506, 1774, 88, 1495, 1650, 505, 1816, 1817, 1818, 1819,
	176, 1776, 620, 621, 1740, 1750, 1937, 176, 1677, 93,
	2199, 2188, 2197, 505, 1936, 2196, 2189, 2102, 1735, 505,
	2100, 1814, 1815, 1241, 1241, 2031, 1846, 1784, 1795, 505,
	1787, 1780, 95, 1796, 1602, 1832, 1857, 95, 1580, 619,
	94, 1866, 2091, 94, 1753, 93, 2313, 2312, 94, 1738,
	1704, 1701, 176, 176, 176, 176, 176, 1128, 1120, 2313,
	1822, 100, 101, 2259, 2002, 610, 97, 1865, 176, 176,
	177, 82, 1, 2289, 1831, 474, 1475, 1078, 488, 1864,
	2285, 1307, 1297, 2163, 176, 1444, 1837, 177, 2229, 2037,
	1578, 1221, 1841, 1842, 1843, 821, 139, 1539, 1540, 1855,
	1856, 2302, 104, 784, 103, 505, 506, 824, 922, 1430,
	177, 1603, 1863, 2156, 1906, 506, 1812, 1550, 1154, 1152,
	1153, 506, 1151, 1156, 1711, 1155, 1150, 1443, 1380, 502,
	1773, 174, 1143, 1121, 861, 464, 2016, 1635, 470, 505,
	1022, 1935, 1788, 639, 632, 1967, 2095, 1947, 1949, 176,
	1925, 1745, 594, 505, 1952, 1945, 2252, 2190, 1891, 2266,
	1547, 1892, 505, 1117, 1708, 1885, 1047, 1119, 1898, 505,
	505, 1906, 176, 176, 176, 176, 176, 1956, 1965, 1971,
	1918, 1904, 1459, 1919, 176, 1521, 527, 1905, 1483, 176,
	1400, 600, 176, 543, 1688, 176, 176, 176, 1689, 540,
	541, 1731, 1754, 996, 1942, 525, 1695, 1696, 1962, 1940,
	519, 1090, 1702, 1962, 1943, 1705, 1706, 1129, 1765, 1763,
	176, 1762, 1659, 1712, 1525, 1713, 2119, 2115, 1716, 1717,
	1718, 1719, 1720, 1493, 1519, 1973, 1974, 601, 1976, 1972,
	1984, 602, 1975, 1737, 1730, 2024, 1941, 1991, 1548, 1872,
	1992, 176, 2008, 2009, 89, 1341, 1993, 1988, 505, 2043,
	1989, 975, 1093, 514, 796, 505, 1456, 177, 2238, 1676,
	2079, 176, 1092, 60, 38, 509, 2319, 966, 2036, 1934,
	626, 176, 1999, 2021, 2022, 2038, 32, 31, 30, 2020,
	2019, 29, 28, 2217, 23, 176, 22, 21, 176, 506,
	20, 19, 25, 2033, 18, 17, 16, 109, 2060, 2035,
	1970, 47, 44, 1580, 2041, 42, 506, 506, 116, 506,
	2040, 506, 506, 2032, 506, 506, 506, 506, 506, 506,
	115, 45, 41, 898, 39, 27, 2055, 26, 15, 506,
	2057, 2058, 2054, 177, 14, 13, 176, 1003, 1002, 1012,
	1013, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 177,
	2067, 1014, 12, 11, 10, 9, 5, 4, 969, 24,
	506, 2, 177, 1927, 1003, 1002, 1012, 1013, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1004, 0, 177, 1014, 0,
	0, 0, 2092, 0, 0, 2099, 0, 0, 0, 0,
	0, 176, 0, 177, 2104, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 2124, 0, 1957, 2121, 0, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 506, 506,
	506, 0, 0, 0, 0, 0, 176, 0, 0, 176,
	176, 176, 505, 2131, 0, 0, 0, 0, 0, 0,
	2089, 1902, 1903, 0, 0, 2151, 2127, 0, 177, 0,
	2164, 505, 505, 505, 0, 0, 0, 2064, 2065, 0,
	2066, 2159, 0, 2068, 0, 2070, 2169, 2134, 0, 2136,
	0, 2114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 505, 505, 176, 2126,
	0, 2128, 2129, 0, 2175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 506, 1968,
	0, 505, 0, 505, 0, 0, 2206, 0, 2186, 1965,
	0, 2195, 2168, 1965, 2194, 2202, 1986, 1987, 2208, 2185,
	2183, 2184, 34, 505, 2204, 0, 0, 0, 0, 506,
	506, 0, 0, 0, 0, 0, 2216, 2210, 1962, 594,
	0, 0, 175, 177, 0, 460, 0, 0, 500, 2214,
	0, 594, 2218, 505, 2219, 460, 2222, 0, 0, 0,
	0, 2225, 2231, 460, 2224, 0, 0, 0, 0, 177,
	0, 2081, 506, 0, 0, 607, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 506, 0, 0, 0, 0,
	177, 625, 177, 625, 177, 177, 506, 2251, 2249, 506,
	2248, 460, 0, 505, 586, 73, 0, 1965, 0, 518,
	506, 0, 2260, 0, 0, 2262, 2263, 2215, 0, 2264,
	0, 0, 0, 505, 176, 2269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 2272, 0, 0, 0,
	0, 34, 0, 0, 0, 0, 2062, 0, 2063, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 2282, 2072,
	2073, 505, 505, 0, 2296, 506, 0, 2288, 2301, 2293,
	2231, 2303, 0, 0, 0, 2087, 597, 0, 73, 172,
	34, 2310, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 2316, 1962, 0, 0, 506, 597, 1899, 0, 0,
	2322, 0, 0, 114, 0, 0, 2329, 2108, 2109, 0,
	0, 2113, 0, 0, 2331, 0, 156, 1003, 1002, 1012,
	1013, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 2125,
	0, 1014, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2203,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	2211, 0, 0, 2213, 0, 0, 0, 0, 0, 0,
	0, 1171, 153, 0, 154, 0, 0, 0, 2154, 0,
	0, 0, 177, 171, 0, 0, 0, 0, 0, 177,
	0, 0, 172, 0, 177, 177, 0, 0, 177, 0,
	177, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 2180, 0, 0, 0, 156,
	0, 2250, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 506, 998, 0, 1001, 0, 0, 0, 157,
	0, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 162, 999,
	1000, 997, 1003, 1002, 1012, 1013, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1004, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 1159, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2234, 2235, 2236, 2237, 0, 2241, 0, 2242, 2243,
	2245, 0, 0, 0, 2246, 2247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 554, 1172, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 460, 506, 460, 0, 0, 460, 0, 0, 0,
	0, 0, 157, 0, 149, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 2274,
	0, 0, 0, 0, 177, 177, 0, 0, 0, 1185,
	1188, 1189, 1190, 1191, 1192, 1193, 504, 1194, 1195, 1196,
	1197, 1198, 1173, 1174, 1175, 1176, 1157, 1158, 1186, 0,
	1160, 0, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	0, 0, 0, 0, 0, 0, 0, 0, 2317, 2318,
	640, 0, 0, 788, 0, 795, 506, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	506, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 958, 958, 958, 1187, 0, 0,
	607, 0, 0, 177, 177, 177, 177, 177, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 177,
	177, 0, 0, 460, 0, 0, 0, 1023, 597, 0,
	0, 0, 0, 0, 0, 177, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 506, 0, 0, 1037,
	0, 0, 0, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 0, 1049, 1051, 1054, 1054, 1054, 1051, 1054, 1054,
	1051, 1054, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 0,
	506, 0, 0, 0, 0, 1082, 0, 0, 597, 0,
	177, 0, 597, 0, 506, 0, 0, 0, 597, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	506, 506, 0, 177, 177, 177, 177, 177, 2083, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 2077, 0,
	177, 0, 0, 177, 0, 0, 177, 177, 177, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 2082, 0,
	460, 0, 2076, 1003, 1002, 1012, 1013, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1004, 0, 0, 1014, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 177, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 177, 1003, 1002, 1012, 1013, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1004, 0, 177, 1014, 0, 177,
	1244, 1244, 0, 2075, 0, 0, 460, 1003, 1002, 1012,
	1013, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1004, 0,
	0, 1014, 1295, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	521, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	1340, 1003, 1002, 1012, 1013, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1004, 0, 0, 1014, 460, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 0, 640, 640, 640,
	0, 0, 1363, 1364, 460, 460, 460, 460, 460, 460,
	460, 0, 0, 0, 0, 965, 967, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 1003, 1002, 1012, 1013, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1004, 0, 0, 1014, 177, 0, 0,
	177, 177, 177, 506, 1003, 1002, 1012, 1013, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1004, 0, 0, 1014, 0,
	0, 0, 506, 506, 506, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 1340, 625, 625, 0, 0, 625, 625,
	625, 0, 0, 0, 1244, 0, 506, 506, 506, 177,
	0, 958, 958, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 1124, 0, 625, 625, 625, 625, 625, 0,
	0, 640, 506, 459, 506, 0, 1295, 1144, 0, 0,
	0, 0, 0, 508, 0, 0, 0, 0, 625, 0,
	0, 590, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 1340, 0, 460, 506, 460, 0, 460, 1527, 792,
	1003, 1002, 1012, 1013, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1004, 0, 0, 1014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	72, 36, 37, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	78, 0, 506, 506, 40, 66, 67, 1522, 64, 68,
	0, 0, 0, 0, 0, 0, 0, 65, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1243, 0,
	0, 0, 1249, 1249, 0, 1249, 53, 1249, 1249, 0,
	1258, 1249, 1249, 1249, 1249, 1249, 0, 81, 0, 0,
	0, 0, 0, 1243, 1243, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 460, 0, 0, 0, 1319, 460, 460, 0,
	0, 460, 0, 1662, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 43, 46, 49,
	48, 51, 0, 63, 460, 1845, 69, 0, 0, 0,
	0, 0, 0, 0, 640, 640, 640, 0, 114, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 52, 77,
	76, 156, 0, 61, 62, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1027, 1028, 1029, 1030, 1031, 0, 1032, 1033, 1034, 1035,
	1036, 0, 146, 625, 625, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 54, 55, 0, 56, 57, 58,
	59, 625, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 1224, 1225, 145, 144, 171, 460,
	0, 0, 0, 0, 1436, 0, 640, 1295, 0, 899,
	0, 904, 0, 0, 906, 0, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1465, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 460, 0,
	0, 0, 0, 140, 1226, 147, 0, 1223, 0, 141,
	142, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 1693, 1497, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 80, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 1728, 788, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 1758, 1759,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 460, 460, 460,
	460, 795, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 1131, 460, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 0, 460, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 137, 0, 0,
	138, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 1244, 460, 460, 460, 460,
	460, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 460, 0, 0, 460, 0, 0, 460,
	1994, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 0, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 460, 0, 167, 168, 169,
	170, 0, 0, 1522, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 1966, 0, 73, 0, 460, 1522, 1522, 1522, 1522,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 460, 1778, 1280, 0, 1522, 1405, 0, 1522,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1464, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 136, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 1835, 460, 460, 460, 146, 0, 0, 2078,
	0, 135, 0, 0, 0, 0, 2084, 2085, 2086, 0,
	1497, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 153, 0, 154, 640, 0, 1858, 0, 1224, 1225,
	145, 144, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 1226, 147,
	0, 1223, 0, 141, 142, 0, 0, 0, 157, 0,
	0, 0, 640, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 1515, 0, 0, 1389, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 492, 0, 0, 640,
	0, 0, 0, 1243, 0, 0, 1969, 1249, 1243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 73, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 0, 460, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 788, 0, 0, 1243, 0,
	0, 0, 1497, 487, 0, 0, 0, 0, 0, 143,
	0, 0, 1682, 1683, 1684, 0, 0, 0, 484, 0,
	1966, 137, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2268, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	493, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 1655, 1656, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 1663, 463, 0,
	465, 480, 73, 495, 1666, 494, 469, 0, 467, 471,
	481, 472, 0, 466, 0, 477, 0, 0, 468, 482,
	483, 485, 499, 498, 486, 0, 475, 496, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 0, 0, 0, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2165, 2166,
	2167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 2181, 2181, 2181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 1243, 0, 0, 1779, 0, 2207, 0,
	2209, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 1900, 1901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 1921, 0, 1922, 1923, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 1929, 1930, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 1877, 1878, 1879, 1880, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1389, 1886, 2278, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 1894, 1243, 0, 2283,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 2133, 0,
	0, 0, 0, 0, 0, 0, 0, 2053, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 0, 2170, 2171, 2172, 2173, 2174,
	0, 0, 0, 2177, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2147, 0,
	0, 2148, 2149, 2150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 2297,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 2304, 0, 2305, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 2273, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 1995, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 1955, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 1510, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	202, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 960, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	783, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 655, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 643,
	637, 636, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	783, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 1135, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 655, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 643,
	637, 636, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 766, 752, 404, 0, 701, 769, 672, 689, 779,
	692, 695, 735, 651, 714, 328, 686, 0, 676, 647,
	682, 648, 674, 703, 235, 671, 754, 717, 768, 286,
	232, 653, 677, 342, 691, 187, 737, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 775, 290, 724, 0, 389, 313, 0, 0, 0,
	705, 758, 712, 748, 700, 736, 661, 723, 770, 687,
	732, 771, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 729, 765, 684,
	731, 230, 274, 237, 229, 406, 776, 757, 0, 0,
	783, 767, 707, 734, 782, 646, 726, 0, 649, 652,
	778, 761, 680, 240, 0, 0, 0, 0, 0, 0,
	0, 704, 713, 745, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 722, 0, 0, 0, 657,
	650, 0, 0, 0, 0, 702, 0, 0, 0, 660,
	0, 679, 746, 0, 644, 258, 654, 314, 0, 750,
	760, 699, 438, 764, 697, 696, 741, 658, 756, 690,
	285, 656, 282, 182, 198, 0, 688, 324, 363, 369,
	755, 675, 683, 221, 681, 367, 338, 423, 205, 248,
	360, 343, 365, 721, 739, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 634, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 655, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 670, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 751, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 643,
	637, 636, 283, 292, 743, 781, 337, 368, 211, 425,
	388, 665, 669, 663, 664, 715, 716, 666, 772, 773,
	774, 747, 659, 0, 667, 668, 0, 753, 762, 763,
	720, 181, 195, 288, 777, 357, 251, 452, 432, 428,
	645, 662, 227, 673, 0, 0, 685, 693, 694, 706,
	708, 709, 710, 711, 719, 727, 728, 730, 738, 740,
	742, 744, 749, 759, 780, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 718, 725, 298, 245,
	263, 273, 733, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 1438, 0, 523, 0,
	0, 0, 235, 522, 0, 0, 0, 286, 232, 0,
	1439, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 567,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 81, 0, 0,
	178, 179, 180, 545, 544, 534, 547, 548, 549, 550,
	0, 0, 209, 546, 216, 551, 552, 553, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 520, 538, 0, 566, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 536, 623,
	0, 0, 0, 582, 0, 537, 0, 0, 529, 530,
	532, 531, 533, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 581, 0, 0,
	438, 0, 0, 579, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 569,
	580, 575, 576, 573, 574, 568, 572, 571, 570, 583,
	560, 561, 562, 563, 565, 0, 577, 578, 564, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 523, 0, 0, 0,
	235, 522, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 567, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 558, 559,
	0, 0, 0, 0, 0, 0, 1534, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 545, 544, 534, 547, 548, 549, 550, 0, 0,
	209, 546, 216, 551, 552, 553, 1535, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 520, 538, 0, 566, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 582, 0, 537, 0, 0, 529, 530, 532, 531,
	533, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 581, 0, 0, 438, 0,
	0, 579, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 569, 580, 575,
	576, 573, 574, 568, 572, 571, 570, 583, 560, 561,
	562, 563, 565, 0, 577, 578, 564, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 72, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 523, 0, 0, 0, 235,
	522, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 567, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 0, 178, 179, 180,
	545, 544, 534, 547, 548, 549, 550, 0, 0, 209,
	546, 216, 551, 552, 553, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 520, 538, 0, 566, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 536, 0, 0, 0, 0,
	582, 0, 537, 0, 0, 529, 530, 532, 531, 533,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 581, 0, 0, 438, 0, 0,
	579, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 569, 580, 575, 576,
	573, 574, 568, 572, 571, 570, 583, 560, 561, 562,
	563, 565, 0, 577, 578, 564, 181, 195, 288, 80,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 523, 0, 0, 0, 235, 522, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 567, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 1103, 178, 179, 180, 545, 544,
	534, 547, 548, 549, 550, 0, 0, 209, 546, 216,
	551, 552, 553, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 520,
	538, 0, 566, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 582, 0,
	537, 0, 0, 529, 530, 532, 531, 533, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 581, 0, 0, 438, 0, 0, 579, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 569, 580, 575, 576, 573, 574,
	568, 572, 571, 570, 583, 560, 561, 562, 563, 565,
	0, 577, 578, 564, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 523, 0, 0, 0, 235, 522, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 567, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 545, 544, 534, 547,
	548, 549, 550, 0, 0, 209, 546, 216, 551, 552,
	553, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 520, 538, 0,
	566, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 536, 623, 0, 0, 0, 582, 0, 537, 0,
	0, 529, 530, 532, 531, 533, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	581, 0, 0, 438, 0, 0, 579, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 569, 580, 575, 576, 573, 574, 568, 572,
	571, 570, 583, 560, 561, 562, 563, 565, 0, 577,
	578, 564, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 523,
	0, 0, 0, 235, 522, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	567, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 81, 0,
	0, 178, 179, 180, 545, 1453, 534, 547, 548, 549,
	550, 0, 0, 209, 546, 216, 551, 552, 553, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 520, 538, 0, 566, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 536,
	623, 0, 0, 0, 582, 0, 537, 0, 0, 529,
	530, 532, 531, 533, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 581, 0,
	0, 438, 0, 0, 579, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	569, 580, 575, 576, 573, 574, 568, 572, 571, 570,
	583, 560, 561, 562, 563, 565, 0, 577, 578, 564,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 523, 0, 0,
	0, 235, 522, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 567, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 0, 178,
	179, 180, 545, 1450, 534, 547, 548, 549, 550, 0,
	0, 209, 546, 216, 551, 552, 553, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 520, 538, 0, 566, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 536, 623, 0,
	0, 0, 582, 0, 537, 0, 0, 529, 530, 532,
	531, 533, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 581, 0, 0, 438,
	0, 0, 579, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 569, 580,
	575, 576, 573, 574, 568, 572, 571, 570, 583, 560,
	561, 562, 563, 565, 0, 577, 578, 564, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 523, 0, 0, 0, 235,
	522, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 567, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 0, 178, 179, 180,
	545, 544, 534, 547, 548, 549, 550, 0, 0, 209,
	546, 216, 551, 552, 553, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 520, 538, 0, 566, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 536, 0, 0, 0, 0,
	582, 0, 537, 0, 0, 529, 530, 532, 531, 533,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 581, 0, 0, 438, 0, 0,
	579, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 569, 580, 575, 576,
	573, 574, 568, 572, 571, 570, 583, 560, 561, 562,
	563, 565, 0, 577, 578, 564, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 567, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 545, 544,
	534, 547, 548, 549, 550, 0, 0, 209, 546, 216,
	551, 552, 553, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	538, 0, 566, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 582, 0,
	537, 0, 0, 529, 530, 532, 531, 533, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 581, 0, 0, 438, 0, 0, 579, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 2298, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 569, 580, 575, 576, 573, 574,
	568, 572, 571, 570, 583, 560, 561, 562, 563, 565,
	0, 577, 578, 564, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 567, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 1103, 178, 179, 180, 545, 544, 534, 547,
	548, 549, 550, 0, 0, 209, 546, 216, 551, 552,
	553, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 538, 0,
	566, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 536, 0, 0, 0, 0, 582, 0, 537, 0,
	0, 529, 530, 532, 531, 533, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	581, 0, 0, 438, 0, 0, 579, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 569, 580, 575, 576, 573, 574, 568, 572,
	571, 570, 583, 560, 561, 562, 563, 565, 0, 577,
	578, 564, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	567, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 81, 0,
	0, 178, 179, 180, 545, 544, 534, 547, 548, 549,
	550, 0, 0, 209, 546, 216, 551, 552, 553, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 538, 0, 566, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 536,
	0, 0, 0, 0, 582, 0, 537, 0, 0, 529,
	530, 532, 531, 533, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 581, 0,
	0, 438, 0, 0, 579, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	569, 580, 575, 576, 573, 574, 568, 572, 571, 570,
	583, 560, 561, 562, 563, 565, 0, 577, 578, 564,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1003, 1002, 1012, 1013, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1004, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 828, 438, 0, 0,
	0, 0, 0, 825, 826, 285, 791, 282, 182, 198,
	819, 823, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 1123, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 1125,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 992, 993, 991, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 72, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 81, 0, 1103, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 80, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 72, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 80, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 1482, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 1480, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 791, 282,
	182, 198, 789, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 1482, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 1103, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 2182,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 1733,
	0, 0, 1734, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 1146, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1145, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 2279, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 2182, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1125, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 1387,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	1268, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 1266, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 1264, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 1262, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 1260, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	1256, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 1254, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 1252, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 1227, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 1130, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 968,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	510, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 458, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231,
}

var yyPact = [...]int{
	3314, -1000, -329, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1524, 1555, -1000, -1000, -1000, -1000, 1641,
	-1000, 635, 1306, -1000, 1536, 233, -1000, 30081, 427, -1000,
	29603, 426, 4182, 30081, -1000, 109, -1000, 102, 30081, 136,
	29125, -1000, -1000, -230, 12871, 1474, 3, 2, 30081, -1000,
	1622, 1338, -1000, 237, -1000, -1000, -1000, -1000, -1000, -1000,
	28647, -1000, -1000, -1000, 1515, 1521, 1645, 537, 1470, -1000,
	1581, 1338, -1000, 12871, 1612, 1571, 11437, -1000, 11437, 351,
	-1000, -1000, 9046, -1000, -1000, 17653, 30081, 30081, 314, -1000,
	1536, -1000, -1000, 293, -1000, 292, 1264, -1000, 1257, -1000,
	501, 340, 280, 373, 358, 278, 276, 275, 269, 268,
	267, 266, 265, 294, -1000, 629, 629, -129, -130, 2397,
	338, 338, 338, 385, 1499, 1489, -1000, 647, -1000, 629,
	629, 277, 629, 629, 629, 629, 234, 232, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 211, 1536, 221, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30081, 124, 30081, -1000,
	500, 30081, 681, 681, 33, 681, 681, 681, 681, 125,
	502, -2, -1000, 100, 224, 107, 206, 673, 181, 85,
	-1000, -1000, 208, 673, 1027, 553, 93, -1000, 681, 7126,
	7126, 7126, -1000, 1510, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 383, -1000, -1000, -1000, -1000, 30081, 28169, 296,
	650, -1000, -1000, -1000, 97, -1000, -1000, 1122, 796, -1000,
	12871, 2333, 1271, 1271, -1000, -1000, 496, -1000, -1000, 14305,
	14305, 14305, 14305, 14305, -1000, 14305, 14305, 14305, 14305, 14305,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1271, 499, -1000, -1000, 1271, 1271,
	1271, 1271, 1271, 1271, 1271, 1271, 12871, 1271, 1271, 1271,
	1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271,
	1271, 1271, 1271, 1271, -1000, -1000, 10481, -1000, 30081, -1000,
	1271, 147, 1581, 1338, -1000, 1622, 1617, 237, -1000, 1485,
	1164, 1096, 925, 1338, 1229, 30081, -1000, 1278, -1000, -1000,
	-1000, 1431, 994, 1025, -1000, -1000, -1000, -1000, 877, 12871,
	-1000, -1000, 1636, -1000, 15739, 492, 788, 1635, 27691, -1000,
	351, 351, 1245, 8566, -25, -1000, -1000, -1000, 636, 19565,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1510, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1192, 30081, -1000, -1000, 2351, 1026,
	-1000, 1305, -1000, 1190, -1000, 1288, 1314, 424, 1026, 413,
	412, 411, -1000, -66, -1000, -1000, -1000, -1000, -1000, 629,
	629, 289, 233, 4063, -1000, -1000, -1000, 27213, 1302, 1026,
	-1000, 1301, -1000, 714, 419, 462, 462, 1026, -1000, -1000,
	30081, 1026, 713, 711, 30081, 30081, -1000, 26735, -1000, 26257,
	25779, 914, 30081, 25301, 24823, 24345, 23867, 23389, -1000, 1370,
	-1000, 1317, -1000, -1000, -1000, 30081, 30081, 30081, 242, -1000,
	-1000, 30081, 1026, -1000, -1000, 913, 900, 629, 629, 891,
	1020, 1013, 1011, 629, 629, 887, 1009, 21477, 205, 882,
	880, 873, 901, 1008, 138, 898, 871, 843, 30081, 1300,
	30081, -1000, 201, 641, 288, 633, 1536, 1469, 1243, 369,
	418, 1026, 345, 345, -1000, 7606, -1000, -1000, 1005, 12871,
	-1000, 675, 673, 673, -1000, -1000, -1000, -1000, -1000, -1000,
	681, 30081, 675, -1000, -1000, -1000, 673, 681, 30081, 681,
	681, 681, 681, 673, 673, 673, 681, 30081, 30081, 30081,
	30081, 30081, 30081, 30081, 30081, 30081, 7126, 7126, 7126, 553,
	681, -260, -1000, 1003, -1000, 1379, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 113, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -84, 1236, 22911, -1000, -261, -262,
	-264, -265, -1000, -1000, -1000, -276, -278, -1000, -1000, -1000,
	12871, 12871, 12871, 12871, 831, 557, 14305, 805, 665, 14305,
	14305, 14305, 14305, 14305, 14305, 14305, 14305, 14305, 14305, 14305,
	14305, 14305, 14305, 14305, 620, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1026, -1000, 1106, 1106, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 14783, 9524, 7606, 11437,
	11437, 12871, 12871, 12393, 11915, 11437, 1513, 651, 796, 30081,
	-1000, 925, -1000, -1000, 13827, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30081, 30081, 11437,
	11437, 11437, 11437, 11437, 1132, 1152, 1188, -1000, 1231, -1000,
	-146, 17175, 12871, 1001, -1000, -1000, -1000, 1581, -1000, 1581,
	1132, 1464, 1435, 11437, -1000, -1000, 1464, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1099, -1000, 30081, 1229, 1560,
	30081, 1429, 995, 242, -1000, 12871, 12871, 1221, -1000, 790,
	30081, -1000, -1000, 22433, -1000, -1000, 6646, -1000, 30081, 263,
	30081, -1000, 20999, 21955, 8086, -25, -1000, 8086, 1213, -1000,
	-20, -17, 10002, 509, -1000, -1000, -1000, 2397, 15261, 1071,
	1481, 36, -1000, -1000, -1000, 1288, -1000, 1288, 1288, 1288,
	1288, 242, 242, 242, 242, -1000, -1000, -1000, -1000, -1000,
	1299, 1296, -1000, 1288, 1288, 1288, 1288, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1295, 1295, 1295, 1290, 1290, 327,
	-1000, 12871, 198, 30081, 1544, 834, 201, 349, 1326, 1026,
	1026, 1026, 349, -1000, 1019, 965, -1000, 1219, -1000, -1000,
	1607, -1000, -1000, 564, 746, 724, 617, 30081, 159, 244,
	-1000, 328, -1000, 30081, 1026, 698, 462, 1026, -1000, 1026,
	-1000, -1000, -1000, -1000, 486, -1000, -1000, 1026, 1218, -1000,
	1256, 773, 722, 766, 682, 1218, -1000, -1000, -91, 1218,
	-1000, 1218, -1000, 1218, -1000, 1218, -1000, 1218, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 573, 30081, 159, 620,
	-1000, 365, -1000, -1000, 620, 620, -1000, -1000, -1000, -1000,
	993, 991, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -316,
	30081, -1000, 191, 630, 241, 279, 245, 30081, 151, 1563,
	185, 225, 30081, 30081, 345, 1378, 30081, 1548, 30081, -1000,
	-1000, -1000, -1000, 796, 30081, -1000, -1000, 681, 681, -1000,
	-1000, 30081, 681, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 681, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30081,
	30081, -1000, -1000, -1000, -1000, -1000, 117, -30, 250, -1000,
	-1000, -1000, -1000, -1000, 1578, -1000, 796, 557, 707, 601,
	-1000, -1000, 920, -1000, -1000, 1825, -1000, -1000, -1000, -1000,
	805, 14305, 14305, 14305, 1267, 1825, 3101, 897, 917, 516,
	854, 854, 511, 511, 511, 511, 511, 721, 721, -1000,
	-1000, -1000, -1000, 925, -1000, -1000, -1000, 925, 11437, 11437,
	1217, -1000, 1271, 482, -1000, 1170, 1170, 802, 959, 607,
	1629, 1170, 598, 1628, 1170, 1170, 11437, -1000, -1000, 657,
	-1000, 12871, 925, -1000, 1289, 1216, 1215, 1170, 925, 925,
	1170, 1170, 925, -1000, 30081, -1000, -229, -1000, -47, 466,
	1271, -1000, 21477, 925, 1122, -1000, -1000, -1000, -1000, -1000,
	19087, 1146, 1464, -1000, -1000, 1271, 1181, -1000, -1000, 242,
	35, 654, 796, 796, 12871, -1000, -1000, -1000, -1000, -1000,
	-1000, 478, 1621, 235, 1271, -1000, 1252, 1406, -1000, -1000,
	-1000, 1558, 16697, 30081, 1235, 1214, -1000, 467, -1000, 1213,
	-25, -48, -1000, -1000, -1000, -1000, 796, -1000, 942, -1000,
	2284, -1000, 337, -1000, -1000, -1000, -1000, 736, 1554, 1478,
	28, -1000, -1000, -1000, 242, 242, -1000, -1000, 509, 509,
	509, 509, 989, 989, -1000, -1000, -1000, -1000, -1000, 832,
	-1000, -1000, -1000, 818, -1000, -1000, 677, 1341, 198, -1000,
	-1000, 629, 985, 1494, 30081, -1000, -1000, 1068, 191, 30081,
	662, 1377, -1000, 1326, 1326, 1326, 30081, -1000, -1000, -1000,
	-1000, 3469, 30081, 1179, -1000, 152, -1000, 1066, 30081, -1000,
	1174, 1294, 1026, 1026, -1000, -1000, 7606, -1000, 30081, 1271,
	-1000, -1000, -1000, -1000, 416, 1525, 1514, 159, 152, 509,
	1026, -1000, -1000, -1000, -1000, -1000, -319, 1172, 389, 182,
	195, 30081, 30081, 30081, 30081, 30081, 437, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 228, 354, -1000, 30081, 30081, 460,
	-1000, -1000, -1000, 673, -1000, -1000, 673, -1000, -1000, -1000,
	-1000, -1000, 1507, 30081, -34, -293, -1000, -290, -1000, -1000,
	-1000, -1000, 1267, 1825, 2188, -1000, 14305, 14305, -1000, -1000,
	1170, 1170, 11437, 11437, 7606, -1000, -1000, 386, 620, 386,
	14305, 14305, -1000, 14305, 14305, -1000, -78, 1274, 621, -1000,
	12871, 762, -1000, -1000, 14305, 14305, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 407, 405, 392, 30081, -1000,
	-1000, 1584, -1000, 1444, 1443, 1627, 1621, -1000, 20999, 1464,
	-1000, -1000, 30081, -222, -1000, 1471, 1449, -1000, -1000, -1000,
	-1000, 6166, 1581, 12871, 1376, 30081, 1271, -1000, 16218, 30081,
	30081, 20999, 20999, 20999, 20999, 20999, -1000, 1402, 1398, -1000,
	1418, 1415, 1414, 30081, -1000, 1166, 925, 1617, 16697, 263,
	1204, 20999, -1000, -1000, 20999, 30081, 5686, -1000, -1000, -37,
	-45, -1000, -1000, -1000, 2397, -1000, -1000, -1000, -1000, 783,
	14305, 1644, -1000, 982, -1000, -1000, 689, 684, -1000, 30081,
	1293, -1000, -1000, -1000, 509, 509, -1000, -1000, -1000, -1000,
	1157, -1000, 1148, 1212, 1139, 106, -1000, 1312, 1506, 629,
	629, -1000, 813, -1000, 1026, -1000, -1000, 387, -1000, 1529,
	30081, 1375, 1374, 1369, -1000, 1598, 1203, 30081, -1000, -1000,
	30081, -1000, 1442, 198, 30081, -1000, -1000, -1000, -1000, 244,
	30081, -1000, 1106, 152, -1000, -1000, -1000, -1000, -1000, -1000,
	30081, 179, -1000, 1292, 962, -1000, 1291, -1000, -1000, -1000,
	-1000, 133, 240, -1000, 30081, 430, 1341, 30081, -1000, -1000,
	-1000, 681, 681, -1000, -1000, 1503, -1000, 1026, -1000, 14305,
	1825, 1825, -1000, -1000, -1000, 925, -1000, 925, 1288, 1288,
	-1000, 1288, 1290, -1000, 1288, 95, 1288, 72, 925, 925,
	2965, 2943, 2872, 2828, 1271, -73, -1000, 796, 12871, 2804,
	2754, 1271, 1271, 1271, 1118, 30081, -1000, -1000, -1000, -1000,
	1621, 1618, 1208, -1000, -1000, 35, 305, -1000, 1459, 1449,
	-1000, 1593, 1467, 1590, -1000, -1000, -1000, 796, -1000, 1538,
	1207, -1000, 594, 1110, -1000, -1000, 10959, 1124, 1438, 464,
	1118, 1184, 1406, 1329, 1351, 1393, -1000, -1000, -1000, -1000,
	1391, -1000, 1380, -1000, -1000, 1278, -1000, -1000, 1152, 1621,
	20999, 1177, 1177, -1000, 461, -1000, -1000, -1000, -1000, -1000,
	-1000, 1825, 126, -1000, -1000, -1000, 1287, 14305, -1000, -1000,
	242, 964, 242, 811, -1000, 800, -1000, -1000, -168, -1000,
	-1000, 1283, 1364, -1000, -1000, 30081, -1000, -1000, 30081, 30081,
	30081, 30081, -1000, -1000, 239, -1000, 1102, 1091, -1000, -127,
	-1000, -1000, 1278, -1000, -1000, -1000, 1043, -1000, -103, 1026,
	30081, 30081, 30081, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1825, -1000, -1000, -1000, 273, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14305, 14305, 14305, 14305, 14305, 1581,
	946, 796, 14305, 14305, 18609, 20521, 20521, 18131, -1000, 1618,
	1586, 1589, 1450, 1458, 1458, 1459, -1000, 1588, 1585, -1000,
	937, 1583, 927, 672, -1000, 30081, 12871, 1271, -1000, 238,
	30081, 1271, 30081, -1000, 1614, -1000, -1000, 12871, 1284, -1000,
	12871, -1000, -1000, -1000, -1000, -1000, 1614, 1177, -1000, -1000,
	529, -1000, 30081, 1798, 509, -1000, 509, 1035, 1033, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1278, -1000, -1000,
	-1000, 1203, 247, 308, -1000, 244, -1000, -133, -134, 1552,
	-1000, -1000, 7606, -1000, -1000, 1276, 1319, -1000, -1000, -1000,
	1289, 1289, 1289, 1289, 227, 925, -1000, 1289, 1289, 1086,
	-1000, -1000, -1000, 1086, 1086, 466, 1586, -1000, 12871, 12871,
	1453, 786, -1000, -1000, -1000, -1000, 926, 923, -1000, 918,
	-1000, 1643, -1000, 796, -1000, 1271, -1000, 444, 1110, -1000,
	1581, 796, 30081, 796, 1581, -1000, 1082, -1000, -1000, -1000,
	-1000, -1000, 1551, 1271, -1000, -1000, -1000, -1000, 237, 1200,
	-1000, 565, 30081, 30081, -1000, -1000, -1000, -1000, 925, 203,
	-106, -1000, -1000, -1000, 20043, -1000, -1000, -1000, -1000, -1000,
	796, 1122, -1000, 719, -1000, -1000, -1000, -1000, -1000, 30081,
	1110, 30081, -1000, 1061, -1000, 1350, 669, 237, 13349, -99,
	7606, 5206, 1058, -1000, -1000, 1428, -89, -120, -1000, -1000,
	-1000, -1000, 1084, -1000, -1000, 1349, -1000, 1626, -1000, -1000,
	-1000, 775, 804, -1000, -1000, -1000, -99, 1289, 925, -1000,
	-22, -1000, -1000, -1000, -1000, -1000, 1291, -1000, 1409, -1000,
	-1000, 1639, 528, 528, -1000, -1000, -1000, -1000, -1000, 326,
	-1000, -1000, -103, -104, -1000, -1000, -1000, 316, 866, -1000,
	197, -1000, -117, -1000, -1000, -1000, -1000, -121, -1000,
}

var yyPgo = [...]int{
	0, 1961, 22, 68, 152, 6, 157, 72, 1959, 1958,
	1957, 1956, 163, 162, 161, 1955, 1954, 1953, 1952, 1935,
	1934, 1928, 1927, 1925, 1924, 158, 131, 149, 1923, 1922,
	1921, 79, 143, 50, 52, 147, 1920, 1908, 39, 1905,
	1902, 1901, 137, 136, 597, 1897, 134, 74, 1896, 1895,
	1894, 1892, 1891, 1890, 1887, 1886, 1884, 1882, 1881, 1878,
	1877, 1876, 222, 1870, 1867, 4, 1866, 46, 1865, 1864,
	1863, 1862, 1860, 109, 1859, 1858, 1856, 154, 1854, 1853,
	75, 119, 83, 78, 1852, 1851, 64, 139, 1849, 87,
	111, 1839, 1838, 252, 63, 55, 1833, 67, 62, 1824,
	31, 1817, 1816, 97, 1814, 1812, 1811, 57, 1809, 1808,
	3132, 1807, 60, 92, 24, 99, 1800, 1795, 1793, 1792,
	47, 3000, 1791, 1790, 30, 1789, 1783, 160, 1780, 102,
	17, 1778, 16, 11, 26, 1776, 98, 1775, 42, 40,
	1772, 104, 1756, 1754, 28, 21, 32, 1753, 34, 90,
	121, 14, 66, 116, 1750, 1749, 29, 36, 1747, 1746,
	1745, 1744, 1741, 1738, 35, 1737, 25, 1736, 150, 1735,
	13, 18, 44, 70, 140, 33, 8, 1734, 132, 1733,
	19, 127, 89, 124, 1732, 1731, 1730, 145, 170, 1728,
	1727, 38, 130, 110, 125, 1726, 181, 1725, 1724, 58,
	1071, 2547, 9, 129, 1723, 1722, 2104, 100, 95, 41,
	1721, 84, 1720, 1719, 1718, 155, 141, 71, 859, 73,
	1716, 1715, 1713, 1712, 1710, 1709, 1708, 148, 56, 27,
	135, 37, 1707, 1706, 1703, 86, 65, 1701, 122, 120,
	80, 128, 1698, 133, 123, 76, 1697, 43, 1694, 1693,
	1692, 1691, 77, 1688, 1687, 1686, 1685, 126, 113, 85,
	49, 1680, 45, 88, 118, 117, 1679, 15, 144, 7,
	1678, 1, 0, 1673, 3, 138, 178, 115, 1672, 1671,
	2, 1670, 5, 1668, 1667, 93, 1666, 1665, 1663, 12,
	20, 10, 1662, 1661, 2214, 350, 91, 1656, 153,
}

//line sql.y:5485
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 292, 293, 293, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 272, 272, 272, 275, 275,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 296, 296, 105,
	105, 103, 103, 104, 104, 173, 173, 15, 16, 16,
	183, 183, 182, 182, 182, 184, 184, 184, 184, 218,
	218, 17, 17, 17, 17, 17, 78, 78, 274, 274,
	273, 271, 271, 270, 270, 269, 29, 30, 39, 39,
	39, 39, 40, 41, 276, 276, 248, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 250,
	250, 237, 237, 249, 249, 249, 249, 249, 249, 249,
	236, 236, 92, 92, 154, 154, 154, 154, 154, 154,
	154, 154, 288, 288, 155, 155, 155, 155, 155, 155,
	289, 289, 289, 289, 220, 220, 220, 220, 223, 223,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 224, 224, 224, 224, 224, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 226, 226, 226, 226, 226, 226,
	226, 226, 235, 235, 227, 227, 230, 230, 231, 231,
	231, 232, 232, 232, 233, 233, 228, 228, 228, 228,
	229, 229, 229, 238, 262, 262, 261, 261, 259, 259,
	259, 259, 247, 247, 256, 256, 256, 256, 256, 246,
	246, 242, 242, 242, 243, 243, 244, 244, 241, 241,
	245, 245, 258, 258, 257, 239, 239, 240, 240, 264,
	290, 290, 290, 290, 291, 291, 265, 281, 282, 280,
	280, 280, 280, 280, 67, 67, 67, 195, 195, 195,
	254, 254, 253, 253, 253, 255, 255, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 190, 190, 190, 279, 279,
	279, 279, 279, 279, 278, 278, 278, 251, 251, 251,
	277, 277, 47, 47, 139, 139, 36, 36, 36, 36,
	36, 36, 35, 35, 35, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 37, 37, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 234,
	234, 234, 266, 266, 267, 267, 19, 28, 28, 20,
	20, 20, 20, 21, 21, 48, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 283, 283, 189, 189, 197, 197,
	188, 188, 211, 211, 211, 191, 191, 191, 192, 192,
	287, 287, 287, 50, 50, 52, 52, 53, 54, 54,
	213, 213, 214, 214, 55, 56, 68, 68, 68, 68,
	68, 68, 70, 70, 70, 9, 9, 9, 9, 64,
	64, 64, 8, 8, 51, 51, 58, 284, 284, 285,
	286, 286, 286, 286, 59, 61, 22, 22, 22, 22,
	22, 22, 85, 85, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 79, 79, 79, 74,
	74, 297, 62, 63, 63, 77, 77, 77, 71, 71,
	71, 76, 76, 76, 82, 82, 84, 84, 84, 84,
	84, 86, 86, 86, 86, 86, 86, 86, 81, 81,
	83, 83, 83, 83, 204, 204, 204, 203, 203, 94,
	94, 96, 95, 95, 97, 97, 98, 98, 98, 137,
	113, 113, 171, 171, 170, 170, 172, 172, 172, 172,
	174, 174, 99, 99, 99, 99, 100, 100, 101, 101,
	102, 102, 212, 212, 209, 209, 209, 208, 208, 106,
	106, 106, 108, 107, 107, 107, 107, 109, 109, 111,
	111, 110, 110, 112, 114, 114, 114, 114, 114, 115,
	115, 93, 93, 93, 93, 93, 93, 93, 93, 186,
	186, 117, 117, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 128, 128, 128, 128, 128, 128, 118,
	118, 118, 118, 118, 118, 118, 80, 80, 129, 129,
	129, 136, 130, 130, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 125,
	125, 125, 125, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 298, 298, 127, 126, 126, 126, 126,
	126, 126, 126, 75, 75, 75, 75, 75, 217, 217,
	217, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 142, 142, 72, 72, 140, 140,
	141, 143, 143, 138, 138, 138, 120, 120, 120, 120,
	120, 120, 120, 120, 122, 122, 122, 144, 144, 145,
	145, 146, 146, 148, 147, 147, 149, 150, 150, 150,
	151, 151, 152, 152, 152, 38, 38, 38, 38, 38,
	33, 33, 33, 33, 34, 34, 34, 87, 87, 87,
	87, 89, 89, 88, 88, 65, 65, 66, 66, 66,
	90, 90, 91, 91, 91, 91, 168, 168, 153, 153,
	153, 160, 160, 160, 156, 156, 158, 158, 158, 159,
	159, 159, 157, 165, 165, 167, 167, 166, 166, 162,
	162, 163, 163, 164, 164, 164, 161, 161, 119, 119,
	119, 119, 119, 169, 169, 169, 169, 175, 175, 132,
	132, 134, 134, 133, 135, 176, 176, 180, 177, 177,
	181, 181, 181, 181, 181, 178, 178, 179, 179, 205,
	205, 205, 185, 185, 196, 196, 193, 193, 194, 194,
	187, 187, 198, 198, 198, 60, 131, 131, 263, 263,
	260, 201, 201, 202, 202, 206, 206, 210, 210, 207,
	207, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 294, 295, 215, 216, 216,
	216,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 3, 4, 2,
	3, 2, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 5, 4, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -292, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 163, -40, -30, 164, -41, 166, 165,
	201, 167, 194, 72, 240, 241, 243, 244, 245, 246,
	-70, 199, 200, 169, 34, 43, 31, 32, 35, 172,
	-4, -25, 6, -294, 9, 345, 196, 195, 26, -6,
	358, 83, -293, 485, -168, -153, 20, 31, 27, -152,
	-148, -77, -153, 18, 16, 5, -62, -297, -62, -62,
	10, 11, -62, -248, -250, 83, 136, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -268, -35, -32,
	168, 165, 209, 105, 106, 201, 202, 203, 167, 185,
	200, 204, 199, 218, -31, 78, 31, 358, 361, -255,
	164, 170, 171, 346, 108, 107, 73, 166, -252, 290,
	462, -46, 464, 98, 100, 463, 42, 175, 465, 466,
	467, 468, 184, 469, 470, 471, 472, 478, 479, 480,
	481, 109, 5, -62, -210, -206, -272, -200, 86, 87,
	88, 355, 187, 389, 390, 234, 78, 39, 290, 462,
	240, 254, 248, 275, 267, 356, 391, 237, 188, 222,
	459, 265, 114, 464, 392, 202, 295, 296, 297, 98,
	243, 332, 477, 239, 393, 475, 100, 463, 77, 49,
	42, 197, 263, 259, 465, 223, 394, 366, 216, 108,
	105, 484, 34, 257, 48, 28, 474, 107, 47, 466,
	127, 395, 467, 299, 280, 453, 46, 300, 203, 396,
	81, 360, 461, 301, 258, 302, 233, 473, 169, 397,
	445, 303, 304, 454, 398, 281, 285, 399, 324, 305,
	50, 400, 401, 455, 106, 402, 76, 468, 252, 253,
	403, 231, 186, 326, 279, 184, 33, 306, 357, 235,
	56, 210, 327, 44, 283, 43, 449, 404, 452, 278,
	274, 51, 405, 406, 407, 408, 469, 277, 251, 273,
	483, 228, 470, 60, 171, 287, 286, 288, 217, 323,
	270, 409, 410, 411, 191, 79, 412, 260, 19, 413,
	414, 307, 224, 415, 54, 416, 417, 330, 200, 418,
	52, 471, 37, 205, 472, 419, 420, 421, 422, 423,
	309, 424, 308, 282, 284, 212, 310, 359, 425, 256,
	204, 476, 426, 192, 460, 206, 209, 199, 331, 193,
	427, 428, 429, 430, 431, 238, 432, 433, 244, 478,
	41, 434, 435, 436, 437, 232, 227, 325, 334, 59,
	80, 292, 438, 458, 250, 225, 439, 241, 53, 479,
	480, 481, 219, 482, 7, 312, 109, 229, 230, 45,
	271, 211, 440, 441, 261, 262, 276, 249, 272, 242,
	446, 213, 313, 201, 442, 333, 226, 293, 363, 218,
	314, 457, 362, 269, 266, 220, 443, 315, 176, 214,
	215, 444, 447, 316, 317, 236, 318, 319, 320, 321,
	322, 221, 361, 247, 264, 294, 174, -62, 174, -110,
	-206, 174, -178, 296, -197, 298, 311, 306, 316, 304,
	-189, 307, 309, 212, -287, 324, 174, 313, 163, 154,
	299, 308, 317, 318, 236, 319, 322, 221, -283, -272,
	467, 482, 114, 268, 303, 301, 325, 449, 321, 320,
	-206, 242, -213, 247, -201, -272, -200, 245, -110, -68,
	445, 167, -215, -215, -79, 449, 451, -130, -93, -116,
	120, -121, 29, 24, -120, -117, -138, -135, -136, 154,
	155, 157, 156, 158, 91, 143, 144, 151, 121, 159,
	-125, -123, -124, -126, 90, 89, 99, 92, 93, 94,
	95, 101, 102, 103, -201, -206, -133, -2, 66, 67,
	346, 347, 348, 349, 354, 350, 123, 55, 341, 335,
	344, 343, 342, 339, 340, 337, 338, 352, 353, 179,
	336, 173, 149, 345, -272, -200, -294, 42, 312, 312,
	-110, -62, -146, -77, -148, -4, -2, -294, 6, -62,
	-2, -3, -7, -25, -27, 385, -26, -206, -153, -168,
	10, 138, 40, 48, -151, -152, -6, -2, -93, 17,
	21, 22, -83, 145, -93, -206, -63, -83, -187, 178,
	-62, -62, -177, -218, 242, -181, 325, 324, -202, -179,
	-201, -199, -178, 323, 168, 364, 119, 23, 25, 122,
	154, 17, 123, 35, 170, 268, 185, 153, 181, 346,
	163, 70, 365, 337, 338, 335, 341, 348, 349, 336,
	298, 29, 11, 367, 26, 195, 22, 36, 147, 165,
	126, 198, 24, 196, 103, 370, 20, 73, 190, 12,
	183, 38, 14, 371, 372, 15, 179, 178, 138, 175,
	68, 9, 159, 27, 135, 64, 373, 116, 374, 375,
	376, 377, 66, 136, 18, 339, 340, 31, 450, 378,
	354, 207, 149, 71, 57, 451, 120, 379, 380, 101,
	381, 104, 74, 456, 117, 16, 69, 40, 382, 208,
	383, 180, 384, 328, 385, 137, 166, 345, 67, 386,
	173, 311, 6, 351, 30, 194, 182, 111, 65, 387,
	174, 125, 352, 353, 177, 102, 5, 115, 32, 10,
	72, 75, 342, 343, 344, 55, 110, 358, 124, 13,
	388, 329, 118, 114, -249, 136, -236, -240, -201, 189,
	-265, 185, -110, -258, -257, -201, -78, -196, 175, 183,
	182, 115, -276, 117, 229, 336, 173, -42, -43, -178,
	153, 206, 84, 84, -240, -239, -238, -277, 208, 189,
	-264, -256, 181, 190, -246, 182, 183, -241, 175, 116,
	-277, -241, 180, 190, 208, 208, 109, 208, 109, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 205, -247,
	128, -247, 362, 362, -252, -277, -277, -277, 177, 33,
	33, -198, -241, 177, 23, -247, -247, -178, 153, -247,
	-247, -247, -247, 216, 216, -247, -247, -247, -247, -247,
	-247, -247, -247, -247, -247, -247, -247, -247, -247, -247,
	174, -276, -87, 322, 236, 78, -44, 218, -28, -110,
	-196, 175, 176, -276, -110, 160, -110, -191, 136, 13,
	-191, -188, 312, 310, 297, 302, -191, -191, -191, -191,
	219, 295, -242, 175, 33, 186, 312, 219, 295, 219,
	220, 219, 220, 305, 315, 219, -211, 12, 138, 336,
	300, 304, 212, 174, 213, 176, 314, -272, 452, 220,
	-211, 90, -192, 136, 312, 215, -191, -216, -294, -202,
	268, -216, -216, 30, 177, -201, -64, -201, 90, -9,
	-5, -13, -12, -14, 128, -85, 312, -73, 154, 467,
	453, 454, 455, 452, 309, 460, 458, 456, 219, 457,
	84, 119, 117, 118, 135, -93, -118, 138, 120, 136,
	137, 122, 140, 139, 150, 143, 144, 145, 146, 147,
	148, 149, 141, 142, 153, 128, 129, 130, 131, 132,
	133, 134, -186, -294, -136, 161, 162, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -294, 160, -294,
	-294, -294, -294, -294, -294, -294, -294, -142, -93, -294,
	-298, -294, -298, -127, -294, -298, -127, -298, -127, -298,
	-298, -127, -298, -127, -298, -298, -127, -294, -294, -294,
	-294, -294, -294, -294, -2, -3, -130, -215, -284, -285,
	-113, -110, -294, 236, -151, -6, -2, -146, -152, -148,
	-2, -62, -71, -84, 61, 62, -86, 22, 36, 65,
	63, 21, -295, 85, -295, -168, -295, 84, -27, -171,
	83, 59, 41, 90, 90, 84, 19, -147, -149, -93,
	12, -204, -203, 23, -201, 90, 160, 97, 12, -111,
	27, -110, -187, -187, 84, 242, -181, -218, -183, -182,
	326, 328, 128, -205, -201, 90, 29, 85, 84, -110,
	-220, -223, -225, -224, -226, -221, -222, 265, 266, 154,
	269, 271, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 30, 197, 261, 262, 263, 264, 281, 282, 283,
	284, 285, 286, 287, 288, 248, 267, 356, 249, 250,
	251, 252, 253, 254, 256, 257, 258, 259, 260, -275,
	-272, 83, 85, 84, -227, 83, -87, 174, -272, 175,
	175, 175, -62, 345, -247, -247, 205, -35, -32, -268,
	16, -31, -32, 168, 105, 106, 165, 83, -236, 83,
	-245, -275, -272, 83, 116, 180, 115, -244, -241, -244,
	-245, -272, -138, -201, -206, -272, 116, 116, -174, -201,
	-174, -174, 21, -174, 21, -174, 21, 92, -201, -174,
	21, -174, 21, -174, 21, -174, 21, -174, 21, 29,
	76, 77, 29, 79, 80, 81, -138, -138, -236, -178,
	-110, -272, 92, 92, -247, -247, 92, 90, 90, 90,
	-247, -247, 92, 90, -208, -206, 90, -278, 191, 233,
	235, 92, 92, 92, 92, 29, 90, -279, 29, 474,
	473, 475, 476, 477, 92, 29, 92, 29, 92, -201,
	83, -110, -90, 223, 163, 165, 168, 74, 90, 237,
	128, 42, 84, 177, 174, -272, -193, 179, -193, -207,
	-206, -199, 90, -93, -243, 12, 138, -211, -211, -191,
	-110, -243, -211, -191, -110, -191, -191, -191, -191, -211,
	-211, -211, -191, -206, -206, -110, -110, -110, -110, -110,
	-110, -110, -216, -216, -216, -192, -191, 452, 90, 74,
	-214, 245, 279, 446, 447, 448, 84, 358, -103, -110,
	452, 452, 452, 452, 452, 452, -93, -93, -93, -93,
	-128, 101, 120, 102, 103, -121, -129, -133, -136, 96,
	138, 136, 137, 122, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -217,
	-272, 90, 154, -272, -120, -120, -201, -82, 22, 36,
	-81, -83, -202, -207, -199, -81, -81, -93, -93, -138,
	90, -81, -138, 90, -81, -81, -76, 22, 36, -140,
	-141, 124, -138, -295, -121, -201, -201, -81, -82, -82,
	-81, -81, -168, -295, 84, -286, 328, 329, 450, -209,
	208, -208, 23, -131, -130, 90, -151, -151, 61, 62,
	57, -81, -86, -295, -26, 23, -170, -201, 60, 90,
	-228, -178, -93, -93, 84, -150, 25, 26, -110, -203,
	145, -207, -110, -173, 208, -110, -95, -97, -98, -99,
	-113, -137, -294, 12, -103, -104, -112, -206, -181, -183,
	84, 327, 329, 330, 74, 104, -93, -229, 153, -254,
	-253, -252, -236, -238, -239, -240, 85, -154, -92, 38,
	-232, 293, 292, -227, -227, -227, -227, -227, -228, -228,
	-228, -228, 83, 83, -227, -227, -227, -227, -230, 83,
	-230, -230, -231, 83, -231, -265, -93, -262, -261, -259,
	-260, 184, 98, 358, 75, -257, -150, 92, -90, -194,
	179, -263, -260, -272, -272, -272, -194, -272, 90, -272,
	90, 84, 17, -237, -236, -47, 233, -267, 208, -264,
	-258, -245, 116, -244, -245, -245, 160, -272, 84, 27,
	109, 109, 109, 109, 358, 165, 30, -236, -47, -217,
	177, -217, -217, 90, 90, -190, 482, -103, -89, 225,
	128, 214, 214, 174, 174, 227, -110, 238, 239, 237,
	21, 226, 228, 230, 216, -110, -110, -193, 74, -105,
	-110, 24, -206, -110, -191, -191, -110, -191, -191, -110,
	-201, -73, 328, 84, 358, 20, -74, 20, 101, 102,
	103, -129, -121, -121, -121, -80, 198, 119, -295, -295,
	-81, -81, 84, -294, 160, -295, -295, 84, 75, 23,
	12, 12, -295, 12, 12, -295, -295, -81, -143, -141,
	126, -93, -295, -295, 84, 84, -295, -295, -295, -295,
	-295, -285, 449, 329, -114, 72, 178, 73, -294, -208,
	-295, -122, -201, 92, 95, -153, -94, -96, 12, -86,
	-136, 85, 84, -228, -157, -162, -188, -272, 90, 154,
	-149, 160, -115, 13, -119, 30, 55, -5, -294, -294,
	30, 84, -106, -108, -107, -109, 64, 68, 70, 65,
	66, 67, 71, -212, 23, -95, -3, -2, -294, -110,
	-103, -296, 12, 75, -296, 84, 160, -182, -184, 331,
	328, 334, -272, 90, 84, -252, -240, -291, 101, 120,
	29, 74, 290, 98, -289, -290, 180, 115, 116, 192,
	23, 39, -233, 294, -228, -228, -229, -229, -229, -229,
	-235, 90, -235, 92, 92, 85, -38, -33, -34, 31,
	78, -259, -247, 90, 37, -201, 85, -89, -110, 120,
	74, -263, -263, -263, -206, 16, -170, 84, 85, -139,
	234, 85, -201, 85, 83, -245, -245, -202, -201, -294,
	174, 29, 29, -47, -139, -229, -272, 484, 483, 85,
	176, 232, -91, 341, 90, 86, -110, -110, -110, -110,
	-110, 168, 165, 217, 177, -103, -110, 84, -67, 193,
	188, -211, -211, 31, -110, 328, 461, 459, -80, 119,
	-121, -121, -295, -295, -83, -82, -202, -219, 154, 265,
	197, 263, 259, 279, 270, 292, 261, 293, -217, -219,
	-121, -121, -121, -121, 355, -146, 127, -93, 125, -121,
	-121, 175, 175, 175, -174, -185, 20, 12, 55, 55,
	-94, -115, -95, -86, -201, -160, 445, -165, 44, -163,
	-164, 45, -161, 46, 54, 145, -151, -93, -175, 74,
	-176, -180, -138, -132, -134, -133, -294, -169, -295, -201,
	-174, -176, -97, -98, -98, -97, -98, 64, 64, 64,
	69, 64, 69, 64, -107, -206, -295, -295, -3, -173,
	75, -95, -95, -112, -206, 145, 328, 332, 333, -252,
	101, -121, 10, 90, 116, 116, -110, 83, -229, -229,
	85, 84, 85, 84, 85, 84, -195, 395, 120, -34,
	-33, -247, -247, 92, -272, 176, 24, -110, 74, 74,
	74, 17, -236, -138, 55, -262, -170, -266, -267, -110,
	-120, -139, -110, -88, 223, 231, 83, 87, -274, 75,
	214, 290, 214, -110, -67, -38, -110, -191, -191, 31,
	-272, -121, -295, -295, -227, -227, -227, -231, -227, 253,
	-227, 253, -295, -295, 20, 20, 20, 20, -294, -72,
	351, -93, 84, 84, -294, -294, -294, -295, -110, -115,
	-144, 14, -157, 49, 271, -167, -166, 53, 45, -164,
	17, 47, 17, 28, -175, 84, 128, 84, -295, -295,
	84, 55, 160, -295, -115, -101, -100, 74, 75, -102,
	74, -100, 64, 64, -171, -295, -115, -95, -115, -115,
	160, -124, 83, -121, -228, 90, -228, 92, 92, 395,
	29, 79, 80, 81, 29, 76, 77, -110, -110, -110,
	-110, -170, 210, 85, -295, 84, -234, 358, 361, -171,
	85, -271, 358, -273, -272, -201, -201, -201, -228, -272,
	-121, -121, -121, -121, -121, -151, 90, -121, -121, -172,
	-295, -201, 180, -172, -172, -209, -144, -145, 15, 17,
	-158, 51, -156, 50, -156, -166, 17, 17, 90, 17,
	90, 116, -180, -93, -134, 55, -5, -201, -132, -201,
	-146, -93, 83, -93, -146, -115, -170, 85, -229, -229,
	85, 85, -171, 211, -290, -267, 362, 362, 23, -270,
	-269, -202, 83, 75, -295, -295, -295, -295, -75, 138,
	358, -295, -295, -295, 84, -295, -295, -295, -114, -145,
	-93, -130, -159, 52, 74, 104, 90, 90, 90, 10,
	-132, 160, -151, -170, -151, 85, -155, 23, -294, -5,
	84, 128, -170, -110, -295, 356, 71, 359, -201, 180,
	74, 104, -176, -201, 85, -281, -282, 74, -291, -288,
	101, 120, 98, -289, 110, 111, -5, -121, 207, -65,
	358, -269, -251, -202, 90, 92, 85, 60, 357, 360,
	-282, 74, 11, 10, 101, 90, -65, -295, -295, -66,
	222, 449, -274, 60, -280, 193, 188, 191, 30, -280,
	185, -271, 358, 187, 29, 101, 224, 359, 360,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 601, 601, 601, 0,
	601, 0, 0, 601, -2, -2, 601, 1007, 0, 601,
	0, 0, -2, 534, 535, 0, 537, -2, 0, 0,
	546, 1427, 1427, 596, 0, 0, 0, 0, 0, 601,
	871, 45, 601, 0, 80, 81, 552, 553, 554, 60,
	0, 1425, 1, 3, 66, 70, 0, 0, 0, 53,
	880, 0, 73, 0, 0, 605, 0, 603, 0, 990,
	601, 601, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 408, 369, 411, 367, 397,
	-2, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 262, 262, 0, 0, -2,
	360, 360, 360, 0, 0, 0, 394, 992, 315, 262,
	262, 0, 262, 262, 262, 262, 0, 0, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 897, 143, 1008, 1005, 1006, 35, 36,
	37, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 0, 984, 0, 464,
	691, 0, 525, 525, 0, 525, 525, 525, 525, 0,
	0, 0, 476, 0, 0, 0, 0, 522, 0, 0,
	495, 497, 0, 522, 0, 528, 0, 509, 525, 1428,
	1428, 1428, 975, 0, 519, 517, 531, 532, 514, 515,
	533, 536, 0, 541, 544, 1001, 1002, 0, 559, 44,
	1229, 551, 564, 565, 0, 597, 598, 40, 742, 701,
	0, 707, 709, 0, 744, 745, 746, 747, 748, 0,
	0, 0, 0, 0, 769, 0, 0, 0, 0, 0,
	775, 776, 777, 778, 856, 857, 858, 859, 860, 861,
	862, 863, 711, 712, 853, 0, 964, 741, 0, 0,
	0, 0, 0, 0, 0, 0, 844, 0, 813, 813,
	813, 813, 813, 813, 813, 813, 813, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 1427, 0, 574,
	0, 0, 880, 0, 872, 871, 58, 0, 601, -2,
	0, 0, 0, 0, 42, 0, 47, 652, 72, 71,
	916, 0, 0, 0, 54, 881, 62, 64, 882, 0,
	606, 607, 0, 630, 634, 0, 602, 0, 0, 991,
	990, 990, 97, 0, 1388, 968, -2, -2, 0, 0,
	1003, 1004, 977, -2, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, -2, 0, 0, 153, 154, 0, 38,
	288, 0, 149, 0, 282, 234, 897, 0, 0, 0,
	0, 0, 601, 0, 985, 134, 135, 141, 142, 262,
	262, 0, 143, 143, 376, 377, 378, 0, 0, -2,
	286, 0, 361, 0, 0, 276, 276, 280, 278, 279,
	0, 0, 0, 0, 0, 0, 388, 0, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	263, 0, 406, 407, 316, 0, 0, 0, 0, 386,
	387, 0, 0, 993, 994, 0, 0, 262, 262, 0,
	0, 0, 0, 262, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 910, 0, 0, 0, -2, 0, 456, 0,
	0, 0, 986, 986, 463, 0, 465, 466, 0, 0,
	467, 0, 522, 522, 520, 521, 469, 470, 471, 472,
	525, 0, 0, 271, 272, 273, 522, 525, 0, 525,
	525, 525, 525, 522, 522, 522, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1428, 1428, 1428, 528,
	525, 0, 505, 0, 506, 507, 510, 511, 1429, 1430,
	1022, 512, 513, 976, 542, 545, 562, 560, 561, 563,
	555, 556, 557, 558, 0, 576, 577, 582, 0, 0,
	0, 0, 588, 589, 590, 0, 0, 593, 594, 595,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 730, 731, 732, 733,
	734, 735, 708, 0, 722, 0, 0, 764, 765, 766,
	767, 768, 770, 771, 772, 773, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 0, 845, 0,
	796, 0, 797, 805, 0, 798, 806, 799, 807, 800,
	801, 808, 802, 809, 803, 804, 810, 0, 0, 0,
	614, 614, 0, 0, 741, 0, 0, 41, 566, 567,
	0, 674, 996, 0, 52, 61, 63, 880, 56, 880,
	0, 616, 0, 0, -2, -2, 617, 623, 624, 625,
	626, 627, 49, 1426, 50, 0, 69, 0, 43, 0,
	0, 0, 0, 246, 919, 0, 0, 873, 874, 877,
	0, 631, 635, 0, 637, 638, 0, 604, 0, 95,
	0, 690, 0, 0, 0, 1388, 974, 0, 99, 100,
	0, 0, 0, 250, 979, 980, 981, -2, 269, 0,
	-2, 241, 185, 186, 187, 234, 189, 234, 234, 234,
	234, 246, 246, 246, 246, 217, 218, 219, 220, 221,
	0, 0, 204, 234, 234, 234, 234, 224, 225, 226,
	227, 228, 229, 230, 231, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 236, 236, 236, 238, 238, 0,
	39, 0, 254, 0, 877, 0, 910, 988, 998, 0,
	0, 0, 988, 117, 0, 0, 409, 370, 398, 410,
	0, 373, 374, -2, 0, 0, 360, 0, 362, 0,
	270, 0, -2, 0, 280, 0, 276, 280, 277, 280,
	268, 281, 390, 853, 0, 391, 392, 0, 428, 660,
	0, 0, 0, 0, 0, 434, 435, 436, 0, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 399,
	400, 401, 402, 403, 404, 405, 0, 0, 362, 0,
	395, 0, 317, 318, 0, 0, 321, 322, 323, 324,
	0, 0, 327, 328, 329, 677, 678, 330, 354, 355,
	356, 331, 332, 333, 334, 335, 336, 337, 348, 349,
	350, 351, 352, 353, 338, 339, 340, 341, 342, 345,
	0, 127, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 692,
	1009, 1010, 526, 527, 0, 274, 275, 525, 525, 473,
	496, 0, 525, 477, 498, 478, 480, 479, 481, 500,
	501, 525, 484, 523, 524, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 502, 503, 504, 529, 0,
	0, 543, 547, 548, 549, 550, 0, 0, 579, 91,
	584, 585, 586, 587, 599, 592, 743, 702, 703, 704,
	706, 723, 0, 725, 727, 713, 714, 738, 739, 740,
	0, 0, 0, 0, 736, 718, 0, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 763,
	828, 829, 830, 0, 761, 762, 774, 0, 0, 0,
	615, 628, 854, 0, -2, 0, 0, 0, 0, 746,
	856, 0, 746, 856, 0, 0, 0, 612, 613, 851,
	848, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 569, 570, 572, 0, 694,
	0, 675, 0, 0, 997, 575, 55, 57, 621, 622,
	0, 639, 618, 51, 46, 0, 0, 654, 917, 246,
	939, 0, 883, 884, 0, 876, 878, 879, 74, 636,
	632, 0, 699, 0, 0, 689, 0, 642, 644, 645,
	646, 672, 0, 0, 0, 0, 93, 691, 969, 98,
	0, 0, 103, 104, 970, 971, 972, 973, 0, 136,
	-2, 312, 155, 157, 158, 159, 150, 294, 0, 0,
	244, 242, 243, 188, 246, 246, 211, 212, 250, 250,
	250, 250, 0, 0, 205, 206, 207, 208, 199, 0,
	200, 201, 202, 0, 203, 287, 0, 885, 255, 256,
	258, 262, 0, 0, 0, 283, 284, 0, 901, 0,
	0, 0, 999, 998, 998, 998, 0, 145, 146, 147,
	148, 143, 0, 0, 151, 364, 363, 0, 0, 285,
	0, 0, 280, 280, 265, 266, 0, 393, 0, 0,
	430, 431, 432, 433, 0, 0, 0, 362, 364, 250,
	0, 319, 320, 325, 326, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 425,
	426, 898, 899, 900, 0, 0, 457, 0, 0, 304,
	89, 987, 462, 522, 483, 499, 522, 475, 482, 508,
	539, 583, 0, 0, 0, 0, 591, 0, 724, 726,
	728, 715, 736, 719, 0, 716, 0, 0, 710, 779,
	0, 0, 0, 614, 0, 783, 784, 0, 0, 0,
	0, 0, 821, 0, 0, 822, 0, 871, 0, 849,
	0, 0, 795, 815, 0, 0, 816, 817, 818, 819,
	820, 568, 571, 573, 650, 0, 0, 0, 0, 676,
	995, 0, 864, 0, 0, 639, 699, 640, 0, 619,
	48, 653, 0, 921, 920, 933, 946, 247, 248, 249,
	875, 0, 880, 0, 957, 0, 0, 949, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 682,
	0, 0, 0, 0, 673, 0, 0, 0, 0, -2,
	0, 0, 87, 88, 0, 0, 0, 101, 102, 0,
	0, 108, 251, 252, 143, 314, 156, 160, 165, 0,
	0, 0, 169, 0, 171, 295, 0, 181, 183, 0,
	0, 163, 184, 245, 250, 250, 213, 214, 215, 216,
	0, 232, 0, 0, 0, 307, 113, 889, 888, 262,
	262, 257, 0, 260, 0, 1000, 235, 0, 126, 0,
	0, 0, 0, 0, 132, 0, 368, 0, 379, 380,
	0, 427, 0, 254, 0, 264, 267, 854, 661, 0,
	0, 381, 0, 364, 384, 385, 396, 346, 347, 344,
	0, 0, 911, 912, 0, 915, 118, 416, 418, 417,
	421, 0, 0, 414, 0, 304, 885, 0, 461, 305,
	306, 525, 525, 578, 92, 0, 581, 0, 717, 0,
	737, 720, 780, 781, 629, 0, 855, 0, 234, 234,
	834, 234, 238, 837, 234, 839, 234, 842, 0, 0,
	0, 0, 0, 0, 0, 846, 794, 852, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 983, 865, 866,
	699, 867, 641, 620, 655, 939, 0, 932, 0, -2,
	941, 0, 0, 0, 947, 633, 75, 700, 78, 0,
	957, 965, 0, 948, 959, 961, 0, 0, 0, 953,
	0, 699, 643, 668, 670, 0, 665, 680, 681, 683,
	0, 685, 0, 687, 688, 652, 648, 649, 0, 699,
	0, 699, 699, 94, 0, 693, 105, 106, 107, 313,
	166, 167, 0, 170, 180, 182, 0, 0, 209, 210,
	246, 0, 246, 0, 239, 0, 296, 308, 0, 886,
	887, 0, 0, 259, 261, 0, 989, 128, 0, 0,
	0, 0, 152, 365, 0, 253, 0, 0, 452, 449,
	382, 383, 652, 902, 903, 904, 0, 914, 121, 0,
	0, 0, 0, 458, 459, 460, 90, 468, 474, 580,
	600, 721, 782, 785, 831, 246, 835, 836, 838, 840,
	841, 843, 787, 786, 0, 0, 0, 0, 0, 880,
	0, 850, 0, 0, 0, 0, 0, 674, 59, 867,
	869, 0, 926, 924, 924, 934, 935, 0, 0, 942,
	0, 0, 0, 0, 79, 0, 0, 0, 962, 0,
	0, 0, 0, 96, 871, 662, 669, 0, 0, 663,
	0, 664, 684, 686, 647, -2, 871, 699, 85, 86,
	0, 168, 0, 0, 250, 233, 250, 0, 0, 309,
	890, 891, 892, 893, 894, 895, 896, 652, 129, 130,
	131, 371, 0, 0, 429, 0, 437, 0, 0, 0,
	913, 415, 0, 119, 120, 0, 0, 420, 832, 833,
	0, 0, 0, 0, 823, 0, 847, 0, 0, 0,
	696, 656, 657, 0, 0, 694, 869, 77, 0, 0,
	929, 0, 922, 925, 923, 936, 0, 0, 943, 0,
	945, 0, 966, 967, 960, 0, 952, 955, 951, 954,
	880, 666, 0, 671, 880, 84, 0, 174, 222, 223,
	237, 240, 0, 0, 289, 453, 450, 451, 0, 122,
	123, 0, 0, 0, 788, 790, 789, 791, 0, 0,
	0, 793, 811, 812, 0, 695, 697, 698, 651, 76,
	870, 868, 918, 0, 927, 928, 937, 938, 944, 0,
	950, 0, 82, 0, 83, 290, 294, 0, 0, 905,
	0, 0, 0, 422, 792, 0, 0, 0, 658, 659,
	930, 931, 958, 956, 667, 291, 292, 0, 161, 175,
	176, 0, 0, 179, 172, 173, 905, 0, 0, 412,
	907, 124, 125, 357, 358, 359, 118, 824, 0, 827,
	293, 0, 0, 0, 177, 178, 114, 454, 455, 0,
	908, 909, 121, 825, 297, 299, 300, 0, 0, 298,
	0, 419, 0, 301, 302, 303, 906, 0, 826,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 121, 3, 3, 3, 148, 140, 3,
	83, 85, 145, 143, 84, 144, 160, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 485,
	129, 128, 130, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 150, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 151,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 125,
	126, 127, 131, 132, 133, 134, 135, 136, 137, 138,
	141, 142, 147, 149, 152, 153, 154, 155, 156, 157,
	158, 159, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:445
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:450
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:455
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:488
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:494
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:498
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:502
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:507
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:517
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:523
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:529
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:533
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:542
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:552
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:558
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:564
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:568
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:572
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:595
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:601
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:612
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:717
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:737
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:761
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:765
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:771
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:777
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:799
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:809
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:819
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:832
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:838
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:854
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:864
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:868
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:872
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:878
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:882
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:886
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:890
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:896
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:900
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:948
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:963
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:968
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:974
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:991
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:998
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1005
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1010
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1015
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1020
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1027
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1034
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1055
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1061
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1065
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1099
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1103
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1110
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1114
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1120
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1130
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1135
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1144
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1163
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1169
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1177
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1190
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1194
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1200
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1206
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1211
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1216
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1221
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1226
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1233
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1237
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1251
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1257
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1275
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1279
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1283
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1287
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1518
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1523
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1527
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1553
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1557
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1561
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1570
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1607
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1616
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1622
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1636
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1641
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1645
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1661
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1665
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1669
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1673
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1677
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = "key"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = ""
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1745
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1755
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1761
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1765
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1771
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1775
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1781
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1787
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1791
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1795
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1799
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1808
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1814
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1820
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1826
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1832
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1836
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1840
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1844
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1848
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1883
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1889
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1903
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1913
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1921
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1925
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1961
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1965
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1993
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1997
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2085
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2094
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2102
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2110
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2116
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2130
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2134
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2138
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2142
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2150
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2154
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2158
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2198
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2202
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2206
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2210
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2214
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2220
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2230
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2234
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2238
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2242
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2246
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2250
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2254
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2258
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2262
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2268
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2274
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2281
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2288
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2294
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2298
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2305
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2312
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2324
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2334
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2338
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2342
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2365
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2380
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2387
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2394
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2401
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2409
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2413
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2417
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2421
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2425
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2429
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2433
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2437
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2441
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2445
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2449
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2453
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2457
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2461
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2465
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2469
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2473
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2477
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2481
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2485
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2489
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2493
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2498
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2513
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2523
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2527
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2539
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2543
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2562
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2566
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2576
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2581
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2675
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = "extended "
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2814
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2834
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2848
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2852
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2856
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2866
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.empty = struct{}{}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2886
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2916
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.empty = struct{}{}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.empty = struct{}{}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2926
		{
			yyVAL.empty = struct{}{}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.empty = struct{}{}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2933
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2939
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2944
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2948
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2952
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2956
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2960
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2964
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = yyDollar[1].str
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2996
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3015
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3025
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3035
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3041
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3051
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3057
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3061
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3065
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3069
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3194
		{
			setAllowComments(yylex, true)
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3204
		{
			yyVAL.strs = nil
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3222
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3227
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = SQLCacheStr
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3257
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3262
		{
			yyVAL.strs = nil
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3270
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3278
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = SQLCacheStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = DistinctStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = DistinctStr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = StraightJoinHint
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3314
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3324
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3328
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3332
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3336
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3341
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3361
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3365
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3371
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3377
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3391
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3395
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3399
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3405
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3411
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3415
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3424
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3430
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3440
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3444
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3458
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3475
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3479
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3483
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3487
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3493
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3495
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3499
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3505
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3510
		{
			yyVAL.empty = struct{}{}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.empty = struct{}{}
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3515
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3536
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3540
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3544
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3550
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3556
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3560
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3564
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3568
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3574
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3578
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3588
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3617
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3621
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3625
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3629
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3644
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3648
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3652
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3656
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3660
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3664
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3668
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3672
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3688
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3692
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3698
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3740
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3744
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3748
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3752
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3756
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3760
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3766
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3770
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3774
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3778
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3782
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3786
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3790
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3805
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3809
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3813
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3820
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3826
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3836
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3840
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3844
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3888
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3892
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3896
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3900
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3904
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3908
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3912
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3916
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3920
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3928
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3932
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3936
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3940
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3944
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3948
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3956
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3974
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3978
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3996
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4000
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4008
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4048
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4058
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4062
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4066
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4071
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4087
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4092
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4097
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4110
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4115
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4120
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4124
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4138
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4148
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4152
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4156
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4160
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4164
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4168
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4172
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4178
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4182
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4186
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4190
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4194
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4214
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4222
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4226
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4244
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4248
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4252
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = string("")
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4288
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4292
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4298
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4313
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4317
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4321
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4327
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4331
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4335
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4339
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4343
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4347
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4351
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4375
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4385
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4403
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4409
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4415
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4425
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4430
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4434
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4438
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4447
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4453
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4457
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4461
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4470
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4474
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4478
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4482
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4489
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4493
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4497
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4501
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4507
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4511
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4515
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = yyDollar[2].str
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4565
		{
			yyVAL.str = "cascaded"
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = ""
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.str = yyDollar[3].str
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4606
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4610
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4616
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4620
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4624
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = " header"
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = " manifest on"
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = " manifest off"
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = ""
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = " overwrite on"
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = " overwrite off"
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = yyDollar[1].str
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = yyDollar[1].str
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.str = ""
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = " optionally"
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4762
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4766
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4770
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4774
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4778
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4784
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4788
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4792
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4796
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4805
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4811
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4821
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4825
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4831
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4847
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4857
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4863
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4873
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4877
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4881
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4885
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4889
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = "charset"
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.empty = struct{}{}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.empty = struct{}{}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.empty = struct{}{}
		}
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4952
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4961
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4968
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4972
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4995
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5005
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			decNesting(yylex)
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5469
		{
			skipToEnd(yylex)
		}
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			skipToEnd(yylex)
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			skipToEnd(yylex)
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
